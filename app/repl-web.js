var COMPILED = false;
var goog = goog || {};
goog.NODE_JS = false;
goog.global = goog.NODE_JS ? eval("global") : this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.isExistingGlobalVariable_ = function(goog) {
  return String(eval("typeof " + goog)) !== "undefined";
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  if (goog.NODE_JS && cur === goog.global) {
    if (goog.isExistingGlobalVariable_(parts[0])) {
      cur = eval(parts[0]);
      parts.shift();
    }
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return name in goog.loadedModules_ ? goog.loadedModules_[name] : goog.getObjectByName(name);
    } else {
      return null;
    }
  }
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareTestMethods = function() {
  if (!goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareTestMethods must be called from " + "within a goog.module");
  }
  goog.moduleLoaderState_.declareTestMethods = true;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  if (goog.NODE_JS && cur === goog.global) {
    if (goog.isExistingGlobalVariable_(parts[0])) {
      cur = eval(parts[0]);
      parts.shift();
    }
  }
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return (cur);
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_isModule) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      deps.pathIsModule[path] = !!opt_isModule;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      } else {
        return null;
      }
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return null;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    goog.logToConsole_(errorMessage);
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathIsModule:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("SCRIPT");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var script = (scripts[i]);
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !goog.global.atob && goog.global.document && goog.global.document.all;
  goog.importModule_ = function(src) {
    var bootstrap = 'goog.retrieveAndExecModule_("' + src + '");';
    if (goog.importScript_("", bootstrap)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL=" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL=" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0;i < count;i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && goog.dependencies_.pathIsModule[path]) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModule = function(moduleDef) {
    var previousState = goog.moduleLoaderState_;
    try {
      goog.moduleLoaderState_ = {moduleName:undefined, declareTestMethods:false};
      var exports;
      if (goog.isFunction(moduleDef)) {
        exports = moduleDef.call(goog.global, {});
      } else {
        if (goog.isString(moduleDef)) {
          exports = goog.loadModuleFromSource_.call(goog.global, moduleDef);
        } else {
          throw Error("Invalid module definition");
        }
      }
      var moduleName = goog.moduleLoaderState_.moduleName;
      if (!goog.isString(moduleName) || !moduleName) {
        throw Error('Invalid module name "' + moduleName + '"');
      }
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        goog.constructNamespace_(moduleName, exports);
      } else {
        if (goog.SEAL_MODULE_EXPORTS && Object.seal) {
          Object.seal(exports);
        }
      }
      goog.loadedModules_[moduleName] = exports;
      if (goog.moduleLoaderState_.declareTestMethods) {
        for (var entry in exports) {
          if (entry.indexOf("test", 0) === 0 || entry == "tearDown" || entry == "setUp" || entry == "setUpPage" || entry == "tearDownPage") {
            goog.global[entry] = exports[entry];
          }
        }
      }
    } finally {
      goog.moduleLoaderState_ = previousState;
    }
  };
  goog.loadModuleFromSource_ = function(source) {
    var exports = {};
    eval(arguments[0]);
    return exports;
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('<script type="text/javascript" src="' + src + '"></' + "script>");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = doc.createElement("script");
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      var isOldIE = goog.IS_OLD_IE_;
      if (opt_sourceText === undefined) {
        if (!isOldIE) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          var state = " onreadystatechange='goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('<script type="text/javascript" src="' + src + '"' + state + "></" + "script>");
        }
      } else {
        doc.write('<script type="text/javascript">' + opt_sourceText + "</" + "script>");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    var loadingModule = false;
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      if (path) {
        if (!deps.pathIsModule[path]) {
          goog.importScript_(goog.basePath + path);
        } else {
          loadingModule = true;
          goog.importModule_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    var xhr = new goog.global["XMLHttpRequest"];
    xhr.open("get", src, false);
    xhr.send();
    return xhr.responseText;
  }
};
goog.retrieveAndExecModule_ = function(src) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText != null) {
      var execModuleScript = goog.wrapModule_(src, scriptText);
      var isOldIE = goog.IS_OLD_IE_;
      if (isOldIE) {
        goog.dependencies_.deferred[originalPath] = execModuleScript;
        goog.queuedModules_.push(originalPath);
      } else {
        importScript(src, execModuleScript);
      }
    } else {
      throw new Error("load of " + src + "failed");
    }
  }
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return (fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("SCRIPT");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2;i < arguments.length;i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1;i < arguments.length;i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2;i < arguments.length;i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.addDependency("caja/string/html/htmlparser.js", ["goog.string.html", "goog.string.html.HtmlParser", "goog.string.html.HtmlParser.EFlags", "goog.string.html.HtmlParser.Elements", "goog.string.html.HtmlParser.Entities", "goog.string.html.HtmlSaxHandler"], [], false);
goog.addDependency("caja/string/html/htmlsanitizer.js", ["goog.string.html.HtmlSanitizer", "goog.string.html.HtmlSanitizer.AttributeType", "goog.string.html.HtmlSanitizer.Attributes", "goog.string.html.htmlSanitize"], ["goog.string.StringBuffer", "goog.string.html.HtmlParser", "goog.string.html.HtmlParser.EFlags", "goog.string.html.HtmlParser.Elements", "goog.string.html.HtmlSaxHandler"], false);
goog.addDependency("dojo/dom/query.js", ["goog.dom.query"], ["goog.array", "goog.dom", "goog.functions", "goog.string", "goog.userAgent"], false);
goog.addDependency("jpeg_encoder/jpeg_encoder_basic.js", ["goog.crypt.JpegEncoder"], ["goog.crypt.base64"], false);
goog.addDependency("loremipsum/text/loremipsum.js", ["goog.text.LoremIpsum"], ["goog.array", "goog.math", "goog.string", "goog.structs.Map", "goog.structs.Set"], false);
goog.addDependency("mochikit/async/deferred.js", ["goog.async.Deferred", "goog.async.Deferred.AlreadyCalledError", "goog.async.Deferred.CanceledError"], ["goog.Promise", "goog.Thenable", "goog.array", "goog.asserts", "goog.debug.Error"], false);
goog.addDependency("mochikit/async/deferredlist.js", ["goog.async.DeferredList"], ["goog.async.Deferred"], false);
goog.addDependency("osapi/osapi.js", ["goog.osapi"], [], false);
goog.addDependency("svgpan/svgpan.js", ["svgpan.SvgPan"], ["goog.Disposable", "goog.events", "goog.events.EventType", "goog.events.MouseWheelHandler"], false);
goog.addDependency("a11y/aria/announcer.js", ["goog.a11y.aria.Announcer"], ["goog.Disposable", "goog.Timer", "goog.a11y.aria", "goog.a11y.aria.LivePriority", "goog.a11y.aria.State", "goog.dom", "goog.dom.TagName", "goog.object"], false);
goog.addDependency("a11y/aria/announcer_test.js", ["goog.a11y.aria.AnnouncerTest"], ["goog.a11y.aria", "goog.a11y.aria.Announcer", "goog.a11y.aria.LivePriority", "goog.a11y.aria.State", "goog.array", "goog.dom", "goog.dom.TagName", "goog.dom.iframe", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("a11y/aria/aria.js", ["goog.a11y.aria"], ["goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.a11y.aria.datatables", "goog.array", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.object", "goog.string"], false);
goog.addDependency("a11y/aria/aria_test.js", ["goog.a11y.ariaTest"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.dom", "goog.dom.TagName", "goog.testing.jsunit"], false);
goog.addDependency("a11y/aria/attributes.js", ["goog.a11y.aria.AutoCompleteValues", "goog.a11y.aria.CheckedValues", "goog.a11y.aria.DropEffectValues", "goog.a11y.aria.ExpandedValues", "goog.a11y.aria.GrabbedValues", "goog.a11y.aria.InvalidValues", "goog.a11y.aria.LivePriority", "goog.a11y.aria.OrientationValues", "goog.a11y.aria.PressedValues", "goog.a11y.aria.RelevantValues", "goog.a11y.aria.SelectedValues", "goog.a11y.aria.SortValues", "goog.a11y.aria.State"], [], false);
goog.addDependency("a11y/aria/datatables.js", ["goog.a11y.aria.datatables"], ["goog.a11y.aria.State", "goog.object"], false);
goog.addDependency("a11y/aria/roles.js", ["goog.a11y.aria.Role"], [], false);
goog.addDependency("array/array.js", ["goog.array", "goog.array.ArrayLike"], ["goog.asserts"], false);
goog.addDependency("array/array_test.js", ["goog.arrayTest"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("asserts/asserts.js", ["goog.asserts", "goog.asserts.AssertionError"], ["goog.debug.Error", "goog.dom.NodeType", "goog.string"], false);
goog.addDependency("asserts/asserts_test.js", ["goog.assertsTest"], ["goog.asserts", "goog.asserts.AssertionError", "goog.dom", "goog.dom.TagName", "goog.string", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("async/animationdelay.js", ["goog.async.AnimationDelay"], ["goog.Disposable", "goog.events", "goog.functions"], false);
goog.addDependency("async/animationdelay_test.js", ["goog.async.AnimationDelayTest"], ["goog.Timer", "goog.async.AnimationDelay", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("async/conditionaldelay.js", ["goog.async.ConditionalDelay"], ["goog.Disposable", "goog.async.Delay"], false);
goog.addDependency("async/conditionaldelay_test.js", ["goog.async.ConditionalDelayTest"], ["goog.async.ConditionalDelay", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("async/delay.js", ["goog.Delay", "goog.async.Delay"], ["goog.Disposable", "goog.Timer"], false);
goog.addDependency("async/delay_test.js", ["goog.async.DelayTest"], ["goog.async.Delay", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("async/freelist.js", ["goog.async.FreeList"], [], false);
goog.addDependency("async/freelist_test.js", ["goog.async.FreeListTest"], ["goog.async.FreeList", "goog.testing.jsunit"], false);
goog.addDependency("async/nexttick.js", ["goog.async.nextTick", "goog.async.throwException"], ["goog.debug.entryPointRegistry", "goog.dom.TagName", "goog.functions", "goog.labs.userAgent.browser", "goog.labs.userAgent.engine"], false);
goog.addDependency("async/nexttick_test.js", ["goog.async.nextTickTest"], ["goog.Promise", "goog.Timer", "goog.async.nextTick", "goog.debug.ErrorHandler", "goog.debug.entryPointRegistry", "goog.dom", "goog.dom.TagName", "goog.labs.userAgent.browser", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("async/run.js", ["goog.async.run"], ["goog.async.WorkQueue", "goog.async.nextTick", "goog.async.throwException", "goog.testing.watchers"], false);
goog.addDependency("async/run_test.js", ["goog.async.runTest"], ["goog.async.run", "goog.testing.MockClock", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("async/throttle.js", ["goog.Throttle", "goog.async.Throttle"], ["goog.Disposable", "goog.Timer"], false);
goog.addDependency("async/throttle_test.js", ["goog.async.ThrottleTest"], ["goog.async.Throttle", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("async/workqueue.js", ["goog.async.WorkItem", "goog.async.WorkQueue"], ["goog.asserts", "goog.async.FreeList"], false);
goog.addDependency("async/workqueue_test.js", ["goog.async.WorkQueueTest"], ["goog.async.WorkQueue", "goog.testing.jsunit"], false);
goog.addDependency("base.js", ["goog"], [], false);
goog.addDependency("base_module_test.js", ["goog.baseModuleTest"], ["goog.Timer", "goog.test_module", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], true);
goog.addDependency("base_test.js", ["an.existing.path", "dup.base", "far.out", "goog.baseTest", "goog.explicit", "goog.implicit.explicit", "goog.test", "goog.test.name", "goog.test.name.space", "goog.xy", "goog.xy.z", "ns", "testDep.bar"], ["goog.Promise", "goog.Timer", "goog.dom.TagName", "goog.functions", "goog.test_module", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.userAgent"], false);
goog.addDependency("color/alpha.js", ["goog.color.alpha"], ["goog.color"], false);
goog.addDependency("color/alpha_test.js", ["goog.color.alphaTest"], ["goog.array", "goog.color", "goog.color.alpha", "goog.testing.jsunit"], false);
goog.addDependency("color/color.js", ["goog.color", "goog.color.Hsl", "goog.color.Hsv", "goog.color.Rgb"], ["goog.color.names", "goog.math"], false);
goog.addDependency("color/color_test.js", ["goog.colorTest"], ["goog.array", "goog.color", "goog.color.names", "goog.testing.jsunit"], false);
goog.addDependency("color/names.js", ["goog.color.names"], [], false);
goog.addDependency("crypt/aes.js", ["goog.crypt.Aes"], ["goog.asserts", "goog.crypt.BlockCipher"], false);
goog.addDependency("crypt/aes_test.js", ["goog.crypt.AesTest"], ["goog.crypt", "goog.crypt.Aes", "goog.testing.jsunit"], false);
goog.addDependency("crypt/arc4.js", ["goog.crypt.Arc4"], ["goog.asserts"], false);
goog.addDependency("crypt/arc4_test.js", ["goog.crypt.Arc4Test"], ["goog.array", "goog.crypt.Arc4", "goog.testing.jsunit"], false);
goog.addDependency("crypt/base64.js", ["goog.crypt.base64"], ["goog.crypt", "goog.userAgent"], false);
goog.addDependency("crypt/base64_test.js", ["goog.crypt.base64Test"], ["goog.crypt", "goog.crypt.base64", "goog.testing.jsunit"], false);
goog.addDependency("crypt/basen.js", ["goog.crypt.baseN"], [], false);
goog.addDependency("crypt/basen_test.js", ["goog.crypt.baseNTest"], ["goog.crypt.baseN", "goog.testing.jsunit"], false);
goog.addDependency("crypt/blobhasher.js", ["goog.crypt.BlobHasher", "goog.crypt.BlobHasher.EventType"], ["goog.asserts", "goog.events.EventTarget", "goog.fs", "goog.log"], false);
goog.addDependency("crypt/blobhasher_test.js", ["goog.crypt.BlobHasherTest"], ["goog.crypt", "goog.crypt.BlobHasher", "goog.crypt.Md5", "goog.events", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("crypt/blockcipher.js", ["goog.crypt.BlockCipher"], [], false);
goog.addDependency("crypt/bytestring_perf.js", ["goog.crypt.byteArrayToStringPerf"], ["goog.array", "goog.dom", "goog.testing.PerformanceTable"], false);
goog.addDependency("crypt/cbc.js", ["goog.crypt.Cbc"], ["goog.array", "goog.asserts", "goog.crypt"], false);
goog.addDependency("crypt/cbc_test.js", ["goog.crypt.CbcTest"], ["goog.crypt", "goog.crypt.Aes", "goog.crypt.Cbc", "goog.testing.jsunit"], false);
goog.addDependency("crypt/crypt.js", ["goog.crypt"], ["goog.array", "goog.asserts"], false);
goog.addDependency("crypt/crypt_test.js", ["goog.cryptTest"], ["goog.crypt", "goog.string", "goog.testing.jsunit"], false);
goog.addDependency("crypt/hash.js", ["goog.crypt.Hash"], [], false);
goog.addDependency("crypt/hash32.js", ["goog.crypt.hash32"], ["goog.crypt"], false);
goog.addDependency("crypt/hash32_test.js", ["goog.crypt.hash32Test"], ["goog.crypt.hash32", "goog.testing.TestCase", "goog.testing.jsunit"], false);
goog.addDependency("crypt/hashtester.js", ["goog.crypt.hashTester"], ["goog.array", "goog.crypt", "goog.dom", "goog.dom.TagName", "goog.testing.PerformanceTable", "goog.testing.PseudoRandom", "goog.testing.asserts"], false);
goog.addDependency("crypt/hmac.js", ["goog.crypt.Hmac"], ["goog.crypt.Hash"], false);
goog.addDependency("crypt/hmac_test.js", ["goog.crypt.HmacTest"], ["goog.crypt.Hmac", "goog.crypt.Sha1", "goog.crypt.hashTester", "goog.testing.jsunit"], false);
goog.addDependency("crypt/md5.js", ["goog.crypt.Md5"], ["goog.crypt.Hash"], false);
goog.addDependency("crypt/md5_test.js", ["goog.crypt.Md5Test"], ["goog.crypt", "goog.crypt.Md5", "goog.crypt.hashTester", "goog.testing.jsunit"], false);
goog.addDependency("crypt/pbkdf2.js", ["goog.crypt.pbkdf2"], ["goog.array", "goog.asserts", "goog.crypt", "goog.crypt.Hmac", "goog.crypt.Sha1"], false);
goog.addDependency("crypt/pbkdf2_test.js", ["goog.crypt.pbkdf2Test"], ["goog.crypt", "goog.crypt.pbkdf2", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("crypt/sha1.js", ["goog.crypt.Sha1"], ["goog.crypt.Hash"], false);
goog.addDependency("crypt/sha1_test.js", ["goog.crypt.Sha1Test"], ["goog.crypt", "goog.crypt.Sha1", "goog.crypt.hashTester", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("crypt/sha2.js", ["goog.crypt.Sha2"], ["goog.array", "goog.asserts", "goog.crypt.Hash"], false);
goog.addDependency("crypt/sha224.js", ["goog.crypt.Sha224"], ["goog.crypt.Sha2"], false);
goog.addDependency("crypt/sha224_test.js", ["goog.crypt.Sha224Test"], ["goog.crypt", "goog.crypt.Sha224", "goog.crypt.hashTester", "goog.testing.jsunit"], false);
goog.addDependency("crypt/sha256.js", ["goog.crypt.Sha256"], ["goog.crypt.Sha2"], false);
goog.addDependency("crypt/sha256_test.js", ["goog.crypt.Sha256Test"], ["goog.crypt", "goog.crypt.Sha256", "goog.crypt.hashTester", "goog.testing.jsunit"], false);
goog.addDependency("crypt/sha2_64bit.js", ["goog.crypt.Sha2_64bit"], ["goog.array", "goog.asserts", "goog.crypt.Hash", "goog.math.Long"], false);
goog.addDependency("crypt/sha2_64bit_test.js", ["goog.crypt.Sha2_64bit_test"], ["goog.array", "goog.crypt", "goog.crypt.Sha384", "goog.crypt.Sha512", "goog.crypt.Sha512_256", "goog.crypt.hashTester", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("crypt/sha384.js", ["goog.crypt.Sha384"], ["goog.crypt.Sha2_64bit"], false);
goog.addDependency("crypt/sha512.js", ["goog.crypt.Sha512"], ["goog.crypt.Sha2_64bit"], false);
goog.addDependency("crypt/sha512_256.js", ["goog.crypt.Sha512_256"], ["goog.crypt.Sha2_64bit"], false);
goog.addDependency("cssom/cssom.js", ["goog.cssom", "goog.cssom.CssRuleType"], ["goog.array", "goog.dom", "goog.dom.TagName"], false);
goog.addDependency("cssom/cssom_test.js", ["goog.cssomTest"], ["goog.array", "goog.cssom", "goog.cssom.CssRuleType", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("cssom/iframe/style.js", ["goog.cssom.iframe.style"], ["goog.asserts", "goog.cssom", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classlist", "goog.string", "goog.style", "goog.userAgent"], false);
goog.addDependency("cssom/iframe/style_test.js", ["goog.cssom.iframe.styleTest"], ["goog.cssom", "goog.cssom.iframe.style", "goog.dom", "goog.dom.DomHelper", "goog.dom.TagName", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("datasource/datamanager.js", ["goog.ds.DataManager"], ["goog.ds.BasicNodeList", "goog.ds.DataNode", "goog.ds.Expr", "goog.object", "goog.string", "goog.structs", "goog.structs.Map"], false);
goog.addDependency("datasource/datasource.js", ["goog.ds.BaseDataNode", "goog.ds.BasicNodeList", "goog.ds.DataNode", "goog.ds.DataNodeList", "goog.ds.EmptyNodeList", "goog.ds.LoadState", "goog.ds.SortedNodeList", "goog.ds.Util", "goog.ds.logger"], ["goog.array", "goog.log"], false);
goog.addDependency("datasource/datasource_test.js", ["goog.ds.JsDataSourceTest"], ["goog.dom.xml", "goog.ds.DataManager", "goog.ds.JsDataSource", "goog.ds.SortedNodeList", "goog.ds.XmlDataSource", "goog.testing.jsunit"], false);
goog.addDependency("datasource/expr.js", ["goog.ds.Expr"], ["goog.ds.BasicNodeList", "goog.ds.EmptyNodeList", "goog.string"], false);
goog.addDependency("datasource/expr_test.js", ["goog.ds.ExprTest"], ["goog.ds.DataManager", "goog.ds.Expr", "goog.ds.JsDataSource", "goog.testing.jsunit"], false);
goog.addDependency("datasource/fastdatanode.js", ["goog.ds.AbstractFastDataNode", "goog.ds.FastDataNode", "goog.ds.FastListNode", "goog.ds.PrimitiveFastDataNode"], ["goog.ds.DataManager", "goog.ds.DataNodeList", "goog.ds.EmptyNodeList", "goog.string"], false);
goog.addDependency("datasource/fastdatanode_test.js", ["goog.ds.FastDataNodeTest"], ["goog.array", "goog.ds.DataManager", "goog.ds.Expr", "goog.ds.FastDataNode", "goog.testing.jsunit"], false);
goog.addDependency("datasource/jsdatasource.js", ["goog.ds.JsDataSource", "goog.ds.JsPropertyDataSource"], ["goog.ds.BaseDataNode", "goog.ds.BasicNodeList", "goog.ds.DataManager", "goog.ds.DataNode", "goog.ds.EmptyNodeList", "goog.ds.LoadState"], false);
goog.addDependency("datasource/jsondatasource.js", ["goog.ds.JsonDataSource"], ["goog.Uri", "goog.dom", "goog.dom.TagName", "goog.ds.DataManager", "goog.ds.JsDataSource", "goog.ds.LoadState", "goog.ds.logger", "goog.log"], false);
goog.addDependency("datasource/jsxmlhttpdatasource.js", ["goog.ds.JsXmlHttpDataSource"], ["goog.Uri", "goog.ds.DataManager", "goog.ds.FastDataNode", "goog.ds.LoadState", "goog.ds.logger", "goog.events", "goog.log", "goog.net.EventType", "goog.net.XhrIo"], false);
goog.addDependency("datasource/jsxmlhttpdatasource_test.js", ["goog.ds.JsXmlHttpDataSourceTest"], ["goog.ds.JsXmlHttpDataSource", "goog.testing.TestQueue", "goog.testing.jsunit", "goog.testing.net.XhrIo"], false);
goog.addDependency("datasource/xmldatasource.js", ["goog.ds.XmlDataSource", "goog.ds.XmlHttpDataSource"], ["goog.Uri", "goog.dom.NodeType", "goog.dom.xml", "goog.ds.BasicNodeList", "goog.ds.DataManager", "goog.ds.DataNode", "goog.ds.LoadState", "goog.ds.logger", "goog.net.XhrIo", "goog.string"], false);
goog.addDependency("date/date.js", ["goog.date", "goog.date.Date", "goog.date.DateTime", "goog.date.Interval", "goog.date.month", "goog.date.weekDay"], ["goog.asserts", "goog.date.DateLike", "goog.i18n.DateTimeSymbols", "goog.string"], false);
goog.addDependency("date/date_test.js", ["goog.dateTest"], ["goog.array", "goog.date", "goog.date.Date", "goog.date.DateTime", "goog.date.Interval", "goog.date.month", "goog.date.weekDay", "goog.i18n.DateTimeSymbols", "goog.testing.ExpectedFailures", "goog.testing.jsunit", "goog.userAgent", "goog.userAgent.platform", "goog.userAgent.product", "goog.userAgent.product.isVersion"], false);
goog.addDependency("date/datelike.js", ["goog.date.DateLike"], [], false);
goog.addDependency("date/daterange.js", ["goog.date.DateRange", "goog.date.DateRange.Iterator", "goog.date.DateRange.StandardDateRangeKeys"], ["goog.date.Date", "goog.date.Interval", "goog.iter.Iterator", "goog.iter.StopIteration"], false);
goog.addDependency("date/daterange_test.js", ["goog.date.DateRangeTest"], ["goog.date.Date", "goog.date.DateRange", "goog.date.Interval", "goog.i18n.DateTimeSymbols", "goog.testing.jsunit"], false);
goog.addDependency("date/duration.js", ["goog.date.duration"], ["goog.i18n.DateTimeFormat", "goog.i18n.MessageFormat"], false);
goog.addDependency("date/duration_test.js", ["goog.date.durationTest"], ["goog.date.duration", "goog.i18n.DateTimeFormat", "goog.i18n.DateTimeSymbols", "goog.i18n.DateTimeSymbols_bn", "goog.i18n.DateTimeSymbols_en", "goog.i18n.DateTimeSymbols_fa", "goog.testing.jsunit"], false);
goog.addDependency("date/relative.js", ["goog.date.relative", "goog.date.relative.TimeDeltaFormatter", "goog.date.relative.Unit"], ["goog.i18n.DateTimeFormat", "goog.i18n.DateTimePatterns"], false);
goog.addDependency("date/relative_test.js", ["goog.date.relativeTest"], ["goog.date.DateTime", "goog.date.relative", "goog.i18n.DateTimeFormat", "goog.testing.jsunit"], false);
goog.addDependency("date/relativewithplurals.js", ["goog.date.relativeWithPlurals"], ["goog.date.relative", "goog.date.relative.Unit", "goog.i18n.MessageFormat"], false);
goog.addDependency("date/relativewithplurals_test.js", ["goog.date.relativeWithPluralsTest"], ["goog.date.relative", "goog.date.relativeTest", "goog.date.relativeWithPlurals", "goog.i18n.DateTimeFormat", "goog.i18n.DateTimeSymbols", "goog.i18n.DateTimeSymbols_bn", "goog.i18n.DateTimeSymbols_en", "goog.i18n.DateTimeSymbols_fa", "goog.i18n.NumberFormatSymbols", "goog.i18n.NumberFormatSymbols_bn", "goog.i18n.NumberFormatSymbols_en", "goog.i18n.NumberFormatSymbols_fa"], false);
goog.addDependency("date/utcdatetime.js", ["goog.date.UtcDateTime"], ["goog.date", "goog.date.Date", "goog.date.DateTime", "goog.date.Interval"], false);
goog.addDependency("date/utcdatetime_test.js", ["goog.date.UtcDateTimeTest"], ["goog.date.Interval", "goog.date.UtcDateTime", "goog.date.month", "goog.date.weekDay", "goog.testing.jsunit"], false);
goog.addDependency("db/cursor.js", ["goog.db.Cursor"], ["goog.async.Deferred", "goog.db.Error", "goog.debug", "goog.events.EventTarget"], false);
goog.addDependency("db/db.js", ["goog.db", "goog.db.BlockedCallback", "goog.db.UpgradeNeededCallback"], ["goog.asserts", "goog.async.Deferred", "goog.db.Error", "goog.db.IndexedDb", "goog.db.Transaction"], false);
goog.addDependency("db/db_test.js", ["goog.dbTest"], ["goog.Disposable", "goog.Promise", "goog.array", "goog.db", "goog.db.Cursor", "goog.db.Error", "goog.db.IndexedDb", "goog.db.KeyRange", "goog.db.Transaction", "goog.events", "goog.object", "goog.testing.PropertyReplacer", "goog.testing.asserts", "goog.testing.jsunit", "goog.userAgent.product"], false);
goog.addDependency("db/error.js", ["goog.db.Error", "goog.db.Error.ErrorCode", "goog.db.Error.ErrorName", "goog.db.Error.VersionChangeBlockedError"], ["goog.debug.Error"], false);
goog.addDependency("db/index.js", ["goog.db.Index"], ["goog.async.Deferred", "goog.db.Cursor", "goog.db.Error", "goog.debug"], false);
goog.addDependency("db/indexeddb.js", ["goog.db.IndexedDb"], ["goog.async.Deferred", "goog.db.Error", "goog.db.ObjectStore", "goog.db.Transaction", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget"], false);
goog.addDependency("db/keyrange.js", ["goog.db.KeyRange"], [], false);
goog.addDependency("db/objectstore.js", ["goog.db.ObjectStore"], ["goog.async.Deferred", "goog.db.Cursor", "goog.db.Error", "goog.db.Index", "goog.debug", "goog.events"], false);
goog.addDependency("db/old_db_test.js", ["goog.oldDbTest"], ["goog.async.Deferred", "goog.db", "goog.db.Cursor", "goog.db.Error", "goog.db.IndexedDb", "goog.db.KeyRange", "goog.db.Transaction", "goog.events", "goog.testing.AsyncTestCase", "goog.testing.asserts", "goog.testing.jsunit", "goog.userAgent.product", "goog.userAgent.product.isVersion"], false);
goog.addDependency("db/transaction.js", ["goog.db.Transaction", "goog.db.Transaction.TransactionMode"], ["goog.async.Deferred", "goog.db.Error", "goog.db.ObjectStore", "goog.events", "goog.events.EventHandler", "goog.events.EventTarget"], false);
goog.addDependency("debug/console.js", ["goog.debug.Console"], ["goog.debug.LogManager", "goog.debug.Logger", "goog.debug.TextFormatter"], false);
goog.addDependency("debug/console_test.js", ["goog.debug.ConsoleTest"], ["goog.debug.Console", "goog.debug.LogRecord", "goog.debug.Logger", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("debug/debug.js", ["goog.debug"], ["goog.array", "goog.html.SafeHtml", "goog.html.SafeUrl", "goog.html.uncheckedconversions", "goog.string.Const", "goog.structs.Set", "goog.userAgent"], false);
goog.addDependency("debug/debug_test.js", ["goog.debugTest"], ["goog.debug", "goog.html.SafeHtml", "goog.structs.Set", "goog.testing.jsunit"], false);
goog.addDependency("debug/debugwindow.js", ["goog.debug.DebugWindow"], ["goog.debug.HtmlFormatter", "goog.debug.LogManager", "goog.debug.Logger", "goog.dom.safe", "goog.html.SafeHtml", "goog.html.SafeStyleSheet", "goog.string.Const", "goog.structs.CircularBuffer", "goog.userAgent"], false);
goog.addDependency("debug/debugwindow_test.js", ["goog.debug.DebugWindowTest"], ["goog.debug.DebugWindow", "goog.testing.jsunit"], false);
goog.addDependency("debug/devcss/devcss.js", ["goog.debug.DevCss", "goog.debug.DevCss.UserAgent"], ["goog.asserts", "goog.cssom", "goog.dom.classlist", "goog.events", "goog.events.EventType", "goog.string", "goog.userAgent"], false);
goog.addDependency("debug/devcss/devcss_test.js", ["goog.debug.DevCssTest"], ["goog.debug.DevCss", "goog.style", "goog.testing.jsunit"], false);
goog.addDependency("debug/devcss/devcssrunner.js", ["goog.debug.devCssRunner"], ["goog.debug.DevCss"], false);
goog.addDependency("debug/divconsole.js", ["goog.debug.DivConsole"], ["goog.debug.HtmlFormatter", "goog.debug.LogManager", "goog.dom.TagName", "goog.dom.safe", "goog.html.SafeHtml", "goog.style"], false);
goog.addDependency("debug/enhanceerror_test.js", ["goog.debugEnhanceErrorTest"], ["goog.debug", "goog.testing.jsunit"], false);
goog.addDependency("debug/entrypointregistry.js", ["goog.debug.EntryPointMonitor", "goog.debug.entryPointRegistry"], ["goog.asserts"], false);
goog.addDependency("debug/entrypointregistry_test.js", ["goog.debug.entryPointRegistryTest"], ["goog.debug.ErrorHandler", "goog.debug.entryPointRegistry", "goog.testing.jsunit"], false);
goog.addDependency("debug/error.js", ["goog.debug.Error"], [], false);
goog.addDependency("debug/error_test.js", ["goog.debug.ErrorTest"], ["goog.debug.Error", "goog.testing.ExpectedFailures", "goog.testing.jsunit", "goog.userAgent", "goog.userAgent.product"], false);
goog.addDependency("debug/errorhandler.js", ["goog.debug.ErrorHandler", "goog.debug.ErrorHandler.ProtectedFunctionError"], ["goog.Disposable", "goog.asserts", "goog.debug", "goog.debug.EntryPointMonitor", "goog.debug.Error", "goog.debug.Trace"], false);
goog.addDependency("debug/errorhandler_async_test.js", ["goog.debug.ErrorHandlerAsyncTest"], ["goog.Promise", "goog.debug.ErrorHandler", "goog.testing.TestCase", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("debug/errorhandler_test.js", ["goog.debug.ErrorHandlerTest"], ["goog.debug.ErrorHandler", "goog.testing.MockControl", "goog.testing.jsunit"], false);
goog.addDependency("debug/errorhandlerweakdep.js", ["goog.debug.errorHandlerWeakDep"], [], false);
goog.addDependency("debug/errorreporter.js", ["goog.debug.ErrorReporter", "goog.debug.ErrorReporter.ExceptionEvent"], ["goog.asserts", "goog.debug", "goog.debug.Error", "goog.debug.ErrorHandler", "goog.debug.entryPointRegistry", "goog.events", "goog.events.Event", "goog.events.EventTarget", "goog.log", "goog.net.XhrIo", "goog.object", "goog.string", "goog.uri.utils", "goog.userAgent"], false);
goog.addDependency("debug/errorreporter_test.js", ["goog.debug.ErrorReporterTest"], ["goog.debug.Error", "goog.debug.ErrorReporter", "goog.events", "goog.functions", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("debug/fancywindow.js", ["goog.debug.FancyWindow"], ["goog.array", "goog.debug.DebugWindow", "goog.debug.LogManager", "goog.debug.Logger", "goog.dom.DomHelper", "goog.dom.TagName", "goog.dom.safe", "goog.html.SafeHtml", "goog.html.SafeStyleSheet", "goog.object", "goog.string", "goog.string.Const", "goog.userAgent"], false);
goog.addDependency("debug/formatter.js", ["goog.debug.Formatter", "goog.debug.HtmlFormatter", "goog.debug.TextFormatter"], ["goog.debug", "goog.debug.Logger", "goog.debug.RelativeTimeProvider", "goog.html.SafeHtml"], false);
goog.addDependency("debug/formatter_test.js", ["goog.debug.FormatterTest"], ["goog.debug.HtmlFormatter", "goog.debug.LogRecord", "goog.debug.Logger", "goog.html.SafeHtml", "goog.testing.jsunit"], false);
goog.addDependency("debug/fpsdisplay.js", ["goog.debug.FpsDisplay"], ["goog.asserts", "goog.async.AnimationDelay", "goog.dom", "goog.dom.TagName", "goog.ui.Component"], false);
goog.addDependency("debug/fpsdisplay_test.js", ["goog.debug.FpsDisplayTest"], ["goog.Timer", "goog.debug.FpsDisplay", "goog.testing.jsunit"], false);
goog.addDependency("debug/gcdiagnostics.js", ["goog.debug.GcDiagnostics"], ["goog.debug.Trace", "goog.log", "goog.userAgent"], false);
goog.addDependency("debug/logbuffer.js", ["goog.debug.LogBuffer"], ["goog.asserts", "goog.debug.LogRecord"], false);
goog.addDependency("debug/logbuffer_test.js", ["goog.debug.LogBufferTest"], ["goog.debug.LogBuffer", "goog.debug.Logger", "goog.testing.jsunit"], false);
goog.addDependency("debug/logger.js", ["goog.debug.LogManager", "goog.debug.Loggable", "goog.debug.Logger", "goog.debug.Logger.Level"], ["goog.array", "goog.asserts", "goog.debug", "goog.debug.LogBuffer", "goog.debug.LogRecord"], false);
goog.addDependency("debug/logger_test.js", ["goog.debug.LoggerTest"], ["goog.debug.LogManager", "goog.debug.Logger", "goog.testing.jsunit"], false);
goog.addDependency("debug/logrecord.js", ["goog.debug.LogRecord"], [], false);
goog.addDependency("debug/logrecordserializer.js", ["goog.debug.logRecordSerializer"], ["goog.debug.LogRecord", "goog.debug.Logger", "goog.json", "goog.object"], false);
goog.addDependency("debug/logrecordserializer_test.js", ["goog.debug.logRecordSerializerTest"], ["goog.debug.LogRecord", "goog.debug.Logger", "goog.debug.logRecordSerializer", "goog.testing.jsunit"], false);
goog.addDependency("debug/relativetimeprovider.js", ["goog.debug.RelativeTimeProvider"], [], false);
goog.addDependency("debug/tracer.js", ["goog.debug.Trace"], ["goog.array", "goog.debug.Logger", "goog.iter", "goog.log", "goog.structs.Map", "goog.structs.SimplePool"], false);
goog.addDependency("debug/tracer_test.js", ["goog.debug.TraceTest"], ["goog.debug.Trace", "goog.testing.jsunit"], false);
goog.addDependency("defineclass_test.js", ["goog.defineClassTest"], ["goog.testing.jsunit"], false);
goog.addDependency("disposable/disposable.js", ["goog.Disposable", "goog.dispose", "goog.disposeAll"], ["goog.disposable.IDisposable"], false);
goog.addDependency("disposable/disposable_test.js", ["goog.DisposableTest"], ["goog.Disposable", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("disposable/idisposable.js", ["goog.disposable.IDisposable"], [], false);
goog.addDependency("dom/abstractmultirange.js", ["goog.dom.AbstractMultiRange"], ["goog.array", "goog.dom", "goog.dom.AbstractRange"], false);
goog.addDependency("dom/abstractrange.js", ["goog.dom.AbstractRange", "goog.dom.RangeIterator", "goog.dom.RangeType"], ["goog.dom", "goog.dom.NodeType", "goog.dom.SavedCaretRange", "goog.dom.TagIterator", "goog.userAgent"], false);
goog.addDependency("dom/abstractrange_test.js", ["goog.dom.AbstractRangeTest"], ["goog.dom", "goog.dom.AbstractRange", "goog.dom.Range", "goog.dom.TagName", "goog.testing.jsunit"], false);
goog.addDependency("dom/animationframe/animationframe.js", ["goog.dom.animationFrame", "goog.dom.animationFrame.Spec", "goog.dom.animationFrame.State"], ["goog.dom.animationFrame.polyfill"], false);
goog.addDependency("dom/animationframe/polyfill.js", ["goog.dom.animationFrame.polyfill"], [], false);
goog.addDependency("dom/annotate.js", ["goog.dom.annotate", "goog.dom.annotate.AnnotateFn"], ["goog.array", "goog.asserts", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.safe", "goog.html.SafeHtml"], false);
goog.addDependency("dom/annotate_test.js", ["goog.dom.annotateTest"], ["goog.dom", "goog.dom.TagName", "goog.dom.annotate", "goog.html.SafeHtml", "goog.testing.jsunit"], false);
goog.addDependency("dom/browserfeature.js", ["goog.dom.BrowserFeature"], ["goog.userAgent"], false);
goog.addDependency("dom/browserrange/abstractrange.js", ["goog.dom.browserrange.AbstractRange"], ["goog.array", "goog.asserts", "goog.dom", "goog.dom.NodeType", "goog.dom.RangeEndpoint", "goog.dom.TagName", "goog.dom.TextRangeIterator", "goog.iter", "goog.math.Coordinate", "goog.string", "goog.string.StringBuffer", "goog.userAgent"], false);
goog.addDependency("dom/browserrange/browserrange.js", ["goog.dom.browserrange", "goog.dom.browserrange.Error"], ["goog.dom", "goog.dom.BrowserFeature", "goog.dom.NodeType", "goog.dom.browserrange.GeckoRange", "goog.dom.browserrange.IeRange", "goog.dom.browserrange.OperaRange", "goog.dom.browserrange.W3cRange", "goog.dom.browserrange.WebKitRange", "goog.userAgent"], false);
goog.addDependency("dom/browserrange/browserrange_test.js", ["goog.dom.browserrangeTest"], ["goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.RangeEndpoint", "goog.dom.TagName", "goog.dom.browserrange", "goog.testing.dom", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("dom/browserrange/geckorange.js", ["goog.dom.browserrange.GeckoRange"], ["goog.dom.browserrange.W3cRange"], false);
goog.addDependency("dom/browserrange/ierange.js", ["goog.dom.browserrange.IeRange"], ["goog.array", "goog.dom", "goog.dom.NodeType", "goog.dom.RangeEndpoint", "goog.dom.TagName", "goog.dom.browserrange.AbstractRange", "goog.log", "goog.string"], false);
goog.addDependency("dom/browserrange/operarange.js", ["goog.dom.browserrange.OperaRange"], ["goog.dom.browserrange.W3cRange"], false);
goog.addDependency("dom/browserrange/w3crange.js", ["goog.dom.browserrange.W3cRange"], ["goog.array", "goog.dom", "goog.dom.NodeType", "goog.dom.RangeEndpoint", "goog.dom.TagName", "goog.dom.browserrange.AbstractRange", "goog.string", "goog.userAgent"], false);
goog.addDependency("dom/browserrange/webkitrange.js", ["goog.dom.browserrange.WebKitRange"], ["goog.dom.RangeEndpoint", "goog.dom.browserrange.W3cRange", "goog.userAgent"], false);
goog.addDependency("dom/bufferedviewportsizemonitor.js", ["goog.dom.BufferedViewportSizeMonitor"], ["goog.asserts", "goog.async.Delay", "goog.events", "goog.events.EventTarget", "goog.events.EventType"], false);
goog.addDependency("dom/bufferedviewportsizemonitor_test.js", ["goog.dom.BufferedViewportSizeMonitorTest"], ["goog.dom.BufferedViewportSizeMonitor", "goog.dom.ViewportSizeMonitor", "goog.events", "goog.events.EventType", "goog.math.Size", "goog.testing.MockClock", "goog.testing.events", "goog.testing.events.Event", "goog.testing.jsunit"], false);
goog.addDependency("dom/classes.js", ["goog.dom.classes"], ["goog.array"], false);
goog.addDependency("dom/classes_test.js", ["goog.dom.classes_test"], ["goog.dom", "goog.dom.TagName", "goog.dom.classes", "goog.testing.jsunit"], false);
goog.addDependency("dom/classlist.js", ["goog.dom.classlist"], ["goog.array"], false);
goog.addDependency("dom/classlist_test.js", ["goog.dom.classlist_test"], ["goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.testing.ExpectedFailures", "goog.testing.jsunit"], false);
goog.addDependency("dom/controlrange.js", ["goog.dom.ControlRange", "goog.dom.ControlRangeIterator"], ["goog.array", "goog.dom", "goog.dom.AbstractMultiRange", "goog.dom.AbstractRange", "goog.dom.RangeIterator", "goog.dom.RangeType", "goog.dom.SavedRange", "goog.dom.TagWalkType", "goog.dom.TextRange", "goog.iter.StopIteration", "goog.userAgent"], false);
goog.addDependency("dom/controlrange_test.js", ["goog.dom.ControlRangeTest"], ["goog.dom", "goog.dom.ControlRange", "goog.dom.RangeType", "goog.dom.TagName", "goog.dom.TextRange", "goog.testing.dom", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("dom/dataset.js", ["goog.dom.dataset"], ["goog.string", "goog.userAgent.product"], false);
goog.addDependency("dom/dataset_test.js", ["goog.dom.datasetTest"], ["goog.dom", "goog.dom.dataset", "goog.testing.jsunit"], false);
goog.addDependency("dom/dom.js", ["goog.dom", "goog.dom.Appendable", "goog.dom.DomHelper"], ["goog.array", "goog.asserts", "goog.dom.BrowserFeature", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.safe", "goog.html.SafeHtml", "goog.math.Coordinate", "goog.math.Size", "goog.object", "goog.string", "goog.string.Unicode", "goog.userAgent"], false);
goog.addDependency("dom/dom_test.js", ["goog.dom.dom_test"], ["goog.dom", "goog.dom.BrowserFeature", "goog.dom.DomHelper", "goog.dom.InputType", "goog.dom.NodeType", "goog.dom.TagName", "goog.functions", "goog.html.testing", "goog.object", "goog.string.Unicode", "goog.testing.PropertyReplacer", "goog.testing.asserts", "goog.userAgent", "goog.userAgent.product", "goog.userAgent.product.isVersion"], false);
goog.addDependency("dom/fontsizemonitor.js", ["goog.dom.FontSizeMonitor", "goog.dom.FontSizeMonitor.EventType"], ["goog.dom", "goog.dom.TagName", "goog.events", "goog.events.EventTarget", "goog.events.EventType", "goog.userAgent"], false);
goog.addDependency("dom/fontsizemonitor_test.js", ["goog.dom.FontSizeMonitorTest"], ["goog.dom", "goog.dom.FontSizeMonitor", "goog.dom.TagName", "goog.events", "goog.events.Event", "goog.testing.PropertyReplacer", "goog.testing.events", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("dom/forms.js", ["goog.dom.forms"], ["goog.dom.InputType", "goog.dom.TagName", "goog.structs.Map"], false);
goog.addDependency("dom/forms_test.js", ["goog.dom.formsTest"], ["goog.dom", "goog.dom.forms", "goog.testing.jsunit"], false);
goog.addDependency("dom/fullscreen.js", ["goog.dom.fullscreen", "goog.dom.fullscreen.EventType"], ["goog.dom", "goog.userAgent"], false);
goog.addDependency("dom/iframe.js", ["goog.dom.iframe"], ["goog.dom", "goog.dom.safe", "goog.html.SafeHtml", "goog.html.SafeStyle", "goog.html.legacyconversions", "goog.userAgent"], false);
goog.addDependency("dom/iframe_test.js", ["goog.dom.iframeTest"], ["goog.dom", "goog.dom.iframe", "goog.html.SafeHtml", "goog.html.SafeStyle", "goog.string.Const", "goog.testing.jsunit"], false);
goog.addDependency("dom/inputtype.js", ["goog.dom.InputType"], [], false);
goog.addDependency("dom/inputtype_test.js", ["goog.dom.InputTypeTest"], ["goog.dom.InputType", "goog.object"], false);
goog.addDependency("dom/iter.js", ["goog.dom.iter.AncestorIterator", "goog.dom.iter.ChildIterator", "goog.dom.iter.SiblingIterator"], ["goog.iter.Iterator", "goog.iter.StopIteration"], false);
goog.addDependency("dom/iter_test.js", ["goog.dom.iterTest"], ["goog.dom", "goog.dom.NodeType", "goog.dom.iter.AncestorIterator", "goog.dom.iter.ChildIterator", "goog.dom.iter.SiblingIterator", "goog.testing.dom", "goog.testing.jsunit"], false);
goog.addDependency("dom/multirange.js", ["goog.dom.MultiRange", "goog.dom.MultiRangeIterator"], ["goog.array", "goog.dom.AbstractMultiRange", "goog.dom.AbstractRange", "goog.dom.RangeIterator", "goog.dom.RangeType", "goog.dom.SavedRange", "goog.dom.TextRange", "goog.iter.StopIteration", "goog.log"], false);
goog.addDependency("dom/multirange_test.js", ["goog.dom.MultiRangeTest"], ["goog.dom", "goog.dom.MultiRange", "goog.dom.Range", "goog.iter", "goog.testing.jsunit"], false);
goog.addDependency("dom/nodeiterator.js", ["goog.dom.NodeIterator"], ["goog.dom.TagIterator"], false);
goog.addDependency("dom/nodeiterator_test.js", ["goog.dom.NodeIteratorTest"], ["goog.dom", "goog.dom.NodeIterator", "goog.testing.dom", "goog.testing.jsunit"], false);
goog.addDependency("dom/nodeoffset.js", ["goog.dom.NodeOffset"], ["goog.Disposable", "goog.dom.TagName"], false);
goog.addDependency("dom/nodeoffset_test.js", ["goog.dom.NodeOffsetTest"], ["goog.dom", "goog.dom.NodeOffset", "goog.dom.NodeType", "goog.dom.TagName", "goog.testing.jsunit"], false);
goog.addDependency("dom/nodetype.js", ["goog.dom.NodeType"], [], false);
goog.addDependency("dom/pattern/abstractpattern.js", ["goog.dom.pattern.AbstractPattern"], ["goog.dom.pattern.MatchType"], false);
goog.addDependency("dom/pattern/allchildren.js", ["goog.dom.pattern.AllChildren"], ["goog.dom.pattern.AbstractPattern", "goog.dom.pattern.MatchType"], false);
goog.addDependency("dom/pattern/callback/callback.js", ["goog.dom.pattern.callback"], ["goog.dom", "goog.dom.TagWalkType", "goog.iter"], false);
goog.addDependency("dom/pattern/callback/counter.js", ["goog.dom.pattern.callback.Counter"], [], false);
goog.addDependency("dom/pattern/callback/test.js", ["goog.dom.pattern.callback.Test"], ["goog.iter.StopIteration"], false);
goog.addDependency("dom/pattern/childmatches.js", ["goog.dom.pattern.ChildMatches"], ["goog.dom.pattern.AllChildren", "goog.dom.pattern.MatchType"], false);
goog.addDependency("dom/pattern/endtag.js", ["goog.dom.pattern.EndTag"], ["goog.dom.TagWalkType", "goog.dom.pattern.Tag"], false);
goog.addDependency("dom/pattern/fulltag.js", ["goog.dom.pattern.FullTag"], ["goog.dom.pattern.MatchType", "goog.dom.pattern.StartTag", "goog.dom.pattern.Tag"], false);
goog.addDependency("dom/pattern/matcher.js", ["goog.dom.pattern.Matcher"], ["goog.dom.TagIterator", "goog.dom.pattern.MatchType", "goog.iter"], false);
goog.addDependency("dom/pattern/matcher_test.js", ["goog.dom.pattern.matcherTest"], ["goog.dom", "goog.dom.TagName", "goog.dom.pattern.EndTag", "goog.dom.pattern.FullTag", "goog.dom.pattern.Matcher", "goog.dom.pattern.Repeat", "goog.dom.pattern.Sequence", "goog.dom.pattern.StartTag", "goog.dom.pattern.callback.Counter", "goog.dom.pattern.callback.Test", "goog.iter.StopIteration", "goog.testing.jsunit"], false);
goog.addDependency("dom/pattern/nodetype.js", ["goog.dom.pattern.NodeType"], ["goog.dom.pattern.AbstractPattern", "goog.dom.pattern.MatchType"], false);
goog.addDependency("dom/pattern/pattern.js", ["goog.dom.pattern", "goog.dom.pattern.MatchType"], [], false);
goog.addDependency("dom/pattern/pattern_test.js", ["goog.dom.patternTest"], ["goog.dom", "goog.dom.NodeType", "goog.dom.TagWalkType", "goog.dom.pattern.AllChildren", "goog.dom.pattern.ChildMatches", "goog.dom.pattern.EndTag", "goog.dom.pattern.FullTag", "goog.dom.pattern.MatchType", "goog.dom.pattern.NodeType", "goog.dom.pattern.Repeat", "goog.dom.pattern.Sequence", "goog.dom.pattern.StartTag", "goog.dom.pattern.Text", "goog.testing.jsunit"], false);
goog.addDependency("dom/pattern/repeat.js", ["goog.dom.pattern.Repeat"], ["goog.dom.NodeType", "goog.dom.pattern.AbstractPattern", "goog.dom.pattern.MatchType"], false);
goog.addDependency("dom/pattern/sequence.js", ["goog.dom.pattern.Sequence"], ["goog.dom.NodeType", "goog.dom.pattern", "goog.dom.pattern.AbstractPattern", "goog.dom.pattern.MatchType"], false);
goog.addDependency("dom/pattern/starttag.js", ["goog.dom.pattern.StartTag"], ["goog.dom.TagWalkType", "goog.dom.pattern.Tag"], false);
goog.addDependency("dom/pattern/tag.js", ["goog.dom.pattern.Tag"], ["goog.dom.pattern", "goog.dom.pattern.AbstractPattern", "goog.dom.pattern.MatchType", "goog.object"], false);
goog.addDependency("dom/pattern/text.js", ["goog.dom.pattern.Text"], ["goog.dom.NodeType", "goog.dom.pattern", "goog.dom.pattern.AbstractPattern", "goog.dom.pattern.MatchType"], false);
goog.addDependency("dom/range.js", ["goog.dom.Range"], ["goog.dom", "goog.dom.AbstractRange", "goog.dom.BrowserFeature", "goog.dom.ControlRange", "goog.dom.MultiRange", "goog.dom.NodeType", "goog.dom.TextRange"], false);
goog.addDependency("dom/range_test.js", ["goog.dom.RangeTest"], ["goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.RangeType", "goog.dom.TagName", "goog.dom.TextRange", "goog.dom.browserrange", "goog.testing.dom", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("dom/rangeendpoint.js", ["goog.dom.RangeEndpoint"], [], false);
goog.addDependency("dom/safe.js", ["goog.dom.safe"], ["goog.asserts", "goog.html.SafeHtml", "goog.html.SafeUrl", "goog.html.TrustedResourceUrl", "goog.string", "goog.string.Const"], false);
goog.addDependency("dom/safe_test.js", ["goog.dom.safeTest"], ["goog.dom.safe", "goog.html.SafeUrl", "goog.html.TrustedResourceUrl", "goog.html.testing", "goog.string.Const", "goog.testing", "goog.testing.jsunit"], false);
goog.addDependency("dom/savedcaretrange.js", ["goog.dom.SavedCaretRange"], ["goog.array", "goog.dom", "goog.dom.SavedRange", "goog.dom.TagName", "goog.string"], false);
goog.addDependency("dom/savedcaretrange_test.js", ["goog.dom.SavedCaretRangeTest"], ["goog.dom", "goog.dom.Range", "goog.dom.SavedCaretRange", "goog.testing.dom", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("dom/savedrange.js", ["goog.dom.SavedRange"], ["goog.Disposable", "goog.log"], false);
goog.addDependency("dom/savedrange_test.js", ["goog.dom.SavedRangeTest"], ["goog.dom", "goog.dom.Range", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("dom/selection.js", ["goog.dom.selection"], ["goog.dom.InputType", "goog.string", "goog.userAgent"], false);
goog.addDependency("dom/selection_test.js", ["goog.dom.selectionTest"], ["goog.dom", "goog.dom.InputType", "goog.dom.TagName", "goog.dom.selection", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("dom/tagiterator.js", ["goog.dom.TagIterator", "goog.dom.TagWalkType"], ["goog.dom", "goog.dom.NodeType", "goog.iter.Iterator", "goog.iter.StopIteration"], false);
goog.addDependency("dom/tagiterator_test.js", ["goog.dom.TagIteratorTest"], ["goog.dom", "goog.dom.TagIterator", "goog.dom.TagName", "goog.dom.TagWalkType", "goog.iter", "goog.iter.StopIteration", "goog.testing.dom", "goog.testing.jsunit"], false);
goog.addDependency("dom/tagname.js", ["goog.dom.TagName"], [], false);
goog.addDependency("dom/tagname_test.js", ["goog.dom.TagNameTest"], ["goog.dom.TagName", "goog.object", "goog.testing.jsunit"], false);
goog.addDependency("dom/tags.js", ["goog.dom.tags"], ["goog.object"], false);
goog.addDependency("dom/tags_test.js", ["goog.dom.tagsTest"], ["goog.dom.tags", "goog.testing.jsunit"], false);
goog.addDependency("dom/textrange.js", ["goog.dom.TextRange"], ["goog.array", "goog.dom", "goog.dom.AbstractRange", "goog.dom.RangeType", "goog.dom.SavedRange", "goog.dom.TagName", "goog.dom.TextRangeIterator", "goog.dom.browserrange", "goog.string", "goog.userAgent"], false);
goog.addDependency("dom/textrange_test.js", ["goog.dom.TextRangeTest"], ["goog.dom", "goog.dom.ControlRange", "goog.dom.Range", "goog.dom.TextRange", "goog.math.Coordinate", "goog.style", "goog.testing.ExpectedFailures", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("dom/textrangeiterator.js", ["goog.dom.TextRangeIterator"], ["goog.array", "goog.dom", "goog.dom.NodeType", "goog.dom.RangeIterator", "goog.dom.TagName", "goog.iter.StopIteration"], false);
goog.addDependency("dom/textrangeiterator_test.js", ["goog.dom.TextRangeIteratorTest"], ["goog.dom", "goog.dom.TagName", "goog.dom.TextRangeIterator", "goog.iter.StopIteration", "goog.testing.dom", "goog.testing.jsunit"], false);
goog.addDependency("dom/vendor.js", ["goog.dom.vendor"], ["goog.string", "goog.userAgent"], false);
goog.addDependency("dom/vendor_test.js", ["goog.dom.vendorTest"], ["goog.array", "goog.dom.vendor", "goog.labs.userAgent.util", "goog.testing.MockUserAgent", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.userAgent", "goog.userAgentTestUtil"], false);
goog.addDependency("dom/viewportsizemonitor.js", ["goog.dom.ViewportSizeMonitor"], ["goog.dom", "goog.events", "goog.events.EventTarget", "goog.events.EventType", "goog.math.Size"], false);
goog.addDependency("dom/viewportsizemonitor_test.js", ["goog.dom.ViewportSizeMonitorTest"], ["goog.dom.ViewportSizeMonitor", "goog.events", "goog.events.Event", "goog.events.EventTarget", "goog.events.EventType", "goog.math.Size", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("dom/xml.js", ["goog.dom.xml"], ["goog.dom", "goog.dom.NodeType"], false);
goog.addDependency("dom/xml_test.js", ["goog.dom.xmlTest"], ["goog.dom.TagName", "goog.dom.xml", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/browserfeature.js", ["goog.editor.BrowserFeature"], ["goog.editor.defines", "goog.userAgent", "goog.userAgent.product", "goog.userAgent.product.isVersion"], false);
goog.addDependency("editor/browserfeature_test.js", ["goog.editor.BrowserFeatureTest"], ["goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.testing.ExpectedFailures", "goog.testing.jsunit"], false);
goog.addDependency("editor/clicktoeditwrapper.js", ["goog.editor.ClickToEditWrapper"], ["goog.Disposable", "goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Command", "goog.editor.Field", "goog.editor.range", "goog.events.BrowserEvent", "goog.events.EventHandler", "goog.events.EventType"], false);
goog.addDependency("editor/clicktoeditwrapper_test.js", ["goog.editor.ClickToEditWrapperTest"], ["goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.editor.ClickToEditWrapper", "goog.editor.SeamlessField", "goog.testing.MockClock", "goog.testing.events", "goog.testing.jsunit", "goog.userAgent", "goog.userAgent.product"], false);
goog.addDependency("editor/command.js", ["goog.editor.Command"], [], false);
goog.addDependency("editor/contenteditablefield.js", ["goog.editor.ContentEditableField"], ["goog.asserts", "goog.editor.Field", "goog.log"], false);
goog.addDependency("editor/contenteditablefield_test.js", ["goog.editor.ContentEditableFieldTest"], ["goog.dom", "goog.editor.ContentEditableField", "goog.editor.field_test", "goog.testing.jsunit"], false);
goog.addDependency("editor/defines.js", ["goog.editor.defines"], [], false);
goog.addDependency("editor/field.js", ["goog.editor.Field", "goog.editor.Field.EventType"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.array", "goog.asserts", "goog.async.Delay", "goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Command", "goog.editor.Plugin", "goog.editor.icontent", "goog.editor.icontent.FieldFormatInfo", "goog.editor.icontent.FieldStyleInfo", "goog.editor.node", "goog.editor.range", "goog.events", "goog.events.EventHandler", "goog.events.EventTarget", 
"goog.events.EventType", "goog.events.KeyCodes", "goog.functions", "goog.log", "goog.log.Level", "goog.string", "goog.string.Unicode", "goog.style", "goog.userAgent", "goog.userAgent.product"], false);
goog.addDependency("editor/field_test.js", ["goog.editor.field_test"], ["goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Field", "goog.editor.Plugin", "goog.editor.range", "goog.events", "goog.events.BrowserEvent", "goog.events.EventType", "goog.events.KeyCodes", "goog.functions", "goog.testing.LooseMock", "goog.testing.MockClock", "goog.testing.dom", "goog.testing.events", "goog.testing.events.Event", "goog.testing.recordFunction", "goog.userAgent"], false);
goog.addDependency("editor/focus.js", ["goog.editor.focus"], ["goog.dom.selection"], false);
goog.addDependency("editor/focus_test.js", ["goog.editor.focusTest"], ["goog.dom.selection", "goog.editor.BrowserFeature", "goog.editor.focus", "goog.testing.jsunit"], false);
goog.addDependency("editor/icontent.js", ["goog.editor.icontent", "goog.editor.icontent.FieldFormatInfo", "goog.editor.icontent.FieldStyleInfo"], ["goog.dom", "goog.editor.BrowserFeature", "goog.style", "goog.userAgent"], false);
goog.addDependency("editor/icontent_test.js", ["goog.editor.icontentTest"], ["goog.dom", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.icontent", "goog.editor.icontent.FieldFormatInfo", "goog.editor.icontent.FieldStyleInfo", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/link.js", ["goog.editor.Link"], ["goog.array", "goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Command", "goog.editor.node", "goog.editor.range", "goog.string", "goog.string.Unicode", "goog.uri.utils", "goog.uri.utils.ComponentIndex"], false);
goog.addDependency("editor/link_test.js", ["goog.editor.LinkTest"], ["goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.TagName", "goog.editor.Link", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/node.js", ["goog.editor.node"], ["goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.iter.ChildIterator", "goog.dom.iter.SiblingIterator", "goog.iter", "goog.object", "goog.string", "goog.string.Unicode", "goog.userAgent"], false);
goog.addDependency("editor/node_test.js", ["goog.editor.nodeTest"], ["goog.array", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.editor.node", "goog.style", "goog.testing.ExpectedFailures", "goog.testing.dom", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/plugin.js", ["goog.editor.Plugin"], ["goog.events.EventTarget", "goog.functions", "goog.log", "goog.object", "goog.reflect", "goog.userAgent"], false);
goog.addDependency("editor/plugin_test.js", ["goog.editor.PluginTest"], ["goog.editor.Field", "goog.editor.Plugin", "goog.functions", "goog.testing.StrictMock", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/plugins/abstractbubbleplugin.js", ["goog.editor.plugins.AbstractBubblePlugin"], ["goog.array", "goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.TagName", "goog.dom.classlist", "goog.editor.Plugin", "goog.editor.style", "goog.events", "goog.events.EventHandler", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.actionEventWrapper", "goog.functions", "goog.string.Unicode", "goog.ui.Component", "goog.ui.editor.Bubble", "goog.userAgent"], false);
goog.addDependency("editor/plugins/abstractbubbleplugin_test.js", ["goog.editor.plugins.AbstractBubblePluginTest"], ["goog.dom", "goog.dom.TagName", "goog.editor.plugins.AbstractBubblePlugin", "goog.events.BrowserEvent", "goog.events.EventType", "goog.events.KeyCodes", "goog.functions", "goog.style", "goog.testing.editor.FieldMock", "goog.testing.editor.TestHelper", "goog.testing.events", "goog.testing.events.Event", "goog.testing.jsunit", "goog.ui.editor.Bubble", "goog.userAgent"], false);
goog.addDependency("editor/plugins/abstractdialogplugin.js", ["goog.editor.plugins.AbstractDialogPlugin", "goog.editor.plugins.AbstractDialogPlugin.EventType"], ["goog.dom", "goog.dom.Range", "goog.editor.Field", "goog.editor.Plugin", "goog.editor.range", "goog.events", "goog.ui.editor.AbstractDialog"], false);
goog.addDependency("editor/plugins/abstractdialogplugin_test.js", ["goog.editor.plugins.AbstractDialogPluginTest"], ["goog.dom.SavedRange", "goog.dom.TagName", "goog.editor.Field", "goog.editor.plugins.AbstractDialogPlugin", "goog.events.Event", "goog.events.EventHandler", "goog.functions", "goog.testing.MockClock", "goog.testing.MockControl", "goog.testing.PropertyReplacer", "goog.testing.editor.FieldMock", "goog.testing.editor.TestHelper", "goog.testing.events", "goog.testing.jsunit", "goog.testing.mockmatchers.ArgumentMatcher", 
"goog.ui.editor.AbstractDialog", "goog.userAgent"], false);
goog.addDependency("editor/plugins/abstracttabhandler.js", ["goog.editor.plugins.AbstractTabHandler"], ["goog.editor.Plugin", "goog.events.KeyCodes", "goog.userAgent"], false);
goog.addDependency("editor/plugins/abstracttabhandler_test.js", ["goog.editor.plugins.AbstractTabHandlerTest"], ["goog.editor.Field", "goog.editor.plugins.AbstractTabHandler", "goog.events.BrowserEvent", "goog.events.KeyCodes", "goog.testing.StrictMock", "goog.testing.editor.FieldMock", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/plugins/basictextformatter.js", ["goog.editor.plugins.BasicTextFormatter", "goog.editor.plugins.BasicTextFormatter.COMMAND"], ["goog.array", "goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Command", "goog.editor.Link", "goog.editor.Plugin", "goog.editor.node", "goog.editor.range", "goog.editor.style", "goog.iter", "goog.iter.StopIteration", "goog.log", "goog.object", "goog.string", "goog.string.Unicode", 
"goog.style", "goog.ui.editor.messages", "goog.userAgent"], false);
goog.addDependency("editor/plugins/basictextformatter_test.js", ["goog.editor.plugins.BasicTextFormatterTest"], ["goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Command", "goog.editor.Field", "goog.editor.Plugin", "goog.editor.plugins.BasicTextFormatter", "goog.object", "goog.style", "goog.testing.ExpectedFailures", "goog.testing.LooseMock", "goog.testing.PropertyReplacer", "goog.testing.editor.FieldMock", "goog.testing.editor.TestHelper", "goog.testing.jsunit", 
"goog.testing.mockmatchers", "goog.userAgent"], false);
goog.addDependency("editor/plugins/blockquote.js", ["goog.editor.plugins.Blockquote"], ["goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classlist", "goog.editor.BrowserFeature", "goog.editor.Command", "goog.editor.Plugin", "goog.editor.node", "goog.functions", "goog.log"], false);
goog.addDependency("editor/plugins/blockquote_test.js", ["goog.editor.plugins.BlockquoteTest"], ["goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.plugins.Blockquote", "goog.testing.editor.FieldMock", "goog.testing.editor.TestHelper", "goog.testing.jsunit"], false);
goog.addDependency("editor/plugins/emoticons.js", ["goog.editor.plugins.Emoticons"], ["goog.dom.TagName", "goog.editor.Plugin", "goog.editor.range", "goog.functions", "goog.ui.emoji.Emoji", "goog.userAgent"], false);
goog.addDependency("editor/plugins/emoticons_test.js", ["goog.editor.plugins.EmoticonsTest"], ["goog.Uri", "goog.array", "goog.dom", "goog.dom.TagName", "goog.editor.Field", "goog.editor.plugins.Emoticons", "goog.testing.jsunit", "goog.ui.emoji.Emoji", "goog.userAgent"], false);
goog.addDependency("editor/plugins/enterhandler.js", ["goog.editor.plugins.EnterHandler"], ["goog.dom", "goog.dom.NodeOffset", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Plugin", "goog.editor.node", "goog.editor.plugins.Blockquote", "goog.editor.range", "goog.editor.style", "goog.events.KeyCodes", "goog.functions", "goog.object", "goog.string", "goog.userAgent"], false);
goog.addDependency("editor/plugins/enterhandler_test.js", ["goog.editor.plugins.EnterHandlerTest"], ["goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Field", "goog.editor.Plugin", "goog.editor.plugins.Blockquote", "goog.editor.plugins.EnterHandler", "goog.editor.range", "goog.events", "goog.events.KeyCodes", "goog.testing.ExpectedFailures", "goog.testing.MockClock", "goog.testing.dom", "goog.testing.editor.TestHelper", "goog.testing.events", 
"goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/plugins/firststrong.js", ["goog.editor.plugins.FirstStrong"], ["goog.dom.NodeType", "goog.dom.TagIterator", "goog.dom.TagName", "goog.editor.Command", "goog.editor.Field", "goog.editor.Plugin", "goog.editor.node", "goog.editor.range", "goog.i18n.bidi", "goog.i18n.uChar", "goog.iter", "goog.userAgent"], false);
goog.addDependency("editor/plugins/firststrong_test.js", ["goog.editor.plugins.FirstStrongTest"], ["goog.dom.Range", "goog.editor.Command", "goog.editor.Field", "goog.editor.plugins.FirstStrong", "goog.editor.range", "goog.events.KeyCodes", "goog.testing.MockClock", "goog.testing.editor.TestHelper", "goog.testing.events", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/plugins/headerformatter.js", ["goog.editor.plugins.HeaderFormatter"], ["goog.editor.Command", "goog.editor.Plugin", "goog.userAgent"], false);
goog.addDependency("editor/plugins/headerformatter_test.js", ["goog.editor.plugins.HeaderFormatterTest"], ["goog.dom", "goog.editor.Command", "goog.editor.plugins.BasicTextFormatter", "goog.editor.plugins.HeaderFormatter", "goog.events.BrowserEvent", "goog.testing.LooseMock", "goog.testing.editor.FieldMock", "goog.testing.editor.TestHelper", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/plugins/linkbubble.js", ["goog.editor.plugins.LinkBubble", "goog.editor.plugins.LinkBubble.Action"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.editor.Command", "goog.editor.Link", "goog.editor.plugins.AbstractBubblePlugin", "goog.editor.range", "goog.functions", "goog.string", "goog.style", "goog.ui.editor.messages", "goog.uri.utils", "goog.window"], false);
goog.addDependency("editor/plugins/linkbubble_test.js", ["goog.editor.plugins.LinkBubbleTest"], ["goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.editor.Command", "goog.editor.Link", "goog.editor.plugins.LinkBubble", "goog.events.BrowserEvent", "goog.events.Event", "goog.events.EventType", "goog.string", "goog.style", "goog.testing.FunctionMock", "goog.testing.PropertyReplacer", "goog.testing.editor.FieldMock", "goog.testing.editor.TestHelper", "goog.testing.events", "goog.testing.jsunit", 
"goog.userAgent"], false);
goog.addDependency("editor/plugins/linkdialogplugin.js", ["goog.editor.plugins.LinkDialogPlugin"], ["goog.array", "goog.dom", "goog.editor.Command", "goog.editor.plugins.AbstractDialogPlugin", "goog.events.EventHandler", "goog.functions", "goog.ui.editor.AbstractDialog", "goog.ui.editor.LinkDialog", "goog.uri.utils"], false);
goog.addDependency("editor/plugins/linkdialogplugin_test.js", ["goog.ui.editor.plugins.LinkDialogTest"], ["goog.dom", "goog.dom.DomHelper", "goog.dom.NodeType", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Command", "goog.editor.Field", "goog.editor.Link", "goog.editor.plugins.LinkDialogPlugin", "goog.string", "goog.string.Unicode", "goog.testing.MockControl", "goog.testing.editor.FieldMock", "goog.testing.editor.TestHelper", "goog.testing.editor.dom", "goog.testing.events", "goog.testing.jsunit", 
"goog.testing.mockmatchers", "goog.ui.editor.AbstractDialog", "goog.ui.editor.LinkDialog", "goog.userAgent"], false);
goog.addDependency("editor/plugins/linkshortcutplugin.js", ["goog.editor.plugins.LinkShortcutPlugin"], ["goog.editor.Command", "goog.editor.Plugin"], false);
goog.addDependency("editor/plugins/linkshortcutplugin_test.js", ["goog.editor.plugins.LinkShortcutPluginTest"], ["goog.dom", "goog.dom.TagName", "goog.editor.Field", "goog.editor.plugins.BasicTextFormatter", "goog.editor.plugins.LinkBubble", "goog.editor.plugins.LinkShortcutPlugin", "goog.events.KeyCodes", "goog.testing.PropertyReplacer", "goog.testing.dom", "goog.testing.events", "goog.testing.jsunit"], false);
goog.addDependency("editor/plugins/listtabhandler.js", ["goog.editor.plugins.ListTabHandler"], ["goog.dom", "goog.dom.TagName", "goog.editor.Command", "goog.editor.plugins.AbstractTabHandler", "goog.iter"], false);
goog.addDependency("editor/plugins/listtabhandler_test.js", ["goog.editor.plugins.ListTabHandlerTest"], ["goog.dom", "goog.editor.Command", "goog.editor.plugins.ListTabHandler", "goog.events.BrowserEvent", "goog.events.KeyCodes", "goog.functions", "goog.testing.StrictMock", "goog.testing.editor.FieldMock", "goog.testing.editor.TestHelper", "goog.testing.jsunit"], false);
goog.addDependency("editor/plugins/loremipsum.js", ["goog.editor.plugins.LoremIpsum"], ["goog.asserts", "goog.dom", "goog.editor.Command", "goog.editor.Field", "goog.editor.Plugin", "goog.editor.node", "goog.functions", "goog.userAgent"], false);
goog.addDependency("editor/plugins/loremipsum_test.js", ["goog.editor.plugins.LoremIpsumTest"], ["goog.dom", "goog.editor.Command", "goog.editor.Field", "goog.editor.plugins.LoremIpsum", "goog.string.Unicode", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/plugins/removeformatting.js", ["goog.editor.plugins.RemoveFormatting"], ["goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Plugin", "goog.editor.node", "goog.editor.range", "goog.string", "goog.userAgent"], false);
goog.addDependency("editor/plugins/removeformatting_test.js", ["goog.editor.plugins.RemoveFormattingTest"], ["goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.plugins.RemoveFormatting", "goog.string", "goog.testing.ExpectedFailures", "goog.testing.dom", "goog.testing.editor.FieldMock", "goog.testing.editor.TestHelper", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/plugins/spacestabhandler.js", ["goog.editor.plugins.SpacesTabHandler"], ["goog.dom.TagName", "goog.editor.plugins.AbstractTabHandler", "goog.editor.range"], false);
goog.addDependency("editor/plugins/spacestabhandler_test.js", ["goog.editor.plugins.SpacesTabHandlerTest"], ["goog.dom", "goog.dom.Range", "goog.editor.plugins.SpacesTabHandler", "goog.events.BrowserEvent", "goog.events.KeyCodes", "goog.functions", "goog.testing.StrictMock", "goog.testing.editor.FieldMock", "goog.testing.editor.TestHelper", "goog.testing.jsunit"], false);
goog.addDependency("editor/plugins/tableeditor.js", ["goog.editor.plugins.TableEditor"], ["goog.array", "goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.editor.Plugin", "goog.editor.Table", "goog.editor.node", "goog.editor.range", "goog.object", "goog.userAgent"], false);
goog.addDependency("editor/plugins/tableeditor_test.js", ["goog.editor.plugins.TableEditorTest"], ["goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.editor.plugins.TableEditor", "goog.object", "goog.string", "goog.testing.ExpectedFailures", "goog.testing.JsUnitException", "goog.testing.editor.FieldMock", "goog.testing.editor.TestHelper", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/plugins/tagonenterhandler.js", ["goog.editor.plugins.TagOnEnterHandler"], ["goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.TagName", "goog.editor.Command", "goog.editor.node", "goog.editor.plugins.EnterHandler", "goog.editor.range", "goog.editor.style", "goog.events.KeyCodes", "goog.functions", "goog.string.Unicode", "goog.style", "goog.userAgent"], false);
goog.addDependency("editor/plugins/tagonenterhandler_test.js", ["goog.editor.plugins.TagOnEnterHandlerTest"], ["goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Field", "goog.editor.Plugin", "goog.editor.plugins.TagOnEnterHandler", "goog.events.KeyCodes", "goog.string.Unicode", "goog.testing.dom", "goog.testing.editor.TestHelper", "goog.testing.events", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/plugins/undoredo.js", ["goog.editor.plugins.UndoRedo"], ["goog.dom", "goog.dom.NodeOffset", "goog.dom.Range", "goog.editor.BrowserFeature", "goog.editor.Command", "goog.editor.Field", "goog.editor.Plugin", "goog.editor.node", "goog.editor.plugins.UndoRedoManager", "goog.editor.plugins.UndoRedoState", "goog.events", "goog.events.EventHandler", "goog.log", "goog.object"], false);
goog.addDependency("editor/plugins/undoredo_test.js", ["goog.editor.plugins.UndoRedoTest"], ["goog.array", "goog.dom", "goog.dom.browserrange", "goog.editor.Field", "goog.editor.plugins.LoremIpsum", "goog.editor.plugins.UndoRedo", "goog.events", "goog.functions", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.StrictMock", "goog.testing.jsunit"], false);
goog.addDependency("editor/plugins/undoredomanager.js", ["goog.editor.plugins.UndoRedoManager", "goog.editor.plugins.UndoRedoManager.EventType"], ["goog.editor.plugins.UndoRedoState", "goog.events", "goog.events.EventTarget"], false);
goog.addDependency("editor/plugins/undoredomanager_test.js", ["goog.editor.plugins.UndoRedoManagerTest"], ["goog.editor.plugins.UndoRedoManager", "goog.editor.plugins.UndoRedoState", "goog.events", "goog.testing.StrictMock", "goog.testing.jsunit"], false);
goog.addDependency("editor/plugins/undoredostate.js", ["goog.editor.plugins.UndoRedoState"], ["goog.events.EventTarget"], false);
goog.addDependency("editor/plugins/undoredostate_test.js", ["goog.editor.plugins.UndoRedoStateTest"], ["goog.editor.plugins.UndoRedoState", "goog.testing.jsunit"], false);
goog.addDependency("editor/range.js", ["goog.editor.range", "goog.editor.range.Point"], ["goog.array", "goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.dom.RangeEndpoint", "goog.dom.SavedCaretRange", "goog.editor.node", "goog.editor.style", "goog.iter", "goog.userAgent"], false);
goog.addDependency("editor/range_test.js", ["goog.editor.rangeTest"], ["goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.editor.range", "goog.editor.range.Point", "goog.string", "goog.testing.dom", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("editor/seamlessfield.js", ["goog.editor.SeamlessField"], ["goog.cssom.iframe.style", "goog.dom", "goog.dom.Range", "goog.dom.TagName", "goog.dom.safe", "goog.editor.BrowserFeature", "goog.editor.Field", "goog.editor.icontent", "goog.editor.icontent.FieldFormatInfo", "goog.editor.icontent.FieldStyleInfo", "goog.editor.node", "goog.events", "goog.events.EventType", "goog.html.uncheckedconversions", "goog.log", "goog.string.Const", "goog.style"], false);
goog.addDependency("editor/seamlessfield_test.js", ["goog.editor.seamlessfield_test"], ["goog.dom", "goog.dom.DomHelper", "goog.dom.Range", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Field", "goog.editor.SeamlessField", "goog.events", "goog.functions", "goog.style", "goog.testing.MockClock", "goog.testing.MockRange", "goog.testing.jsunit"], false);
goog.addDependency("editor/style.js", ["goog.editor.style"], ["goog.array", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.events.EventType", "goog.object", "goog.style", "goog.userAgent"], false);
goog.addDependency("editor/style_test.js", ["goog.editor.styleTest"], ["goog.dom", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.style", "goog.events.EventHandler", "goog.events.EventType", "goog.style", "goog.testing.LooseMock", "goog.testing.jsunit", "goog.testing.mockmatchers"], false);
goog.addDependency("editor/table.js", ["goog.editor.Table", "goog.editor.TableCell", "goog.editor.TableRow"], ["goog.dom", "goog.dom.DomHelper", "goog.dom.NodeType", "goog.dom.TagName", "goog.log", "goog.string.Unicode", "goog.style"], false);
goog.addDependency("editor/table_test.js", ["goog.editor.TableTest"], ["goog.dom", "goog.dom.TagName", "goog.editor.Table", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("events/actioneventwrapper.js", ["goog.events.actionEventWrapper"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.dom", "goog.events", "goog.events.EventHandler", "goog.events.EventType", "goog.events.EventWrapper", "goog.events.KeyCodes", "goog.userAgent"], false);
goog.addDependency("events/actioneventwrapper_test.js", ["goog.events.actionEventWrapperTest"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.events", "goog.events.EventHandler", "goog.events.KeyCodes", "goog.events.actionEventWrapper", "goog.testing.events", "goog.testing.jsunit"], false);
goog.addDependency("events/actionhandler.js", ["goog.events.ActionEvent", "goog.events.ActionHandler", "goog.events.ActionHandler.EventType", "goog.events.BeforeActionEvent"], ["goog.events", "goog.events.BrowserEvent", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.userAgent"], false);
goog.addDependency("events/actionhandler_test.js", ["goog.events.ActionHandlerTest"], ["goog.dom", "goog.events", "goog.events.ActionHandler", "goog.testing.events", "goog.testing.jsunit"], false);
goog.addDependency("events/browserevent.js", ["goog.events.BrowserEvent", "goog.events.BrowserEvent.MouseButton"], ["goog.events.BrowserFeature", "goog.events.Event", "goog.events.EventType", "goog.reflect", "goog.userAgent"], false);
goog.addDependency("events/browserevent_test.js", ["goog.events.BrowserEventTest"], ["goog.events.BrowserEvent", "goog.events.BrowserFeature", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("events/browserfeature.js", ["goog.events.BrowserFeature"], ["goog.userAgent"], false);
goog.addDependency("events/event.js", ["goog.events.Event", "goog.events.EventLike"], ["goog.Disposable", "goog.events.EventId"], false);
goog.addDependency("events/event_test.js", ["goog.events.EventTest"], ["goog.events.Event", "goog.events.EventId", "goog.events.EventTarget", "goog.testing.jsunit"], false);
goog.addDependency("events/eventhandler.js", ["goog.events.EventHandler"], ["goog.Disposable", "goog.events", "goog.object"], false);
goog.addDependency("events/eventhandler_test.js", ["goog.events.EventHandlerTest"], ["goog.events", "goog.events.EventHandler", "goog.events.EventTarget", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("events/eventid.js", ["goog.events.EventId"], [], false);
goog.addDependency("events/events.js", ["goog.events", "goog.events.CaptureSimulationMode", "goog.events.Key", "goog.events.ListenableType"], ["goog.asserts", "goog.debug.entryPointRegistry", "goog.events.BrowserEvent", "goog.events.BrowserFeature", "goog.events.Listenable", "goog.events.ListenerMap"], false);
goog.addDependency("events/events_test.js", ["goog.eventsTest"], ["goog.asserts.AssertionError", "goog.debug.EntryPointMonitor", "goog.debug.ErrorHandler", "goog.debug.entryPointRegistry", "goog.dom", "goog.dom.TagName", "goog.events", "goog.events.BrowserFeature", "goog.events.CaptureSimulationMode", "goog.events.Event", "goog.events.EventTarget", "goog.events.EventType", "goog.events.Listener", "goog.functions", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.recordFunction"], 
false);
goog.addDependency("events/eventtarget.js", ["goog.events.EventTarget"], ["goog.Disposable", "goog.asserts", "goog.events", "goog.events.Event", "goog.events.Listenable", "goog.events.ListenerMap", "goog.object"], false);
goog.addDependency("events/eventtarget_test.js", ["goog.events.EventTargetTest"], ["goog.events.EventTarget", "goog.events.Listenable", "goog.events.eventTargetTester", "goog.events.eventTargetTester.KeyType", "goog.events.eventTargetTester.UnlistenReturnType", "goog.testing.jsunit"], false);
goog.addDependency("events/eventtarget_via_googevents_test.js", ["goog.events.EventTargetGoogEventsTest"], ["goog.events", "goog.events.EventTarget", "goog.events.eventTargetTester", "goog.events.eventTargetTester.KeyType", "goog.events.eventTargetTester.UnlistenReturnType", "goog.testing", "goog.testing.jsunit"], false);
goog.addDependency("events/eventtarget_via_w3cinterface_test.js", ["goog.events.EventTargetW3CTest"], ["goog.events.EventTarget", "goog.events.eventTargetTester", "goog.events.eventTargetTester.KeyType", "goog.events.eventTargetTester.UnlistenReturnType", "goog.testing.jsunit"], false);
goog.addDependency("events/eventtargettester.js", ["goog.events.eventTargetTester", "goog.events.eventTargetTester.KeyType", "goog.events.eventTargetTester.UnlistenReturnType"], ["goog.array", "goog.events", "goog.events.Event", "goog.events.EventTarget", "goog.testing.asserts", "goog.testing.recordFunction"], false);
goog.addDependency("events/eventtype.js", ["goog.events.EventType"], ["goog.userAgent"], false);
goog.addDependency("events/eventwrapper.js", ["goog.events.EventWrapper"], [], false);
goog.addDependency("events/filedrophandler.js", ["goog.events.FileDropHandler", "goog.events.FileDropHandler.EventType"], ["goog.array", "goog.dom", "goog.events.BrowserEvent", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.log", "goog.log.Level"], false);
goog.addDependency("events/filedrophandler_test.js", ["goog.events.FileDropHandlerTest"], ["goog.events", "goog.events.BrowserEvent", "goog.events.EventTarget", "goog.events.EventType", "goog.events.FileDropHandler", "goog.testing.jsunit"], false);
goog.addDependency("events/focushandler.js", ["goog.events.FocusHandler", "goog.events.FocusHandler.EventType"], ["goog.events", "goog.events.BrowserEvent", "goog.events.EventTarget", "goog.userAgent"], false);
goog.addDependency("events/imehandler.js", ["goog.events.ImeHandler", "goog.events.ImeHandler.Event", "goog.events.ImeHandler.EventType"], ["goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.userAgent"], false);
goog.addDependency("events/imehandler_test.js", ["goog.events.ImeHandlerTest"], ["goog.array", "goog.dom", "goog.events", "goog.events.ImeHandler", "goog.events.KeyCodes", "goog.object", "goog.string", "goog.testing.PropertyReplacer", "goog.testing.events", "goog.testing.events.Event", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("events/inputhandler.js", ["goog.events.InputHandler", "goog.events.InputHandler.EventType"], ["goog.Timer", "goog.dom.TagName", "goog.events.BrowserEvent", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.KeyCodes", "goog.userAgent"], false);
goog.addDependency("events/inputhandler_test.js", ["goog.events.InputHandlerTest"], ["goog.dom", "goog.events.EventHandler", "goog.events.EventType", "goog.events.InputHandler", "goog.events.KeyCodes", "goog.testing.events", "goog.testing.events.Event", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.userAgent"], false);
goog.addDependency("events/keycodes.js", ["goog.events.KeyCodes"], ["goog.userAgent"], false);
goog.addDependency("events/keycodes_test.js", ["goog.events.KeyCodesTest"], ["goog.events.BrowserEvent", "goog.events.KeyCodes", "goog.object", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("events/keyhandler.js", ["goog.events.KeyEvent", "goog.events.KeyHandler", "goog.events.KeyHandler.EventType"], ["goog.events", "goog.events.BrowserEvent", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.userAgent"], false);
goog.addDependency("events/keyhandler_test.js", ["goog.events.KeyEventTest"], ["goog.dom", "goog.dom.TagName", "goog.events", "goog.events.BrowserEvent", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.testing.events", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("events/keynames.js", ["goog.events.KeyNames"], [], false);
goog.addDependency("events/listenable.js", ["goog.events.Listenable", "goog.events.ListenableKey"], ["goog.events.EventId"], false);
goog.addDependency("events/listenable_test.js", ["goog.events.ListenableTest"], ["goog.events.Listenable", "goog.testing.jsunit"], false);
goog.addDependency("events/listener.js", ["goog.events.Listener"], ["goog.events.ListenableKey"], false);
goog.addDependency("events/listenermap.js", ["goog.events.ListenerMap"], ["goog.array", "goog.events.Listener", "goog.object"], false);
goog.addDependency("events/listenermap_test.js", ["goog.events.ListenerMapTest"], ["goog.dispose", "goog.events", "goog.events.EventId", "goog.events.EventTarget", "goog.events.ListenerMap", "goog.testing.jsunit"], false);
goog.addDependency("events/mousewheelhandler.js", ["goog.events.MouseWheelEvent", "goog.events.MouseWheelHandler", "goog.events.MouseWheelHandler.EventType"], ["goog.dom", "goog.events", "goog.events.BrowserEvent", "goog.events.EventTarget", "goog.math", "goog.style", "goog.userAgent"], false);
goog.addDependency("events/mousewheelhandler_test.js", ["goog.events.MouseWheelHandlerTest"], ["goog.dom", "goog.events", "goog.events.BrowserEvent", "goog.events.MouseWheelEvent", "goog.events.MouseWheelHandler", "goog.functions", "goog.string", "goog.testing.PropertyReplacer", "goog.testing.events", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("events/onlinehandler.js", ["goog.events.OnlineHandler", "goog.events.OnlineHandler.EventType"], ["goog.Timer", "goog.events.BrowserFeature", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.net.NetworkStatusMonitor"], false);
goog.addDependency("events/onlinelistener_test.js", ["goog.events.OnlineHandlerTest"], ["goog.events", "goog.events.BrowserFeature", "goog.events.Event", "goog.events.EventHandler", "goog.events.OnlineHandler", "goog.net.NetworkStatusMonitor", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("events/pastehandler.js", ["goog.events.PasteHandler", "goog.events.PasteHandler.EventType", "goog.events.PasteHandler.State"], ["goog.Timer", "goog.async.ConditionalDelay", "goog.events.BrowserEvent", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.log", "goog.userAgent"], false);
goog.addDependency("events/pastehandler_test.js", ["goog.events.PasteHandlerTest"], ["goog.dom", "goog.events", "goog.events.BrowserEvent", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.PasteHandler", "goog.testing.MockClock", "goog.testing.MockUserAgent", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("events/wheelevent.js", ["goog.events.WheelEvent"], ["goog.asserts", "goog.events.BrowserEvent"], false);
goog.addDependency("events/wheelhandler.js", ["goog.events.WheelHandler"], ["goog.dom", "goog.events", "goog.events.EventTarget", "goog.events.WheelEvent", "goog.style", "goog.userAgent", "goog.userAgent.product", "goog.userAgent.product.isVersion"], false);
goog.addDependency("events/wheelhandler_test.js", ["goog.events.WheelHandlerTest"], ["goog.dom", "goog.events", "goog.events.BrowserEvent", "goog.events.WheelEvent", "goog.events.WheelHandler", "goog.string", "goog.testing.PropertyReplacer", "goog.testing.events", "goog.testing.jsunit", "goog.userAgent", "goog.userAgent.product"], false);
goog.addDependency("format/emailaddress.js", ["goog.format.EmailAddress"], ["goog.string"], false);
goog.addDependency("format/emailaddress_test.js", ["goog.format.EmailAddressTest"], ["goog.array", "goog.format.EmailAddress", "goog.testing.jsunit"], false);
goog.addDependency("format/format.js", ["goog.format"], ["goog.i18n.GraphemeBreak", "goog.string", "goog.userAgent"], false);
goog.addDependency("format/format_test.js", ["goog.formatTest"], ["goog.dom", "goog.dom.TagName", "goog.format", "goog.string", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("format/htmlprettyprinter.js", ["goog.format.HtmlPrettyPrinter", "goog.format.HtmlPrettyPrinter.Buffer"], ["goog.dom.TagName", "goog.object", "goog.string.StringBuffer"], false);
goog.addDependency("format/htmlprettyprinter_test.js", ["goog.format.HtmlPrettyPrinterTest"], ["goog.format.HtmlPrettyPrinter", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("format/internationalizedemailaddress.js", ["goog.format.InternationalizedEmailAddress"], ["goog.format.EmailAddress", "goog.string"], false);
goog.addDependency("format/internationalizedemailaddress_test.js", ["goog.format.InternationalizedEmailAddressTest"], ["goog.array", "goog.format.InternationalizedEmailAddress", "goog.testing.jsunit"], false);
goog.addDependency("format/jsonprettyprinter.js", ["goog.format.JsonPrettyPrinter", "goog.format.JsonPrettyPrinter.HtmlDelimiters", "goog.format.JsonPrettyPrinter.TextDelimiters"], ["goog.json", "goog.json.Serializer", "goog.string", "goog.string.StringBuffer", "goog.string.format"], false);
goog.addDependency("format/jsonprettyprinter_test.js", ["goog.format.JsonPrettyPrinterTest"], ["goog.format.JsonPrettyPrinter", "goog.testing.jsunit"], false);
goog.addDependency("fs/entry.js", ["goog.fs.DirectoryEntry", "goog.fs.DirectoryEntry.Behavior", "goog.fs.Entry", "goog.fs.FileEntry"], [], false);
goog.addDependency("fs/entryimpl.js", ["goog.fs.DirectoryEntryImpl", "goog.fs.EntryImpl", "goog.fs.FileEntryImpl"], ["goog.array", "goog.async.Deferred", "goog.fs.DirectoryEntry", "goog.fs.Entry", "goog.fs.Error", "goog.fs.FileEntry", "goog.fs.FileWriter", "goog.functions", "goog.string"], false);
goog.addDependency("fs/error.js", ["goog.fs.Error", "goog.fs.Error.ErrorCode"], ["goog.debug.Error", "goog.object", "goog.string"], false);
goog.addDependency("fs/filereader.js", ["goog.fs.FileReader", "goog.fs.FileReader.EventType", "goog.fs.FileReader.ReadyState"], ["goog.async.Deferred", "goog.events.EventTarget", "goog.fs.Error", "goog.fs.ProgressEvent"], false);
goog.addDependency("fs/filesaver.js", ["goog.fs.FileSaver", "goog.fs.FileSaver.EventType", "goog.fs.FileSaver.ReadyState"], ["goog.events.EventTarget", "goog.fs.Error", "goog.fs.ProgressEvent"], false);
goog.addDependency("fs/filesystem.js", ["goog.fs.FileSystem"], [], false);
goog.addDependency("fs/filesystemimpl.js", ["goog.fs.FileSystemImpl"], ["goog.fs.DirectoryEntryImpl", "goog.fs.FileSystem"], false);
goog.addDependency("fs/filewriter.js", ["goog.fs.FileWriter"], ["goog.fs.Error", "goog.fs.FileSaver"], false);
goog.addDependency("fs/fs.js", ["goog.fs"], ["goog.array", "goog.async.Deferred", "goog.fs.Error", "goog.fs.FileReader", "goog.fs.FileSystemImpl", "goog.fs.url", "goog.userAgent"], false);
goog.addDependency("fs/fs_test.js", ["goog.fsTest"], ["goog.Promise", "goog.array", "goog.dom", "goog.events", "goog.fs", "goog.fs.DirectoryEntry", "goog.fs.Error", "goog.fs.FileReader", "goog.fs.FileSaver", "goog.string", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("fs/progressevent.js", ["goog.fs.ProgressEvent"], ["goog.events.Event"], false);
goog.addDependency("fs/url.js", ["goog.fs.url"], [], false);
goog.addDependency("fs/url_test.js", ["goog.urlTest"], ["goog.fs.url", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("functions/functions.js", ["goog.functions"], [], false);
goog.addDependency("functions/functions_test.js", ["goog.functionsTest"], ["goog.functions", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("fx/abstractdragdrop.js", ["goog.fx.AbstractDragDrop", "goog.fx.AbstractDragDrop.EventType", "goog.fx.DragDropEvent", "goog.fx.DragDropItem"], ["goog.asserts", "goog.dom", "goog.dom.classlist", "goog.events", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.fx.Dragger", "goog.math.Box", "goog.math.Coordinate", "goog.style"], false);
goog.addDependency("fx/abstractdragdrop_test.js", ["goog.fx.AbstractDragDropTest"], ["goog.array", "goog.dom.TagName", "goog.events.EventType", "goog.functions", "goog.fx.AbstractDragDrop", "goog.fx.DragDropItem", "goog.math.Box", "goog.math.Coordinate", "goog.style", "goog.testing.events", "goog.testing.jsunit"], false);
goog.addDependency("fx/anim/anim.js", ["goog.fx.anim", "goog.fx.anim.Animated"], ["goog.async.AnimationDelay", "goog.async.Delay", "goog.object"], false);
goog.addDependency("fx/anim/anim_test.js", ["goog.fx.animTest"], ["goog.async.AnimationDelay", "goog.async.Delay", "goog.events", "goog.functions", "goog.fx.Animation", "goog.fx.anim", "goog.object", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.userAgent"], false);
goog.addDependency("fx/animation.js", ["goog.fx.Animation", "goog.fx.Animation.EventType", "goog.fx.Animation.State", "goog.fx.AnimationEvent"], ["goog.array", "goog.events.Event", "goog.fx.Transition", "goog.fx.TransitionBase", "goog.fx.anim", "goog.fx.anim.Animated"], false);
goog.addDependency("fx/animation_test.js", ["goog.fx.AnimationTest"], ["goog.events", "goog.fx.Animation", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("fx/animationqueue.js", ["goog.fx.AnimationParallelQueue", "goog.fx.AnimationQueue", "goog.fx.AnimationSerialQueue"], ["goog.array", "goog.asserts", "goog.events", "goog.fx.Transition", "goog.fx.TransitionBase"], false);
goog.addDependency("fx/animationqueue_test.js", ["goog.fx.AnimationQueueTest"], ["goog.events", "goog.fx.Animation", "goog.fx.AnimationParallelQueue", "goog.fx.AnimationSerialQueue", "goog.fx.Transition", "goog.fx.anim", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("fx/css3/fx.js", ["goog.fx.css3"], ["goog.fx.css3.Transition"], false);
goog.addDependency("fx/css3/transition.js", ["goog.fx.css3.Transition"], ["goog.Timer", "goog.asserts", "goog.fx.TransitionBase", "goog.style", "goog.style.transition"], false);
goog.addDependency("fx/css3/transition_test.js", ["goog.fx.css3.TransitionTest"], ["goog.dispose", "goog.dom", "goog.dom.TagName", "goog.events", "goog.fx.Transition", "goog.fx.css3.Transition", "goog.style.transition", "goog.testing.MockClock", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("fx/cssspriteanimation.js", ["goog.fx.CssSpriteAnimation"], ["goog.fx.Animation"], false);
goog.addDependency("fx/cssspriteanimation_test.js", ["goog.fx.CssSpriteAnimationTest"], ["goog.fx.CssSpriteAnimation", "goog.math.Box", "goog.math.Size", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("fx/dom.js", ["goog.fx.dom", "goog.fx.dom.BgColorTransform", "goog.fx.dom.ColorTransform", "goog.fx.dom.Fade", "goog.fx.dom.FadeIn", "goog.fx.dom.FadeInAndShow", "goog.fx.dom.FadeOut", "goog.fx.dom.FadeOutAndHide", "goog.fx.dom.PredefinedEffect", "goog.fx.dom.Resize", "goog.fx.dom.ResizeHeight", "goog.fx.dom.ResizeWidth", "goog.fx.dom.Scroll", "goog.fx.dom.Slide", "goog.fx.dom.SlideFrom", "goog.fx.dom.Swipe"], ["goog.color", "goog.events", "goog.fx.Animation", "goog.fx.Transition", 
"goog.style", "goog.style.bidi"], false);
goog.addDependency("fx/dragdrop.js", ["goog.fx.DragDrop"], ["goog.fx.AbstractDragDrop", "goog.fx.DragDropItem"], false);
goog.addDependency("fx/dragdropgroup.js", ["goog.fx.DragDropGroup"], ["goog.dom", "goog.fx.AbstractDragDrop", "goog.fx.DragDropItem"], false);
goog.addDependency("fx/dragdropgroup_test.js", ["goog.fx.DragDropGroupTest"], ["goog.events", "goog.fx.DragDropGroup", "goog.testing.jsunit"], false);
goog.addDependency("fx/dragger.js", ["goog.fx.DragEvent", "goog.fx.Dragger", "goog.fx.Dragger.EventType"], ["goog.dom", "goog.dom.TagName", "goog.events", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.math.Coordinate", "goog.math.Rect", "goog.style", "goog.style.bidi", "goog.userAgent"], false);
goog.addDependency("fx/dragger_test.js", ["goog.fx.DraggerTest"], ["goog.dom", "goog.dom.TagName", "goog.events", "goog.events.BrowserEvent", "goog.events.Event", "goog.events.EventType", "goog.fx.Dragger", "goog.math.Rect", "goog.style.bidi", "goog.testing.StrictMock", "goog.testing.events", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("fx/draglistgroup.js", ["goog.fx.DragListDirection", "goog.fx.DragListGroup", "goog.fx.DragListGroup.EventType", "goog.fx.DragListGroupEvent"], ["goog.array", "goog.asserts", "goog.dom", "goog.dom.classlist", "goog.events", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.fx.Dragger", "goog.math.Coordinate", "goog.string", "goog.style"], false);
goog.addDependency("fx/draglistgroup_test.js", ["goog.fx.DragListGroupTest"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.events.BrowserEvent", "goog.events.BrowserFeature", "goog.events.Event", "goog.events.EventType", "goog.fx.DragEvent", "goog.fx.DragListDirection", "goog.fx.DragListGroup", "goog.fx.Dragger", "goog.math.Coordinate", "goog.object", "goog.testing.events", "goog.testing.jsunit"], false);
goog.addDependency("fx/dragscrollsupport.js", ["goog.fx.DragScrollSupport"], ["goog.Disposable", "goog.Timer", "goog.dom", "goog.events.EventHandler", "goog.events.EventType", "goog.math.Coordinate", "goog.style"], false);
goog.addDependency("fx/dragscrollsupport_test.js", ["goog.fx.DragScrollSupportTest"], ["goog.fx.DragScrollSupport", "goog.math.Coordinate", "goog.testing.MockClock", "goog.testing.events", "goog.testing.jsunit"], false);
goog.addDependency("fx/easing.js", ["goog.fx.easing"], [], false);
goog.addDependency("fx/easing_test.js", ["goog.fx.easingTest"], ["goog.fx.easing", "goog.testing.jsunit"], false);
goog.addDependency("fx/fx.js", ["goog.fx"], ["goog.asserts", "goog.fx.Animation", "goog.fx.Animation.EventType", "goog.fx.Animation.State", "goog.fx.AnimationEvent", "goog.fx.Transition.EventType", "goog.fx.easing"], false);
goog.addDependency("fx/fx_test.js", ["goog.fxTest"], ["goog.fx.Animation", "goog.object", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("fx/transition.js", ["goog.fx.Transition", "goog.fx.Transition.EventType"], [], false);
goog.addDependency("fx/transitionbase.js", ["goog.fx.TransitionBase", "goog.fx.TransitionBase.State"], ["goog.events.EventTarget", "goog.fx.Transition"], false);
goog.addDependency("graphics/abstractgraphics.js", ["goog.graphics.AbstractGraphics"], ["goog.dom", "goog.graphics.Path", "goog.math.Coordinate", "goog.math.Size", "goog.style", "goog.ui.Component"], false);
goog.addDependency("graphics/affinetransform.js", ["goog.graphics.AffineTransform"], ["goog.math"], false);
goog.addDependency("graphics/canvaselement.js", ["goog.graphics.CanvasEllipseElement", "goog.graphics.CanvasGroupElement", "goog.graphics.CanvasImageElement", "goog.graphics.CanvasPathElement", "goog.graphics.CanvasRectElement", "goog.graphics.CanvasTextElement"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.dom.safe", "goog.graphics.EllipseElement", "goog.graphics.GroupElement", "goog.graphics.ImageElement", "goog.graphics.Path", "goog.graphics.PathElement", "goog.graphics.RectElement", 
"goog.graphics.TextElement", "goog.html.SafeHtml", "goog.html.uncheckedconversions", "goog.math", "goog.string", "goog.string.Const"], false);
goog.addDependency("graphics/canvasgraphics.js", ["goog.graphics.CanvasGraphics"], ["goog.dom.TagName", "goog.events.EventType", "goog.graphics.AbstractGraphics", "goog.graphics.CanvasEllipseElement", "goog.graphics.CanvasGroupElement", "goog.graphics.CanvasImageElement", "goog.graphics.CanvasPathElement", "goog.graphics.CanvasRectElement", "goog.graphics.CanvasTextElement", "goog.graphics.SolidFill", "goog.math.Size", "goog.style"], false);
goog.addDependency("graphics/element.js", ["goog.graphics.Element"], ["goog.asserts", "goog.events", "goog.events.EventTarget", "goog.events.Listenable", "goog.graphics.AffineTransform", "goog.math"], false);
goog.addDependency("graphics/ellipseelement.js", ["goog.graphics.EllipseElement"], ["goog.graphics.StrokeAndFillElement"], false);
goog.addDependency("graphics/ext/coordinates.js", ["goog.graphics.ext.coordinates"], ["goog.string"], false);
goog.addDependency("graphics/ext/element.js", ["goog.graphics.ext.Element"], ["goog.events.EventTarget", "goog.functions", "goog.graphics.ext.coordinates"], false);
goog.addDependency("graphics/ext/ellipse.js", ["goog.graphics.ext.Ellipse"], ["goog.graphics.ext.StrokeAndFillElement"], false);
goog.addDependency("graphics/ext/ext.js", ["goog.graphics.ext"], ["goog.graphics.ext.Ellipse", "goog.graphics.ext.Graphics", "goog.graphics.ext.Group", "goog.graphics.ext.Image", "goog.graphics.ext.Rectangle", "goog.graphics.ext.Shape", "goog.graphics.ext.coordinates"], false);
goog.addDependency("graphics/ext/graphics.js", ["goog.graphics.ext.Graphics"], ["goog.events", "goog.events.EventType", "goog.graphics", "goog.graphics.ext.Group"], false);
goog.addDependency("graphics/ext/group.js", ["goog.graphics.ext.Group"], ["goog.array", "goog.graphics.ext.Element"], false);
goog.addDependency("graphics/ext/image.js", ["goog.graphics.ext.Image"], ["goog.graphics.ext.Element"], false);
goog.addDependency("graphics/ext/path.js", ["goog.graphics.ext.Path"], ["goog.graphics.AffineTransform", "goog.graphics.Path", "goog.math.Rect"], false);
goog.addDependency("graphics/ext/rectangle.js", ["goog.graphics.ext.Rectangle"], ["goog.graphics.ext.StrokeAndFillElement"], false);
goog.addDependency("graphics/ext/shape.js", ["goog.graphics.ext.Shape"], ["goog.graphics.ext.StrokeAndFillElement"], false);
goog.addDependency("graphics/ext/strokeandfillelement.js", ["goog.graphics.ext.StrokeAndFillElement"], ["goog.graphics.ext.Element"], false);
goog.addDependency("graphics/fill.js", ["goog.graphics.Fill"], [], false);
goog.addDependency("graphics/font.js", ["goog.graphics.Font"], [], false);
goog.addDependency("graphics/graphics.js", ["goog.graphics"], ["goog.dom", "goog.graphics.CanvasGraphics", "goog.graphics.SvgGraphics", "goog.graphics.VmlGraphics", "goog.userAgent"], false);
goog.addDependency("graphics/groupelement.js", ["goog.graphics.GroupElement"], ["goog.graphics.Element"], false);
goog.addDependency("graphics/imageelement.js", ["goog.graphics.ImageElement"], ["goog.graphics.Element"], false);
goog.addDependency("graphics/lineargradient.js", ["goog.graphics.LinearGradient"], ["goog.asserts", "goog.graphics.Fill"], false);
goog.addDependency("graphics/path.js", ["goog.graphics.Path", "goog.graphics.Path.Segment"], ["goog.array", "goog.math"], false);
goog.addDependency("graphics/pathelement.js", ["goog.graphics.PathElement"], ["goog.graphics.StrokeAndFillElement"], false);
goog.addDependency("graphics/paths.js", ["goog.graphics.paths"], ["goog.graphics.Path", "goog.math.Coordinate"], false);
goog.addDependency("graphics/rectelement.js", ["goog.graphics.RectElement"], ["goog.graphics.StrokeAndFillElement"], false);
goog.addDependency("graphics/solidfill.js", ["goog.graphics.SolidFill"], ["goog.graphics.Fill"], false);
goog.addDependency("graphics/stroke.js", ["goog.graphics.Stroke"], [], false);
goog.addDependency("graphics/strokeandfillelement.js", ["goog.graphics.StrokeAndFillElement"], ["goog.graphics.Element"], false);
goog.addDependency("graphics/svgelement.js", ["goog.graphics.SvgEllipseElement", "goog.graphics.SvgGroupElement", "goog.graphics.SvgImageElement", "goog.graphics.SvgPathElement", "goog.graphics.SvgRectElement", "goog.graphics.SvgTextElement"], ["goog.dom", "goog.graphics.EllipseElement", "goog.graphics.GroupElement", "goog.graphics.ImageElement", "goog.graphics.PathElement", "goog.graphics.RectElement", "goog.graphics.TextElement"], false);
goog.addDependency("graphics/svggraphics.js", ["goog.graphics.SvgGraphics"], ["goog.Timer", "goog.dom", "goog.events.EventHandler", "goog.events.EventType", "goog.graphics.AbstractGraphics", "goog.graphics.LinearGradient", "goog.graphics.Path", "goog.graphics.SolidFill", "goog.graphics.Stroke", "goog.graphics.SvgEllipseElement", "goog.graphics.SvgGroupElement", "goog.graphics.SvgImageElement", "goog.graphics.SvgPathElement", "goog.graphics.SvgRectElement", "goog.graphics.SvgTextElement", "goog.math", 
"goog.math.Size", "goog.style", "goog.userAgent"], false);
goog.addDependency("graphics/textelement.js", ["goog.graphics.TextElement"], ["goog.graphics.StrokeAndFillElement"], false);
goog.addDependency("graphics/vmlelement.js", ["goog.graphics.VmlEllipseElement", "goog.graphics.VmlGroupElement", "goog.graphics.VmlImageElement", "goog.graphics.VmlPathElement", "goog.graphics.VmlRectElement", "goog.graphics.VmlTextElement"], ["goog.dom", "goog.graphics.EllipseElement", "goog.graphics.GroupElement", "goog.graphics.ImageElement", "goog.graphics.PathElement", "goog.graphics.RectElement", "goog.graphics.TextElement"], false);
goog.addDependency("graphics/vmlgraphics.js", ["goog.graphics.VmlGraphics"], ["goog.array", "goog.dom.TagName", "goog.dom.safe", "goog.events", "goog.events.EventHandler", "goog.events.EventType", "goog.graphics.AbstractGraphics", "goog.graphics.LinearGradient", "goog.graphics.Path", "goog.graphics.SolidFill", "goog.graphics.VmlEllipseElement", "goog.graphics.VmlGroupElement", "goog.graphics.VmlImageElement", "goog.graphics.VmlPathElement", "goog.graphics.VmlRectElement", "goog.graphics.VmlTextElement", 
"goog.html.uncheckedconversions", "goog.math", "goog.math.Size", "goog.string", "goog.string.Const", "goog.style"], false);
goog.addDependency("history/event.js", ["goog.history.Event"], ["goog.events.Event", "goog.history.EventType"], false);
goog.addDependency("history/eventtype.js", ["goog.history.EventType"], [], false);
goog.addDependency("history/history.js", ["goog.History", "goog.History.Event", "goog.History.EventType"], ["goog.Timer", "goog.asserts", "goog.dom", "goog.dom.InputType", "goog.dom.safe", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.history.Event", "goog.history.EventType", "goog.html.SafeHtml", "goog.html.TrustedResourceUrl", "goog.html.legacyconversions", "goog.labs.userAgent.device", "goog.memoize", "goog.string", "goog.string.Const", 
"goog.userAgent"], false);
goog.addDependency("history/history_test.js", ["goog.HistoryTest"], ["goog.History", "goog.dispose", "goog.dom", "goog.html.TrustedResourceUrl", "goog.string.Const", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("history/html5history.js", ["goog.history.Html5History", "goog.history.Html5History.TokenTransformer"], ["goog.asserts", "goog.events", "goog.events.EventTarget", "goog.events.EventType", "goog.history.Event"], false);
goog.addDependency("history/html5history_test.js", ["goog.history.Html5HistoryTest"], ["goog.history.Html5History", "goog.testing.MockControl", "goog.testing.jsunit", "goog.testing.mockmatchers"], false);
goog.addDependency("html/flash.js", ["goog.html.flash"], ["goog.asserts", "goog.html.SafeHtml"], false);
goog.addDependency("html/flash_test.js", ["goog.html.flashTest"], ["goog.html.SafeHtml", "goog.html.TrustedResourceUrl", "goog.html.flash", "goog.string.Const", "goog.testing.jsunit"], false);
goog.addDependency("html/legacyconversions.js", ["goog.html.legacyconversions"], ["goog.html.SafeHtml", "goog.html.SafeStyle", "goog.html.SafeUrl", "goog.html.TrustedResourceUrl"], false);
goog.addDependency("html/legacyconversions_test.js", ["goog.html.legacyconversionsTest"], ["goog.html.SafeHtml", "goog.html.SafeUrl", "goog.html.TrustedResourceUrl", "goog.html.legacyconversions", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("html/safehtml.js", ["goog.html.SafeHtml"], ["goog.array", "goog.asserts", "goog.dom.TagName", "goog.dom.tags", "goog.html.SafeStyle", "goog.html.SafeStyleSheet", "goog.html.SafeUrl", "goog.html.TrustedResourceUrl", "goog.i18n.bidi.Dir", "goog.i18n.bidi.DirectionalString", "goog.object", "goog.string", "goog.string.Const", "goog.string.TypedString"], false);
goog.addDependency("html/safehtml_test.js", ["goog.html.safeHtmlTest"], ["goog.html.SafeHtml", "goog.html.SafeStyle", "goog.html.SafeStyleSheet", "goog.html.SafeUrl", "goog.html.TrustedResourceUrl", "goog.html.testing", "goog.i18n.bidi.Dir", "goog.string.Const", "goog.testing.jsunit"], false);
goog.addDependency("html/safescript.js", ["goog.html.SafeScript"], ["goog.asserts", "goog.string.Const", "goog.string.TypedString"], false);
goog.addDependency("html/safescript_test.js", ["goog.html.safeScriptTest"], ["goog.html.SafeScript", "goog.string.Const", "goog.testing.jsunit"], false);
goog.addDependency("html/safestyle.js", ["goog.html.SafeStyle"], ["goog.array", "goog.asserts", "goog.string", "goog.string.Const", "goog.string.TypedString"], false);
goog.addDependency("html/safestyle_test.js", ["goog.html.safeStyleTest"], ["goog.html.SafeStyle", "goog.string.Const", "goog.testing.jsunit"], false);
goog.addDependency("html/safestylesheet.js", ["goog.html.SafeStyleSheet"], ["goog.array", "goog.asserts", "goog.string", "goog.string.Const", "goog.string.TypedString"], false);
goog.addDependency("html/safestylesheet_test.js", ["goog.html.safeStyleSheetTest"], ["goog.html.SafeStyleSheet", "goog.string", "goog.string.Const", "goog.testing.jsunit"], false);
goog.addDependency("html/safeurl.js", ["goog.html.SafeUrl"], ["goog.asserts", "goog.fs.url", "goog.i18n.bidi.Dir", "goog.i18n.bidi.DirectionalString", "goog.string.Const", "goog.string.TypedString"], false);
goog.addDependency("html/safeurl_test.js", ["goog.html.safeUrlTest"], ["goog.html.SafeUrl", "goog.i18n.bidi.Dir", "goog.string.Const", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("html/silverlight.js", ["goog.html.silverlight"], ["goog.html.SafeHtml", "goog.html.TrustedResourceUrl", "goog.html.flash", "goog.string.Const"], false);
goog.addDependency("html/silverlight_test.js", ["goog.html.silverlightTest"], ["goog.html.SafeHtml", "goog.html.TrustedResourceUrl", "goog.html.silverlight", "goog.string.Const", "goog.testing.jsunit"], false);
goog.addDependency("html/testing.js", ["goog.html.testing"], ["goog.html.SafeHtml", "goog.html.SafeScript", "goog.html.SafeStyle", "goog.html.SafeStyleSheet", "goog.html.SafeUrl", "goog.html.TrustedResourceUrl"], false);
goog.addDependency("html/trustedresourceurl.js", ["goog.html.TrustedResourceUrl"], ["goog.asserts", "goog.i18n.bidi.Dir", "goog.i18n.bidi.DirectionalString", "goog.string.Const", "goog.string.TypedString"], false);
goog.addDependency("html/trustedresourceurl_test.js", ["goog.html.trustedResourceUrlTest"], ["goog.html.TrustedResourceUrl", "goog.i18n.bidi.Dir", "goog.string.Const", "goog.testing.jsunit"], false);
goog.addDependency("html/uncheckedconversions.js", ["goog.html.uncheckedconversions"], ["goog.asserts", "goog.html.SafeHtml", "goog.html.SafeScript", "goog.html.SafeStyle", "goog.html.SafeStyleSheet", "goog.html.SafeUrl", "goog.html.TrustedResourceUrl", "goog.string", "goog.string.Const"], false);
goog.addDependency("html/uncheckedconversions_test.js", ["goog.html.uncheckedconversionsTest"], ["goog.html.SafeHtml", "goog.html.SafeScript", "goog.html.SafeStyle", "goog.html.SafeStyleSheet", "goog.html.SafeUrl", "goog.html.TrustedResourceUrl", "goog.html.uncheckedconversions", "goog.i18n.bidi.Dir", "goog.string.Const", "goog.testing.jsunit"], false);
goog.addDependency("html/utils.js", ["goog.html.utils"], ["goog.string"], false);
goog.addDependency("html/utils_test.js", ["goog.html.UtilsTest"], ["goog.array", "goog.dom.TagName", "goog.html.utils", "goog.object", "goog.testing.jsunit"], false);
goog.addDependency("i18n/bidi.js", ["goog.i18n.bidi", "goog.i18n.bidi.Dir", "goog.i18n.bidi.DirectionalString", "goog.i18n.bidi.Format"], [], false);
goog.addDependency("i18n/bidi_test.js", ["goog.i18n.bidiTest"], ["goog.i18n.bidi", "goog.i18n.bidi.Dir", "goog.testing.jsunit"], false);
goog.addDependency("i18n/bidiformatter.js", ["goog.i18n.BidiFormatter"], ["goog.html.SafeHtml", "goog.html.legacyconversions", "goog.i18n.bidi", "goog.i18n.bidi.Dir", "goog.i18n.bidi.Format"], false);
goog.addDependency("i18n/bidiformatter_test.js", ["goog.i18n.BidiFormatterTest"], ["goog.html.SafeHtml", "goog.i18n.BidiFormatter", "goog.i18n.bidi.Dir", "goog.i18n.bidi.Format", "goog.testing.jsunit"], false);
goog.addDependency("i18n/charlistdecompressor.js", ["goog.i18n.CharListDecompressor"], ["goog.array", "goog.i18n.uChar"], false);
goog.addDependency("i18n/charlistdecompressor_test.js", ["goog.i18n.CharListDecompressorTest"], ["goog.i18n.CharListDecompressor", "goog.testing.jsunit"], false);
goog.addDependency("i18n/charpickerdata.js", ["goog.i18n.CharPickerData"], [], false);
goog.addDependency("i18n/collation.js", ["goog.i18n.collation"], [], false);
goog.addDependency("i18n/collation_test.js", ["goog.i18n.collationTest"], ["goog.i18n.collation", "goog.testing.ExpectedFailures", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("i18n/compactnumberformatsymbols.js", ["goog.i18n.CompactNumberFormatSymbols", "goog.i18n.CompactNumberFormatSymbols_af", "goog.i18n.CompactNumberFormatSymbols_af_ZA", "goog.i18n.CompactNumberFormatSymbols_am", "goog.i18n.CompactNumberFormatSymbols_am_ET", "goog.i18n.CompactNumberFormatSymbols_ar", "goog.i18n.CompactNumberFormatSymbols_ar_001", "goog.i18n.CompactNumberFormatSymbols_ar_EG", "goog.i18n.CompactNumberFormatSymbols_az", "goog.i18n.CompactNumberFormatSymbols_az_Latn", 
"goog.i18n.CompactNumberFormatSymbols_az_Latn_AZ", "goog.i18n.CompactNumberFormatSymbols_bg", "goog.i18n.CompactNumberFormatSymbols_bg_BG", "goog.i18n.CompactNumberFormatSymbols_bn", "goog.i18n.CompactNumberFormatSymbols_bn_BD", "goog.i18n.CompactNumberFormatSymbols_br", "goog.i18n.CompactNumberFormatSymbols_br_FR", "goog.i18n.CompactNumberFormatSymbols_ca", "goog.i18n.CompactNumberFormatSymbols_ca_AD", "goog.i18n.CompactNumberFormatSymbols_ca_ES", "goog.i18n.CompactNumberFormatSymbols_ca_ES_VALENCIA", 
"goog.i18n.CompactNumberFormatSymbols_ca_FR", "goog.i18n.CompactNumberFormatSymbols_ca_IT", "goog.i18n.CompactNumberFormatSymbols_chr", "goog.i18n.CompactNumberFormatSymbols_chr_US", "goog.i18n.CompactNumberFormatSymbols_cs", "goog.i18n.CompactNumberFormatSymbols_cs_CZ", "goog.i18n.CompactNumberFormatSymbols_cy", "goog.i18n.CompactNumberFormatSymbols_cy_GB", "goog.i18n.CompactNumberFormatSymbols_da", "goog.i18n.CompactNumberFormatSymbols_da_DK", "goog.i18n.CompactNumberFormatSymbols_da_GL", "goog.i18n.CompactNumberFormatSymbols_de", 
"goog.i18n.CompactNumberFormatSymbols_de_AT", "goog.i18n.CompactNumberFormatSymbols_de_BE", "goog.i18n.CompactNumberFormatSymbols_de_CH", "goog.i18n.CompactNumberFormatSymbols_de_DE", "goog.i18n.CompactNumberFormatSymbols_de_LU", "goog.i18n.CompactNumberFormatSymbols_el", "goog.i18n.CompactNumberFormatSymbols_el_CY", "goog.i18n.CompactNumberFormatSymbols_el_GR", "goog.i18n.CompactNumberFormatSymbols_en", "goog.i18n.CompactNumberFormatSymbols_en_001", "goog.i18n.CompactNumberFormatSymbols_en_AS", 
"goog.i18n.CompactNumberFormatSymbols_en_AU", "goog.i18n.CompactNumberFormatSymbols_en_DG", "goog.i18n.CompactNumberFormatSymbols_en_FM", "goog.i18n.CompactNumberFormatSymbols_en_GB", "goog.i18n.CompactNumberFormatSymbols_en_GU", "goog.i18n.CompactNumberFormatSymbols_en_IE", "goog.i18n.CompactNumberFormatSymbols_en_IN", "goog.i18n.CompactNumberFormatSymbols_en_IO", "goog.i18n.CompactNumberFormatSymbols_en_MH", "goog.i18n.CompactNumberFormatSymbols_en_MP", "goog.i18n.CompactNumberFormatSymbols_en_PR", 
"goog.i18n.CompactNumberFormatSymbols_en_PW", "goog.i18n.CompactNumberFormatSymbols_en_SG", "goog.i18n.CompactNumberFormatSymbols_en_TC", "goog.i18n.CompactNumberFormatSymbols_en_UM", "goog.i18n.CompactNumberFormatSymbols_en_US", "goog.i18n.CompactNumberFormatSymbols_en_VG", "goog.i18n.CompactNumberFormatSymbols_en_VI", "goog.i18n.CompactNumberFormatSymbols_en_ZA", "goog.i18n.CompactNumberFormatSymbols_en_ZW", "goog.i18n.CompactNumberFormatSymbols_es", "goog.i18n.CompactNumberFormatSymbols_es_419", 
"goog.i18n.CompactNumberFormatSymbols_es_EA", "goog.i18n.CompactNumberFormatSymbols_es_ES", "goog.i18n.CompactNumberFormatSymbols_es_IC", "goog.i18n.CompactNumberFormatSymbols_et", "goog.i18n.CompactNumberFormatSymbols_et_EE", "goog.i18n.CompactNumberFormatSymbols_eu", "goog.i18n.CompactNumberFormatSymbols_eu_ES", "goog.i18n.CompactNumberFormatSymbols_fa", "goog.i18n.CompactNumberFormatSymbols_fa_IR", "goog.i18n.CompactNumberFormatSymbols_fi", "goog.i18n.CompactNumberFormatSymbols_fi_FI", "goog.i18n.CompactNumberFormatSymbols_fil", 
"goog.i18n.CompactNumberFormatSymbols_fil_PH", "goog.i18n.CompactNumberFormatSymbols_fr", "goog.i18n.CompactNumberFormatSymbols_fr_BL", "goog.i18n.CompactNumberFormatSymbols_fr_CA", "goog.i18n.CompactNumberFormatSymbols_fr_FR", "goog.i18n.CompactNumberFormatSymbols_fr_GF", "goog.i18n.CompactNumberFormatSymbols_fr_GP", "goog.i18n.CompactNumberFormatSymbols_fr_MC", "goog.i18n.CompactNumberFormatSymbols_fr_MF", "goog.i18n.CompactNumberFormatSymbols_fr_MQ", "goog.i18n.CompactNumberFormatSymbols_fr_PM", 
"goog.i18n.CompactNumberFormatSymbols_fr_RE", "goog.i18n.CompactNumberFormatSymbols_fr_YT", "goog.i18n.CompactNumberFormatSymbols_ga", "goog.i18n.CompactNumberFormatSymbols_ga_IE", "goog.i18n.CompactNumberFormatSymbols_gl", "goog.i18n.CompactNumberFormatSymbols_gl_ES", "goog.i18n.CompactNumberFormatSymbols_gsw", "goog.i18n.CompactNumberFormatSymbols_gsw_CH", "goog.i18n.CompactNumberFormatSymbols_gsw_LI", "goog.i18n.CompactNumberFormatSymbols_gu", "goog.i18n.CompactNumberFormatSymbols_gu_IN", "goog.i18n.CompactNumberFormatSymbols_haw", 
"goog.i18n.CompactNumberFormatSymbols_haw_US", "goog.i18n.CompactNumberFormatSymbols_he", "goog.i18n.CompactNumberFormatSymbols_he_IL", "goog.i18n.CompactNumberFormatSymbols_hi", "goog.i18n.CompactNumberFormatSymbols_hi_IN", "goog.i18n.CompactNumberFormatSymbols_hr", "goog.i18n.CompactNumberFormatSymbols_hr_HR", "goog.i18n.CompactNumberFormatSymbols_hu", "goog.i18n.CompactNumberFormatSymbols_hu_HU", "goog.i18n.CompactNumberFormatSymbols_hy", "goog.i18n.CompactNumberFormatSymbols_hy_AM", "goog.i18n.CompactNumberFormatSymbols_id", 
"goog.i18n.CompactNumberFormatSymbols_id_ID", "goog.i18n.CompactNumberFormatSymbols_in", "goog.i18n.CompactNumberFormatSymbols_is", "goog.i18n.CompactNumberFormatSymbols_is_IS", "goog.i18n.CompactNumberFormatSymbols_it", "goog.i18n.CompactNumberFormatSymbols_it_IT", "goog.i18n.CompactNumberFormatSymbols_it_SM", "goog.i18n.CompactNumberFormatSymbols_iw", "goog.i18n.CompactNumberFormatSymbols_ja", "goog.i18n.CompactNumberFormatSymbols_ja_JP", "goog.i18n.CompactNumberFormatSymbols_ka", "goog.i18n.CompactNumberFormatSymbols_ka_GE", 
"goog.i18n.CompactNumberFormatSymbols_kk", "goog.i18n.CompactNumberFormatSymbols_kk_Cyrl", "goog.i18n.CompactNumberFormatSymbols_kk_Cyrl_KZ", "goog.i18n.CompactNumberFormatSymbols_km", "goog.i18n.CompactNumberFormatSymbols_km_KH", "goog.i18n.CompactNumberFormatSymbols_kn", "goog.i18n.CompactNumberFormatSymbols_kn_IN", "goog.i18n.CompactNumberFormatSymbols_ko", "goog.i18n.CompactNumberFormatSymbols_ko_KR", "goog.i18n.CompactNumberFormatSymbols_ky", "goog.i18n.CompactNumberFormatSymbols_ky_Cyrl", "goog.i18n.CompactNumberFormatSymbols_ky_Cyrl_KG", 
"goog.i18n.CompactNumberFormatSymbols_ln", "goog.i18n.CompactNumberFormatSymbols_ln_CD", "goog.i18n.CompactNumberFormatSymbols_lo", "goog.i18n.CompactNumberFormatSymbols_lo_LA", "goog.i18n.CompactNumberFormatSymbols_lt", "goog.i18n.CompactNumberFormatSymbols_lt_LT", "goog.i18n.CompactNumberFormatSymbols_lv", "goog.i18n.CompactNumberFormatSymbols_lv_LV", "goog.i18n.CompactNumberFormatSymbols_mk", "goog.i18n.CompactNumberFormatSymbols_mk_MK", "goog.i18n.CompactNumberFormatSymbols_ml", "goog.i18n.CompactNumberFormatSymbols_ml_IN", 
"goog.i18n.CompactNumberFormatSymbols_mn", "goog.i18n.CompactNumberFormatSymbols_mn_Cyrl", "goog.i18n.CompactNumberFormatSymbols_mn_Cyrl_MN", "goog.i18n.CompactNumberFormatSymbols_mr", "goog.i18n.CompactNumberFormatSymbols_mr_IN", "goog.i18n.CompactNumberFormatSymbols_ms", "goog.i18n.CompactNumberFormatSymbols_ms_Latn", "goog.i18n.CompactNumberFormatSymbols_ms_Latn_MY", "goog.i18n.CompactNumberFormatSymbols_mt", "goog.i18n.CompactNumberFormatSymbols_mt_MT", "goog.i18n.CompactNumberFormatSymbols_my", 
"goog.i18n.CompactNumberFormatSymbols_my_MM", "goog.i18n.CompactNumberFormatSymbols_nb", "goog.i18n.CompactNumberFormatSymbols_nb_NO", "goog.i18n.CompactNumberFormatSymbols_nb_SJ", "goog.i18n.CompactNumberFormatSymbols_ne", "goog.i18n.CompactNumberFormatSymbols_ne_NP", "goog.i18n.CompactNumberFormatSymbols_nl", "goog.i18n.CompactNumberFormatSymbols_nl_NL", "goog.i18n.CompactNumberFormatSymbols_no", "goog.i18n.CompactNumberFormatSymbols_no_NO", "goog.i18n.CompactNumberFormatSymbols_or", "goog.i18n.CompactNumberFormatSymbols_or_IN", 
"goog.i18n.CompactNumberFormatSymbols_pa", "goog.i18n.CompactNumberFormatSymbols_pa_Guru", "goog.i18n.CompactNumberFormatSymbols_pa_Guru_IN", "goog.i18n.CompactNumberFormatSymbols_pl", "goog.i18n.CompactNumberFormatSymbols_pl_PL", "goog.i18n.CompactNumberFormatSymbols_pt", "goog.i18n.CompactNumberFormatSymbols_pt_BR", "goog.i18n.CompactNumberFormatSymbols_pt_PT", "goog.i18n.CompactNumberFormatSymbols_ro", "goog.i18n.CompactNumberFormatSymbols_ro_RO", "goog.i18n.CompactNumberFormatSymbols_ru", "goog.i18n.CompactNumberFormatSymbols_ru_RU", 
"goog.i18n.CompactNumberFormatSymbols_si", "goog.i18n.CompactNumberFormatSymbols_si_LK", "goog.i18n.CompactNumberFormatSymbols_sk", "goog.i18n.CompactNumberFormatSymbols_sk_SK", "goog.i18n.CompactNumberFormatSymbols_sl", "goog.i18n.CompactNumberFormatSymbols_sl_SI", "goog.i18n.CompactNumberFormatSymbols_sq", "goog.i18n.CompactNumberFormatSymbols_sq_AL", "goog.i18n.CompactNumberFormatSymbols_sr", "goog.i18n.CompactNumberFormatSymbols_sr_Cyrl", "goog.i18n.CompactNumberFormatSymbols_sr_Cyrl_RS", "goog.i18n.CompactNumberFormatSymbols_sv", 
"goog.i18n.CompactNumberFormatSymbols_sv_SE", "goog.i18n.CompactNumberFormatSymbols_sw", "goog.i18n.CompactNumberFormatSymbols_sw_TZ", "goog.i18n.CompactNumberFormatSymbols_ta", "goog.i18n.CompactNumberFormatSymbols_ta_IN", "goog.i18n.CompactNumberFormatSymbols_te", "goog.i18n.CompactNumberFormatSymbols_te_IN", "goog.i18n.CompactNumberFormatSymbols_th", "goog.i18n.CompactNumberFormatSymbols_th_TH", "goog.i18n.CompactNumberFormatSymbols_tl", "goog.i18n.CompactNumberFormatSymbols_tr", "goog.i18n.CompactNumberFormatSymbols_tr_TR", 
"goog.i18n.CompactNumberFormatSymbols_uk", "goog.i18n.CompactNumberFormatSymbols_uk_UA", "goog.i18n.CompactNumberFormatSymbols_ur", "goog.i18n.CompactNumberFormatSymbols_ur_PK", "goog.i18n.CompactNumberFormatSymbols_uz", "goog.i18n.CompactNumberFormatSymbols_uz_Latn", "goog.i18n.CompactNumberFormatSymbols_uz_Latn_UZ", "goog.i18n.CompactNumberFormatSymbols_vi", "goog.i18n.CompactNumberFormatSymbols_vi_VN", "goog.i18n.CompactNumberFormatSymbols_zh", "goog.i18n.CompactNumberFormatSymbols_zh_CN", "goog.i18n.CompactNumberFormatSymbols_zh_HK", 
"goog.i18n.CompactNumberFormatSymbols_zh_Hans", "goog.i18n.CompactNumberFormatSymbols_zh_Hans_CN", "goog.i18n.CompactNumberFormatSymbols_zh_TW", "goog.i18n.CompactNumberFormatSymbols_zu", "goog.i18n.CompactNumberFormatSymbols_zu_ZA"], [], false);
goog.addDependency("i18n/compactnumberformatsymbols_ext.js", ["goog.i18n.CompactNumberFormatSymbolsExt", "goog.i18n.CompactNumberFormatSymbols_af_NA", "goog.i18n.CompactNumberFormatSymbols_agq", "goog.i18n.CompactNumberFormatSymbols_agq_CM", "goog.i18n.CompactNumberFormatSymbols_ak", "goog.i18n.CompactNumberFormatSymbols_ak_GH", "goog.i18n.CompactNumberFormatSymbols_ar_AE", "goog.i18n.CompactNumberFormatSymbols_ar_BH", "goog.i18n.CompactNumberFormatSymbols_ar_DJ", "goog.i18n.CompactNumberFormatSymbols_ar_DZ", 
"goog.i18n.CompactNumberFormatSymbols_ar_EH", "goog.i18n.CompactNumberFormatSymbols_ar_ER", "goog.i18n.CompactNumberFormatSymbols_ar_IL", "goog.i18n.CompactNumberFormatSymbols_ar_IQ", "goog.i18n.CompactNumberFormatSymbols_ar_JO", "goog.i18n.CompactNumberFormatSymbols_ar_KM", "goog.i18n.CompactNumberFormatSymbols_ar_KW", "goog.i18n.CompactNumberFormatSymbols_ar_LB", "goog.i18n.CompactNumberFormatSymbols_ar_LY", "goog.i18n.CompactNumberFormatSymbols_ar_MA", "goog.i18n.CompactNumberFormatSymbols_ar_MR", 
"goog.i18n.CompactNumberFormatSymbols_ar_OM", "goog.i18n.CompactNumberFormatSymbols_ar_PS", "goog.i18n.CompactNumberFormatSymbols_ar_QA", "goog.i18n.CompactNumberFormatSymbols_ar_SA", "goog.i18n.CompactNumberFormatSymbols_ar_SD", "goog.i18n.CompactNumberFormatSymbols_ar_SO", "goog.i18n.CompactNumberFormatSymbols_ar_SS", "goog.i18n.CompactNumberFormatSymbols_ar_SY", "goog.i18n.CompactNumberFormatSymbols_ar_TD", "goog.i18n.CompactNumberFormatSymbols_ar_TN", "goog.i18n.CompactNumberFormatSymbols_ar_YE", 
"goog.i18n.CompactNumberFormatSymbols_as", "goog.i18n.CompactNumberFormatSymbols_as_IN", "goog.i18n.CompactNumberFormatSymbols_asa", "goog.i18n.CompactNumberFormatSymbols_asa_TZ", "goog.i18n.CompactNumberFormatSymbols_ast", "goog.i18n.CompactNumberFormatSymbols_ast_ES", "goog.i18n.CompactNumberFormatSymbols_az_Cyrl", "goog.i18n.CompactNumberFormatSymbols_az_Cyrl_AZ", "goog.i18n.CompactNumberFormatSymbols_bas", "goog.i18n.CompactNumberFormatSymbols_bas_CM", "goog.i18n.CompactNumberFormatSymbols_be", 
"goog.i18n.CompactNumberFormatSymbols_be_BY", "goog.i18n.CompactNumberFormatSymbols_bem", "goog.i18n.CompactNumberFormatSymbols_bem_ZM", "goog.i18n.CompactNumberFormatSymbols_bez", "goog.i18n.CompactNumberFormatSymbols_bez_TZ", "goog.i18n.CompactNumberFormatSymbols_bm", "goog.i18n.CompactNumberFormatSymbols_bm_Latn", "goog.i18n.CompactNumberFormatSymbols_bm_Latn_ML", "goog.i18n.CompactNumberFormatSymbols_bn_IN", "goog.i18n.CompactNumberFormatSymbols_bo", "goog.i18n.CompactNumberFormatSymbols_bo_CN", 
"goog.i18n.CompactNumberFormatSymbols_bo_IN", "goog.i18n.CompactNumberFormatSymbols_brx", "goog.i18n.CompactNumberFormatSymbols_brx_IN", "goog.i18n.CompactNumberFormatSymbols_bs", "goog.i18n.CompactNumberFormatSymbols_bs_Cyrl", "goog.i18n.CompactNumberFormatSymbols_bs_Cyrl_BA", "goog.i18n.CompactNumberFormatSymbols_bs_Latn", "goog.i18n.CompactNumberFormatSymbols_bs_Latn_BA", "goog.i18n.CompactNumberFormatSymbols_cgg", "goog.i18n.CompactNumberFormatSymbols_cgg_UG", "goog.i18n.CompactNumberFormatSymbols_ckb", 
"goog.i18n.CompactNumberFormatSymbols_ckb_Arab", "goog.i18n.CompactNumberFormatSymbols_ckb_Arab_IQ", "goog.i18n.CompactNumberFormatSymbols_ckb_Arab_IR", "goog.i18n.CompactNumberFormatSymbols_ckb_IQ", "goog.i18n.CompactNumberFormatSymbols_ckb_IR", "goog.i18n.CompactNumberFormatSymbols_ckb_Latn", "goog.i18n.CompactNumberFormatSymbols_ckb_Latn_IQ", "goog.i18n.CompactNumberFormatSymbols_dav", "goog.i18n.CompactNumberFormatSymbols_dav_KE", "goog.i18n.CompactNumberFormatSymbols_de_LI", "goog.i18n.CompactNumberFormatSymbols_dje", 
"goog.i18n.CompactNumberFormatSymbols_dje_NE", "goog.i18n.CompactNumberFormatSymbols_dsb", "goog.i18n.CompactNumberFormatSymbols_dsb_DE", "goog.i18n.CompactNumberFormatSymbols_dua", "goog.i18n.CompactNumberFormatSymbols_dua_CM", "goog.i18n.CompactNumberFormatSymbols_dyo", "goog.i18n.CompactNumberFormatSymbols_dyo_SN", "goog.i18n.CompactNumberFormatSymbols_dz", "goog.i18n.CompactNumberFormatSymbols_dz_BT", "goog.i18n.CompactNumberFormatSymbols_ebu", "goog.i18n.CompactNumberFormatSymbols_ebu_KE", "goog.i18n.CompactNumberFormatSymbols_ee", 
"goog.i18n.CompactNumberFormatSymbols_ee_GH", "goog.i18n.CompactNumberFormatSymbols_ee_TG", "goog.i18n.CompactNumberFormatSymbols_en_150", "goog.i18n.CompactNumberFormatSymbols_en_AG", "goog.i18n.CompactNumberFormatSymbols_en_AI", "goog.i18n.CompactNumberFormatSymbols_en_BB", "goog.i18n.CompactNumberFormatSymbols_en_BE", "goog.i18n.CompactNumberFormatSymbols_en_BM", "goog.i18n.CompactNumberFormatSymbols_en_BS", "goog.i18n.CompactNumberFormatSymbols_en_BW", "goog.i18n.CompactNumberFormatSymbols_en_BZ", 
"goog.i18n.CompactNumberFormatSymbols_en_CA", "goog.i18n.CompactNumberFormatSymbols_en_CC", "goog.i18n.CompactNumberFormatSymbols_en_CK", "goog.i18n.CompactNumberFormatSymbols_en_CM", "goog.i18n.CompactNumberFormatSymbols_en_CX", "goog.i18n.CompactNumberFormatSymbols_en_DM", "goog.i18n.CompactNumberFormatSymbols_en_ER", "goog.i18n.CompactNumberFormatSymbols_en_FJ", "goog.i18n.CompactNumberFormatSymbols_en_FK", "goog.i18n.CompactNumberFormatSymbols_en_GD", "goog.i18n.CompactNumberFormatSymbols_en_GG", 
"goog.i18n.CompactNumberFormatSymbols_en_GH", "goog.i18n.CompactNumberFormatSymbols_en_GI", "goog.i18n.CompactNumberFormatSymbols_en_GM", "goog.i18n.CompactNumberFormatSymbols_en_GY", "goog.i18n.CompactNumberFormatSymbols_en_HK", "goog.i18n.CompactNumberFormatSymbols_en_IM", "goog.i18n.CompactNumberFormatSymbols_en_JE", "goog.i18n.CompactNumberFormatSymbols_en_JM", "goog.i18n.CompactNumberFormatSymbols_en_KE", "goog.i18n.CompactNumberFormatSymbols_en_KI", "goog.i18n.CompactNumberFormatSymbols_en_KN", 
"goog.i18n.CompactNumberFormatSymbols_en_KY", "goog.i18n.CompactNumberFormatSymbols_en_LC", "goog.i18n.CompactNumberFormatSymbols_en_LR", "goog.i18n.CompactNumberFormatSymbols_en_LS", "goog.i18n.CompactNumberFormatSymbols_en_MG", "goog.i18n.CompactNumberFormatSymbols_en_MO", "goog.i18n.CompactNumberFormatSymbols_en_MS", "goog.i18n.CompactNumberFormatSymbols_en_MT", "goog.i18n.CompactNumberFormatSymbols_en_MU", "goog.i18n.CompactNumberFormatSymbols_en_MW", "goog.i18n.CompactNumberFormatSymbols_en_MY", 
"goog.i18n.CompactNumberFormatSymbols_en_NA", "goog.i18n.CompactNumberFormatSymbols_en_NF", "goog.i18n.CompactNumberFormatSymbols_en_NG", "goog.i18n.CompactNumberFormatSymbols_en_NR", "goog.i18n.CompactNumberFormatSymbols_en_NU", "goog.i18n.CompactNumberFormatSymbols_en_NZ", "goog.i18n.CompactNumberFormatSymbols_en_PG", "goog.i18n.CompactNumberFormatSymbols_en_PH", "goog.i18n.CompactNumberFormatSymbols_en_PK", "goog.i18n.CompactNumberFormatSymbols_en_PN", "goog.i18n.CompactNumberFormatSymbols_en_RW", 
"goog.i18n.CompactNumberFormatSymbols_en_SB", "goog.i18n.CompactNumberFormatSymbols_en_SC", "goog.i18n.CompactNumberFormatSymbols_en_SD", "goog.i18n.CompactNumberFormatSymbols_en_SH", "goog.i18n.CompactNumberFormatSymbols_en_SL", "goog.i18n.CompactNumberFormatSymbols_en_SS", "goog.i18n.CompactNumberFormatSymbols_en_SX", "goog.i18n.CompactNumberFormatSymbols_en_SZ", "goog.i18n.CompactNumberFormatSymbols_en_TK", "goog.i18n.CompactNumberFormatSymbols_en_TO", "goog.i18n.CompactNumberFormatSymbols_en_TT", 
"goog.i18n.CompactNumberFormatSymbols_en_TV", "goog.i18n.CompactNumberFormatSymbols_en_TZ", "goog.i18n.CompactNumberFormatSymbols_en_UG", "goog.i18n.CompactNumberFormatSymbols_en_VC", "goog.i18n.CompactNumberFormatSymbols_en_VU", "goog.i18n.CompactNumberFormatSymbols_en_WS", "goog.i18n.CompactNumberFormatSymbols_en_ZM", "goog.i18n.CompactNumberFormatSymbols_eo", "goog.i18n.CompactNumberFormatSymbols_eo_001", "goog.i18n.CompactNumberFormatSymbols_es_AR", "goog.i18n.CompactNumberFormatSymbols_es_BO", 
"goog.i18n.CompactNumberFormatSymbols_es_CL", "goog.i18n.CompactNumberFormatSymbols_es_CO", "goog.i18n.CompactNumberFormatSymbols_es_CR", "goog.i18n.CompactNumberFormatSymbols_es_CU", "goog.i18n.CompactNumberFormatSymbols_es_DO", "goog.i18n.CompactNumberFormatSymbols_es_EC", "goog.i18n.CompactNumberFormatSymbols_es_GQ", "goog.i18n.CompactNumberFormatSymbols_es_GT", "goog.i18n.CompactNumberFormatSymbols_es_HN", "goog.i18n.CompactNumberFormatSymbols_es_MX", "goog.i18n.CompactNumberFormatSymbols_es_NI", 
"goog.i18n.CompactNumberFormatSymbols_es_PA", "goog.i18n.CompactNumberFormatSymbols_es_PE", "goog.i18n.CompactNumberFormatSymbols_es_PH", "goog.i18n.CompactNumberFormatSymbols_es_PR", "goog.i18n.CompactNumberFormatSymbols_es_PY", "goog.i18n.CompactNumberFormatSymbols_es_SV", "goog.i18n.CompactNumberFormatSymbols_es_US", "goog.i18n.CompactNumberFormatSymbols_es_UY", "goog.i18n.CompactNumberFormatSymbols_es_VE", "goog.i18n.CompactNumberFormatSymbols_ewo", "goog.i18n.CompactNumberFormatSymbols_ewo_CM", 
"goog.i18n.CompactNumberFormatSymbols_fa_AF", "goog.i18n.CompactNumberFormatSymbols_ff", "goog.i18n.CompactNumberFormatSymbols_ff_CM", "goog.i18n.CompactNumberFormatSymbols_ff_GN", "goog.i18n.CompactNumberFormatSymbols_ff_MR", "goog.i18n.CompactNumberFormatSymbols_ff_SN", "goog.i18n.CompactNumberFormatSymbols_fo", "goog.i18n.CompactNumberFormatSymbols_fo_FO", "goog.i18n.CompactNumberFormatSymbols_fr_BE", "goog.i18n.CompactNumberFormatSymbols_fr_BF", "goog.i18n.CompactNumberFormatSymbols_fr_BI", "goog.i18n.CompactNumberFormatSymbols_fr_BJ", 
"goog.i18n.CompactNumberFormatSymbols_fr_CD", "goog.i18n.CompactNumberFormatSymbols_fr_CF", "goog.i18n.CompactNumberFormatSymbols_fr_CG", "goog.i18n.CompactNumberFormatSymbols_fr_CH", "goog.i18n.CompactNumberFormatSymbols_fr_CI", "goog.i18n.CompactNumberFormatSymbols_fr_CM", "goog.i18n.CompactNumberFormatSymbols_fr_DJ", "goog.i18n.CompactNumberFormatSymbols_fr_DZ", "goog.i18n.CompactNumberFormatSymbols_fr_GA", "goog.i18n.CompactNumberFormatSymbols_fr_GN", "goog.i18n.CompactNumberFormatSymbols_fr_GQ", 
"goog.i18n.CompactNumberFormatSymbols_fr_HT", "goog.i18n.CompactNumberFormatSymbols_fr_KM", "goog.i18n.CompactNumberFormatSymbols_fr_LU", "goog.i18n.CompactNumberFormatSymbols_fr_MA", "goog.i18n.CompactNumberFormatSymbols_fr_MG", "goog.i18n.CompactNumberFormatSymbols_fr_ML", "goog.i18n.CompactNumberFormatSymbols_fr_MR", "goog.i18n.CompactNumberFormatSymbols_fr_MU", "goog.i18n.CompactNumberFormatSymbols_fr_NC", "goog.i18n.CompactNumberFormatSymbols_fr_NE", "goog.i18n.CompactNumberFormatSymbols_fr_PF", 
"goog.i18n.CompactNumberFormatSymbols_fr_RW", "goog.i18n.CompactNumberFormatSymbols_fr_SC", "goog.i18n.CompactNumberFormatSymbols_fr_SN", "goog.i18n.CompactNumberFormatSymbols_fr_SY", "goog.i18n.CompactNumberFormatSymbols_fr_TD", "goog.i18n.CompactNumberFormatSymbols_fr_TG", "goog.i18n.CompactNumberFormatSymbols_fr_TN", "goog.i18n.CompactNumberFormatSymbols_fr_VU", "goog.i18n.CompactNumberFormatSymbols_fr_WF", "goog.i18n.CompactNumberFormatSymbols_fur", "goog.i18n.CompactNumberFormatSymbols_fur_IT", 
"goog.i18n.CompactNumberFormatSymbols_fy", "goog.i18n.CompactNumberFormatSymbols_fy_NL", "goog.i18n.CompactNumberFormatSymbols_gd", "goog.i18n.CompactNumberFormatSymbols_gd_GB", "goog.i18n.CompactNumberFormatSymbols_gsw_FR", "goog.i18n.CompactNumberFormatSymbols_guz", "goog.i18n.CompactNumberFormatSymbols_guz_KE", "goog.i18n.CompactNumberFormatSymbols_gv", "goog.i18n.CompactNumberFormatSymbols_gv_IM", "goog.i18n.CompactNumberFormatSymbols_ha", "goog.i18n.CompactNumberFormatSymbols_ha_Latn", "goog.i18n.CompactNumberFormatSymbols_ha_Latn_GH", 
"goog.i18n.CompactNumberFormatSymbols_ha_Latn_NE", "goog.i18n.CompactNumberFormatSymbols_ha_Latn_NG", "goog.i18n.CompactNumberFormatSymbols_hr_BA", "goog.i18n.CompactNumberFormatSymbols_hsb", "goog.i18n.CompactNumberFormatSymbols_hsb_DE", "goog.i18n.CompactNumberFormatSymbols_ig", "goog.i18n.CompactNumberFormatSymbols_ig_NG", "goog.i18n.CompactNumberFormatSymbols_ii", "goog.i18n.CompactNumberFormatSymbols_ii_CN", "goog.i18n.CompactNumberFormatSymbols_it_CH", "goog.i18n.CompactNumberFormatSymbols_jgo", 
"goog.i18n.CompactNumberFormatSymbols_jgo_CM", "goog.i18n.CompactNumberFormatSymbols_jmc", "goog.i18n.CompactNumberFormatSymbols_jmc_TZ", "goog.i18n.CompactNumberFormatSymbols_kab", "goog.i18n.CompactNumberFormatSymbols_kab_DZ", "goog.i18n.CompactNumberFormatSymbols_kam", "goog.i18n.CompactNumberFormatSymbols_kam_KE", "goog.i18n.CompactNumberFormatSymbols_kde", "goog.i18n.CompactNumberFormatSymbols_kde_TZ", "goog.i18n.CompactNumberFormatSymbols_kea", "goog.i18n.CompactNumberFormatSymbols_kea_CV", 
"goog.i18n.CompactNumberFormatSymbols_khq", "goog.i18n.CompactNumberFormatSymbols_khq_ML", "goog.i18n.CompactNumberFormatSymbols_ki", "goog.i18n.CompactNumberFormatSymbols_ki_KE", "goog.i18n.CompactNumberFormatSymbols_kkj", "goog.i18n.CompactNumberFormatSymbols_kkj_CM", "goog.i18n.CompactNumberFormatSymbols_kl", "goog.i18n.CompactNumberFormatSymbols_kl_GL", "goog.i18n.CompactNumberFormatSymbols_kln", "goog.i18n.CompactNumberFormatSymbols_kln_KE", "goog.i18n.CompactNumberFormatSymbols_ko_KP", "goog.i18n.CompactNumberFormatSymbols_kok", 
"goog.i18n.CompactNumberFormatSymbols_kok_IN", "goog.i18n.CompactNumberFormatSymbols_ks", "goog.i18n.CompactNumberFormatSymbols_ks_Arab", "goog.i18n.CompactNumberFormatSymbols_ks_Arab_IN", "goog.i18n.CompactNumberFormatSymbols_ksb", "goog.i18n.CompactNumberFormatSymbols_ksb_TZ", "goog.i18n.CompactNumberFormatSymbols_ksf", "goog.i18n.CompactNumberFormatSymbols_ksf_CM", "goog.i18n.CompactNumberFormatSymbols_ksh", "goog.i18n.CompactNumberFormatSymbols_ksh_DE", "goog.i18n.CompactNumberFormatSymbols_kw", 
"goog.i18n.CompactNumberFormatSymbols_kw_GB", "goog.i18n.CompactNumberFormatSymbols_lag", "goog.i18n.CompactNumberFormatSymbols_lag_TZ", "goog.i18n.CompactNumberFormatSymbols_lb", "goog.i18n.CompactNumberFormatSymbols_lb_LU", "goog.i18n.CompactNumberFormatSymbols_lg", "goog.i18n.CompactNumberFormatSymbols_lg_UG", "goog.i18n.CompactNumberFormatSymbols_lkt", "goog.i18n.CompactNumberFormatSymbols_lkt_US", "goog.i18n.CompactNumberFormatSymbols_ln_AO", "goog.i18n.CompactNumberFormatSymbols_ln_CF", "goog.i18n.CompactNumberFormatSymbols_ln_CG", 
"goog.i18n.CompactNumberFormatSymbols_lu", "goog.i18n.CompactNumberFormatSymbols_lu_CD", "goog.i18n.CompactNumberFormatSymbols_luo", "goog.i18n.CompactNumberFormatSymbols_luo_KE", "goog.i18n.CompactNumberFormatSymbols_luy", "goog.i18n.CompactNumberFormatSymbols_luy_KE", "goog.i18n.CompactNumberFormatSymbols_mas", "goog.i18n.CompactNumberFormatSymbols_mas_KE", "goog.i18n.CompactNumberFormatSymbols_mas_TZ", "goog.i18n.CompactNumberFormatSymbols_mer", "goog.i18n.CompactNumberFormatSymbols_mer_KE", "goog.i18n.CompactNumberFormatSymbols_mfe", 
"goog.i18n.CompactNumberFormatSymbols_mfe_MU", "goog.i18n.CompactNumberFormatSymbols_mg", "goog.i18n.CompactNumberFormatSymbols_mg_MG", "goog.i18n.CompactNumberFormatSymbols_mgh", "goog.i18n.CompactNumberFormatSymbols_mgh_MZ", "goog.i18n.CompactNumberFormatSymbols_mgo", "goog.i18n.CompactNumberFormatSymbols_mgo_CM", "goog.i18n.CompactNumberFormatSymbols_ms_Latn_BN", "goog.i18n.CompactNumberFormatSymbols_ms_Latn_SG", "goog.i18n.CompactNumberFormatSymbols_mua", "goog.i18n.CompactNumberFormatSymbols_mua_CM", 
"goog.i18n.CompactNumberFormatSymbols_naq", "goog.i18n.CompactNumberFormatSymbols_naq_NA", "goog.i18n.CompactNumberFormatSymbols_nd", "goog.i18n.CompactNumberFormatSymbols_nd_ZW", "goog.i18n.CompactNumberFormatSymbols_ne_IN", "goog.i18n.CompactNumberFormatSymbols_nl_AW", "goog.i18n.CompactNumberFormatSymbols_nl_BE", "goog.i18n.CompactNumberFormatSymbols_nl_BQ", "goog.i18n.CompactNumberFormatSymbols_nl_CW", "goog.i18n.CompactNumberFormatSymbols_nl_SR", "goog.i18n.CompactNumberFormatSymbols_nl_SX", 
"goog.i18n.CompactNumberFormatSymbols_nmg", "goog.i18n.CompactNumberFormatSymbols_nmg_CM", "goog.i18n.CompactNumberFormatSymbols_nn", "goog.i18n.CompactNumberFormatSymbols_nn_NO", "goog.i18n.CompactNumberFormatSymbols_nnh", "goog.i18n.CompactNumberFormatSymbols_nnh_CM", "goog.i18n.CompactNumberFormatSymbols_nus", "goog.i18n.CompactNumberFormatSymbols_nus_SD", "goog.i18n.CompactNumberFormatSymbols_nyn", "goog.i18n.CompactNumberFormatSymbols_nyn_UG", "goog.i18n.CompactNumberFormatSymbols_om", "goog.i18n.CompactNumberFormatSymbols_om_ET", 
"goog.i18n.CompactNumberFormatSymbols_om_KE", "goog.i18n.CompactNumberFormatSymbols_os", "goog.i18n.CompactNumberFormatSymbols_os_GE", "goog.i18n.CompactNumberFormatSymbols_os_RU", "goog.i18n.CompactNumberFormatSymbols_pa_Arab", "goog.i18n.CompactNumberFormatSymbols_pa_Arab_PK", "goog.i18n.CompactNumberFormatSymbols_ps", "goog.i18n.CompactNumberFormatSymbols_ps_AF", "goog.i18n.CompactNumberFormatSymbols_pt_AO", "goog.i18n.CompactNumberFormatSymbols_pt_CV", "goog.i18n.CompactNumberFormatSymbols_pt_GW", 
"goog.i18n.CompactNumberFormatSymbols_pt_MO", "goog.i18n.CompactNumberFormatSymbols_pt_MZ", "goog.i18n.CompactNumberFormatSymbols_pt_ST", "goog.i18n.CompactNumberFormatSymbols_pt_TL", "goog.i18n.CompactNumberFormatSymbols_qu", "goog.i18n.CompactNumberFormatSymbols_qu_BO", "goog.i18n.CompactNumberFormatSymbols_qu_EC", "goog.i18n.CompactNumberFormatSymbols_qu_PE", "goog.i18n.CompactNumberFormatSymbols_rm", "goog.i18n.CompactNumberFormatSymbols_rm_CH", "goog.i18n.CompactNumberFormatSymbols_rn", "goog.i18n.CompactNumberFormatSymbols_rn_BI", 
"goog.i18n.CompactNumberFormatSymbols_ro_MD", "goog.i18n.CompactNumberFormatSymbols_rof", "goog.i18n.CompactNumberFormatSymbols_rof_TZ", "goog.i18n.CompactNumberFormatSymbols_ru_BY", "goog.i18n.CompactNumberFormatSymbols_ru_KG", "goog.i18n.CompactNumberFormatSymbols_ru_KZ", "goog.i18n.CompactNumberFormatSymbols_ru_MD", "goog.i18n.CompactNumberFormatSymbols_ru_UA", "goog.i18n.CompactNumberFormatSymbols_rw", "goog.i18n.CompactNumberFormatSymbols_rw_RW", "goog.i18n.CompactNumberFormatSymbols_rwk", "goog.i18n.CompactNumberFormatSymbols_rwk_TZ", 
"goog.i18n.CompactNumberFormatSymbols_sah", "goog.i18n.CompactNumberFormatSymbols_sah_RU", "goog.i18n.CompactNumberFormatSymbols_saq", "goog.i18n.CompactNumberFormatSymbols_saq_KE", "goog.i18n.CompactNumberFormatSymbols_sbp", "goog.i18n.CompactNumberFormatSymbols_sbp_TZ", "goog.i18n.CompactNumberFormatSymbols_se", "goog.i18n.CompactNumberFormatSymbols_se_FI", "goog.i18n.CompactNumberFormatSymbols_se_NO", "goog.i18n.CompactNumberFormatSymbols_se_SE", "goog.i18n.CompactNumberFormatSymbols_seh", "goog.i18n.CompactNumberFormatSymbols_seh_MZ", 
"goog.i18n.CompactNumberFormatSymbols_ses", "goog.i18n.CompactNumberFormatSymbols_ses_ML", "goog.i18n.CompactNumberFormatSymbols_sg", "goog.i18n.CompactNumberFormatSymbols_sg_CF", "goog.i18n.CompactNumberFormatSymbols_shi", "goog.i18n.CompactNumberFormatSymbols_shi_Latn", "goog.i18n.CompactNumberFormatSymbols_shi_Latn_MA", "goog.i18n.CompactNumberFormatSymbols_shi_Tfng", "goog.i18n.CompactNumberFormatSymbols_shi_Tfng_MA", "goog.i18n.CompactNumberFormatSymbols_smn", "goog.i18n.CompactNumberFormatSymbols_smn_FI", 
"goog.i18n.CompactNumberFormatSymbols_sn", "goog.i18n.CompactNumberFormatSymbols_sn_ZW", "goog.i18n.CompactNumberFormatSymbols_so", "goog.i18n.CompactNumberFormatSymbols_so_DJ", "goog.i18n.CompactNumberFormatSymbols_so_ET", "goog.i18n.CompactNumberFormatSymbols_so_KE", "goog.i18n.CompactNumberFormatSymbols_so_SO", "goog.i18n.CompactNumberFormatSymbols_sq_MK", "goog.i18n.CompactNumberFormatSymbols_sq_XK", "goog.i18n.CompactNumberFormatSymbols_sr_Cyrl_BA", "goog.i18n.CompactNumberFormatSymbols_sr_Cyrl_ME", 
"goog.i18n.CompactNumberFormatSymbols_sr_Cyrl_XK", "goog.i18n.CompactNumberFormatSymbols_sr_Latn", "goog.i18n.CompactNumberFormatSymbols_sr_Latn_BA", "goog.i18n.CompactNumberFormatSymbols_sr_Latn_ME", "goog.i18n.CompactNumberFormatSymbols_sr_Latn_RS", "goog.i18n.CompactNumberFormatSymbols_sr_Latn_XK", "goog.i18n.CompactNumberFormatSymbols_sv_AX", "goog.i18n.CompactNumberFormatSymbols_sv_FI", "goog.i18n.CompactNumberFormatSymbols_sw_CD", "goog.i18n.CompactNumberFormatSymbols_sw_KE", "goog.i18n.CompactNumberFormatSymbols_sw_UG", 
"goog.i18n.CompactNumberFormatSymbols_ta_LK", "goog.i18n.CompactNumberFormatSymbols_ta_MY", "goog.i18n.CompactNumberFormatSymbols_ta_SG", "goog.i18n.CompactNumberFormatSymbols_teo", "goog.i18n.CompactNumberFormatSymbols_teo_KE", "goog.i18n.CompactNumberFormatSymbols_teo_UG", "goog.i18n.CompactNumberFormatSymbols_ti", "goog.i18n.CompactNumberFormatSymbols_ti_ER", "goog.i18n.CompactNumberFormatSymbols_ti_ET", "goog.i18n.CompactNumberFormatSymbols_to", "goog.i18n.CompactNumberFormatSymbols_to_TO", "goog.i18n.CompactNumberFormatSymbols_tr_CY", 
"goog.i18n.CompactNumberFormatSymbols_twq", "goog.i18n.CompactNumberFormatSymbols_twq_NE", "goog.i18n.CompactNumberFormatSymbols_tzm", "goog.i18n.CompactNumberFormatSymbols_tzm_Latn", "goog.i18n.CompactNumberFormatSymbols_tzm_Latn_MA", "goog.i18n.CompactNumberFormatSymbols_ug", "goog.i18n.CompactNumberFormatSymbols_ug_Arab", "goog.i18n.CompactNumberFormatSymbols_ug_Arab_CN", "goog.i18n.CompactNumberFormatSymbols_ur_IN", "goog.i18n.CompactNumberFormatSymbols_uz_Arab", "goog.i18n.CompactNumberFormatSymbols_uz_Arab_AF", 
"goog.i18n.CompactNumberFormatSymbols_uz_Cyrl", "goog.i18n.CompactNumberFormatSymbols_uz_Cyrl_UZ", "goog.i18n.CompactNumberFormatSymbols_vai", "goog.i18n.CompactNumberFormatSymbols_vai_Latn", "goog.i18n.CompactNumberFormatSymbols_vai_Latn_LR", "goog.i18n.CompactNumberFormatSymbols_vai_Vaii", "goog.i18n.CompactNumberFormatSymbols_vai_Vaii_LR", "goog.i18n.CompactNumberFormatSymbols_vun", "goog.i18n.CompactNumberFormatSymbols_vun_TZ", "goog.i18n.CompactNumberFormatSymbols_wae", "goog.i18n.CompactNumberFormatSymbols_wae_CH", 
"goog.i18n.CompactNumberFormatSymbols_xog", "goog.i18n.CompactNumberFormatSymbols_xog_UG", "goog.i18n.CompactNumberFormatSymbols_yav", "goog.i18n.CompactNumberFormatSymbols_yav_CM", "goog.i18n.CompactNumberFormatSymbols_yi", "goog.i18n.CompactNumberFormatSymbols_yi_001", "goog.i18n.CompactNumberFormatSymbols_yo", "goog.i18n.CompactNumberFormatSymbols_yo_BJ", "goog.i18n.CompactNumberFormatSymbols_yo_NG", "goog.i18n.CompactNumberFormatSymbols_zgh", "goog.i18n.CompactNumberFormatSymbols_zgh_MA", "goog.i18n.CompactNumberFormatSymbols_zh_Hans_HK", 
"goog.i18n.CompactNumberFormatSymbols_zh_Hans_MO", "goog.i18n.CompactNumberFormatSymbols_zh_Hans_SG", "goog.i18n.CompactNumberFormatSymbols_zh_Hant", "goog.i18n.CompactNumberFormatSymbols_zh_Hant_HK", "goog.i18n.CompactNumberFormatSymbols_zh_Hant_MO", "goog.i18n.CompactNumberFormatSymbols_zh_Hant_TW"], [], false);
goog.addDependency("i18n/currency.js", ["goog.i18n.currency", "goog.i18n.currency.CurrencyInfo", "goog.i18n.currency.CurrencyInfoTier2"], [], false);
goog.addDependency("i18n/currency_test.js", ["goog.i18n.currencyTest"], ["goog.i18n.NumberFormat", "goog.i18n.currency", "goog.i18n.currency.CurrencyInfo", "goog.object", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("i18n/currencycodemap.js", ["goog.i18n.currencyCodeMap", "goog.i18n.currencyCodeMapTier2"], [], false);
goog.addDependency("i18n/datetimeformat.js", ["goog.i18n.DateTimeFormat", "goog.i18n.DateTimeFormat.Format"], ["goog.asserts", "goog.date", "goog.i18n.DateTimeSymbols", "goog.i18n.TimeZone", "goog.string"], false);
goog.addDependency("i18n/datetimeformat_test.js", ["goog.i18n.DateTimeFormatTest"], ["goog.date.Date", "goog.date.DateTime", "goog.i18n.DateTimeFormat", "goog.i18n.DateTimePatterns", "goog.i18n.DateTimePatterns_de", "goog.i18n.DateTimePatterns_en", "goog.i18n.DateTimePatterns_fa", "goog.i18n.DateTimePatterns_fr", "goog.i18n.DateTimePatterns_ja", "goog.i18n.DateTimePatterns_sv", "goog.i18n.DateTimeSymbols", "goog.i18n.DateTimeSymbols_ar_AE", "goog.i18n.DateTimeSymbols_ar_SA", "goog.i18n.DateTimeSymbols_bn_BD", 
"goog.i18n.DateTimeSymbols_de", "goog.i18n.DateTimeSymbols_en", "goog.i18n.DateTimeSymbols_en_GB", "goog.i18n.DateTimeSymbols_en_IE", "goog.i18n.DateTimeSymbols_en_IN", "goog.i18n.DateTimeSymbols_en_US", "goog.i18n.DateTimeSymbols_fa", "goog.i18n.DateTimeSymbols_fr", "goog.i18n.DateTimeSymbols_fr_DJ", "goog.i18n.DateTimeSymbols_he_IL", "goog.i18n.DateTimeSymbols_ja", "goog.i18n.DateTimeSymbols_ro_RO", "goog.i18n.DateTimeSymbols_sv", "goog.i18n.TimeZone", "goog.testing.jsunit"], false);
goog.addDependency("i18n/datetimeparse.js", ["goog.i18n.DateTimeParse"], ["goog.date", "goog.i18n.DateTimeFormat", "goog.i18n.DateTimeSymbols"], false);
goog.addDependency("i18n/datetimeparse_test.js", ["goog.i18n.DateTimeParseTest"], ["goog.date.Date", "goog.i18n.DateTimeFormat", "goog.i18n.DateTimeParse", "goog.i18n.DateTimeSymbols", "goog.i18n.DateTimeSymbols_en", "goog.i18n.DateTimeSymbols_fa", "goog.i18n.DateTimeSymbols_fr", "goog.i18n.DateTimeSymbols_pl", "goog.i18n.DateTimeSymbols_zh", "goog.testing.ExpectedFailures", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("i18n/datetimepatterns.js", ["goog.i18n.DateTimePatterns", "goog.i18n.DateTimePatterns_af", "goog.i18n.DateTimePatterns_am", "goog.i18n.DateTimePatterns_ar", "goog.i18n.DateTimePatterns_az", "goog.i18n.DateTimePatterns_bg", "goog.i18n.DateTimePatterns_bn", "goog.i18n.DateTimePatterns_br", "goog.i18n.DateTimePatterns_ca", "goog.i18n.DateTimePatterns_chr", "goog.i18n.DateTimePatterns_cs", "goog.i18n.DateTimePatterns_cy", "goog.i18n.DateTimePatterns_da", "goog.i18n.DateTimePatterns_de", 
"goog.i18n.DateTimePatterns_de_AT", "goog.i18n.DateTimePatterns_de_CH", "goog.i18n.DateTimePatterns_el", "goog.i18n.DateTimePatterns_en", "goog.i18n.DateTimePatterns_en_AU", "goog.i18n.DateTimePatterns_en_GB", "goog.i18n.DateTimePatterns_en_IE", "goog.i18n.DateTimePatterns_en_IN", "goog.i18n.DateTimePatterns_en_SG", "goog.i18n.DateTimePatterns_en_US", "goog.i18n.DateTimePatterns_en_ZA", "goog.i18n.DateTimePatterns_es", "goog.i18n.DateTimePatterns_es_419", "goog.i18n.DateTimePatterns_es_ES", "goog.i18n.DateTimePatterns_et", 
"goog.i18n.DateTimePatterns_eu", "goog.i18n.DateTimePatterns_fa", "goog.i18n.DateTimePatterns_fi", "goog.i18n.DateTimePatterns_fil", "goog.i18n.DateTimePatterns_fr", "goog.i18n.DateTimePatterns_fr_CA", "goog.i18n.DateTimePatterns_ga", "goog.i18n.DateTimePatterns_gl", "goog.i18n.DateTimePatterns_gsw", "goog.i18n.DateTimePatterns_gu", "goog.i18n.DateTimePatterns_haw", "goog.i18n.DateTimePatterns_he", "goog.i18n.DateTimePatterns_hi", "goog.i18n.DateTimePatterns_hr", "goog.i18n.DateTimePatterns_hu", 
"goog.i18n.DateTimePatterns_hy", "goog.i18n.DateTimePatterns_id", "goog.i18n.DateTimePatterns_in", "goog.i18n.DateTimePatterns_is", "goog.i18n.DateTimePatterns_it", "goog.i18n.DateTimePatterns_iw", "goog.i18n.DateTimePatterns_ja", "goog.i18n.DateTimePatterns_ka", "goog.i18n.DateTimePatterns_kk", "goog.i18n.DateTimePatterns_km", "goog.i18n.DateTimePatterns_kn", "goog.i18n.DateTimePatterns_ko", "goog.i18n.DateTimePatterns_ky", "goog.i18n.DateTimePatterns_ln", "goog.i18n.DateTimePatterns_lo", "goog.i18n.DateTimePatterns_lt", 
"goog.i18n.DateTimePatterns_lv", "goog.i18n.DateTimePatterns_mk", "goog.i18n.DateTimePatterns_ml", "goog.i18n.DateTimePatterns_mn", "goog.i18n.DateTimePatterns_mo", "goog.i18n.DateTimePatterns_mr", "goog.i18n.DateTimePatterns_ms", "goog.i18n.DateTimePatterns_mt", "goog.i18n.DateTimePatterns_my", "goog.i18n.DateTimePatterns_nb", "goog.i18n.DateTimePatterns_ne", "goog.i18n.DateTimePatterns_nl", "goog.i18n.DateTimePatterns_no", "goog.i18n.DateTimePatterns_no_NO", "goog.i18n.DateTimePatterns_or", "goog.i18n.DateTimePatterns_pa", 
"goog.i18n.DateTimePatterns_pl", "goog.i18n.DateTimePatterns_pt", "goog.i18n.DateTimePatterns_pt_BR", "goog.i18n.DateTimePatterns_pt_PT", "goog.i18n.DateTimePatterns_ro", "goog.i18n.DateTimePatterns_ru", "goog.i18n.DateTimePatterns_sh", "goog.i18n.DateTimePatterns_si", "goog.i18n.DateTimePatterns_sk", "goog.i18n.DateTimePatterns_sl", "goog.i18n.DateTimePatterns_sq", "goog.i18n.DateTimePatterns_sr", "goog.i18n.DateTimePatterns_sv", "goog.i18n.DateTimePatterns_sw", "goog.i18n.DateTimePatterns_ta", 
"goog.i18n.DateTimePatterns_te", "goog.i18n.DateTimePatterns_th", "goog.i18n.DateTimePatterns_tl", "goog.i18n.DateTimePatterns_tr", "goog.i18n.DateTimePatterns_uk", "goog.i18n.DateTimePatterns_ur", "goog.i18n.DateTimePatterns_uz", "goog.i18n.DateTimePatterns_vi", "goog.i18n.DateTimePatterns_zh", "goog.i18n.DateTimePatterns_zh_CN", "goog.i18n.DateTimePatterns_zh_HK", "goog.i18n.DateTimePatterns_zh_TW", "goog.i18n.DateTimePatterns_zu"], [], false);
goog.addDependency("i18n/datetimepatternsext.js", ["goog.i18n.DateTimePatternsExt", "goog.i18n.DateTimePatterns_af_NA", "goog.i18n.DateTimePatterns_af_ZA", "goog.i18n.DateTimePatterns_agq", "goog.i18n.DateTimePatterns_agq_CM", "goog.i18n.DateTimePatterns_ak", "goog.i18n.DateTimePatterns_ak_GH", "goog.i18n.DateTimePatterns_am_ET", "goog.i18n.DateTimePatterns_ar_001", "goog.i18n.DateTimePatterns_ar_AE", "goog.i18n.DateTimePatterns_ar_BH", "goog.i18n.DateTimePatterns_ar_DJ", "goog.i18n.DateTimePatterns_ar_DZ", 
"goog.i18n.DateTimePatterns_ar_EG", "goog.i18n.DateTimePatterns_ar_EH", "goog.i18n.DateTimePatterns_ar_ER", "goog.i18n.DateTimePatterns_ar_IL", "goog.i18n.DateTimePatterns_ar_IQ", "goog.i18n.DateTimePatterns_ar_JO", "goog.i18n.DateTimePatterns_ar_KM", "goog.i18n.DateTimePatterns_ar_KW", "goog.i18n.DateTimePatterns_ar_LB", "goog.i18n.DateTimePatterns_ar_LY", "goog.i18n.DateTimePatterns_ar_MA", "goog.i18n.DateTimePatterns_ar_MR", "goog.i18n.DateTimePatterns_ar_OM", "goog.i18n.DateTimePatterns_ar_PS", 
"goog.i18n.DateTimePatterns_ar_QA", "goog.i18n.DateTimePatterns_ar_SA", "goog.i18n.DateTimePatterns_ar_SD", "goog.i18n.DateTimePatterns_ar_SO", "goog.i18n.DateTimePatterns_ar_SS", "goog.i18n.DateTimePatterns_ar_SY", "goog.i18n.DateTimePatterns_ar_TD", "goog.i18n.DateTimePatterns_ar_TN", "goog.i18n.DateTimePatterns_ar_YE", "goog.i18n.DateTimePatterns_as", "goog.i18n.DateTimePatterns_as_IN", "goog.i18n.DateTimePatterns_asa", "goog.i18n.DateTimePatterns_asa_TZ", "goog.i18n.DateTimePatterns_az_Cyrl", 
"goog.i18n.DateTimePatterns_az_Cyrl_AZ", "goog.i18n.DateTimePatterns_az_Latn", "goog.i18n.DateTimePatterns_az_Latn_AZ", "goog.i18n.DateTimePatterns_bas", "goog.i18n.DateTimePatterns_bas_CM", "goog.i18n.DateTimePatterns_be", "goog.i18n.DateTimePatterns_be_BY", "goog.i18n.DateTimePatterns_bem", "goog.i18n.DateTimePatterns_bem_ZM", "goog.i18n.DateTimePatterns_bez", "goog.i18n.DateTimePatterns_bez_TZ", "goog.i18n.DateTimePatterns_bg_BG", "goog.i18n.DateTimePatterns_bm", "goog.i18n.DateTimePatterns_bm_Latn", 
"goog.i18n.DateTimePatterns_bm_Latn_ML", "goog.i18n.DateTimePatterns_bn_BD", "goog.i18n.DateTimePatterns_bn_IN", "goog.i18n.DateTimePatterns_bo", "goog.i18n.DateTimePatterns_bo_CN", "goog.i18n.DateTimePatterns_bo_IN", "goog.i18n.DateTimePatterns_br_FR", "goog.i18n.DateTimePatterns_brx", "goog.i18n.DateTimePatterns_brx_IN", "goog.i18n.DateTimePatterns_bs", "goog.i18n.DateTimePatterns_bs_Cyrl", "goog.i18n.DateTimePatterns_bs_Cyrl_BA", "goog.i18n.DateTimePatterns_bs_Latn", "goog.i18n.DateTimePatterns_bs_Latn_BA", 
"goog.i18n.DateTimePatterns_ca_AD", "goog.i18n.DateTimePatterns_ca_ES", "goog.i18n.DateTimePatterns_ca_FR", "goog.i18n.DateTimePatterns_ca_IT", "goog.i18n.DateTimePatterns_cgg", "goog.i18n.DateTimePatterns_cgg_UG", "goog.i18n.DateTimePatterns_chr_US", "goog.i18n.DateTimePatterns_cs_CZ", "goog.i18n.DateTimePatterns_cy_GB", "goog.i18n.DateTimePatterns_da_DK", "goog.i18n.DateTimePatterns_da_GL", "goog.i18n.DateTimePatterns_dav", "goog.i18n.DateTimePatterns_dav_KE", "goog.i18n.DateTimePatterns_de_BE", 
"goog.i18n.DateTimePatterns_de_DE", "goog.i18n.DateTimePatterns_de_LI", "goog.i18n.DateTimePatterns_de_LU", "goog.i18n.DateTimePatterns_dje", "goog.i18n.DateTimePatterns_dje_NE", "goog.i18n.DateTimePatterns_dsb", "goog.i18n.DateTimePatterns_dsb_DE", "goog.i18n.DateTimePatterns_dua", "goog.i18n.DateTimePatterns_dua_CM", "goog.i18n.DateTimePatterns_dyo", "goog.i18n.DateTimePatterns_dyo_SN", "goog.i18n.DateTimePatterns_dz", "goog.i18n.DateTimePatterns_dz_BT", "goog.i18n.DateTimePatterns_ebu", "goog.i18n.DateTimePatterns_ebu_KE", 
"goog.i18n.DateTimePatterns_ee", "goog.i18n.DateTimePatterns_ee_GH", "goog.i18n.DateTimePatterns_ee_TG", "goog.i18n.DateTimePatterns_el_CY", "goog.i18n.DateTimePatterns_el_GR", "goog.i18n.DateTimePatterns_en_001", "goog.i18n.DateTimePatterns_en_150", "goog.i18n.DateTimePatterns_en_AG", "goog.i18n.DateTimePatterns_en_AI", "goog.i18n.DateTimePatterns_en_AS", "goog.i18n.DateTimePatterns_en_BB", "goog.i18n.DateTimePatterns_en_BE", "goog.i18n.DateTimePatterns_en_BM", "goog.i18n.DateTimePatterns_en_BS", 
"goog.i18n.DateTimePatterns_en_BW", "goog.i18n.DateTimePatterns_en_BZ", "goog.i18n.DateTimePatterns_en_CA", "goog.i18n.DateTimePatterns_en_CC", "goog.i18n.DateTimePatterns_en_CK", "goog.i18n.DateTimePatterns_en_CM", "goog.i18n.DateTimePatterns_en_CX", "goog.i18n.DateTimePatterns_en_DG", "goog.i18n.DateTimePatterns_en_DM", "goog.i18n.DateTimePatterns_en_ER", "goog.i18n.DateTimePatterns_en_FJ", "goog.i18n.DateTimePatterns_en_FK", "goog.i18n.DateTimePatterns_en_FM", "goog.i18n.DateTimePatterns_en_GD", 
"goog.i18n.DateTimePatterns_en_GG", "goog.i18n.DateTimePatterns_en_GH", "goog.i18n.DateTimePatterns_en_GI", "goog.i18n.DateTimePatterns_en_GM", "goog.i18n.DateTimePatterns_en_GU", "goog.i18n.DateTimePatterns_en_GY", "goog.i18n.DateTimePatterns_en_HK", "goog.i18n.DateTimePatterns_en_IM", "goog.i18n.DateTimePatterns_en_IO", "goog.i18n.DateTimePatterns_en_JE", "goog.i18n.DateTimePatterns_en_JM", "goog.i18n.DateTimePatterns_en_KE", "goog.i18n.DateTimePatterns_en_KI", "goog.i18n.DateTimePatterns_en_KN", 
"goog.i18n.DateTimePatterns_en_KY", "goog.i18n.DateTimePatterns_en_LC", "goog.i18n.DateTimePatterns_en_LR", "goog.i18n.DateTimePatterns_en_LS", "goog.i18n.DateTimePatterns_en_MG", "goog.i18n.DateTimePatterns_en_MH", "goog.i18n.DateTimePatterns_en_MO", "goog.i18n.DateTimePatterns_en_MP", "goog.i18n.DateTimePatterns_en_MS", "goog.i18n.DateTimePatterns_en_MT", "goog.i18n.DateTimePatterns_en_MU", "goog.i18n.DateTimePatterns_en_MW", "goog.i18n.DateTimePatterns_en_MY", "goog.i18n.DateTimePatterns_en_NA", 
"goog.i18n.DateTimePatterns_en_NF", "goog.i18n.DateTimePatterns_en_NG", "goog.i18n.DateTimePatterns_en_NR", "goog.i18n.DateTimePatterns_en_NU", "goog.i18n.DateTimePatterns_en_NZ", "goog.i18n.DateTimePatterns_en_PG", "goog.i18n.DateTimePatterns_en_PH", "goog.i18n.DateTimePatterns_en_PK", "goog.i18n.DateTimePatterns_en_PN", "goog.i18n.DateTimePatterns_en_PR", "goog.i18n.DateTimePatterns_en_PW", "goog.i18n.DateTimePatterns_en_RW", "goog.i18n.DateTimePatterns_en_SB", "goog.i18n.DateTimePatterns_en_SC", 
"goog.i18n.DateTimePatterns_en_SD", "goog.i18n.DateTimePatterns_en_SH", "goog.i18n.DateTimePatterns_en_SL", "goog.i18n.DateTimePatterns_en_SS", "goog.i18n.DateTimePatterns_en_SX", "goog.i18n.DateTimePatterns_en_SZ", "goog.i18n.DateTimePatterns_en_TC", "goog.i18n.DateTimePatterns_en_TK", "goog.i18n.DateTimePatterns_en_TO", "goog.i18n.DateTimePatterns_en_TT", "goog.i18n.DateTimePatterns_en_TV", "goog.i18n.DateTimePatterns_en_TZ", "goog.i18n.DateTimePatterns_en_UG", "goog.i18n.DateTimePatterns_en_UM", 
"goog.i18n.DateTimePatterns_en_US_POSIX", "goog.i18n.DateTimePatterns_en_VC", "goog.i18n.DateTimePatterns_en_VG", "goog.i18n.DateTimePatterns_en_VI", "goog.i18n.DateTimePatterns_en_VU", "goog.i18n.DateTimePatterns_en_WS", "goog.i18n.DateTimePatterns_en_ZM", "goog.i18n.DateTimePatterns_en_ZW", "goog.i18n.DateTimePatterns_eo", "goog.i18n.DateTimePatterns_es_AR", "goog.i18n.DateTimePatterns_es_BO", "goog.i18n.DateTimePatterns_es_CL", "goog.i18n.DateTimePatterns_es_CO", "goog.i18n.DateTimePatterns_es_CR", 
"goog.i18n.DateTimePatterns_es_CU", "goog.i18n.DateTimePatterns_es_DO", "goog.i18n.DateTimePatterns_es_EA", "goog.i18n.DateTimePatterns_es_EC", "goog.i18n.DateTimePatterns_es_GQ", "goog.i18n.DateTimePatterns_es_GT", "goog.i18n.DateTimePatterns_es_HN", "goog.i18n.DateTimePatterns_es_IC", "goog.i18n.DateTimePatterns_es_MX", "goog.i18n.DateTimePatterns_es_NI", "goog.i18n.DateTimePatterns_es_PA", "goog.i18n.DateTimePatterns_es_PE", "goog.i18n.DateTimePatterns_es_PH", "goog.i18n.DateTimePatterns_es_PR", 
"goog.i18n.DateTimePatterns_es_PY", "goog.i18n.DateTimePatterns_es_SV", "goog.i18n.DateTimePatterns_es_US", "goog.i18n.DateTimePatterns_es_UY", "goog.i18n.DateTimePatterns_es_VE", "goog.i18n.DateTimePatterns_et_EE", "goog.i18n.DateTimePatterns_eu_ES", "goog.i18n.DateTimePatterns_ewo", "goog.i18n.DateTimePatterns_ewo_CM", "goog.i18n.DateTimePatterns_fa_AF", "goog.i18n.DateTimePatterns_fa_IR", "goog.i18n.DateTimePatterns_ff", "goog.i18n.DateTimePatterns_ff_CM", "goog.i18n.DateTimePatterns_ff_GN", "goog.i18n.DateTimePatterns_ff_MR", 
"goog.i18n.DateTimePatterns_ff_SN", "goog.i18n.DateTimePatterns_fi_FI", "goog.i18n.DateTimePatterns_fil_PH", "goog.i18n.DateTimePatterns_fo", "goog.i18n.DateTimePatterns_fo_FO", "goog.i18n.DateTimePatterns_fr_BE", "goog.i18n.DateTimePatterns_fr_BF", "goog.i18n.DateTimePatterns_fr_BI", "goog.i18n.DateTimePatterns_fr_BJ", "goog.i18n.DateTimePatterns_fr_BL", "goog.i18n.DateTimePatterns_fr_CD", "goog.i18n.DateTimePatterns_fr_CF", "goog.i18n.DateTimePatterns_fr_CG", "goog.i18n.DateTimePatterns_fr_CH", 
"goog.i18n.DateTimePatterns_fr_CI", "goog.i18n.DateTimePatterns_fr_CM", "goog.i18n.DateTimePatterns_fr_DJ", "goog.i18n.DateTimePatterns_fr_DZ", "goog.i18n.DateTimePatterns_fr_FR", "goog.i18n.DateTimePatterns_fr_GA", "goog.i18n.DateTimePatterns_fr_GF", "goog.i18n.DateTimePatterns_fr_GN", "goog.i18n.DateTimePatterns_fr_GP", "goog.i18n.DateTimePatterns_fr_GQ", "goog.i18n.DateTimePatterns_fr_HT", "goog.i18n.DateTimePatterns_fr_KM", "goog.i18n.DateTimePatterns_fr_LU", "goog.i18n.DateTimePatterns_fr_MA", 
"goog.i18n.DateTimePatterns_fr_MC", "goog.i18n.DateTimePatterns_fr_MF", "goog.i18n.DateTimePatterns_fr_MG", "goog.i18n.DateTimePatterns_fr_ML", "goog.i18n.DateTimePatterns_fr_MQ", "goog.i18n.DateTimePatterns_fr_MR", "goog.i18n.DateTimePatterns_fr_MU", "goog.i18n.DateTimePatterns_fr_NC", "goog.i18n.DateTimePatterns_fr_NE", "goog.i18n.DateTimePatterns_fr_PF", "goog.i18n.DateTimePatterns_fr_PM", "goog.i18n.DateTimePatterns_fr_RE", "goog.i18n.DateTimePatterns_fr_RW", "goog.i18n.DateTimePatterns_fr_SC", 
"goog.i18n.DateTimePatterns_fr_SN", "goog.i18n.DateTimePatterns_fr_SY", "goog.i18n.DateTimePatterns_fr_TD", "goog.i18n.DateTimePatterns_fr_TG", "goog.i18n.DateTimePatterns_fr_TN", "goog.i18n.DateTimePatterns_fr_VU", "goog.i18n.DateTimePatterns_fr_WF", "goog.i18n.DateTimePatterns_fr_YT", "goog.i18n.DateTimePatterns_fur", "goog.i18n.DateTimePatterns_fur_IT", "goog.i18n.DateTimePatterns_fy", "goog.i18n.DateTimePatterns_fy_NL", "goog.i18n.DateTimePatterns_ga_IE", "goog.i18n.DateTimePatterns_gd", "goog.i18n.DateTimePatterns_gd_GB", 
"goog.i18n.DateTimePatterns_gl_ES", "goog.i18n.DateTimePatterns_gsw_CH", "goog.i18n.DateTimePatterns_gsw_FR", "goog.i18n.DateTimePatterns_gsw_LI", "goog.i18n.DateTimePatterns_gu_IN", "goog.i18n.DateTimePatterns_guz", "goog.i18n.DateTimePatterns_guz_KE", "goog.i18n.DateTimePatterns_gv", "goog.i18n.DateTimePatterns_gv_IM", "goog.i18n.DateTimePatterns_ha", "goog.i18n.DateTimePatterns_ha_Latn", "goog.i18n.DateTimePatterns_ha_Latn_GH", "goog.i18n.DateTimePatterns_ha_Latn_NE", "goog.i18n.DateTimePatterns_ha_Latn_NG", 
"goog.i18n.DateTimePatterns_haw_US", "goog.i18n.DateTimePatterns_he_IL", "goog.i18n.DateTimePatterns_hi_IN", "goog.i18n.DateTimePatterns_hr_BA", "goog.i18n.DateTimePatterns_hr_HR", "goog.i18n.DateTimePatterns_hsb", "goog.i18n.DateTimePatterns_hsb_DE", "goog.i18n.DateTimePatterns_hu_HU", "goog.i18n.DateTimePatterns_hy_AM", "goog.i18n.DateTimePatterns_id_ID", "goog.i18n.DateTimePatterns_ig", "goog.i18n.DateTimePatterns_ig_NG", "goog.i18n.DateTimePatterns_ii", "goog.i18n.DateTimePatterns_ii_CN", "goog.i18n.DateTimePatterns_is_IS", 
"goog.i18n.DateTimePatterns_it_CH", "goog.i18n.DateTimePatterns_it_IT", "goog.i18n.DateTimePatterns_it_SM", "goog.i18n.DateTimePatterns_ja_JP", "goog.i18n.DateTimePatterns_jgo", "goog.i18n.DateTimePatterns_jgo_CM", "goog.i18n.DateTimePatterns_jmc", "goog.i18n.DateTimePatterns_jmc_TZ", "goog.i18n.DateTimePatterns_ka_GE", "goog.i18n.DateTimePatterns_kab", "goog.i18n.DateTimePatterns_kab_DZ", "goog.i18n.DateTimePatterns_kam", "goog.i18n.DateTimePatterns_kam_KE", "goog.i18n.DateTimePatterns_kde", "goog.i18n.DateTimePatterns_kde_TZ", 
"goog.i18n.DateTimePatterns_kea", "goog.i18n.DateTimePatterns_kea_CV", "goog.i18n.DateTimePatterns_khq", "goog.i18n.DateTimePatterns_khq_ML", "goog.i18n.DateTimePatterns_ki", "goog.i18n.DateTimePatterns_ki_KE", "goog.i18n.DateTimePatterns_kk_Cyrl", "goog.i18n.DateTimePatterns_kk_Cyrl_KZ", "goog.i18n.DateTimePatterns_kkj", "goog.i18n.DateTimePatterns_kkj_CM", "goog.i18n.DateTimePatterns_kl", "goog.i18n.DateTimePatterns_kl_GL", "goog.i18n.DateTimePatterns_kln", "goog.i18n.DateTimePatterns_kln_KE", 
"goog.i18n.DateTimePatterns_km_KH", "goog.i18n.DateTimePatterns_kn_IN", "goog.i18n.DateTimePatterns_ko_KP", "goog.i18n.DateTimePatterns_ko_KR", "goog.i18n.DateTimePatterns_kok", "goog.i18n.DateTimePatterns_kok_IN", "goog.i18n.DateTimePatterns_ks", "goog.i18n.DateTimePatterns_ks_Arab", "goog.i18n.DateTimePatterns_ks_Arab_IN", "goog.i18n.DateTimePatterns_ksb", "goog.i18n.DateTimePatterns_ksb_TZ", "goog.i18n.DateTimePatterns_ksf", "goog.i18n.DateTimePatterns_ksf_CM", "goog.i18n.DateTimePatterns_ksh", 
"goog.i18n.DateTimePatterns_ksh_DE", "goog.i18n.DateTimePatterns_kw", "goog.i18n.DateTimePatterns_kw_GB", "goog.i18n.DateTimePatterns_ky_Cyrl", "goog.i18n.DateTimePatterns_ky_Cyrl_KG", "goog.i18n.DateTimePatterns_lag", "goog.i18n.DateTimePatterns_lag_TZ", "goog.i18n.DateTimePatterns_lb", "goog.i18n.DateTimePatterns_lb_LU", "goog.i18n.DateTimePatterns_lg", "goog.i18n.DateTimePatterns_lg_UG", "goog.i18n.DateTimePatterns_lkt", "goog.i18n.DateTimePatterns_lkt_US", "goog.i18n.DateTimePatterns_ln_AO", 
"goog.i18n.DateTimePatterns_ln_CD", "goog.i18n.DateTimePatterns_ln_CF", "goog.i18n.DateTimePatterns_ln_CG", "goog.i18n.DateTimePatterns_lo_LA", "goog.i18n.DateTimePatterns_lt_LT", "goog.i18n.DateTimePatterns_lu", "goog.i18n.DateTimePatterns_lu_CD", "goog.i18n.DateTimePatterns_luo", "goog.i18n.DateTimePatterns_luo_KE", "goog.i18n.DateTimePatterns_luy", "goog.i18n.DateTimePatterns_luy_KE", "goog.i18n.DateTimePatterns_lv_LV", "goog.i18n.DateTimePatterns_mas", "goog.i18n.DateTimePatterns_mas_KE", "goog.i18n.DateTimePatterns_mas_TZ", 
"goog.i18n.DateTimePatterns_mer", "goog.i18n.DateTimePatterns_mer_KE", "goog.i18n.DateTimePatterns_mfe", "goog.i18n.DateTimePatterns_mfe_MU", "goog.i18n.DateTimePatterns_mg", "goog.i18n.DateTimePatterns_mg_MG", "goog.i18n.DateTimePatterns_mgh", "goog.i18n.DateTimePatterns_mgh_MZ", "goog.i18n.DateTimePatterns_mgo", "goog.i18n.DateTimePatterns_mgo_CM", "goog.i18n.DateTimePatterns_mk_MK", "goog.i18n.DateTimePatterns_ml_IN", "goog.i18n.DateTimePatterns_mn_Cyrl", "goog.i18n.DateTimePatterns_mn_Cyrl_MN", 
"goog.i18n.DateTimePatterns_mr_IN", "goog.i18n.DateTimePatterns_ms_Latn", "goog.i18n.DateTimePatterns_ms_Latn_BN", "goog.i18n.DateTimePatterns_ms_Latn_MY", "goog.i18n.DateTimePatterns_ms_Latn_SG", "goog.i18n.DateTimePatterns_mt_MT", "goog.i18n.DateTimePatterns_mua", "goog.i18n.DateTimePatterns_mua_CM", "goog.i18n.DateTimePatterns_my_MM", "goog.i18n.DateTimePatterns_naq", "goog.i18n.DateTimePatterns_naq_NA", "goog.i18n.DateTimePatterns_nb_NO", "goog.i18n.DateTimePatterns_nb_SJ", "goog.i18n.DateTimePatterns_nd", 
"goog.i18n.DateTimePatterns_nd_ZW", "goog.i18n.DateTimePatterns_ne_IN", "goog.i18n.DateTimePatterns_ne_NP", "goog.i18n.DateTimePatterns_nl_AW", "goog.i18n.DateTimePatterns_nl_BE", "goog.i18n.DateTimePatterns_nl_BQ", "goog.i18n.DateTimePatterns_nl_CW", "goog.i18n.DateTimePatterns_nl_NL", "goog.i18n.DateTimePatterns_nl_SR", "goog.i18n.DateTimePatterns_nl_SX", "goog.i18n.DateTimePatterns_nmg", "goog.i18n.DateTimePatterns_nmg_CM", "goog.i18n.DateTimePatterns_nn", "goog.i18n.DateTimePatterns_nn_NO", "goog.i18n.DateTimePatterns_nnh", 
"goog.i18n.DateTimePatterns_nnh_CM", "goog.i18n.DateTimePatterns_nus", "goog.i18n.DateTimePatterns_nus_SD", "goog.i18n.DateTimePatterns_nyn", "goog.i18n.DateTimePatterns_nyn_UG", "goog.i18n.DateTimePatterns_om", "goog.i18n.DateTimePatterns_om_ET", "goog.i18n.DateTimePatterns_om_KE", "goog.i18n.DateTimePatterns_or_IN", "goog.i18n.DateTimePatterns_os", "goog.i18n.DateTimePatterns_os_GE", "goog.i18n.DateTimePatterns_os_RU", "goog.i18n.DateTimePatterns_pa_Arab", "goog.i18n.DateTimePatterns_pa_Arab_PK", 
"goog.i18n.DateTimePatterns_pa_Guru", "goog.i18n.DateTimePatterns_pa_Guru_IN", "goog.i18n.DateTimePatterns_pl_PL", "goog.i18n.DateTimePatterns_ps", "goog.i18n.DateTimePatterns_ps_AF", "goog.i18n.DateTimePatterns_pt_AO", "goog.i18n.DateTimePatterns_pt_CV", "goog.i18n.DateTimePatterns_pt_GW", "goog.i18n.DateTimePatterns_pt_MO", "goog.i18n.DateTimePatterns_pt_MZ", "goog.i18n.DateTimePatterns_pt_ST", "goog.i18n.DateTimePatterns_pt_TL", "goog.i18n.DateTimePatterns_qu", "goog.i18n.DateTimePatterns_qu_BO", 
"goog.i18n.DateTimePatterns_qu_EC", "goog.i18n.DateTimePatterns_qu_PE", "goog.i18n.DateTimePatterns_rm", "goog.i18n.DateTimePatterns_rm_CH", "goog.i18n.DateTimePatterns_rn", "goog.i18n.DateTimePatterns_rn_BI", "goog.i18n.DateTimePatterns_ro_MD", "goog.i18n.DateTimePatterns_ro_RO", "goog.i18n.DateTimePatterns_rof", "goog.i18n.DateTimePatterns_rof_TZ", "goog.i18n.DateTimePatterns_ru_BY", "goog.i18n.DateTimePatterns_ru_KG", "goog.i18n.DateTimePatterns_ru_KZ", "goog.i18n.DateTimePatterns_ru_MD", "goog.i18n.DateTimePatterns_ru_RU", 
"goog.i18n.DateTimePatterns_ru_UA", "goog.i18n.DateTimePatterns_rw", "goog.i18n.DateTimePatterns_rw_RW", "goog.i18n.DateTimePatterns_rwk", "goog.i18n.DateTimePatterns_rwk_TZ", "goog.i18n.DateTimePatterns_sah", "goog.i18n.DateTimePatterns_sah_RU", "goog.i18n.DateTimePatterns_saq", "goog.i18n.DateTimePatterns_saq_KE", "goog.i18n.DateTimePatterns_sbp", "goog.i18n.DateTimePatterns_sbp_TZ", "goog.i18n.DateTimePatterns_se", "goog.i18n.DateTimePatterns_se_FI", "goog.i18n.DateTimePatterns_se_NO", "goog.i18n.DateTimePatterns_se_SE", 
"goog.i18n.DateTimePatterns_seh", "goog.i18n.DateTimePatterns_seh_MZ", "goog.i18n.DateTimePatterns_ses", "goog.i18n.DateTimePatterns_ses_ML", "goog.i18n.DateTimePatterns_sg", "goog.i18n.DateTimePatterns_sg_CF", "goog.i18n.DateTimePatterns_shi", "goog.i18n.DateTimePatterns_shi_Latn", "goog.i18n.DateTimePatterns_shi_Latn_MA", "goog.i18n.DateTimePatterns_shi_Tfng", "goog.i18n.DateTimePatterns_shi_Tfng_MA", "goog.i18n.DateTimePatterns_si_LK", "goog.i18n.DateTimePatterns_sk_SK", "goog.i18n.DateTimePatterns_sl_SI", 
"goog.i18n.DateTimePatterns_smn", "goog.i18n.DateTimePatterns_smn_FI", "goog.i18n.DateTimePatterns_sn", "goog.i18n.DateTimePatterns_sn_ZW", "goog.i18n.DateTimePatterns_so", "goog.i18n.DateTimePatterns_so_DJ", "goog.i18n.DateTimePatterns_so_ET", "goog.i18n.DateTimePatterns_so_KE", "goog.i18n.DateTimePatterns_so_SO", "goog.i18n.DateTimePatterns_sq_AL", "goog.i18n.DateTimePatterns_sq_MK", "goog.i18n.DateTimePatterns_sq_XK", "goog.i18n.DateTimePatterns_sr_Cyrl", "goog.i18n.DateTimePatterns_sr_Cyrl_BA", 
"goog.i18n.DateTimePatterns_sr_Cyrl_ME", "goog.i18n.DateTimePatterns_sr_Cyrl_RS", "goog.i18n.DateTimePatterns_sr_Cyrl_XK", "goog.i18n.DateTimePatterns_sr_Latn", "goog.i18n.DateTimePatterns_sr_Latn_BA", "goog.i18n.DateTimePatterns_sr_Latn_ME", "goog.i18n.DateTimePatterns_sr_Latn_RS", "goog.i18n.DateTimePatterns_sr_Latn_XK", "goog.i18n.DateTimePatterns_sv_AX", "goog.i18n.DateTimePatterns_sv_FI", "goog.i18n.DateTimePatterns_sv_SE", "goog.i18n.DateTimePatterns_sw_CD", "goog.i18n.DateTimePatterns_sw_KE", 
"goog.i18n.DateTimePatterns_sw_TZ", "goog.i18n.DateTimePatterns_sw_UG", "goog.i18n.DateTimePatterns_ta_IN", "goog.i18n.DateTimePatterns_ta_LK", "goog.i18n.DateTimePatterns_ta_MY", "goog.i18n.DateTimePatterns_ta_SG", "goog.i18n.DateTimePatterns_te_IN", "goog.i18n.DateTimePatterns_teo", "goog.i18n.DateTimePatterns_teo_KE", "goog.i18n.DateTimePatterns_teo_UG", "goog.i18n.DateTimePatterns_th_TH", "goog.i18n.DateTimePatterns_ti", "goog.i18n.DateTimePatterns_ti_ER", "goog.i18n.DateTimePatterns_ti_ET", 
"goog.i18n.DateTimePatterns_to", "goog.i18n.DateTimePatterns_to_TO", "goog.i18n.DateTimePatterns_tr_CY", "goog.i18n.DateTimePatterns_tr_TR", "goog.i18n.DateTimePatterns_twq", "goog.i18n.DateTimePatterns_twq_NE", "goog.i18n.DateTimePatterns_tzm", "goog.i18n.DateTimePatterns_tzm_Latn", "goog.i18n.DateTimePatterns_tzm_Latn_MA", "goog.i18n.DateTimePatterns_ug", "goog.i18n.DateTimePatterns_ug_Arab", "goog.i18n.DateTimePatterns_ug_Arab_CN", "goog.i18n.DateTimePatterns_uk_UA", "goog.i18n.DateTimePatterns_ur_IN", 
"goog.i18n.DateTimePatterns_ur_PK", "goog.i18n.DateTimePatterns_uz_Arab", "goog.i18n.DateTimePatterns_uz_Arab_AF", "goog.i18n.DateTimePatterns_uz_Cyrl", "goog.i18n.DateTimePatterns_uz_Cyrl_UZ", "goog.i18n.DateTimePatterns_uz_Latn", "goog.i18n.DateTimePatterns_uz_Latn_UZ", "goog.i18n.DateTimePatterns_vai", "goog.i18n.DateTimePatterns_vai_Latn", "goog.i18n.DateTimePatterns_vai_Latn_LR", "goog.i18n.DateTimePatterns_vai_Vaii", "goog.i18n.DateTimePatterns_vai_Vaii_LR", "goog.i18n.DateTimePatterns_vi_VN", 
"goog.i18n.DateTimePatterns_vun", "goog.i18n.DateTimePatterns_vun_TZ", "goog.i18n.DateTimePatterns_wae", "goog.i18n.DateTimePatterns_wae_CH", "goog.i18n.DateTimePatterns_xog", "goog.i18n.DateTimePatterns_xog_UG", "goog.i18n.DateTimePatterns_yav", "goog.i18n.DateTimePatterns_yav_CM", "goog.i18n.DateTimePatterns_yi", "goog.i18n.DateTimePatterns_yi_001", "goog.i18n.DateTimePatterns_yo", "goog.i18n.DateTimePatterns_yo_BJ", "goog.i18n.DateTimePatterns_yo_NG", "goog.i18n.DateTimePatterns_zgh", "goog.i18n.DateTimePatterns_zgh_MA", 
"goog.i18n.DateTimePatterns_zh_Hans", "goog.i18n.DateTimePatterns_zh_Hans_CN", "goog.i18n.DateTimePatterns_zh_Hans_HK", "goog.i18n.DateTimePatterns_zh_Hans_MO", "goog.i18n.DateTimePatterns_zh_Hans_SG", "goog.i18n.DateTimePatterns_zh_Hant", "goog.i18n.DateTimePatterns_zh_Hant_HK", "goog.i18n.DateTimePatterns_zh_Hant_MO", "goog.i18n.DateTimePatterns_zh_Hant_TW", "goog.i18n.DateTimePatterns_zu_ZA"], ["goog.i18n.DateTimePatterns"], false);
goog.addDependency("i18n/datetimesymbols.js", ["goog.i18n.DateTimeSymbols", "goog.i18n.DateTimeSymbols_af", "goog.i18n.DateTimeSymbols_am", "goog.i18n.DateTimeSymbols_ar", "goog.i18n.DateTimeSymbols_az", "goog.i18n.DateTimeSymbols_bg", "goog.i18n.DateTimeSymbols_bn", "goog.i18n.DateTimeSymbols_br", "goog.i18n.DateTimeSymbols_ca", "goog.i18n.DateTimeSymbols_chr", "goog.i18n.DateTimeSymbols_cs", "goog.i18n.DateTimeSymbols_cy", "goog.i18n.DateTimeSymbols_da", "goog.i18n.DateTimeSymbols_de", "goog.i18n.DateTimeSymbols_de_AT", 
"goog.i18n.DateTimeSymbols_de_CH", "goog.i18n.DateTimeSymbols_el", "goog.i18n.DateTimeSymbols_en", "goog.i18n.DateTimeSymbols_en_AU", "goog.i18n.DateTimeSymbols_en_GB", "goog.i18n.DateTimeSymbols_en_IE", "goog.i18n.DateTimeSymbols_en_IN", "goog.i18n.DateTimeSymbols_en_ISO", "goog.i18n.DateTimeSymbols_en_SG", "goog.i18n.DateTimeSymbols_en_US", "goog.i18n.DateTimeSymbols_en_ZA", "goog.i18n.DateTimeSymbols_es", "goog.i18n.DateTimeSymbols_es_419", "goog.i18n.DateTimeSymbols_es_ES", "goog.i18n.DateTimeSymbols_et", 
"goog.i18n.DateTimeSymbols_eu", "goog.i18n.DateTimeSymbols_fa", "goog.i18n.DateTimeSymbols_fi", "goog.i18n.DateTimeSymbols_fil", "goog.i18n.DateTimeSymbols_fr", "goog.i18n.DateTimeSymbols_fr_CA", "goog.i18n.DateTimeSymbols_ga", "goog.i18n.DateTimeSymbols_gl", "goog.i18n.DateTimeSymbols_gsw", "goog.i18n.DateTimeSymbols_gu", "goog.i18n.DateTimeSymbols_haw", "goog.i18n.DateTimeSymbols_he", "goog.i18n.DateTimeSymbols_hi", "goog.i18n.DateTimeSymbols_hr", "goog.i18n.DateTimeSymbols_hu", "goog.i18n.DateTimeSymbols_hy", 
"goog.i18n.DateTimeSymbols_id", "goog.i18n.DateTimeSymbols_in", "goog.i18n.DateTimeSymbols_is", "goog.i18n.DateTimeSymbols_it", "goog.i18n.DateTimeSymbols_iw", "goog.i18n.DateTimeSymbols_ja", "goog.i18n.DateTimeSymbols_ka", "goog.i18n.DateTimeSymbols_kk", "goog.i18n.DateTimeSymbols_km", "goog.i18n.DateTimeSymbols_kn", "goog.i18n.DateTimeSymbols_ko", "goog.i18n.DateTimeSymbols_ky", "goog.i18n.DateTimeSymbols_ln", "goog.i18n.DateTimeSymbols_lo", "goog.i18n.DateTimeSymbols_lt", "goog.i18n.DateTimeSymbols_lv", 
"goog.i18n.DateTimeSymbols_mk", "goog.i18n.DateTimeSymbols_ml", "goog.i18n.DateTimeSymbols_mn", "goog.i18n.DateTimeSymbols_mr", "goog.i18n.DateTimeSymbols_ms", "goog.i18n.DateTimeSymbols_mt", "goog.i18n.DateTimeSymbols_my", "goog.i18n.DateTimeSymbols_nb", "goog.i18n.DateTimeSymbols_ne", "goog.i18n.DateTimeSymbols_nl", "goog.i18n.DateTimeSymbols_no", "goog.i18n.DateTimeSymbols_no_NO", "goog.i18n.DateTimeSymbols_or", "goog.i18n.DateTimeSymbols_pa", "goog.i18n.DateTimeSymbols_pl", "goog.i18n.DateTimeSymbols_pt", 
"goog.i18n.DateTimeSymbols_pt_BR", "goog.i18n.DateTimeSymbols_pt_PT", "goog.i18n.DateTimeSymbols_ro", "goog.i18n.DateTimeSymbols_ru", "goog.i18n.DateTimeSymbols_si", "goog.i18n.DateTimeSymbols_sk", "goog.i18n.DateTimeSymbols_sl", "goog.i18n.DateTimeSymbols_sq", "goog.i18n.DateTimeSymbols_sr", "goog.i18n.DateTimeSymbols_sv", "goog.i18n.DateTimeSymbols_sw", "goog.i18n.DateTimeSymbols_ta", "goog.i18n.DateTimeSymbols_te", "goog.i18n.DateTimeSymbols_th", "goog.i18n.DateTimeSymbols_tl", "goog.i18n.DateTimeSymbols_tr", 
"goog.i18n.DateTimeSymbols_uk", "goog.i18n.DateTimeSymbols_ur", "goog.i18n.DateTimeSymbols_uz", "goog.i18n.DateTimeSymbols_vi", "goog.i18n.DateTimeSymbols_zh", "goog.i18n.DateTimeSymbols_zh_CN", "goog.i18n.DateTimeSymbols_zh_HK", "goog.i18n.DateTimeSymbols_zh_TW", "goog.i18n.DateTimeSymbols_zu"], [], false);
goog.addDependency("i18n/datetimesymbolsext.js", ["goog.i18n.DateTimeSymbolsExt", "goog.i18n.DateTimeSymbols_af_NA", "goog.i18n.DateTimeSymbols_af_ZA", "goog.i18n.DateTimeSymbols_agq", "goog.i18n.DateTimeSymbols_agq_CM", "goog.i18n.DateTimeSymbols_ak", "goog.i18n.DateTimeSymbols_ak_GH", "goog.i18n.DateTimeSymbols_am_ET", "goog.i18n.DateTimeSymbols_ar_001", "goog.i18n.DateTimeSymbols_ar_AE", "goog.i18n.DateTimeSymbols_ar_BH", "goog.i18n.DateTimeSymbols_ar_DJ", "goog.i18n.DateTimeSymbols_ar_DZ", "goog.i18n.DateTimeSymbols_ar_EG", 
"goog.i18n.DateTimeSymbols_ar_EH", "goog.i18n.DateTimeSymbols_ar_ER", "goog.i18n.DateTimeSymbols_ar_IL", "goog.i18n.DateTimeSymbols_ar_IQ", "goog.i18n.DateTimeSymbols_ar_JO", "goog.i18n.DateTimeSymbols_ar_KM", "goog.i18n.DateTimeSymbols_ar_KW", "goog.i18n.DateTimeSymbols_ar_LB", "goog.i18n.DateTimeSymbols_ar_LY", "goog.i18n.DateTimeSymbols_ar_MA", "goog.i18n.DateTimeSymbols_ar_MR", "goog.i18n.DateTimeSymbols_ar_OM", "goog.i18n.DateTimeSymbols_ar_PS", "goog.i18n.DateTimeSymbols_ar_QA", "goog.i18n.DateTimeSymbols_ar_SA", 
"goog.i18n.DateTimeSymbols_ar_SD", "goog.i18n.DateTimeSymbols_ar_SO", "goog.i18n.DateTimeSymbols_ar_SS", "goog.i18n.DateTimeSymbols_ar_SY", "goog.i18n.DateTimeSymbols_ar_TD", "goog.i18n.DateTimeSymbols_ar_TN", "goog.i18n.DateTimeSymbols_ar_YE", "goog.i18n.DateTimeSymbols_as", "goog.i18n.DateTimeSymbols_as_IN", "goog.i18n.DateTimeSymbols_asa", "goog.i18n.DateTimeSymbols_asa_TZ", "goog.i18n.DateTimeSymbols_ast", "goog.i18n.DateTimeSymbols_ast_ES", "goog.i18n.DateTimeSymbols_az_Cyrl", "goog.i18n.DateTimeSymbols_az_Cyrl_AZ", 
"goog.i18n.DateTimeSymbols_az_Latn", "goog.i18n.DateTimeSymbols_az_Latn_AZ", "goog.i18n.DateTimeSymbols_bas", "goog.i18n.DateTimeSymbols_bas_CM", "goog.i18n.DateTimeSymbols_be", "goog.i18n.DateTimeSymbols_be_BY", "goog.i18n.DateTimeSymbols_bem", "goog.i18n.DateTimeSymbols_bem_ZM", "goog.i18n.DateTimeSymbols_bez", "goog.i18n.DateTimeSymbols_bez_TZ", "goog.i18n.DateTimeSymbols_bg_BG", "goog.i18n.DateTimeSymbols_bm", "goog.i18n.DateTimeSymbols_bm_Latn", "goog.i18n.DateTimeSymbols_bm_Latn_ML", "goog.i18n.DateTimeSymbols_bn_BD", 
"goog.i18n.DateTimeSymbols_bn_IN", "goog.i18n.DateTimeSymbols_bo", "goog.i18n.DateTimeSymbols_bo_CN", "goog.i18n.DateTimeSymbols_bo_IN", "goog.i18n.DateTimeSymbols_br_FR", "goog.i18n.DateTimeSymbols_brx", "goog.i18n.DateTimeSymbols_brx_IN", "goog.i18n.DateTimeSymbols_bs", "goog.i18n.DateTimeSymbols_bs_Cyrl", "goog.i18n.DateTimeSymbols_bs_Cyrl_BA", "goog.i18n.DateTimeSymbols_bs_Latn", "goog.i18n.DateTimeSymbols_bs_Latn_BA", "goog.i18n.DateTimeSymbols_ca_AD", "goog.i18n.DateTimeSymbols_ca_ES", "goog.i18n.DateTimeSymbols_ca_ES_VALENCIA", 
"goog.i18n.DateTimeSymbols_ca_FR", "goog.i18n.DateTimeSymbols_ca_IT", "goog.i18n.DateTimeSymbols_cgg", "goog.i18n.DateTimeSymbols_cgg_UG", "goog.i18n.DateTimeSymbols_chr_US", "goog.i18n.DateTimeSymbols_ckb", "goog.i18n.DateTimeSymbols_ckb_Arab", "goog.i18n.DateTimeSymbols_ckb_Arab_IQ", "goog.i18n.DateTimeSymbols_ckb_Arab_IR", "goog.i18n.DateTimeSymbols_ckb_IQ", "goog.i18n.DateTimeSymbols_ckb_IR", "goog.i18n.DateTimeSymbols_ckb_Latn", "goog.i18n.DateTimeSymbols_ckb_Latn_IQ", "goog.i18n.DateTimeSymbols_cs_CZ", 
"goog.i18n.DateTimeSymbols_cy_GB", "goog.i18n.DateTimeSymbols_da_DK", "goog.i18n.DateTimeSymbols_da_GL", "goog.i18n.DateTimeSymbols_dav", "goog.i18n.DateTimeSymbols_dav_KE", "goog.i18n.DateTimeSymbols_de_BE", "goog.i18n.DateTimeSymbols_de_DE", "goog.i18n.DateTimeSymbols_de_LI", "goog.i18n.DateTimeSymbols_de_LU", "goog.i18n.DateTimeSymbols_dje", "goog.i18n.DateTimeSymbols_dje_NE", "goog.i18n.DateTimeSymbols_dsb", "goog.i18n.DateTimeSymbols_dsb_DE", "goog.i18n.DateTimeSymbols_dua", "goog.i18n.DateTimeSymbols_dua_CM", 
"goog.i18n.DateTimeSymbols_dyo", "goog.i18n.DateTimeSymbols_dyo_SN", "goog.i18n.DateTimeSymbols_dz", "goog.i18n.DateTimeSymbols_dz_BT", "goog.i18n.DateTimeSymbols_ebu", "goog.i18n.DateTimeSymbols_ebu_KE", "goog.i18n.DateTimeSymbols_ee", "goog.i18n.DateTimeSymbols_ee_GH", "goog.i18n.DateTimeSymbols_ee_TG", "goog.i18n.DateTimeSymbols_el_CY", "goog.i18n.DateTimeSymbols_el_GR", "goog.i18n.DateTimeSymbols_en_001", "goog.i18n.DateTimeSymbols_en_150", "goog.i18n.DateTimeSymbols_en_AG", "goog.i18n.DateTimeSymbols_en_AI", 
"goog.i18n.DateTimeSymbols_en_AS", "goog.i18n.DateTimeSymbols_en_BB", "goog.i18n.DateTimeSymbols_en_BE", "goog.i18n.DateTimeSymbols_en_BM", "goog.i18n.DateTimeSymbols_en_BS", "goog.i18n.DateTimeSymbols_en_BW", "goog.i18n.DateTimeSymbols_en_BZ", "goog.i18n.DateTimeSymbols_en_CA", "goog.i18n.DateTimeSymbols_en_CC", "goog.i18n.DateTimeSymbols_en_CK", "goog.i18n.DateTimeSymbols_en_CM", "goog.i18n.DateTimeSymbols_en_CX", "goog.i18n.DateTimeSymbols_en_DG", "goog.i18n.DateTimeSymbols_en_DM", "goog.i18n.DateTimeSymbols_en_ER", 
"goog.i18n.DateTimeSymbols_en_FJ", "goog.i18n.DateTimeSymbols_en_FK", "goog.i18n.DateTimeSymbols_en_FM", "goog.i18n.DateTimeSymbols_en_GD", "goog.i18n.DateTimeSymbols_en_GG", "goog.i18n.DateTimeSymbols_en_GH", "goog.i18n.DateTimeSymbols_en_GI", "goog.i18n.DateTimeSymbols_en_GM", "goog.i18n.DateTimeSymbols_en_GU", "goog.i18n.DateTimeSymbols_en_GY", "goog.i18n.DateTimeSymbols_en_HK", "goog.i18n.DateTimeSymbols_en_IM", "goog.i18n.DateTimeSymbols_en_IO", "goog.i18n.DateTimeSymbols_en_JE", "goog.i18n.DateTimeSymbols_en_JM", 
"goog.i18n.DateTimeSymbols_en_KE", "goog.i18n.DateTimeSymbols_en_KI", "goog.i18n.DateTimeSymbols_en_KN", "goog.i18n.DateTimeSymbols_en_KY", "goog.i18n.DateTimeSymbols_en_LC", "goog.i18n.DateTimeSymbols_en_LR", "goog.i18n.DateTimeSymbols_en_LS", "goog.i18n.DateTimeSymbols_en_MG", "goog.i18n.DateTimeSymbols_en_MH", "goog.i18n.DateTimeSymbols_en_MO", "goog.i18n.DateTimeSymbols_en_MP", "goog.i18n.DateTimeSymbols_en_MS", "goog.i18n.DateTimeSymbols_en_MT", "goog.i18n.DateTimeSymbols_en_MU", "goog.i18n.DateTimeSymbols_en_MW", 
"goog.i18n.DateTimeSymbols_en_MY", "goog.i18n.DateTimeSymbols_en_NA", "goog.i18n.DateTimeSymbols_en_NF", "goog.i18n.DateTimeSymbols_en_NG", "goog.i18n.DateTimeSymbols_en_NR", "goog.i18n.DateTimeSymbols_en_NU", "goog.i18n.DateTimeSymbols_en_NZ", "goog.i18n.DateTimeSymbols_en_PG", "goog.i18n.DateTimeSymbols_en_PH", "goog.i18n.DateTimeSymbols_en_PK", "goog.i18n.DateTimeSymbols_en_PN", "goog.i18n.DateTimeSymbols_en_PR", "goog.i18n.DateTimeSymbols_en_PW", "goog.i18n.DateTimeSymbols_en_RW", "goog.i18n.DateTimeSymbols_en_SB", 
"goog.i18n.DateTimeSymbols_en_SC", "goog.i18n.DateTimeSymbols_en_SD", "goog.i18n.DateTimeSymbols_en_SH", "goog.i18n.DateTimeSymbols_en_SL", "goog.i18n.DateTimeSymbols_en_SS", "goog.i18n.DateTimeSymbols_en_SX", "goog.i18n.DateTimeSymbols_en_SZ", "goog.i18n.DateTimeSymbols_en_TC", "goog.i18n.DateTimeSymbols_en_TK", "goog.i18n.DateTimeSymbols_en_TO", "goog.i18n.DateTimeSymbols_en_TT", "goog.i18n.DateTimeSymbols_en_TV", "goog.i18n.DateTimeSymbols_en_TZ", "goog.i18n.DateTimeSymbols_en_UG", "goog.i18n.DateTimeSymbols_en_UM", 
"goog.i18n.DateTimeSymbols_en_VC", "goog.i18n.DateTimeSymbols_en_VG", "goog.i18n.DateTimeSymbols_en_VI", "goog.i18n.DateTimeSymbols_en_VU", "goog.i18n.DateTimeSymbols_en_WS", "goog.i18n.DateTimeSymbols_en_ZM", "goog.i18n.DateTimeSymbols_en_ZW", "goog.i18n.DateTimeSymbols_eo", "goog.i18n.DateTimeSymbols_eo_001", "goog.i18n.DateTimeSymbols_es_AR", "goog.i18n.DateTimeSymbols_es_BO", "goog.i18n.DateTimeSymbols_es_CL", "goog.i18n.DateTimeSymbols_es_CO", "goog.i18n.DateTimeSymbols_es_CR", "goog.i18n.DateTimeSymbols_es_CU", 
"goog.i18n.DateTimeSymbols_es_DO", "goog.i18n.DateTimeSymbols_es_EA", "goog.i18n.DateTimeSymbols_es_EC", "goog.i18n.DateTimeSymbols_es_GQ", "goog.i18n.DateTimeSymbols_es_GT", "goog.i18n.DateTimeSymbols_es_HN", "goog.i18n.DateTimeSymbols_es_IC", "goog.i18n.DateTimeSymbols_es_MX", "goog.i18n.DateTimeSymbols_es_NI", "goog.i18n.DateTimeSymbols_es_PA", "goog.i18n.DateTimeSymbols_es_PE", "goog.i18n.DateTimeSymbols_es_PH", "goog.i18n.DateTimeSymbols_es_PR", "goog.i18n.DateTimeSymbols_es_PY", "goog.i18n.DateTimeSymbols_es_SV", 
"goog.i18n.DateTimeSymbols_es_US", "goog.i18n.DateTimeSymbols_es_UY", "goog.i18n.DateTimeSymbols_es_VE", "goog.i18n.DateTimeSymbols_et_EE", "goog.i18n.DateTimeSymbols_eu_ES", "goog.i18n.DateTimeSymbols_ewo", "goog.i18n.DateTimeSymbols_ewo_CM", "goog.i18n.DateTimeSymbols_fa_AF", "goog.i18n.DateTimeSymbols_fa_IR", "goog.i18n.DateTimeSymbols_ff", "goog.i18n.DateTimeSymbols_ff_CM", "goog.i18n.DateTimeSymbols_ff_GN", "goog.i18n.DateTimeSymbols_ff_MR", "goog.i18n.DateTimeSymbols_ff_SN", "goog.i18n.DateTimeSymbols_fi_FI", 
"goog.i18n.DateTimeSymbols_fil_PH", "goog.i18n.DateTimeSymbols_fo", "goog.i18n.DateTimeSymbols_fo_FO", "goog.i18n.DateTimeSymbols_fr_BE", "goog.i18n.DateTimeSymbols_fr_BF", "goog.i18n.DateTimeSymbols_fr_BI", "goog.i18n.DateTimeSymbols_fr_BJ", "goog.i18n.DateTimeSymbols_fr_BL", "goog.i18n.DateTimeSymbols_fr_CD", "goog.i18n.DateTimeSymbols_fr_CF", "goog.i18n.DateTimeSymbols_fr_CG", "goog.i18n.DateTimeSymbols_fr_CH", "goog.i18n.DateTimeSymbols_fr_CI", "goog.i18n.DateTimeSymbols_fr_CM", "goog.i18n.DateTimeSymbols_fr_DJ", 
"goog.i18n.DateTimeSymbols_fr_DZ", "goog.i18n.DateTimeSymbols_fr_FR", "goog.i18n.DateTimeSymbols_fr_GA", "goog.i18n.DateTimeSymbols_fr_GF", "goog.i18n.DateTimeSymbols_fr_GN", "goog.i18n.DateTimeSymbols_fr_GP", "goog.i18n.DateTimeSymbols_fr_GQ", "goog.i18n.DateTimeSymbols_fr_HT", "goog.i18n.DateTimeSymbols_fr_KM", "goog.i18n.DateTimeSymbols_fr_LU", "goog.i18n.DateTimeSymbols_fr_MA", "goog.i18n.DateTimeSymbols_fr_MC", "goog.i18n.DateTimeSymbols_fr_MF", "goog.i18n.DateTimeSymbols_fr_MG", "goog.i18n.DateTimeSymbols_fr_ML", 
"goog.i18n.DateTimeSymbols_fr_MQ", "goog.i18n.DateTimeSymbols_fr_MR", "goog.i18n.DateTimeSymbols_fr_MU", "goog.i18n.DateTimeSymbols_fr_NC", "goog.i18n.DateTimeSymbols_fr_NE", "goog.i18n.DateTimeSymbols_fr_PF", "goog.i18n.DateTimeSymbols_fr_PM", "goog.i18n.DateTimeSymbols_fr_RE", "goog.i18n.DateTimeSymbols_fr_RW", "goog.i18n.DateTimeSymbols_fr_SC", "goog.i18n.DateTimeSymbols_fr_SN", "goog.i18n.DateTimeSymbols_fr_SY", "goog.i18n.DateTimeSymbols_fr_TD", "goog.i18n.DateTimeSymbols_fr_TG", "goog.i18n.DateTimeSymbols_fr_TN", 
"goog.i18n.DateTimeSymbols_fr_VU", "goog.i18n.DateTimeSymbols_fr_WF", "goog.i18n.DateTimeSymbols_fr_YT", "goog.i18n.DateTimeSymbols_fur", "goog.i18n.DateTimeSymbols_fur_IT", "goog.i18n.DateTimeSymbols_fy", "goog.i18n.DateTimeSymbols_fy_NL", "goog.i18n.DateTimeSymbols_ga_IE", "goog.i18n.DateTimeSymbols_gd", "goog.i18n.DateTimeSymbols_gd_GB", "goog.i18n.DateTimeSymbols_gl_ES", "goog.i18n.DateTimeSymbols_gsw_CH", "goog.i18n.DateTimeSymbols_gsw_FR", "goog.i18n.DateTimeSymbols_gsw_LI", "goog.i18n.DateTimeSymbols_gu_IN", 
"goog.i18n.DateTimeSymbols_guz", "goog.i18n.DateTimeSymbols_guz_KE", "goog.i18n.DateTimeSymbols_gv", "goog.i18n.DateTimeSymbols_gv_IM", "goog.i18n.DateTimeSymbols_ha", "goog.i18n.DateTimeSymbols_ha_Latn", "goog.i18n.DateTimeSymbols_ha_Latn_GH", "goog.i18n.DateTimeSymbols_ha_Latn_NE", "goog.i18n.DateTimeSymbols_ha_Latn_NG", "goog.i18n.DateTimeSymbols_haw_US", "goog.i18n.DateTimeSymbols_he_IL", "goog.i18n.DateTimeSymbols_hi_IN", "goog.i18n.DateTimeSymbols_hr_BA", "goog.i18n.DateTimeSymbols_hr_HR", 
"goog.i18n.DateTimeSymbols_hsb", "goog.i18n.DateTimeSymbols_hsb_DE", "goog.i18n.DateTimeSymbols_hu_HU", "goog.i18n.DateTimeSymbols_hy_AM", "goog.i18n.DateTimeSymbols_id_ID", "goog.i18n.DateTimeSymbols_ig", "goog.i18n.DateTimeSymbols_ig_NG", "goog.i18n.DateTimeSymbols_ii", "goog.i18n.DateTimeSymbols_ii_CN", "goog.i18n.DateTimeSymbols_is_IS", "goog.i18n.DateTimeSymbols_it_CH", "goog.i18n.DateTimeSymbols_it_IT", "goog.i18n.DateTimeSymbols_it_SM", "goog.i18n.DateTimeSymbols_ja_JP", "goog.i18n.DateTimeSymbols_jgo", 
"goog.i18n.DateTimeSymbols_jgo_CM", "goog.i18n.DateTimeSymbols_jmc", "goog.i18n.DateTimeSymbols_jmc_TZ", "goog.i18n.DateTimeSymbols_ka_GE", "goog.i18n.DateTimeSymbols_kab", "goog.i18n.DateTimeSymbols_kab_DZ", "goog.i18n.DateTimeSymbols_kam", "goog.i18n.DateTimeSymbols_kam_KE", "goog.i18n.DateTimeSymbols_kde", "goog.i18n.DateTimeSymbols_kde_TZ", "goog.i18n.DateTimeSymbols_kea", "goog.i18n.DateTimeSymbols_kea_CV", "goog.i18n.DateTimeSymbols_khq", "goog.i18n.DateTimeSymbols_khq_ML", "goog.i18n.DateTimeSymbols_ki", 
"goog.i18n.DateTimeSymbols_ki_KE", "goog.i18n.DateTimeSymbols_kk_Cyrl", "goog.i18n.DateTimeSymbols_kk_Cyrl_KZ", "goog.i18n.DateTimeSymbols_kkj", "goog.i18n.DateTimeSymbols_kkj_CM", "goog.i18n.DateTimeSymbols_kl", "goog.i18n.DateTimeSymbols_kl_GL", "goog.i18n.DateTimeSymbols_kln", "goog.i18n.DateTimeSymbols_kln_KE", "goog.i18n.DateTimeSymbols_km_KH", "goog.i18n.DateTimeSymbols_kn_IN", "goog.i18n.DateTimeSymbols_ko_KP", "goog.i18n.DateTimeSymbols_ko_KR", "goog.i18n.DateTimeSymbols_kok", "goog.i18n.DateTimeSymbols_kok_IN", 
"goog.i18n.DateTimeSymbols_ks", "goog.i18n.DateTimeSymbols_ks_Arab", "goog.i18n.DateTimeSymbols_ks_Arab_IN", "goog.i18n.DateTimeSymbols_ksb", "goog.i18n.DateTimeSymbols_ksb_TZ", "goog.i18n.DateTimeSymbols_ksf", "goog.i18n.DateTimeSymbols_ksf_CM", "goog.i18n.DateTimeSymbols_ksh", "goog.i18n.DateTimeSymbols_ksh_DE", "goog.i18n.DateTimeSymbols_kw", "goog.i18n.DateTimeSymbols_kw_GB", "goog.i18n.DateTimeSymbols_ky_Cyrl", "goog.i18n.DateTimeSymbols_ky_Cyrl_KG", "goog.i18n.DateTimeSymbols_lag", "goog.i18n.DateTimeSymbols_lag_TZ", 
"goog.i18n.DateTimeSymbols_lb", "goog.i18n.DateTimeSymbols_lb_LU", "goog.i18n.DateTimeSymbols_lg", "goog.i18n.DateTimeSymbols_lg_UG", "goog.i18n.DateTimeSymbols_lkt", "goog.i18n.DateTimeSymbols_lkt_US", "goog.i18n.DateTimeSymbols_ln_AO", "goog.i18n.DateTimeSymbols_ln_CD", "goog.i18n.DateTimeSymbols_ln_CF", "goog.i18n.DateTimeSymbols_ln_CG", "goog.i18n.DateTimeSymbols_lo_LA", "goog.i18n.DateTimeSymbols_lt_LT", "goog.i18n.DateTimeSymbols_lu", "goog.i18n.DateTimeSymbols_lu_CD", "goog.i18n.DateTimeSymbols_luo", 
"goog.i18n.DateTimeSymbols_luo_KE", "goog.i18n.DateTimeSymbols_luy", "goog.i18n.DateTimeSymbols_luy_KE", "goog.i18n.DateTimeSymbols_lv_LV", "goog.i18n.DateTimeSymbols_mas", "goog.i18n.DateTimeSymbols_mas_KE", "goog.i18n.DateTimeSymbols_mas_TZ", "goog.i18n.DateTimeSymbols_mer", "goog.i18n.DateTimeSymbols_mer_KE", "goog.i18n.DateTimeSymbols_mfe", "goog.i18n.DateTimeSymbols_mfe_MU", "goog.i18n.DateTimeSymbols_mg", "goog.i18n.DateTimeSymbols_mg_MG", "goog.i18n.DateTimeSymbols_mgh", "goog.i18n.DateTimeSymbols_mgh_MZ", 
"goog.i18n.DateTimeSymbols_mgo", "goog.i18n.DateTimeSymbols_mgo_CM", "goog.i18n.DateTimeSymbols_mk_MK", "goog.i18n.DateTimeSymbols_ml_IN", "goog.i18n.DateTimeSymbols_mn_Cyrl", "goog.i18n.DateTimeSymbols_mn_Cyrl_MN", "goog.i18n.DateTimeSymbols_mr_IN", "goog.i18n.DateTimeSymbols_ms_Latn", "goog.i18n.DateTimeSymbols_ms_Latn_BN", "goog.i18n.DateTimeSymbols_ms_Latn_MY", "goog.i18n.DateTimeSymbols_ms_Latn_SG", "goog.i18n.DateTimeSymbols_mt_MT", "goog.i18n.DateTimeSymbols_mua", "goog.i18n.DateTimeSymbols_mua_CM", 
"goog.i18n.DateTimeSymbols_my_MM", "goog.i18n.DateTimeSymbols_naq", "goog.i18n.DateTimeSymbols_naq_NA", "goog.i18n.DateTimeSymbols_nb_NO", "goog.i18n.DateTimeSymbols_nb_SJ", "goog.i18n.DateTimeSymbols_nd", "goog.i18n.DateTimeSymbols_nd_ZW", "goog.i18n.DateTimeSymbols_ne_IN", "goog.i18n.DateTimeSymbols_ne_NP", "goog.i18n.DateTimeSymbols_nl_AW", "goog.i18n.DateTimeSymbols_nl_BE", "goog.i18n.DateTimeSymbols_nl_BQ", "goog.i18n.DateTimeSymbols_nl_CW", "goog.i18n.DateTimeSymbols_nl_NL", "goog.i18n.DateTimeSymbols_nl_SR", 
"goog.i18n.DateTimeSymbols_nl_SX", "goog.i18n.DateTimeSymbols_nmg", "goog.i18n.DateTimeSymbols_nmg_CM", "goog.i18n.DateTimeSymbols_nn", "goog.i18n.DateTimeSymbols_nn_NO", "goog.i18n.DateTimeSymbols_nnh", "goog.i18n.DateTimeSymbols_nnh_CM", "goog.i18n.DateTimeSymbols_nus", "goog.i18n.DateTimeSymbols_nus_SD", "goog.i18n.DateTimeSymbols_nyn", "goog.i18n.DateTimeSymbols_nyn_UG", "goog.i18n.DateTimeSymbols_om", "goog.i18n.DateTimeSymbols_om_ET", "goog.i18n.DateTimeSymbols_om_KE", "goog.i18n.DateTimeSymbols_or_IN", 
"goog.i18n.DateTimeSymbols_os", "goog.i18n.DateTimeSymbols_os_GE", "goog.i18n.DateTimeSymbols_os_RU", "goog.i18n.DateTimeSymbols_pa_Arab", "goog.i18n.DateTimeSymbols_pa_Arab_PK", "goog.i18n.DateTimeSymbols_pa_Guru", "goog.i18n.DateTimeSymbols_pa_Guru_IN", "goog.i18n.DateTimeSymbols_pl_PL", "goog.i18n.DateTimeSymbols_ps", "goog.i18n.DateTimeSymbols_ps_AF", "goog.i18n.DateTimeSymbols_pt_AO", "goog.i18n.DateTimeSymbols_pt_CV", "goog.i18n.DateTimeSymbols_pt_GW", "goog.i18n.DateTimeSymbols_pt_MO", "goog.i18n.DateTimeSymbols_pt_MZ", 
"goog.i18n.DateTimeSymbols_pt_ST", "goog.i18n.DateTimeSymbols_pt_TL", "goog.i18n.DateTimeSymbols_qu", "goog.i18n.DateTimeSymbols_qu_BO", "goog.i18n.DateTimeSymbols_qu_EC", "goog.i18n.DateTimeSymbols_qu_PE", "goog.i18n.DateTimeSymbols_rm", "goog.i18n.DateTimeSymbols_rm_CH", "goog.i18n.DateTimeSymbols_rn", "goog.i18n.DateTimeSymbols_rn_BI", "goog.i18n.DateTimeSymbols_ro_MD", "goog.i18n.DateTimeSymbols_ro_RO", "goog.i18n.DateTimeSymbols_rof", "goog.i18n.DateTimeSymbols_rof_TZ", "goog.i18n.DateTimeSymbols_ru_BY", 
"goog.i18n.DateTimeSymbols_ru_KG", "goog.i18n.DateTimeSymbols_ru_KZ", "goog.i18n.DateTimeSymbols_ru_MD", "goog.i18n.DateTimeSymbols_ru_RU", "goog.i18n.DateTimeSymbols_ru_UA", "goog.i18n.DateTimeSymbols_rw", "goog.i18n.DateTimeSymbols_rw_RW", "goog.i18n.DateTimeSymbols_rwk", "goog.i18n.DateTimeSymbols_rwk_TZ", "goog.i18n.DateTimeSymbols_sah", "goog.i18n.DateTimeSymbols_sah_RU", "goog.i18n.DateTimeSymbols_saq", "goog.i18n.DateTimeSymbols_saq_KE", "goog.i18n.DateTimeSymbols_sbp", "goog.i18n.DateTimeSymbols_sbp_TZ", 
"goog.i18n.DateTimeSymbols_se", "goog.i18n.DateTimeSymbols_se_FI", "goog.i18n.DateTimeSymbols_se_NO", "goog.i18n.DateTimeSymbols_se_SE", "goog.i18n.DateTimeSymbols_seh", "goog.i18n.DateTimeSymbols_seh_MZ", "goog.i18n.DateTimeSymbols_ses", "goog.i18n.DateTimeSymbols_ses_ML", "goog.i18n.DateTimeSymbols_sg", "goog.i18n.DateTimeSymbols_sg_CF", "goog.i18n.DateTimeSymbols_shi", "goog.i18n.DateTimeSymbols_shi_Latn", "goog.i18n.DateTimeSymbols_shi_Latn_MA", "goog.i18n.DateTimeSymbols_shi_Tfng", "goog.i18n.DateTimeSymbols_shi_Tfng_MA", 
"goog.i18n.DateTimeSymbols_si_LK", "goog.i18n.DateTimeSymbols_sk_SK", "goog.i18n.DateTimeSymbols_sl_SI", "goog.i18n.DateTimeSymbols_smn", "goog.i18n.DateTimeSymbols_smn_FI", "goog.i18n.DateTimeSymbols_sn", "goog.i18n.DateTimeSymbols_sn_ZW", "goog.i18n.DateTimeSymbols_so", "goog.i18n.DateTimeSymbols_so_DJ", "goog.i18n.DateTimeSymbols_so_ET", "goog.i18n.DateTimeSymbols_so_KE", "goog.i18n.DateTimeSymbols_so_SO", "goog.i18n.DateTimeSymbols_sq_AL", "goog.i18n.DateTimeSymbols_sq_MK", "goog.i18n.DateTimeSymbols_sq_XK", 
"goog.i18n.DateTimeSymbols_sr_Cyrl", "goog.i18n.DateTimeSymbols_sr_Cyrl_BA", "goog.i18n.DateTimeSymbols_sr_Cyrl_ME", "goog.i18n.DateTimeSymbols_sr_Cyrl_RS", "goog.i18n.DateTimeSymbols_sr_Cyrl_XK", "goog.i18n.DateTimeSymbols_sr_Latn", "goog.i18n.DateTimeSymbols_sr_Latn_BA", "goog.i18n.DateTimeSymbols_sr_Latn_ME", "goog.i18n.DateTimeSymbols_sr_Latn_RS", "goog.i18n.DateTimeSymbols_sr_Latn_XK", "goog.i18n.DateTimeSymbols_sv_AX", "goog.i18n.DateTimeSymbols_sv_FI", "goog.i18n.DateTimeSymbols_sv_SE", "goog.i18n.DateTimeSymbols_sw_CD", 
"goog.i18n.DateTimeSymbols_sw_KE", "goog.i18n.DateTimeSymbols_sw_TZ", "goog.i18n.DateTimeSymbols_sw_UG", "goog.i18n.DateTimeSymbols_ta_IN", "goog.i18n.DateTimeSymbols_ta_LK", "goog.i18n.DateTimeSymbols_ta_MY", "goog.i18n.DateTimeSymbols_ta_SG", "goog.i18n.DateTimeSymbols_te_IN", "goog.i18n.DateTimeSymbols_teo", "goog.i18n.DateTimeSymbols_teo_KE", "goog.i18n.DateTimeSymbols_teo_UG", "goog.i18n.DateTimeSymbols_th_TH", "goog.i18n.DateTimeSymbols_ti", "goog.i18n.DateTimeSymbols_ti_ER", "goog.i18n.DateTimeSymbols_ti_ET", 
"goog.i18n.DateTimeSymbols_to", "goog.i18n.DateTimeSymbols_to_TO", "goog.i18n.DateTimeSymbols_tr_CY", "goog.i18n.DateTimeSymbols_tr_TR", "goog.i18n.DateTimeSymbols_twq", "goog.i18n.DateTimeSymbols_twq_NE", "goog.i18n.DateTimeSymbols_tzm", "goog.i18n.DateTimeSymbols_tzm_Latn", "goog.i18n.DateTimeSymbols_tzm_Latn_MA", "goog.i18n.DateTimeSymbols_ug", "goog.i18n.DateTimeSymbols_ug_Arab", "goog.i18n.DateTimeSymbols_ug_Arab_CN", "goog.i18n.DateTimeSymbols_uk_UA", "goog.i18n.DateTimeSymbols_ur_IN", "goog.i18n.DateTimeSymbols_ur_PK", 
"goog.i18n.DateTimeSymbols_uz_Arab", "goog.i18n.DateTimeSymbols_uz_Arab_AF", "goog.i18n.DateTimeSymbols_uz_Cyrl", "goog.i18n.DateTimeSymbols_uz_Cyrl_UZ", "goog.i18n.DateTimeSymbols_uz_Latn", "goog.i18n.DateTimeSymbols_uz_Latn_UZ", "goog.i18n.DateTimeSymbols_vai", "goog.i18n.DateTimeSymbols_vai_Latn", "goog.i18n.DateTimeSymbols_vai_Latn_LR", "goog.i18n.DateTimeSymbols_vai_Vaii", "goog.i18n.DateTimeSymbols_vai_Vaii_LR", "goog.i18n.DateTimeSymbols_vi_VN", "goog.i18n.DateTimeSymbols_vun", "goog.i18n.DateTimeSymbols_vun_TZ", 
"goog.i18n.DateTimeSymbols_wae", "goog.i18n.DateTimeSymbols_wae_CH", "goog.i18n.DateTimeSymbols_xog", "goog.i18n.DateTimeSymbols_xog_UG", "goog.i18n.DateTimeSymbols_yav", "goog.i18n.DateTimeSymbols_yav_CM", "goog.i18n.DateTimeSymbols_yi", "goog.i18n.DateTimeSymbols_yi_001", "goog.i18n.DateTimeSymbols_yo", "goog.i18n.DateTimeSymbols_yo_BJ", "goog.i18n.DateTimeSymbols_yo_NG", "goog.i18n.DateTimeSymbols_zgh", "goog.i18n.DateTimeSymbols_zgh_MA", "goog.i18n.DateTimeSymbols_zh_Hans", "goog.i18n.DateTimeSymbols_zh_Hans_CN", 
"goog.i18n.DateTimeSymbols_zh_Hans_HK", "goog.i18n.DateTimeSymbols_zh_Hans_MO", "goog.i18n.DateTimeSymbols_zh_Hans_SG", "goog.i18n.DateTimeSymbols_zh_Hant", "goog.i18n.DateTimeSymbols_zh_Hant_HK", "goog.i18n.DateTimeSymbols_zh_Hant_MO", "goog.i18n.DateTimeSymbols_zh_Hant_TW", "goog.i18n.DateTimeSymbols_zu_ZA"], ["goog.i18n.DateTimeSymbols"], false);
goog.addDependency("i18n/graphemebreak.js", ["goog.i18n.GraphemeBreak"], ["goog.structs.InversionMap"], false);
goog.addDependency("i18n/graphemebreak_test.js", ["goog.i18n.GraphemeBreakTest"], ["goog.i18n.GraphemeBreak", "goog.testing.jsunit"], false);
goog.addDependency("i18n/messageformat.js", ["goog.i18n.MessageFormat"], ["goog.asserts", "goog.i18n.NumberFormat", "goog.i18n.ordinalRules", "goog.i18n.pluralRules"], false);
goog.addDependency("i18n/messageformat_test.js", ["goog.i18n.MessageFormatTest"], ["goog.i18n.MessageFormat", "goog.i18n.NumberFormatSymbols_hr", "goog.i18n.pluralRules", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("i18n/mime.js", ["goog.i18n.mime", "goog.i18n.mime.encode"], ["goog.array"], false);
goog.addDependency("i18n/mime_test.js", ["goog.i18n.mime.encodeTest"], ["goog.i18n.mime.encode", "goog.testing.jsunit"], false);
goog.addDependency("i18n/numberformat.js", ["goog.i18n.NumberFormat", "goog.i18n.NumberFormat.CurrencyStyle", "goog.i18n.NumberFormat.Format"], ["goog.asserts", "goog.i18n.CompactNumberFormatSymbols", "goog.i18n.NumberFormatSymbols", "goog.i18n.currency", "goog.math"], false);
goog.addDependency("i18n/numberformat_test.js", ["goog.i18n.NumberFormatTest"], ["goog.i18n.CompactNumberFormatSymbols", "goog.i18n.CompactNumberFormatSymbols_de", "goog.i18n.CompactNumberFormatSymbols_en", "goog.i18n.CompactNumberFormatSymbols_fr", "goog.i18n.NumberFormat", "goog.i18n.NumberFormatSymbols", "goog.i18n.NumberFormatSymbols_de", "goog.i18n.NumberFormatSymbols_en", "goog.i18n.NumberFormatSymbols_fr", "goog.i18n.NumberFormatSymbols_pl", "goog.i18n.NumberFormatSymbols_ro", "goog.testing.ExpectedFailures", 
"goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.userAgent", "goog.userAgent.product", "goog.userAgent.product.isVersion"], false);
goog.addDependency("i18n/numberformatsymbols.js", ["goog.i18n.NumberFormatSymbols", "goog.i18n.NumberFormatSymbols_af", "goog.i18n.NumberFormatSymbols_af_ZA", "goog.i18n.NumberFormatSymbols_am", "goog.i18n.NumberFormatSymbols_am_ET", "goog.i18n.NumberFormatSymbols_ar", "goog.i18n.NumberFormatSymbols_ar_001", "goog.i18n.NumberFormatSymbols_ar_EG", "goog.i18n.NumberFormatSymbols_az", "goog.i18n.NumberFormatSymbols_az_Latn", "goog.i18n.NumberFormatSymbols_az_Latn_AZ", "goog.i18n.NumberFormatSymbols_bg", 
"goog.i18n.NumberFormatSymbols_bg_BG", "goog.i18n.NumberFormatSymbols_bn", "goog.i18n.NumberFormatSymbols_bn_BD", "goog.i18n.NumberFormatSymbols_br", "goog.i18n.NumberFormatSymbols_br_FR", "goog.i18n.NumberFormatSymbols_ca", "goog.i18n.NumberFormatSymbols_ca_AD", "goog.i18n.NumberFormatSymbols_ca_ES", "goog.i18n.NumberFormatSymbols_ca_ES_VALENCIA", "goog.i18n.NumberFormatSymbols_ca_FR", "goog.i18n.NumberFormatSymbols_ca_IT", "goog.i18n.NumberFormatSymbols_chr", "goog.i18n.NumberFormatSymbols_chr_US", 
"goog.i18n.NumberFormatSymbols_cs", "goog.i18n.NumberFormatSymbols_cs_CZ", "goog.i18n.NumberFormatSymbols_cy", "goog.i18n.NumberFormatSymbols_cy_GB", "goog.i18n.NumberFormatSymbols_da", "goog.i18n.NumberFormatSymbols_da_DK", "goog.i18n.NumberFormatSymbols_da_GL", "goog.i18n.NumberFormatSymbols_de", "goog.i18n.NumberFormatSymbols_de_AT", "goog.i18n.NumberFormatSymbols_de_BE", "goog.i18n.NumberFormatSymbols_de_CH", "goog.i18n.NumberFormatSymbols_de_DE", "goog.i18n.NumberFormatSymbols_de_LU", "goog.i18n.NumberFormatSymbols_el", 
"goog.i18n.NumberFormatSymbols_el_CY", "goog.i18n.NumberFormatSymbols_el_GR", "goog.i18n.NumberFormatSymbols_en", "goog.i18n.NumberFormatSymbols_en_001", "goog.i18n.NumberFormatSymbols_en_AS", "goog.i18n.NumberFormatSymbols_en_AU", "goog.i18n.NumberFormatSymbols_en_DG", "goog.i18n.NumberFormatSymbols_en_FM", "goog.i18n.NumberFormatSymbols_en_GB", "goog.i18n.NumberFormatSymbols_en_GU", "goog.i18n.NumberFormatSymbols_en_IE", "goog.i18n.NumberFormatSymbols_en_IN", "goog.i18n.NumberFormatSymbols_en_IO", 
"goog.i18n.NumberFormatSymbols_en_MH", "goog.i18n.NumberFormatSymbols_en_MP", "goog.i18n.NumberFormatSymbols_en_PR", "goog.i18n.NumberFormatSymbols_en_PW", "goog.i18n.NumberFormatSymbols_en_SG", "goog.i18n.NumberFormatSymbols_en_TC", "goog.i18n.NumberFormatSymbols_en_UM", "goog.i18n.NumberFormatSymbols_en_US", "goog.i18n.NumberFormatSymbols_en_VG", "goog.i18n.NumberFormatSymbols_en_VI", "goog.i18n.NumberFormatSymbols_en_ZA", "goog.i18n.NumberFormatSymbols_en_ZW", "goog.i18n.NumberFormatSymbols_es", 
"goog.i18n.NumberFormatSymbols_es_419", "goog.i18n.NumberFormatSymbols_es_EA", "goog.i18n.NumberFormatSymbols_es_ES", "goog.i18n.NumberFormatSymbols_es_IC", "goog.i18n.NumberFormatSymbols_et", "goog.i18n.NumberFormatSymbols_et_EE", "goog.i18n.NumberFormatSymbols_eu", "goog.i18n.NumberFormatSymbols_eu_ES", "goog.i18n.NumberFormatSymbols_fa", "goog.i18n.NumberFormatSymbols_fa_IR", "goog.i18n.NumberFormatSymbols_fi", "goog.i18n.NumberFormatSymbols_fi_FI", "goog.i18n.NumberFormatSymbols_fil", "goog.i18n.NumberFormatSymbols_fil_PH", 
"goog.i18n.NumberFormatSymbols_fr", "goog.i18n.NumberFormatSymbols_fr_BL", "goog.i18n.NumberFormatSymbols_fr_CA", "goog.i18n.NumberFormatSymbols_fr_FR", "goog.i18n.NumberFormatSymbols_fr_GF", "goog.i18n.NumberFormatSymbols_fr_GP", "goog.i18n.NumberFormatSymbols_fr_MC", "goog.i18n.NumberFormatSymbols_fr_MF", "goog.i18n.NumberFormatSymbols_fr_MQ", "goog.i18n.NumberFormatSymbols_fr_PM", "goog.i18n.NumberFormatSymbols_fr_RE", "goog.i18n.NumberFormatSymbols_fr_YT", "goog.i18n.NumberFormatSymbols_ga", 
"goog.i18n.NumberFormatSymbols_ga_IE", "goog.i18n.NumberFormatSymbols_gl", "goog.i18n.NumberFormatSymbols_gl_ES", "goog.i18n.NumberFormatSymbols_gsw", "goog.i18n.NumberFormatSymbols_gsw_CH", "goog.i18n.NumberFormatSymbols_gsw_LI", "goog.i18n.NumberFormatSymbols_gu", "goog.i18n.NumberFormatSymbols_gu_IN", "goog.i18n.NumberFormatSymbols_haw", "goog.i18n.NumberFormatSymbols_haw_US", "goog.i18n.NumberFormatSymbols_he", "goog.i18n.NumberFormatSymbols_he_IL", "goog.i18n.NumberFormatSymbols_hi", "goog.i18n.NumberFormatSymbols_hi_IN", 
"goog.i18n.NumberFormatSymbols_hr", "goog.i18n.NumberFormatSymbols_hr_HR", "goog.i18n.NumberFormatSymbols_hu", "goog.i18n.NumberFormatSymbols_hu_HU", "goog.i18n.NumberFormatSymbols_hy", "goog.i18n.NumberFormatSymbols_hy_AM", "goog.i18n.NumberFormatSymbols_id", "goog.i18n.NumberFormatSymbols_id_ID", "goog.i18n.NumberFormatSymbols_in", "goog.i18n.NumberFormatSymbols_is", "goog.i18n.NumberFormatSymbols_is_IS", "goog.i18n.NumberFormatSymbols_it", "goog.i18n.NumberFormatSymbols_it_IT", "goog.i18n.NumberFormatSymbols_it_SM", 
"goog.i18n.NumberFormatSymbols_iw", "goog.i18n.NumberFormatSymbols_ja", "goog.i18n.NumberFormatSymbols_ja_JP", "goog.i18n.NumberFormatSymbols_ka", "goog.i18n.NumberFormatSymbols_ka_GE", "goog.i18n.NumberFormatSymbols_kk", "goog.i18n.NumberFormatSymbols_kk_Cyrl", "goog.i18n.NumberFormatSymbols_kk_Cyrl_KZ", "goog.i18n.NumberFormatSymbols_km", "goog.i18n.NumberFormatSymbols_km_KH", "goog.i18n.NumberFormatSymbols_kn", "goog.i18n.NumberFormatSymbols_kn_IN", "goog.i18n.NumberFormatSymbols_ko", "goog.i18n.NumberFormatSymbols_ko_KR", 
"goog.i18n.NumberFormatSymbols_ky", "goog.i18n.NumberFormatSymbols_ky_Cyrl", "goog.i18n.NumberFormatSymbols_ky_Cyrl_KG", "goog.i18n.NumberFormatSymbols_ln", "goog.i18n.NumberFormatSymbols_ln_CD", "goog.i18n.NumberFormatSymbols_lo", "goog.i18n.NumberFormatSymbols_lo_LA", "goog.i18n.NumberFormatSymbols_lt", "goog.i18n.NumberFormatSymbols_lt_LT", "goog.i18n.NumberFormatSymbols_lv", "goog.i18n.NumberFormatSymbols_lv_LV", "goog.i18n.NumberFormatSymbols_mk", "goog.i18n.NumberFormatSymbols_mk_MK", "goog.i18n.NumberFormatSymbols_ml", 
"goog.i18n.NumberFormatSymbols_ml_IN", "goog.i18n.NumberFormatSymbols_mn", "goog.i18n.NumberFormatSymbols_mn_Cyrl", "goog.i18n.NumberFormatSymbols_mn_Cyrl_MN", "goog.i18n.NumberFormatSymbols_mr", "goog.i18n.NumberFormatSymbols_mr_IN", "goog.i18n.NumberFormatSymbols_ms", "goog.i18n.NumberFormatSymbols_ms_Latn", "goog.i18n.NumberFormatSymbols_ms_Latn_MY", "goog.i18n.NumberFormatSymbols_mt", "goog.i18n.NumberFormatSymbols_mt_MT", "goog.i18n.NumberFormatSymbols_my", "goog.i18n.NumberFormatSymbols_my_MM", 
"goog.i18n.NumberFormatSymbols_nb", "goog.i18n.NumberFormatSymbols_nb_NO", "goog.i18n.NumberFormatSymbols_nb_SJ", "goog.i18n.NumberFormatSymbols_ne", "goog.i18n.NumberFormatSymbols_ne_NP", "goog.i18n.NumberFormatSymbols_nl", "goog.i18n.NumberFormatSymbols_nl_NL", "goog.i18n.NumberFormatSymbols_no", "goog.i18n.NumberFormatSymbols_no_NO", "goog.i18n.NumberFormatSymbols_or", "goog.i18n.NumberFormatSymbols_or_IN", "goog.i18n.NumberFormatSymbols_pa", "goog.i18n.NumberFormatSymbols_pa_Guru", "goog.i18n.NumberFormatSymbols_pa_Guru_IN", 
"goog.i18n.NumberFormatSymbols_pl", "goog.i18n.NumberFormatSymbols_pl_PL", "goog.i18n.NumberFormatSymbols_pt", "goog.i18n.NumberFormatSymbols_pt_BR", "goog.i18n.NumberFormatSymbols_pt_PT", "goog.i18n.NumberFormatSymbols_ro", "goog.i18n.NumberFormatSymbols_ro_RO", "goog.i18n.NumberFormatSymbols_ru", "goog.i18n.NumberFormatSymbols_ru_RU", "goog.i18n.NumberFormatSymbols_si", "goog.i18n.NumberFormatSymbols_si_LK", "goog.i18n.NumberFormatSymbols_sk", "goog.i18n.NumberFormatSymbols_sk_SK", "goog.i18n.NumberFormatSymbols_sl", 
"goog.i18n.NumberFormatSymbols_sl_SI", "goog.i18n.NumberFormatSymbols_sq", "goog.i18n.NumberFormatSymbols_sq_AL", "goog.i18n.NumberFormatSymbols_sr", "goog.i18n.NumberFormatSymbols_sr_Cyrl", "goog.i18n.NumberFormatSymbols_sr_Cyrl_RS", "goog.i18n.NumberFormatSymbols_sv", "goog.i18n.NumberFormatSymbols_sv_SE", "goog.i18n.NumberFormatSymbols_sw", "goog.i18n.NumberFormatSymbols_sw_TZ", "goog.i18n.NumberFormatSymbols_ta", "goog.i18n.NumberFormatSymbols_ta_IN", "goog.i18n.NumberFormatSymbols_te", "goog.i18n.NumberFormatSymbols_te_IN", 
"goog.i18n.NumberFormatSymbols_th", "goog.i18n.NumberFormatSymbols_th_TH", "goog.i18n.NumberFormatSymbols_tl", "goog.i18n.NumberFormatSymbols_tr", "goog.i18n.NumberFormatSymbols_tr_TR", "goog.i18n.NumberFormatSymbols_uk", "goog.i18n.NumberFormatSymbols_uk_UA", "goog.i18n.NumberFormatSymbols_ur", "goog.i18n.NumberFormatSymbols_ur_PK", "goog.i18n.NumberFormatSymbols_uz", "goog.i18n.NumberFormatSymbols_uz_Latn", "goog.i18n.NumberFormatSymbols_uz_Latn_UZ", "goog.i18n.NumberFormatSymbols_vi", "goog.i18n.NumberFormatSymbols_vi_VN", 
"goog.i18n.NumberFormatSymbols_zh", "goog.i18n.NumberFormatSymbols_zh_CN", "goog.i18n.NumberFormatSymbols_zh_HK", "goog.i18n.NumberFormatSymbols_zh_Hans", "goog.i18n.NumberFormatSymbols_zh_Hans_CN", "goog.i18n.NumberFormatSymbols_zh_TW", "goog.i18n.NumberFormatSymbols_zu", "goog.i18n.NumberFormatSymbols_zu_ZA"], [], false);
goog.addDependency("i18n/numberformatsymbolsext.js", ["goog.i18n.NumberFormatSymbolsExt", "goog.i18n.NumberFormatSymbols_af_NA", "goog.i18n.NumberFormatSymbols_agq", "goog.i18n.NumberFormatSymbols_agq_CM", "goog.i18n.NumberFormatSymbols_ak", "goog.i18n.NumberFormatSymbols_ak_GH", "goog.i18n.NumberFormatSymbols_ar_AE", "goog.i18n.NumberFormatSymbols_ar_BH", "goog.i18n.NumberFormatSymbols_ar_DJ", "goog.i18n.NumberFormatSymbols_ar_DZ", "goog.i18n.NumberFormatSymbols_ar_EH", "goog.i18n.NumberFormatSymbols_ar_ER", 
"goog.i18n.NumberFormatSymbols_ar_IL", "goog.i18n.NumberFormatSymbols_ar_IQ", "goog.i18n.NumberFormatSymbols_ar_JO", "goog.i18n.NumberFormatSymbols_ar_KM", "goog.i18n.NumberFormatSymbols_ar_KW", "goog.i18n.NumberFormatSymbols_ar_LB", "goog.i18n.NumberFormatSymbols_ar_LY", "goog.i18n.NumberFormatSymbols_ar_MA", "goog.i18n.NumberFormatSymbols_ar_MR", "goog.i18n.NumberFormatSymbols_ar_OM", "goog.i18n.NumberFormatSymbols_ar_PS", "goog.i18n.NumberFormatSymbols_ar_QA", "goog.i18n.NumberFormatSymbols_ar_SA", 
"goog.i18n.NumberFormatSymbols_ar_SD", "goog.i18n.NumberFormatSymbols_ar_SO", "goog.i18n.NumberFormatSymbols_ar_SS", "goog.i18n.NumberFormatSymbols_ar_SY", "goog.i18n.NumberFormatSymbols_ar_TD", "goog.i18n.NumberFormatSymbols_ar_TN", "goog.i18n.NumberFormatSymbols_ar_YE", "goog.i18n.NumberFormatSymbols_as", "goog.i18n.NumberFormatSymbols_as_IN", "goog.i18n.NumberFormatSymbols_asa", "goog.i18n.NumberFormatSymbols_asa_TZ", "goog.i18n.NumberFormatSymbols_ast", "goog.i18n.NumberFormatSymbols_ast_ES", 
"goog.i18n.NumberFormatSymbols_az_Cyrl", "goog.i18n.NumberFormatSymbols_az_Cyrl_AZ", "goog.i18n.NumberFormatSymbols_bas", "goog.i18n.NumberFormatSymbols_bas_CM", "goog.i18n.NumberFormatSymbols_be", "goog.i18n.NumberFormatSymbols_be_BY", "goog.i18n.NumberFormatSymbols_bem", "goog.i18n.NumberFormatSymbols_bem_ZM", "goog.i18n.NumberFormatSymbols_bez", "goog.i18n.NumberFormatSymbols_bez_TZ", "goog.i18n.NumberFormatSymbols_bm", "goog.i18n.NumberFormatSymbols_bm_Latn", "goog.i18n.NumberFormatSymbols_bm_Latn_ML", 
"goog.i18n.NumberFormatSymbols_bn_IN", "goog.i18n.NumberFormatSymbols_bo", "goog.i18n.NumberFormatSymbols_bo_CN", "goog.i18n.NumberFormatSymbols_bo_IN", "goog.i18n.NumberFormatSymbols_brx", "goog.i18n.NumberFormatSymbols_brx_IN", "goog.i18n.NumberFormatSymbols_bs", "goog.i18n.NumberFormatSymbols_bs_Cyrl", "goog.i18n.NumberFormatSymbols_bs_Cyrl_BA", "goog.i18n.NumberFormatSymbols_bs_Latn", "goog.i18n.NumberFormatSymbols_bs_Latn_BA", "goog.i18n.NumberFormatSymbols_cgg", "goog.i18n.NumberFormatSymbols_cgg_UG", 
"goog.i18n.NumberFormatSymbols_ckb", "goog.i18n.NumberFormatSymbols_ckb_Arab", "goog.i18n.NumberFormatSymbols_ckb_Arab_IQ", "goog.i18n.NumberFormatSymbols_ckb_Arab_IR", "goog.i18n.NumberFormatSymbols_ckb_IQ", "goog.i18n.NumberFormatSymbols_ckb_IR", "goog.i18n.NumberFormatSymbols_ckb_Latn", "goog.i18n.NumberFormatSymbols_ckb_Latn_IQ", "goog.i18n.NumberFormatSymbols_dav", "goog.i18n.NumberFormatSymbols_dav_KE", "goog.i18n.NumberFormatSymbols_de_LI", "goog.i18n.NumberFormatSymbols_dje", "goog.i18n.NumberFormatSymbols_dje_NE", 
"goog.i18n.NumberFormatSymbols_dsb", "goog.i18n.NumberFormatSymbols_dsb_DE", "goog.i18n.NumberFormatSymbols_dua", "goog.i18n.NumberFormatSymbols_dua_CM", "goog.i18n.NumberFormatSymbols_dyo", "goog.i18n.NumberFormatSymbols_dyo_SN", "goog.i18n.NumberFormatSymbols_dz", "goog.i18n.NumberFormatSymbols_dz_BT", "goog.i18n.NumberFormatSymbols_ebu", "goog.i18n.NumberFormatSymbols_ebu_KE", "goog.i18n.NumberFormatSymbols_ee", "goog.i18n.NumberFormatSymbols_ee_GH", "goog.i18n.NumberFormatSymbols_ee_TG", "goog.i18n.NumberFormatSymbols_en_150", 
"goog.i18n.NumberFormatSymbols_en_AG", "goog.i18n.NumberFormatSymbols_en_AI", "goog.i18n.NumberFormatSymbols_en_BB", "goog.i18n.NumberFormatSymbols_en_BE", "goog.i18n.NumberFormatSymbols_en_BM", "goog.i18n.NumberFormatSymbols_en_BS", "goog.i18n.NumberFormatSymbols_en_BW", "goog.i18n.NumberFormatSymbols_en_BZ", "goog.i18n.NumberFormatSymbols_en_CA", "goog.i18n.NumberFormatSymbols_en_CC", "goog.i18n.NumberFormatSymbols_en_CK", "goog.i18n.NumberFormatSymbols_en_CM", "goog.i18n.NumberFormatSymbols_en_CX", 
"goog.i18n.NumberFormatSymbols_en_DM", "goog.i18n.NumberFormatSymbols_en_ER", "goog.i18n.NumberFormatSymbols_en_FJ", "goog.i18n.NumberFormatSymbols_en_FK", "goog.i18n.NumberFormatSymbols_en_GD", "goog.i18n.NumberFormatSymbols_en_GG", "goog.i18n.NumberFormatSymbols_en_GH", "goog.i18n.NumberFormatSymbols_en_GI", "goog.i18n.NumberFormatSymbols_en_GM", "goog.i18n.NumberFormatSymbols_en_GY", "goog.i18n.NumberFormatSymbols_en_HK", "goog.i18n.NumberFormatSymbols_en_IM", "goog.i18n.NumberFormatSymbols_en_JE", 
"goog.i18n.NumberFormatSymbols_en_JM", "goog.i18n.NumberFormatSymbols_en_KE", "goog.i18n.NumberFormatSymbols_en_KI", "goog.i18n.NumberFormatSymbols_en_KN", "goog.i18n.NumberFormatSymbols_en_KY", "goog.i18n.NumberFormatSymbols_en_LC", "goog.i18n.NumberFormatSymbols_en_LR", "goog.i18n.NumberFormatSymbols_en_LS", "goog.i18n.NumberFormatSymbols_en_MG", "goog.i18n.NumberFormatSymbols_en_MO", "goog.i18n.NumberFormatSymbols_en_MS", "goog.i18n.NumberFormatSymbols_en_MT", "goog.i18n.NumberFormatSymbols_en_MU", 
"goog.i18n.NumberFormatSymbols_en_MW", "goog.i18n.NumberFormatSymbols_en_MY", "goog.i18n.NumberFormatSymbols_en_NA", "goog.i18n.NumberFormatSymbols_en_NF", "goog.i18n.NumberFormatSymbols_en_NG", "goog.i18n.NumberFormatSymbols_en_NR", "goog.i18n.NumberFormatSymbols_en_NU", "goog.i18n.NumberFormatSymbols_en_NZ", "goog.i18n.NumberFormatSymbols_en_PG", "goog.i18n.NumberFormatSymbols_en_PH", "goog.i18n.NumberFormatSymbols_en_PK", "goog.i18n.NumberFormatSymbols_en_PN", "goog.i18n.NumberFormatSymbols_en_RW", 
"goog.i18n.NumberFormatSymbols_en_SB", "goog.i18n.NumberFormatSymbols_en_SC", "goog.i18n.NumberFormatSymbols_en_SD", "goog.i18n.NumberFormatSymbols_en_SH", "goog.i18n.NumberFormatSymbols_en_SL", "goog.i18n.NumberFormatSymbols_en_SS", "goog.i18n.NumberFormatSymbols_en_SX", "goog.i18n.NumberFormatSymbols_en_SZ", "goog.i18n.NumberFormatSymbols_en_TK", "goog.i18n.NumberFormatSymbols_en_TO", "goog.i18n.NumberFormatSymbols_en_TT", "goog.i18n.NumberFormatSymbols_en_TV", "goog.i18n.NumberFormatSymbols_en_TZ", 
"goog.i18n.NumberFormatSymbols_en_UG", "goog.i18n.NumberFormatSymbols_en_VC", "goog.i18n.NumberFormatSymbols_en_VU", "goog.i18n.NumberFormatSymbols_en_WS", "goog.i18n.NumberFormatSymbols_en_ZM", "goog.i18n.NumberFormatSymbols_eo", "goog.i18n.NumberFormatSymbols_eo_001", "goog.i18n.NumberFormatSymbols_es_AR", "goog.i18n.NumberFormatSymbols_es_BO", "goog.i18n.NumberFormatSymbols_es_CL", "goog.i18n.NumberFormatSymbols_es_CO", "goog.i18n.NumberFormatSymbols_es_CR", "goog.i18n.NumberFormatSymbols_es_CU", 
"goog.i18n.NumberFormatSymbols_es_DO", "goog.i18n.NumberFormatSymbols_es_EC", "goog.i18n.NumberFormatSymbols_es_GQ", "goog.i18n.NumberFormatSymbols_es_GT", "goog.i18n.NumberFormatSymbols_es_HN", "goog.i18n.NumberFormatSymbols_es_MX", "goog.i18n.NumberFormatSymbols_es_NI", "goog.i18n.NumberFormatSymbols_es_PA", "goog.i18n.NumberFormatSymbols_es_PE", "goog.i18n.NumberFormatSymbols_es_PH", "goog.i18n.NumberFormatSymbols_es_PR", "goog.i18n.NumberFormatSymbols_es_PY", "goog.i18n.NumberFormatSymbols_es_SV", 
"goog.i18n.NumberFormatSymbols_es_US", "goog.i18n.NumberFormatSymbols_es_UY", "goog.i18n.NumberFormatSymbols_es_VE", "goog.i18n.NumberFormatSymbols_ewo", "goog.i18n.NumberFormatSymbols_ewo_CM", "goog.i18n.NumberFormatSymbols_fa_AF", "goog.i18n.NumberFormatSymbols_ff", "goog.i18n.NumberFormatSymbols_ff_CM", "goog.i18n.NumberFormatSymbols_ff_GN", "goog.i18n.NumberFormatSymbols_ff_MR", "goog.i18n.NumberFormatSymbols_ff_SN", "goog.i18n.NumberFormatSymbols_fo", "goog.i18n.NumberFormatSymbols_fo_FO", "goog.i18n.NumberFormatSymbols_fr_BE", 
"goog.i18n.NumberFormatSymbols_fr_BF", "goog.i18n.NumberFormatSymbols_fr_BI", "goog.i18n.NumberFormatSymbols_fr_BJ", "goog.i18n.NumberFormatSymbols_fr_CD", "goog.i18n.NumberFormatSymbols_fr_CF", "goog.i18n.NumberFormatSymbols_fr_CG", "goog.i18n.NumberFormatSymbols_fr_CH", "goog.i18n.NumberFormatSymbols_fr_CI", "goog.i18n.NumberFormatSymbols_fr_CM", "goog.i18n.NumberFormatSymbols_fr_DJ", "goog.i18n.NumberFormatSymbols_fr_DZ", "goog.i18n.NumberFormatSymbols_fr_GA", "goog.i18n.NumberFormatSymbols_fr_GN", 
"goog.i18n.NumberFormatSymbols_fr_GQ", "goog.i18n.NumberFormatSymbols_fr_HT", "goog.i18n.NumberFormatSymbols_fr_KM", "goog.i18n.NumberFormatSymbols_fr_LU", "goog.i18n.NumberFormatSymbols_fr_MA", "goog.i18n.NumberFormatSymbols_fr_MG", "goog.i18n.NumberFormatSymbols_fr_ML", "goog.i18n.NumberFormatSymbols_fr_MR", "goog.i18n.NumberFormatSymbols_fr_MU", "goog.i18n.NumberFormatSymbols_fr_NC", "goog.i18n.NumberFormatSymbols_fr_NE", "goog.i18n.NumberFormatSymbols_fr_PF", "goog.i18n.NumberFormatSymbols_fr_RW", 
"goog.i18n.NumberFormatSymbols_fr_SC", "goog.i18n.NumberFormatSymbols_fr_SN", "goog.i18n.NumberFormatSymbols_fr_SY", "goog.i18n.NumberFormatSymbols_fr_TD", "goog.i18n.NumberFormatSymbols_fr_TG", "goog.i18n.NumberFormatSymbols_fr_TN", "goog.i18n.NumberFormatSymbols_fr_VU", "goog.i18n.NumberFormatSymbols_fr_WF", "goog.i18n.NumberFormatSymbols_fur", "goog.i18n.NumberFormatSymbols_fur_IT", "goog.i18n.NumberFormatSymbols_fy", "goog.i18n.NumberFormatSymbols_fy_NL", "goog.i18n.NumberFormatSymbols_gd", "goog.i18n.NumberFormatSymbols_gd_GB", 
"goog.i18n.NumberFormatSymbols_gsw_FR", "goog.i18n.NumberFormatSymbols_guz", "goog.i18n.NumberFormatSymbols_guz_KE", "goog.i18n.NumberFormatSymbols_gv", "goog.i18n.NumberFormatSymbols_gv_IM", "goog.i18n.NumberFormatSymbols_ha", "goog.i18n.NumberFormatSymbols_ha_Latn", "goog.i18n.NumberFormatSymbols_ha_Latn_GH", "goog.i18n.NumberFormatSymbols_ha_Latn_NE", "goog.i18n.NumberFormatSymbols_ha_Latn_NG", "goog.i18n.NumberFormatSymbols_hr_BA", "goog.i18n.NumberFormatSymbols_hsb", "goog.i18n.NumberFormatSymbols_hsb_DE", 
"goog.i18n.NumberFormatSymbols_ig", "goog.i18n.NumberFormatSymbols_ig_NG", "goog.i18n.NumberFormatSymbols_ii", "goog.i18n.NumberFormatSymbols_ii_CN", "goog.i18n.NumberFormatSymbols_it_CH", "goog.i18n.NumberFormatSymbols_jgo", "goog.i18n.NumberFormatSymbols_jgo_CM", "goog.i18n.NumberFormatSymbols_jmc", "goog.i18n.NumberFormatSymbols_jmc_TZ", "goog.i18n.NumberFormatSymbols_kab", "goog.i18n.NumberFormatSymbols_kab_DZ", "goog.i18n.NumberFormatSymbols_kam", "goog.i18n.NumberFormatSymbols_kam_KE", "goog.i18n.NumberFormatSymbols_kde", 
"goog.i18n.NumberFormatSymbols_kde_TZ", "goog.i18n.NumberFormatSymbols_kea", "goog.i18n.NumberFormatSymbols_kea_CV", "goog.i18n.NumberFormatSymbols_khq", "goog.i18n.NumberFormatSymbols_khq_ML", "goog.i18n.NumberFormatSymbols_ki", "goog.i18n.NumberFormatSymbols_ki_KE", "goog.i18n.NumberFormatSymbols_kkj", "goog.i18n.NumberFormatSymbols_kkj_CM", "goog.i18n.NumberFormatSymbols_kl", "goog.i18n.NumberFormatSymbols_kl_GL", "goog.i18n.NumberFormatSymbols_kln", "goog.i18n.NumberFormatSymbols_kln_KE", "goog.i18n.NumberFormatSymbols_ko_KP", 
"goog.i18n.NumberFormatSymbols_kok", "goog.i18n.NumberFormatSymbols_kok_IN", "goog.i18n.NumberFormatSymbols_ks", "goog.i18n.NumberFormatSymbols_ks_Arab", "goog.i18n.NumberFormatSymbols_ks_Arab_IN", "goog.i18n.NumberFormatSymbols_ksb", "goog.i18n.NumberFormatSymbols_ksb_TZ", "goog.i18n.NumberFormatSymbols_ksf", "goog.i18n.NumberFormatSymbols_ksf_CM", "goog.i18n.NumberFormatSymbols_ksh", "goog.i18n.NumberFormatSymbols_ksh_DE", "goog.i18n.NumberFormatSymbols_kw", "goog.i18n.NumberFormatSymbols_kw_GB", 
"goog.i18n.NumberFormatSymbols_lag", "goog.i18n.NumberFormatSymbols_lag_TZ", "goog.i18n.NumberFormatSymbols_lb", "goog.i18n.NumberFormatSymbols_lb_LU", "goog.i18n.NumberFormatSymbols_lg", "goog.i18n.NumberFormatSymbols_lg_UG", "goog.i18n.NumberFormatSymbols_lkt", "goog.i18n.NumberFormatSymbols_lkt_US", "goog.i18n.NumberFormatSymbols_ln_AO", "goog.i18n.NumberFormatSymbols_ln_CF", "goog.i18n.NumberFormatSymbols_ln_CG", "goog.i18n.NumberFormatSymbols_lu", "goog.i18n.NumberFormatSymbols_lu_CD", "goog.i18n.NumberFormatSymbols_luo", 
"goog.i18n.NumberFormatSymbols_luo_KE", "goog.i18n.NumberFormatSymbols_luy", "goog.i18n.NumberFormatSymbols_luy_KE", "goog.i18n.NumberFormatSymbols_mas", "goog.i18n.NumberFormatSymbols_mas_KE", "goog.i18n.NumberFormatSymbols_mas_TZ", "goog.i18n.NumberFormatSymbols_mer", "goog.i18n.NumberFormatSymbols_mer_KE", "goog.i18n.NumberFormatSymbols_mfe", "goog.i18n.NumberFormatSymbols_mfe_MU", "goog.i18n.NumberFormatSymbols_mg", "goog.i18n.NumberFormatSymbols_mg_MG", "goog.i18n.NumberFormatSymbols_mgh", "goog.i18n.NumberFormatSymbols_mgh_MZ", 
"goog.i18n.NumberFormatSymbols_mgo", "goog.i18n.NumberFormatSymbols_mgo_CM", "goog.i18n.NumberFormatSymbols_ms_Latn_BN", "goog.i18n.NumberFormatSymbols_ms_Latn_SG", "goog.i18n.NumberFormatSymbols_mua", "goog.i18n.NumberFormatSymbols_mua_CM", "goog.i18n.NumberFormatSymbols_naq", "goog.i18n.NumberFormatSymbols_naq_NA", "goog.i18n.NumberFormatSymbols_nd", "goog.i18n.NumberFormatSymbols_nd_ZW", "goog.i18n.NumberFormatSymbols_ne_IN", "goog.i18n.NumberFormatSymbols_nl_AW", "goog.i18n.NumberFormatSymbols_nl_BE", 
"goog.i18n.NumberFormatSymbols_nl_BQ", "goog.i18n.NumberFormatSymbols_nl_CW", "goog.i18n.NumberFormatSymbols_nl_SR", "goog.i18n.NumberFormatSymbols_nl_SX", "goog.i18n.NumberFormatSymbols_nmg", "goog.i18n.NumberFormatSymbols_nmg_CM", "goog.i18n.NumberFormatSymbols_nn", "goog.i18n.NumberFormatSymbols_nn_NO", "goog.i18n.NumberFormatSymbols_nnh", "goog.i18n.NumberFormatSymbols_nnh_CM", "goog.i18n.NumberFormatSymbols_nus", "goog.i18n.NumberFormatSymbols_nus_SD", "goog.i18n.NumberFormatSymbols_nyn", "goog.i18n.NumberFormatSymbols_nyn_UG", 
"goog.i18n.NumberFormatSymbols_om", "goog.i18n.NumberFormatSymbols_om_ET", "goog.i18n.NumberFormatSymbols_om_KE", "goog.i18n.NumberFormatSymbols_os", "goog.i18n.NumberFormatSymbols_os_GE", "goog.i18n.NumberFormatSymbols_os_RU", "goog.i18n.NumberFormatSymbols_pa_Arab", "goog.i18n.NumberFormatSymbols_pa_Arab_PK", "goog.i18n.NumberFormatSymbols_ps", "goog.i18n.NumberFormatSymbols_ps_AF", "goog.i18n.NumberFormatSymbols_pt_AO", "goog.i18n.NumberFormatSymbols_pt_CV", "goog.i18n.NumberFormatSymbols_pt_GW", 
"goog.i18n.NumberFormatSymbols_pt_MO", "goog.i18n.NumberFormatSymbols_pt_MZ", "goog.i18n.NumberFormatSymbols_pt_ST", "goog.i18n.NumberFormatSymbols_pt_TL", "goog.i18n.NumberFormatSymbols_qu", "goog.i18n.NumberFormatSymbols_qu_BO", "goog.i18n.NumberFormatSymbols_qu_EC", "goog.i18n.NumberFormatSymbols_qu_PE", "goog.i18n.NumberFormatSymbols_rm", "goog.i18n.NumberFormatSymbols_rm_CH", "goog.i18n.NumberFormatSymbols_rn", "goog.i18n.NumberFormatSymbols_rn_BI", "goog.i18n.NumberFormatSymbols_ro_MD", "goog.i18n.NumberFormatSymbols_rof", 
"goog.i18n.NumberFormatSymbols_rof_TZ", "goog.i18n.NumberFormatSymbols_ru_BY", "goog.i18n.NumberFormatSymbols_ru_KG", "goog.i18n.NumberFormatSymbols_ru_KZ", "goog.i18n.NumberFormatSymbols_ru_MD", "goog.i18n.NumberFormatSymbols_ru_UA", "goog.i18n.NumberFormatSymbols_rw", "goog.i18n.NumberFormatSymbols_rw_RW", "goog.i18n.NumberFormatSymbols_rwk", "goog.i18n.NumberFormatSymbols_rwk_TZ", "goog.i18n.NumberFormatSymbols_sah", "goog.i18n.NumberFormatSymbols_sah_RU", "goog.i18n.NumberFormatSymbols_saq", 
"goog.i18n.NumberFormatSymbols_saq_KE", "goog.i18n.NumberFormatSymbols_sbp", "goog.i18n.NumberFormatSymbols_sbp_TZ", "goog.i18n.NumberFormatSymbols_se", "goog.i18n.NumberFormatSymbols_se_FI", "goog.i18n.NumberFormatSymbols_se_NO", "goog.i18n.NumberFormatSymbols_se_SE", "goog.i18n.NumberFormatSymbols_seh", "goog.i18n.NumberFormatSymbols_seh_MZ", "goog.i18n.NumberFormatSymbols_ses", "goog.i18n.NumberFormatSymbols_ses_ML", "goog.i18n.NumberFormatSymbols_sg", "goog.i18n.NumberFormatSymbols_sg_CF", "goog.i18n.NumberFormatSymbols_shi", 
"goog.i18n.NumberFormatSymbols_shi_Latn", "goog.i18n.NumberFormatSymbols_shi_Latn_MA", "goog.i18n.NumberFormatSymbols_shi_Tfng", "goog.i18n.NumberFormatSymbols_shi_Tfng_MA", "goog.i18n.NumberFormatSymbols_smn", "goog.i18n.NumberFormatSymbols_smn_FI", "goog.i18n.NumberFormatSymbols_sn", "goog.i18n.NumberFormatSymbols_sn_ZW", "goog.i18n.NumberFormatSymbols_so", "goog.i18n.NumberFormatSymbols_so_DJ", "goog.i18n.NumberFormatSymbols_so_ET", "goog.i18n.NumberFormatSymbols_so_KE", "goog.i18n.NumberFormatSymbols_so_SO", 
"goog.i18n.NumberFormatSymbols_sq_MK", "goog.i18n.NumberFormatSymbols_sq_XK", "goog.i18n.NumberFormatSymbols_sr_Cyrl_BA", "goog.i18n.NumberFormatSymbols_sr_Cyrl_ME", "goog.i18n.NumberFormatSymbols_sr_Cyrl_XK", "goog.i18n.NumberFormatSymbols_sr_Latn", "goog.i18n.NumberFormatSymbols_sr_Latn_BA", "goog.i18n.NumberFormatSymbols_sr_Latn_ME", "goog.i18n.NumberFormatSymbols_sr_Latn_RS", "goog.i18n.NumberFormatSymbols_sr_Latn_XK", "goog.i18n.NumberFormatSymbols_sv_AX", "goog.i18n.NumberFormatSymbols_sv_FI", 
"goog.i18n.NumberFormatSymbols_sw_CD", "goog.i18n.NumberFormatSymbols_sw_KE", "goog.i18n.NumberFormatSymbols_sw_UG", "goog.i18n.NumberFormatSymbols_ta_LK", "goog.i18n.NumberFormatSymbols_ta_MY", "goog.i18n.NumberFormatSymbols_ta_SG", "goog.i18n.NumberFormatSymbols_teo", "goog.i18n.NumberFormatSymbols_teo_KE", "goog.i18n.NumberFormatSymbols_teo_UG", "goog.i18n.NumberFormatSymbols_ti", "goog.i18n.NumberFormatSymbols_ti_ER", "goog.i18n.NumberFormatSymbols_ti_ET", "goog.i18n.NumberFormatSymbols_to", 
"goog.i18n.NumberFormatSymbols_to_TO", "goog.i18n.NumberFormatSymbols_tr_CY", "goog.i18n.NumberFormatSymbols_twq", "goog.i18n.NumberFormatSymbols_twq_NE", "goog.i18n.NumberFormatSymbols_tzm", "goog.i18n.NumberFormatSymbols_tzm_Latn", "goog.i18n.NumberFormatSymbols_tzm_Latn_MA", "goog.i18n.NumberFormatSymbols_ug", "goog.i18n.NumberFormatSymbols_ug_Arab", "goog.i18n.NumberFormatSymbols_ug_Arab_CN", "goog.i18n.NumberFormatSymbols_ur_IN", "goog.i18n.NumberFormatSymbols_uz_Arab", "goog.i18n.NumberFormatSymbols_uz_Arab_AF", 
"goog.i18n.NumberFormatSymbols_uz_Cyrl", "goog.i18n.NumberFormatSymbols_uz_Cyrl_UZ", "goog.i18n.NumberFormatSymbols_vai", "goog.i18n.NumberFormatSymbols_vai_Latn", "goog.i18n.NumberFormatSymbols_vai_Latn_LR", "goog.i18n.NumberFormatSymbols_vai_Vaii", "goog.i18n.NumberFormatSymbols_vai_Vaii_LR", "goog.i18n.NumberFormatSymbols_vun", "goog.i18n.NumberFormatSymbols_vun_TZ", "goog.i18n.NumberFormatSymbols_wae", "goog.i18n.NumberFormatSymbols_wae_CH", "goog.i18n.NumberFormatSymbols_xog", "goog.i18n.NumberFormatSymbols_xog_UG", 
"goog.i18n.NumberFormatSymbols_yav", "goog.i18n.NumberFormatSymbols_yav_CM", "goog.i18n.NumberFormatSymbols_yi", "goog.i18n.NumberFormatSymbols_yi_001", "goog.i18n.NumberFormatSymbols_yo", "goog.i18n.NumberFormatSymbols_yo_BJ", "goog.i18n.NumberFormatSymbols_yo_NG", "goog.i18n.NumberFormatSymbols_zgh", "goog.i18n.NumberFormatSymbols_zgh_MA", "goog.i18n.NumberFormatSymbols_zh_Hans_HK", "goog.i18n.NumberFormatSymbols_zh_Hans_MO", "goog.i18n.NumberFormatSymbols_zh_Hans_SG", "goog.i18n.NumberFormatSymbols_zh_Hant", 
"goog.i18n.NumberFormatSymbols_zh_Hant_HK", "goog.i18n.NumberFormatSymbols_zh_Hant_MO", "goog.i18n.NumberFormatSymbols_zh_Hant_TW"], ["goog.i18n.NumberFormatSymbols"], false);
goog.addDependency("i18n/ordinalrules.js", ["goog.i18n.ordinalRules"], [], false);
goog.addDependency("i18n/pluralrules.js", ["goog.i18n.pluralRules"], [], false);
goog.addDependency("i18n/pluralrules_test.js", ["goog.i18n.pluralRulesTest"], ["goog.i18n.pluralRules", "goog.testing.jsunit"], false);
goog.addDependency("i18n/timezone.js", ["goog.i18n.TimeZone"], ["goog.array", "goog.date.DateLike", "goog.string"], false);
goog.addDependency("i18n/timezone_test.js", ["goog.i18n.TimeZoneTest"], ["goog.i18n.TimeZone", "goog.testing.jsunit"], false);
goog.addDependency("i18n/uchar.js", ["goog.i18n.uChar"], [], false);
goog.addDependency("i18n/uchar/localnamefetcher.js", ["goog.i18n.uChar.LocalNameFetcher"], ["goog.i18n.uChar.NameFetcher", "goog.i18n.uCharNames", "goog.log"], false);
goog.addDependency("i18n/uchar/localnamefetcher_test.js", ["goog.i18n.uChar.LocalNameFetcherTest"], ["goog.i18n.uChar.LocalNameFetcher", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("i18n/uchar/namefetcher.js", ["goog.i18n.uChar.NameFetcher"], [], false);
goog.addDependency("i18n/uchar/remotenamefetcher.js", ["goog.i18n.uChar.RemoteNameFetcher"], ["goog.Disposable", "goog.Uri", "goog.i18n.uChar", "goog.i18n.uChar.NameFetcher", "goog.log", "goog.net.XhrIo", "goog.structs.Map"], false);
goog.addDependency("i18n/uchar/remotenamefetcher_test.js", ["goog.i18n.uChar.RemoteNameFetcherTest"], ["goog.i18n.uChar.RemoteNameFetcher", "goog.net.XhrIo", "goog.testing.jsunit", "goog.testing.net.XhrIo", "goog.testing.recordFunction"], false);
goog.addDependency("i18n/uchar_test.js", ["goog.i18n.uCharTest"], ["goog.i18n.uChar", "goog.testing.jsunit"], false);
goog.addDependency("i18n/ucharnames.js", ["goog.i18n.uCharNames"], ["goog.i18n.uChar"], false);
goog.addDependency("i18n/ucharnames_test.js", ["goog.i18n.uCharNamesTest"], ["goog.i18n.uCharNames", "goog.testing.jsunit"], false);
goog.addDependency("iter/iter.js", ["goog.iter", "goog.iter.Iterable", "goog.iter.Iterator", "goog.iter.StopIteration"], ["goog.array", "goog.asserts", "goog.functions", "goog.math"], false);
goog.addDependency("iter/iter_test.js", ["goog.iterTest"], ["goog.iter", "goog.iter.Iterator", "goog.iter.StopIteration", "goog.testing.jsunit"], false);
goog.addDependency("json/evaljsonprocessor.js", ["goog.json.EvalJsonProcessor"], ["goog.json", "goog.json.Processor", "goog.json.Serializer"], false);
goog.addDependency("json/hybrid.js", ["goog.json.hybrid"], ["goog.asserts", "goog.json"], false);
goog.addDependency("json/hybrid_test.js", ["goog.json.hybridTest"], ["goog.json", "goog.json.hybrid", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.userAgent"], false);
goog.addDependency("json/hybridjsonprocessor.js", ["goog.json.HybridJsonProcessor"], ["goog.json.Processor", "goog.json.hybrid"], false);
goog.addDependency("json/hybridjsonprocessor_test.js", ["goog.json.HybridJsonProcessorTest"], ["goog.json.HybridJsonProcessor", "goog.json.hybrid", "goog.testing.jsunit"], false);
goog.addDependency("json/json.js", ["goog.json", "goog.json.Replacer", "goog.json.Reviver", "goog.json.Serializer"], [], false);
goog.addDependency("json/json_perf.js", ["goog.jsonPerf"], ["goog.dom", "goog.json", "goog.math", "goog.string", "goog.testing.PerformanceTable", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("json/json_test.js", ["goog.jsonTest"], ["goog.functions", "goog.json", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("json/nativejsonprocessor.js", ["goog.json.NativeJsonProcessor"], ["goog.asserts", "goog.json.Processor"], false);
goog.addDependency("json/processor.js", ["goog.json.Processor"], ["goog.string.Parser", "goog.string.Stringifier"], false);
goog.addDependency("json/processor_test.js", ["goog.json.processorTest"], ["goog.json.EvalJsonProcessor", "goog.json.NativeJsonProcessor", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("labs/dom/pagevisibilitymonitor.js", ["goog.labs.dom.PageVisibilityEvent", "goog.labs.dom.PageVisibilityMonitor", "goog.labs.dom.PageVisibilityState"], ["goog.dom", "goog.dom.vendor", "goog.events", "goog.events.Event", "goog.events.EventTarget", "goog.events.EventType", "goog.memoize"], false);
goog.addDependency("labs/dom/pagevisibilitymonitor_test.js", ["goog.labs.dom.PageVisibilityMonitorTest"], ["goog.events", "goog.functions", "goog.labs.dom.PageVisibilityMonitor", "goog.testing.PropertyReplacer", "goog.testing.events", "goog.testing.events.Event", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("labs/events/nondisposableeventtarget.js", ["goog.labs.events.NonDisposableEventTarget"], ["goog.array", "goog.asserts", "goog.events.Event", "goog.events.Listenable", "goog.events.ListenerMap", "goog.object"], false);
goog.addDependency("labs/events/nondisposableeventtarget_test.js", ["goog.labs.events.NonDisposableEventTargetTest"], ["goog.events.Listenable", "goog.events.eventTargetTester", "goog.events.eventTargetTester.KeyType", "goog.events.eventTargetTester.UnlistenReturnType", "goog.labs.events.NonDisposableEventTarget", "goog.testing.jsunit"], false);
goog.addDependency("labs/events/nondisposableeventtarget_via_googevents_test.js", ["goog.labs.events.NonDisposableEventTargetGoogEventsTest"], ["goog.events", "goog.events.eventTargetTester", "goog.events.eventTargetTester.KeyType", "goog.events.eventTargetTester.UnlistenReturnType", "goog.labs.events.NonDisposableEventTarget", "goog.testing", "goog.testing.jsunit"], false);
goog.addDependency("labs/events/touch.js", ["goog.labs.events.touch", "goog.labs.events.touch.TouchData"], ["goog.array", "goog.asserts", "goog.events.EventType", "goog.string"], false);
goog.addDependency("labs/events/touch_test.js", ["goog.labs.events.touchTest"], ["goog.labs.events.touch", "goog.testing.jsunit"], false);
goog.addDependency("labs/format/csv.js", ["goog.labs.format.csv", "goog.labs.format.csv.ParseError", "goog.labs.format.csv.Token"], ["goog.array", "goog.asserts", "goog.debug.Error", "goog.object", "goog.string", "goog.string.newlines"], false);
goog.addDependency("labs/format/csv_test.js", ["goog.labs.format.csvTest"], ["goog.labs.format.csv", "goog.labs.format.csv.ParseError", "goog.object", "goog.testing.asserts", "goog.testing.jsunit"], false);
goog.addDependency("labs/html/attribute_rewriter.js", ["goog.labs.html.AttributeRewriter", "goog.labs.html.AttributeValue", "goog.labs.html.attributeRewriterPresubmitWorkaround"], [], false);
goog.addDependency("labs/html/sanitizer.js", ["goog.labs.html.Sanitizer"], ["goog.asserts", "goog.html.SafeUrl", "goog.labs.html.attributeRewriterPresubmitWorkaround", "goog.labs.html.scrubber", "goog.object", "goog.string"], false);
goog.addDependency("labs/html/sanitizer_test.js", ["goog.labs.html.SanitizerTest"], ["goog.html.SafeUrl", "goog.labs.html.Sanitizer", "goog.string", "goog.string.Const", "goog.testing.jsunit"], false);
goog.addDependency("labs/html/scrubber.js", ["goog.labs.html.scrubber"], ["goog.array", "goog.dom.tags", "goog.labs.html.attributeRewriterPresubmitWorkaround", "goog.string"], false);
goog.addDependency("labs/html/scrubber_test.js", ["goog.html.ScrubberTest"], ["goog.labs.html.scrubber", "goog.object", "goog.string", "goog.testing.jsunit"], false);
goog.addDependency("labs/i18n/listformat.js", ["goog.labs.i18n.GenderInfo", "goog.labs.i18n.GenderInfo.Gender", "goog.labs.i18n.ListFormat"], ["goog.asserts", "goog.labs.i18n.ListFormatSymbols"], false);
goog.addDependency("labs/i18n/listformat_test.js", ["goog.labs.i18n.ListFormatTest"], ["goog.labs.i18n.GenderInfo", "goog.labs.i18n.ListFormat", "goog.labs.i18n.ListFormatSymbols", "goog.labs.i18n.ListFormatSymbols_el", "goog.labs.i18n.ListFormatSymbols_en", "goog.labs.i18n.ListFormatSymbols_fr", "goog.labs.i18n.ListFormatSymbols_ml", "goog.labs.i18n.ListFormatSymbols_zu", "goog.testing.jsunit"], false);
goog.addDependency("labs/i18n/listsymbols.js", ["goog.labs.i18n.ListFormatSymbols", "goog.labs.i18n.ListFormatSymbols_af", "goog.labs.i18n.ListFormatSymbols_am", "goog.labs.i18n.ListFormatSymbols_ar", "goog.labs.i18n.ListFormatSymbols_az", "goog.labs.i18n.ListFormatSymbols_bg", "goog.labs.i18n.ListFormatSymbols_bn", "goog.labs.i18n.ListFormatSymbols_br", "goog.labs.i18n.ListFormatSymbols_ca", "goog.labs.i18n.ListFormatSymbols_chr", "goog.labs.i18n.ListFormatSymbols_cs", "goog.labs.i18n.ListFormatSymbols_cy", 
"goog.labs.i18n.ListFormatSymbols_da", "goog.labs.i18n.ListFormatSymbols_de", "goog.labs.i18n.ListFormatSymbols_de_AT", "goog.labs.i18n.ListFormatSymbols_de_CH", "goog.labs.i18n.ListFormatSymbols_el", "goog.labs.i18n.ListFormatSymbols_en", "goog.labs.i18n.ListFormatSymbols_en_AU", "goog.labs.i18n.ListFormatSymbols_en_GB", "goog.labs.i18n.ListFormatSymbols_en_IE", "goog.labs.i18n.ListFormatSymbols_en_IN", "goog.labs.i18n.ListFormatSymbols_en_SG", "goog.labs.i18n.ListFormatSymbols_en_US", "goog.labs.i18n.ListFormatSymbols_en_ZA", 
"goog.labs.i18n.ListFormatSymbols_es", "goog.labs.i18n.ListFormatSymbols_es_419", "goog.labs.i18n.ListFormatSymbols_es_ES", "goog.labs.i18n.ListFormatSymbols_et", "goog.labs.i18n.ListFormatSymbols_eu", "goog.labs.i18n.ListFormatSymbols_fa", "goog.labs.i18n.ListFormatSymbols_fi", "goog.labs.i18n.ListFormatSymbols_fil", "goog.labs.i18n.ListFormatSymbols_fr", "goog.labs.i18n.ListFormatSymbols_fr_CA", "goog.labs.i18n.ListFormatSymbols_ga", "goog.labs.i18n.ListFormatSymbols_gl", "goog.labs.i18n.ListFormatSymbols_gsw", 
"goog.labs.i18n.ListFormatSymbols_gu", "goog.labs.i18n.ListFormatSymbols_haw", "goog.labs.i18n.ListFormatSymbols_he", "goog.labs.i18n.ListFormatSymbols_hi", "goog.labs.i18n.ListFormatSymbols_hr", "goog.labs.i18n.ListFormatSymbols_hu", "goog.labs.i18n.ListFormatSymbols_hy", "goog.labs.i18n.ListFormatSymbols_id", "goog.labs.i18n.ListFormatSymbols_in", "goog.labs.i18n.ListFormatSymbols_is", "goog.labs.i18n.ListFormatSymbols_it", "goog.labs.i18n.ListFormatSymbols_iw", "goog.labs.i18n.ListFormatSymbols_ja", 
"goog.labs.i18n.ListFormatSymbols_ka", "goog.labs.i18n.ListFormatSymbols_kk", "goog.labs.i18n.ListFormatSymbols_km", "goog.labs.i18n.ListFormatSymbols_kn", "goog.labs.i18n.ListFormatSymbols_ko", "goog.labs.i18n.ListFormatSymbols_ky", "goog.labs.i18n.ListFormatSymbols_ln", "goog.labs.i18n.ListFormatSymbols_lo", "goog.labs.i18n.ListFormatSymbols_lt", "goog.labs.i18n.ListFormatSymbols_lv", "goog.labs.i18n.ListFormatSymbols_mk", "goog.labs.i18n.ListFormatSymbols_ml", "goog.labs.i18n.ListFormatSymbols_mn", 
"goog.labs.i18n.ListFormatSymbols_mo", "goog.labs.i18n.ListFormatSymbols_mr", "goog.labs.i18n.ListFormatSymbols_ms", "goog.labs.i18n.ListFormatSymbols_mt", "goog.labs.i18n.ListFormatSymbols_my", "goog.labs.i18n.ListFormatSymbols_nb", "goog.labs.i18n.ListFormatSymbols_ne", "goog.labs.i18n.ListFormatSymbols_nl", "goog.labs.i18n.ListFormatSymbols_no", "goog.labs.i18n.ListFormatSymbols_no_NO", "goog.labs.i18n.ListFormatSymbols_or", "goog.labs.i18n.ListFormatSymbols_pa", "goog.labs.i18n.ListFormatSymbols_pl", 
"goog.labs.i18n.ListFormatSymbols_pt", "goog.labs.i18n.ListFormatSymbols_pt_BR", "goog.labs.i18n.ListFormatSymbols_pt_PT", "goog.labs.i18n.ListFormatSymbols_ro", "goog.labs.i18n.ListFormatSymbols_ru", "goog.labs.i18n.ListFormatSymbols_sh", "goog.labs.i18n.ListFormatSymbols_si", "goog.labs.i18n.ListFormatSymbols_sk", "goog.labs.i18n.ListFormatSymbols_sl", "goog.labs.i18n.ListFormatSymbols_sq", "goog.labs.i18n.ListFormatSymbols_sr", "goog.labs.i18n.ListFormatSymbols_sv", "goog.labs.i18n.ListFormatSymbols_sw", 
"goog.labs.i18n.ListFormatSymbols_ta", "goog.labs.i18n.ListFormatSymbols_te", "goog.labs.i18n.ListFormatSymbols_th", "goog.labs.i18n.ListFormatSymbols_tl", "goog.labs.i18n.ListFormatSymbols_tr", "goog.labs.i18n.ListFormatSymbols_uk", "goog.labs.i18n.ListFormatSymbols_ur", "goog.labs.i18n.ListFormatSymbols_uz", "goog.labs.i18n.ListFormatSymbols_vi", "goog.labs.i18n.ListFormatSymbols_zh", "goog.labs.i18n.ListFormatSymbols_zh_CN", "goog.labs.i18n.ListFormatSymbols_zh_HK", "goog.labs.i18n.ListFormatSymbols_zh_TW", 
"goog.labs.i18n.ListFormatSymbols_zu"], [], false);
goog.addDependency("labs/i18n/listsymbolsext.js", ["goog.labs.i18n.ListFormatSymbolsExt", "goog.labs.i18n.ListFormatSymbols_af_NA", "goog.labs.i18n.ListFormatSymbols_af_ZA", "goog.labs.i18n.ListFormatSymbols_agq", "goog.labs.i18n.ListFormatSymbols_agq_CM", "goog.labs.i18n.ListFormatSymbols_ak", "goog.labs.i18n.ListFormatSymbols_ak_GH", "goog.labs.i18n.ListFormatSymbols_am_ET", "goog.labs.i18n.ListFormatSymbols_ar_001", "goog.labs.i18n.ListFormatSymbols_ar_AE", "goog.labs.i18n.ListFormatSymbols_ar_BH", 
"goog.labs.i18n.ListFormatSymbols_ar_DJ", "goog.labs.i18n.ListFormatSymbols_ar_DZ", "goog.labs.i18n.ListFormatSymbols_ar_EG", "goog.labs.i18n.ListFormatSymbols_ar_EH", "goog.labs.i18n.ListFormatSymbols_ar_ER", "goog.labs.i18n.ListFormatSymbols_ar_IL", "goog.labs.i18n.ListFormatSymbols_ar_IQ", "goog.labs.i18n.ListFormatSymbols_ar_JO", "goog.labs.i18n.ListFormatSymbols_ar_KM", "goog.labs.i18n.ListFormatSymbols_ar_KW", "goog.labs.i18n.ListFormatSymbols_ar_LB", "goog.labs.i18n.ListFormatSymbols_ar_LY", 
"goog.labs.i18n.ListFormatSymbols_ar_MA", "goog.labs.i18n.ListFormatSymbols_ar_MR", "goog.labs.i18n.ListFormatSymbols_ar_OM", "goog.labs.i18n.ListFormatSymbols_ar_PS", "goog.labs.i18n.ListFormatSymbols_ar_QA", "goog.labs.i18n.ListFormatSymbols_ar_SA", "goog.labs.i18n.ListFormatSymbols_ar_SD", "goog.labs.i18n.ListFormatSymbols_ar_SO", "goog.labs.i18n.ListFormatSymbols_ar_SS", "goog.labs.i18n.ListFormatSymbols_ar_SY", "goog.labs.i18n.ListFormatSymbols_ar_TD", "goog.labs.i18n.ListFormatSymbols_ar_TN", 
"goog.labs.i18n.ListFormatSymbols_ar_YE", "goog.labs.i18n.ListFormatSymbols_as", "goog.labs.i18n.ListFormatSymbols_as_IN", "goog.labs.i18n.ListFormatSymbols_asa", "goog.labs.i18n.ListFormatSymbols_asa_TZ", "goog.labs.i18n.ListFormatSymbols_az_Cyrl", "goog.labs.i18n.ListFormatSymbols_az_Cyrl_AZ", "goog.labs.i18n.ListFormatSymbols_az_Latn", "goog.labs.i18n.ListFormatSymbols_az_Latn_AZ", "goog.labs.i18n.ListFormatSymbols_bas", "goog.labs.i18n.ListFormatSymbols_bas_CM", "goog.labs.i18n.ListFormatSymbols_be", 
"goog.labs.i18n.ListFormatSymbols_be_BY", "goog.labs.i18n.ListFormatSymbols_bem", "goog.labs.i18n.ListFormatSymbols_bem_ZM", "goog.labs.i18n.ListFormatSymbols_bez", "goog.labs.i18n.ListFormatSymbols_bez_TZ", "goog.labs.i18n.ListFormatSymbols_bg_BG", "goog.labs.i18n.ListFormatSymbols_bm", "goog.labs.i18n.ListFormatSymbols_bm_Latn", "goog.labs.i18n.ListFormatSymbols_bm_Latn_ML", "goog.labs.i18n.ListFormatSymbols_bn_BD", "goog.labs.i18n.ListFormatSymbols_bn_IN", "goog.labs.i18n.ListFormatSymbols_bo", 
"goog.labs.i18n.ListFormatSymbols_bo_CN", "goog.labs.i18n.ListFormatSymbols_bo_IN", "goog.labs.i18n.ListFormatSymbols_br_FR", "goog.labs.i18n.ListFormatSymbols_brx", "goog.labs.i18n.ListFormatSymbols_brx_IN", "goog.labs.i18n.ListFormatSymbols_bs", "goog.labs.i18n.ListFormatSymbols_bs_Cyrl", "goog.labs.i18n.ListFormatSymbols_bs_Cyrl_BA", "goog.labs.i18n.ListFormatSymbols_bs_Latn", "goog.labs.i18n.ListFormatSymbols_bs_Latn_BA", "goog.labs.i18n.ListFormatSymbols_ca_AD", "goog.labs.i18n.ListFormatSymbols_ca_ES", 
"goog.labs.i18n.ListFormatSymbols_ca_FR", "goog.labs.i18n.ListFormatSymbols_ca_IT", "goog.labs.i18n.ListFormatSymbols_cgg", "goog.labs.i18n.ListFormatSymbols_cgg_UG", "goog.labs.i18n.ListFormatSymbols_chr_US", "goog.labs.i18n.ListFormatSymbols_cs_CZ", "goog.labs.i18n.ListFormatSymbols_cy_GB", "goog.labs.i18n.ListFormatSymbols_da_DK", "goog.labs.i18n.ListFormatSymbols_da_GL", "goog.labs.i18n.ListFormatSymbols_dav", "goog.labs.i18n.ListFormatSymbols_dav_KE", "goog.labs.i18n.ListFormatSymbols_de_BE", 
"goog.labs.i18n.ListFormatSymbols_de_DE", "goog.labs.i18n.ListFormatSymbols_de_LI", "goog.labs.i18n.ListFormatSymbols_de_LU", "goog.labs.i18n.ListFormatSymbols_dje", "goog.labs.i18n.ListFormatSymbols_dje_NE", "goog.labs.i18n.ListFormatSymbols_dsb", "goog.labs.i18n.ListFormatSymbols_dsb_DE", "goog.labs.i18n.ListFormatSymbols_dua", "goog.labs.i18n.ListFormatSymbols_dua_CM", "goog.labs.i18n.ListFormatSymbols_dyo", "goog.labs.i18n.ListFormatSymbols_dyo_SN", "goog.labs.i18n.ListFormatSymbols_dz", "goog.labs.i18n.ListFormatSymbols_dz_BT", 
"goog.labs.i18n.ListFormatSymbols_ebu", "goog.labs.i18n.ListFormatSymbols_ebu_KE", "goog.labs.i18n.ListFormatSymbols_ee", "goog.labs.i18n.ListFormatSymbols_ee_GH", "goog.labs.i18n.ListFormatSymbols_ee_TG", "goog.labs.i18n.ListFormatSymbols_el_CY", "goog.labs.i18n.ListFormatSymbols_el_GR", "goog.labs.i18n.ListFormatSymbols_en_001", "goog.labs.i18n.ListFormatSymbols_en_150", "goog.labs.i18n.ListFormatSymbols_en_AG", "goog.labs.i18n.ListFormatSymbols_en_AI", "goog.labs.i18n.ListFormatSymbols_en_AS", 
"goog.labs.i18n.ListFormatSymbols_en_BB", "goog.labs.i18n.ListFormatSymbols_en_BE", "goog.labs.i18n.ListFormatSymbols_en_BM", "goog.labs.i18n.ListFormatSymbols_en_BS", "goog.labs.i18n.ListFormatSymbols_en_BW", "goog.labs.i18n.ListFormatSymbols_en_BZ", "goog.labs.i18n.ListFormatSymbols_en_CA", "goog.labs.i18n.ListFormatSymbols_en_CC", "goog.labs.i18n.ListFormatSymbols_en_CK", "goog.labs.i18n.ListFormatSymbols_en_CM", "goog.labs.i18n.ListFormatSymbols_en_CX", "goog.labs.i18n.ListFormatSymbols_en_DG", 
"goog.labs.i18n.ListFormatSymbols_en_DM", "goog.labs.i18n.ListFormatSymbols_en_ER", "goog.labs.i18n.ListFormatSymbols_en_FJ", "goog.labs.i18n.ListFormatSymbols_en_FK", "goog.labs.i18n.ListFormatSymbols_en_FM", "goog.labs.i18n.ListFormatSymbols_en_GD", "goog.labs.i18n.ListFormatSymbols_en_GG", "goog.labs.i18n.ListFormatSymbols_en_GH", "goog.labs.i18n.ListFormatSymbols_en_GI", "goog.labs.i18n.ListFormatSymbols_en_GM", "goog.labs.i18n.ListFormatSymbols_en_GU", "goog.labs.i18n.ListFormatSymbols_en_GY", 
"goog.labs.i18n.ListFormatSymbols_en_HK", "goog.labs.i18n.ListFormatSymbols_en_IM", "goog.labs.i18n.ListFormatSymbols_en_IO", "goog.labs.i18n.ListFormatSymbols_en_JE", "goog.labs.i18n.ListFormatSymbols_en_JM", "goog.labs.i18n.ListFormatSymbols_en_KE", "goog.labs.i18n.ListFormatSymbols_en_KI", "goog.labs.i18n.ListFormatSymbols_en_KN", "goog.labs.i18n.ListFormatSymbols_en_KY", "goog.labs.i18n.ListFormatSymbols_en_LC", "goog.labs.i18n.ListFormatSymbols_en_LR", "goog.labs.i18n.ListFormatSymbols_en_LS", 
"goog.labs.i18n.ListFormatSymbols_en_MG", "goog.labs.i18n.ListFormatSymbols_en_MH", "goog.labs.i18n.ListFormatSymbols_en_MO", "goog.labs.i18n.ListFormatSymbols_en_MP", "goog.labs.i18n.ListFormatSymbols_en_MS", "goog.labs.i18n.ListFormatSymbols_en_MT", "goog.labs.i18n.ListFormatSymbols_en_MU", "goog.labs.i18n.ListFormatSymbols_en_MW", "goog.labs.i18n.ListFormatSymbols_en_MY", "goog.labs.i18n.ListFormatSymbols_en_NA", "goog.labs.i18n.ListFormatSymbols_en_NF", "goog.labs.i18n.ListFormatSymbols_en_NG", 
"goog.labs.i18n.ListFormatSymbols_en_NR", "goog.labs.i18n.ListFormatSymbols_en_NU", "goog.labs.i18n.ListFormatSymbols_en_NZ", "goog.labs.i18n.ListFormatSymbols_en_PG", "goog.labs.i18n.ListFormatSymbols_en_PH", "goog.labs.i18n.ListFormatSymbols_en_PK", "goog.labs.i18n.ListFormatSymbols_en_PN", "goog.labs.i18n.ListFormatSymbols_en_PR", "goog.labs.i18n.ListFormatSymbols_en_PW", "goog.labs.i18n.ListFormatSymbols_en_RW", "goog.labs.i18n.ListFormatSymbols_en_SB", "goog.labs.i18n.ListFormatSymbols_en_SC", 
"goog.labs.i18n.ListFormatSymbols_en_SD", "goog.labs.i18n.ListFormatSymbols_en_SH", "goog.labs.i18n.ListFormatSymbols_en_SL", "goog.labs.i18n.ListFormatSymbols_en_SS", "goog.labs.i18n.ListFormatSymbols_en_SX", "goog.labs.i18n.ListFormatSymbols_en_SZ", "goog.labs.i18n.ListFormatSymbols_en_TC", "goog.labs.i18n.ListFormatSymbols_en_TK", "goog.labs.i18n.ListFormatSymbols_en_TO", "goog.labs.i18n.ListFormatSymbols_en_TT", "goog.labs.i18n.ListFormatSymbols_en_TV", "goog.labs.i18n.ListFormatSymbols_en_TZ", 
"goog.labs.i18n.ListFormatSymbols_en_UG", "goog.labs.i18n.ListFormatSymbols_en_UM", "goog.labs.i18n.ListFormatSymbols_en_US_POSIX", "goog.labs.i18n.ListFormatSymbols_en_VC", "goog.labs.i18n.ListFormatSymbols_en_VG", "goog.labs.i18n.ListFormatSymbols_en_VI", "goog.labs.i18n.ListFormatSymbols_en_VU", "goog.labs.i18n.ListFormatSymbols_en_WS", "goog.labs.i18n.ListFormatSymbols_en_ZM", "goog.labs.i18n.ListFormatSymbols_en_ZW", "goog.labs.i18n.ListFormatSymbols_eo", "goog.labs.i18n.ListFormatSymbols_es_AR", 
"goog.labs.i18n.ListFormatSymbols_es_BO", "goog.labs.i18n.ListFormatSymbols_es_CL", "goog.labs.i18n.ListFormatSymbols_es_CO", "goog.labs.i18n.ListFormatSymbols_es_CR", "goog.labs.i18n.ListFormatSymbols_es_CU", "goog.labs.i18n.ListFormatSymbols_es_DO", "goog.labs.i18n.ListFormatSymbols_es_EA", "goog.labs.i18n.ListFormatSymbols_es_EC", "goog.labs.i18n.ListFormatSymbols_es_GQ", "goog.labs.i18n.ListFormatSymbols_es_GT", "goog.labs.i18n.ListFormatSymbols_es_HN", "goog.labs.i18n.ListFormatSymbols_es_IC", 
"goog.labs.i18n.ListFormatSymbols_es_MX", "goog.labs.i18n.ListFormatSymbols_es_NI", "goog.labs.i18n.ListFormatSymbols_es_PA", "goog.labs.i18n.ListFormatSymbols_es_PE", "goog.labs.i18n.ListFormatSymbols_es_PH", "goog.labs.i18n.ListFormatSymbols_es_PR", "goog.labs.i18n.ListFormatSymbols_es_PY", "goog.labs.i18n.ListFormatSymbols_es_SV", "goog.labs.i18n.ListFormatSymbols_es_US", "goog.labs.i18n.ListFormatSymbols_es_UY", "goog.labs.i18n.ListFormatSymbols_es_VE", "goog.labs.i18n.ListFormatSymbols_et_EE", 
"goog.labs.i18n.ListFormatSymbols_eu_ES", "goog.labs.i18n.ListFormatSymbols_ewo", "goog.labs.i18n.ListFormatSymbols_ewo_CM", "goog.labs.i18n.ListFormatSymbols_fa_AF", "goog.labs.i18n.ListFormatSymbols_fa_IR", "goog.labs.i18n.ListFormatSymbols_ff", "goog.labs.i18n.ListFormatSymbols_ff_CM", "goog.labs.i18n.ListFormatSymbols_ff_GN", "goog.labs.i18n.ListFormatSymbols_ff_MR", "goog.labs.i18n.ListFormatSymbols_ff_SN", "goog.labs.i18n.ListFormatSymbols_fi_FI", "goog.labs.i18n.ListFormatSymbols_fil_PH", 
"goog.labs.i18n.ListFormatSymbols_fo", "goog.labs.i18n.ListFormatSymbols_fo_FO", "goog.labs.i18n.ListFormatSymbols_fr_BE", "goog.labs.i18n.ListFormatSymbols_fr_BF", "goog.labs.i18n.ListFormatSymbols_fr_BI", "goog.labs.i18n.ListFormatSymbols_fr_BJ", "goog.labs.i18n.ListFormatSymbols_fr_BL", "goog.labs.i18n.ListFormatSymbols_fr_CD", "goog.labs.i18n.ListFormatSymbols_fr_CF", "goog.labs.i18n.ListFormatSymbols_fr_CG", "goog.labs.i18n.ListFormatSymbols_fr_CH", "goog.labs.i18n.ListFormatSymbols_fr_CI", 
"goog.labs.i18n.ListFormatSymbols_fr_CM", "goog.labs.i18n.ListFormatSymbols_fr_DJ", "goog.labs.i18n.ListFormatSymbols_fr_DZ", "goog.labs.i18n.ListFormatSymbols_fr_FR", "goog.labs.i18n.ListFormatSymbols_fr_GA", "goog.labs.i18n.ListFormatSymbols_fr_GF", "goog.labs.i18n.ListFormatSymbols_fr_GN", "goog.labs.i18n.ListFormatSymbols_fr_GP", "goog.labs.i18n.ListFormatSymbols_fr_GQ", "goog.labs.i18n.ListFormatSymbols_fr_HT", "goog.labs.i18n.ListFormatSymbols_fr_KM", "goog.labs.i18n.ListFormatSymbols_fr_LU", 
"goog.labs.i18n.ListFormatSymbols_fr_MA", "goog.labs.i18n.ListFormatSymbols_fr_MC", "goog.labs.i18n.ListFormatSymbols_fr_MF", "goog.labs.i18n.ListFormatSymbols_fr_MG", "goog.labs.i18n.ListFormatSymbols_fr_ML", "goog.labs.i18n.ListFormatSymbols_fr_MQ", "goog.labs.i18n.ListFormatSymbols_fr_MR", "goog.labs.i18n.ListFormatSymbols_fr_MU", "goog.labs.i18n.ListFormatSymbols_fr_NC", "goog.labs.i18n.ListFormatSymbols_fr_NE", "goog.labs.i18n.ListFormatSymbols_fr_PF", "goog.labs.i18n.ListFormatSymbols_fr_PM", 
"goog.labs.i18n.ListFormatSymbols_fr_RE", "goog.labs.i18n.ListFormatSymbols_fr_RW", "goog.labs.i18n.ListFormatSymbols_fr_SC", "goog.labs.i18n.ListFormatSymbols_fr_SN", "goog.labs.i18n.ListFormatSymbols_fr_SY", "goog.labs.i18n.ListFormatSymbols_fr_TD", "goog.labs.i18n.ListFormatSymbols_fr_TG", "goog.labs.i18n.ListFormatSymbols_fr_TN", "goog.labs.i18n.ListFormatSymbols_fr_VU", "goog.labs.i18n.ListFormatSymbols_fr_WF", "goog.labs.i18n.ListFormatSymbols_fr_YT", "goog.labs.i18n.ListFormatSymbols_fur", 
"goog.labs.i18n.ListFormatSymbols_fur_IT", "goog.labs.i18n.ListFormatSymbols_fy", "goog.labs.i18n.ListFormatSymbols_fy_NL", "goog.labs.i18n.ListFormatSymbols_ga_IE", "goog.labs.i18n.ListFormatSymbols_gd", "goog.labs.i18n.ListFormatSymbols_gd_GB", "goog.labs.i18n.ListFormatSymbols_gl_ES", "goog.labs.i18n.ListFormatSymbols_gsw_CH", "goog.labs.i18n.ListFormatSymbols_gsw_FR", "goog.labs.i18n.ListFormatSymbols_gsw_LI", "goog.labs.i18n.ListFormatSymbols_gu_IN", "goog.labs.i18n.ListFormatSymbols_guz", "goog.labs.i18n.ListFormatSymbols_guz_KE", 
"goog.labs.i18n.ListFormatSymbols_gv", "goog.labs.i18n.ListFormatSymbols_gv_IM", "goog.labs.i18n.ListFormatSymbols_ha", "goog.labs.i18n.ListFormatSymbols_ha_Latn", "goog.labs.i18n.ListFormatSymbols_ha_Latn_GH", "goog.labs.i18n.ListFormatSymbols_ha_Latn_NE", "goog.labs.i18n.ListFormatSymbols_ha_Latn_NG", "goog.labs.i18n.ListFormatSymbols_haw_US", "goog.labs.i18n.ListFormatSymbols_he_IL", "goog.labs.i18n.ListFormatSymbols_hi_IN", "goog.labs.i18n.ListFormatSymbols_hr_BA", "goog.labs.i18n.ListFormatSymbols_hr_HR", 
"goog.labs.i18n.ListFormatSymbols_hsb", "goog.labs.i18n.ListFormatSymbols_hsb_DE", "goog.labs.i18n.ListFormatSymbols_hu_HU", "goog.labs.i18n.ListFormatSymbols_hy_AM", "goog.labs.i18n.ListFormatSymbols_id_ID", "goog.labs.i18n.ListFormatSymbols_ig", "goog.labs.i18n.ListFormatSymbols_ig_NG", "goog.labs.i18n.ListFormatSymbols_ii", "goog.labs.i18n.ListFormatSymbols_ii_CN", "goog.labs.i18n.ListFormatSymbols_is_IS", "goog.labs.i18n.ListFormatSymbols_it_CH", "goog.labs.i18n.ListFormatSymbols_it_IT", "goog.labs.i18n.ListFormatSymbols_it_SM", 
"goog.labs.i18n.ListFormatSymbols_ja_JP", "goog.labs.i18n.ListFormatSymbols_jgo", "goog.labs.i18n.ListFormatSymbols_jgo_CM", "goog.labs.i18n.ListFormatSymbols_jmc", "goog.labs.i18n.ListFormatSymbols_jmc_TZ", "goog.labs.i18n.ListFormatSymbols_ka_GE", "goog.labs.i18n.ListFormatSymbols_kab", "goog.labs.i18n.ListFormatSymbols_kab_DZ", "goog.labs.i18n.ListFormatSymbols_kam", "goog.labs.i18n.ListFormatSymbols_kam_KE", "goog.labs.i18n.ListFormatSymbols_kde", "goog.labs.i18n.ListFormatSymbols_kde_TZ", "goog.labs.i18n.ListFormatSymbols_kea", 
"goog.labs.i18n.ListFormatSymbols_kea_CV", "goog.labs.i18n.ListFormatSymbols_khq", "goog.labs.i18n.ListFormatSymbols_khq_ML", "goog.labs.i18n.ListFormatSymbols_ki", "goog.labs.i18n.ListFormatSymbols_ki_KE", "goog.labs.i18n.ListFormatSymbols_kk_Cyrl", "goog.labs.i18n.ListFormatSymbols_kk_Cyrl_KZ", "goog.labs.i18n.ListFormatSymbols_kkj", "goog.labs.i18n.ListFormatSymbols_kkj_CM", "goog.labs.i18n.ListFormatSymbols_kl", "goog.labs.i18n.ListFormatSymbols_kl_GL", "goog.labs.i18n.ListFormatSymbols_kln", 
"goog.labs.i18n.ListFormatSymbols_kln_KE", "goog.labs.i18n.ListFormatSymbols_km_KH", "goog.labs.i18n.ListFormatSymbols_kn_IN", "goog.labs.i18n.ListFormatSymbols_ko_KP", "goog.labs.i18n.ListFormatSymbols_ko_KR", "goog.labs.i18n.ListFormatSymbols_kok", "goog.labs.i18n.ListFormatSymbols_kok_IN", "goog.labs.i18n.ListFormatSymbols_ks", "goog.labs.i18n.ListFormatSymbols_ks_Arab", "goog.labs.i18n.ListFormatSymbols_ks_Arab_IN", "goog.labs.i18n.ListFormatSymbols_ksb", "goog.labs.i18n.ListFormatSymbols_ksb_TZ", 
"goog.labs.i18n.ListFormatSymbols_ksf", "goog.labs.i18n.ListFormatSymbols_ksf_CM", "goog.labs.i18n.ListFormatSymbols_ksh", "goog.labs.i18n.ListFormatSymbols_ksh_DE", "goog.labs.i18n.ListFormatSymbols_kw", "goog.labs.i18n.ListFormatSymbols_kw_GB", "goog.labs.i18n.ListFormatSymbols_ky_Cyrl", "goog.labs.i18n.ListFormatSymbols_ky_Cyrl_KG", "goog.labs.i18n.ListFormatSymbols_lag", "goog.labs.i18n.ListFormatSymbols_lag_TZ", "goog.labs.i18n.ListFormatSymbols_lb", "goog.labs.i18n.ListFormatSymbols_lb_LU", 
"goog.labs.i18n.ListFormatSymbols_lg", "goog.labs.i18n.ListFormatSymbols_lg_UG", "goog.labs.i18n.ListFormatSymbols_lkt", "goog.labs.i18n.ListFormatSymbols_lkt_US", "goog.labs.i18n.ListFormatSymbols_ln_AO", "goog.labs.i18n.ListFormatSymbols_ln_CD", "goog.labs.i18n.ListFormatSymbols_ln_CF", "goog.labs.i18n.ListFormatSymbols_ln_CG", "goog.labs.i18n.ListFormatSymbols_lo_LA", "goog.labs.i18n.ListFormatSymbols_lt_LT", "goog.labs.i18n.ListFormatSymbols_lu", "goog.labs.i18n.ListFormatSymbols_lu_CD", "goog.labs.i18n.ListFormatSymbols_luo", 
"goog.labs.i18n.ListFormatSymbols_luo_KE", "goog.labs.i18n.ListFormatSymbols_luy", "goog.labs.i18n.ListFormatSymbols_luy_KE", "goog.labs.i18n.ListFormatSymbols_lv_LV", "goog.labs.i18n.ListFormatSymbols_mas", "goog.labs.i18n.ListFormatSymbols_mas_KE", "goog.labs.i18n.ListFormatSymbols_mas_TZ", "goog.labs.i18n.ListFormatSymbols_mer", "goog.labs.i18n.ListFormatSymbols_mer_KE", "goog.labs.i18n.ListFormatSymbols_mfe", "goog.labs.i18n.ListFormatSymbols_mfe_MU", "goog.labs.i18n.ListFormatSymbols_mg", "goog.labs.i18n.ListFormatSymbols_mg_MG", 
"goog.labs.i18n.ListFormatSymbols_mgh", "goog.labs.i18n.ListFormatSymbols_mgh_MZ", "goog.labs.i18n.ListFormatSymbols_mgo", "goog.labs.i18n.ListFormatSymbols_mgo_CM", "goog.labs.i18n.ListFormatSymbols_mk_MK", "goog.labs.i18n.ListFormatSymbols_ml_IN", "goog.labs.i18n.ListFormatSymbols_mn_Cyrl", "goog.labs.i18n.ListFormatSymbols_mn_Cyrl_MN", "goog.labs.i18n.ListFormatSymbols_mr_IN", "goog.labs.i18n.ListFormatSymbols_ms_Latn", "goog.labs.i18n.ListFormatSymbols_ms_Latn_BN", "goog.labs.i18n.ListFormatSymbols_ms_Latn_MY", 
"goog.labs.i18n.ListFormatSymbols_ms_Latn_SG", "goog.labs.i18n.ListFormatSymbols_mt_MT", "goog.labs.i18n.ListFormatSymbols_mua", "goog.labs.i18n.ListFormatSymbols_mua_CM", "goog.labs.i18n.ListFormatSymbols_my_MM", "goog.labs.i18n.ListFormatSymbols_naq", "goog.labs.i18n.ListFormatSymbols_naq_NA", "goog.labs.i18n.ListFormatSymbols_nb_NO", "goog.labs.i18n.ListFormatSymbols_nb_SJ", "goog.labs.i18n.ListFormatSymbols_nd", "goog.labs.i18n.ListFormatSymbols_nd_ZW", "goog.labs.i18n.ListFormatSymbols_ne_IN", 
"goog.labs.i18n.ListFormatSymbols_ne_NP", "goog.labs.i18n.ListFormatSymbols_nl_AW", "goog.labs.i18n.ListFormatSymbols_nl_BE", "goog.labs.i18n.ListFormatSymbols_nl_BQ", "goog.labs.i18n.ListFormatSymbols_nl_CW", "goog.labs.i18n.ListFormatSymbols_nl_NL", "goog.labs.i18n.ListFormatSymbols_nl_SR", "goog.labs.i18n.ListFormatSymbols_nl_SX", "goog.labs.i18n.ListFormatSymbols_nmg", "goog.labs.i18n.ListFormatSymbols_nmg_CM", "goog.labs.i18n.ListFormatSymbols_nn", "goog.labs.i18n.ListFormatSymbols_nn_NO", "goog.labs.i18n.ListFormatSymbols_nnh", 
"goog.labs.i18n.ListFormatSymbols_nnh_CM", "goog.labs.i18n.ListFormatSymbols_nus", "goog.labs.i18n.ListFormatSymbols_nus_SD", "goog.labs.i18n.ListFormatSymbols_nyn", "goog.labs.i18n.ListFormatSymbols_nyn_UG", "goog.labs.i18n.ListFormatSymbols_om", "goog.labs.i18n.ListFormatSymbols_om_ET", "goog.labs.i18n.ListFormatSymbols_om_KE", "goog.labs.i18n.ListFormatSymbols_or_IN", "goog.labs.i18n.ListFormatSymbols_os", "goog.labs.i18n.ListFormatSymbols_os_GE", "goog.labs.i18n.ListFormatSymbols_os_RU", "goog.labs.i18n.ListFormatSymbols_pa_Arab", 
"goog.labs.i18n.ListFormatSymbols_pa_Arab_PK", "goog.labs.i18n.ListFormatSymbols_pa_Guru", "goog.labs.i18n.ListFormatSymbols_pa_Guru_IN", "goog.labs.i18n.ListFormatSymbols_pl_PL", "goog.labs.i18n.ListFormatSymbols_ps", "goog.labs.i18n.ListFormatSymbols_ps_AF", "goog.labs.i18n.ListFormatSymbols_pt_AO", "goog.labs.i18n.ListFormatSymbols_pt_CV", "goog.labs.i18n.ListFormatSymbols_pt_GW", "goog.labs.i18n.ListFormatSymbols_pt_MO", "goog.labs.i18n.ListFormatSymbols_pt_MZ", "goog.labs.i18n.ListFormatSymbols_pt_ST", 
"goog.labs.i18n.ListFormatSymbols_pt_TL", "goog.labs.i18n.ListFormatSymbols_qu", "goog.labs.i18n.ListFormatSymbols_qu_BO", "goog.labs.i18n.ListFormatSymbols_qu_EC", "goog.labs.i18n.ListFormatSymbols_qu_PE", "goog.labs.i18n.ListFormatSymbols_rm", "goog.labs.i18n.ListFormatSymbols_rm_CH", "goog.labs.i18n.ListFormatSymbols_rn", "goog.labs.i18n.ListFormatSymbols_rn_BI", "goog.labs.i18n.ListFormatSymbols_ro_MD", "goog.labs.i18n.ListFormatSymbols_ro_RO", "goog.labs.i18n.ListFormatSymbols_rof", "goog.labs.i18n.ListFormatSymbols_rof_TZ", 
"goog.labs.i18n.ListFormatSymbols_ru_BY", "goog.labs.i18n.ListFormatSymbols_ru_KG", "goog.labs.i18n.ListFormatSymbols_ru_KZ", "goog.labs.i18n.ListFormatSymbols_ru_MD", "goog.labs.i18n.ListFormatSymbols_ru_RU", "goog.labs.i18n.ListFormatSymbols_ru_UA", "goog.labs.i18n.ListFormatSymbols_rw", "goog.labs.i18n.ListFormatSymbols_rw_RW", "goog.labs.i18n.ListFormatSymbols_rwk", "goog.labs.i18n.ListFormatSymbols_rwk_TZ", "goog.labs.i18n.ListFormatSymbols_sah", "goog.labs.i18n.ListFormatSymbols_sah_RU", "goog.labs.i18n.ListFormatSymbols_saq", 
"goog.labs.i18n.ListFormatSymbols_saq_KE", "goog.labs.i18n.ListFormatSymbols_sbp", "goog.labs.i18n.ListFormatSymbols_sbp_TZ", "goog.labs.i18n.ListFormatSymbols_se", "goog.labs.i18n.ListFormatSymbols_se_FI", "goog.labs.i18n.ListFormatSymbols_se_NO", "goog.labs.i18n.ListFormatSymbols_se_SE", "goog.labs.i18n.ListFormatSymbols_seh", "goog.labs.i18n.ListFormatSymbols_seh_MZ", "goog.labs.i18n.ListFormatSymbols_ses", "goog.labs.i18n.ListFormatSymbols_ses_ML", "goog.labs.i18n.ListFormatSymbols_sg", "goog.labs.i18n.ListFormatSymbols_sg_CF", 
"goog.labs.i18n.ListFormatSymbols_shi", "goog.labs.i18n.ListFormatSymbols_shi_Latn", "goog.labs.i18n.ListFormatSymbols_shi_Latn_MA", "goog.labs.i18n.ListFormatSymbols_shi_Tfng", "goog.labs.i18n.ListFormatSymbols_shi_Tfng_MA", "goog.labs.i18n.ListFormatSymbols_si_LK", "goog.labs.i18n.ListFormatSymbols_sk_SK", "goog.labs.i18n.ListFormatSymbols_sl_SI", "goog.labs.i18n.ListFormatSymbols_smn", "goog.labs.i18n.ListFormatSymbols_smn_FI", "goog.labs.i18n.ListFormatSymbols_sn", "goog.labs.i18n.ListFormatSymbols_sn_ZW", 
"goog.labs.i18n.ListFormatSymbols_so", "goog.labs.i18n.ListFormatSymbols_so_DJ", "goog.labs.i18n.ListFormatSymbols_so_ET", "goog.labs.i18n.ListFormatSymbols_so_KE", "goog.labs.i18n.ListFormatSymbols_so_SO", "goog.labs.i18n.ListFormatSymbols_sq_AL", "goog.labs.i18n.ListFormatSymbols_sq_MK", "goog.labs.i18n.ListFormatSymbols_sq_XK", "goog.labs.i18n.ListFormatSymbols_sr_Cyrl", "goog.labs.i18n.ListFormatSymbols_sr_Cyrl_BA", "goog.labs.i18n.ListFormatSymbols_sr_Cyrl_ME", "goog.labs.i18n.ListFormatSymbols_sr_Cyrl_RS", 
"goog.labs.i18n.ListFormatSymbols_sr_Cyrl_XK", "goog.labs.i18n.ListFormatSymbols_sr_Latn", "goog.labs.i18n.ListFormatSymbols_sr_Latn_BA", "goog.labs.i18n.ListFormatSymbols_sr_Latn_ME", "goog.labs.i18n.ListFormatSymbols_sr_Latn_RS", "goog.labs.i18n.ListFormatSymbols_sr_Latn_XK", "goog.labs.i18n.ListFormatSymbols_sv_AX", "goog.labs.i18n.ListFormatSymbols_sv_FI", "goog.labs.i18n.ListFormatSymbols_sv_SE", "goog.labs.i18n.ListFormatSymbols_sw_CD", "goog.labs.i18n.ListFormatSymbols_sw_KE", "goog.labs.i18n.ListFormatSymbols_sw_TZ", 
"goog.labs.i18n.ListFormatSymbols_sw_UG", "goog.labs.i18n.ListFormatSymbols_ta_IN", "goog.labs.i18n.ListFormatSymbols_ta_LK", "goog.labs.i18n.ListFormatSymbols_ta_MY", "goog.labs.i18n.ListFormatSymbols_ta_SG", "goog.labs.i18n.ListFormatSymbols_te_IN", "goog.labs.i18n.ListFormatSymbols_teo", "goog.labs.i18n.ListFormatSymbols_teo_KE", "goog.labs.i18n.ListFormatSymbols_teo_UG", "goog.labs.i18n.ListFormatSymbols_th_TH", "goog.labs.i18n.ListFormatSymbols_ti", "goog.labs.i18n.ListFormatSymbols_ti_ER", 
"goog.labs.i18n.ListFormatSymbols_ti_ET", "goog.labs.i18n.ListFormatSymbols_to", "goog.labs.i18n.ListFormatSymbols_to_TO", "goog.labs.i18n.ListFormatSymbols_tr_CY", "goog.labs.i18n.ListFormatSymbols_tr_TR", "goog.labs.i18n.ListFormatSymbols_twq", "goog.labs.i18n.ListFormatSymbols_twq_NE", "goog.labs.i18n.ListFormatSymbols_tzm", "goog.labs.i18n.ListFormatSymbols_tzm_Latn", "goog.labs.i18n.ListFormatSymbols_tzm_Latn_MA", "goog.labs.i18n.ListFormatSymbols_ug", "goog.labs.i18n.ListFormatSymbols_ug_Arab", 
"goog.labs.i18n.ListFormatSymbols_ug_Arab_CN", "goog.labs.i18n.ListFormatSymbols_uk_UA", "goog.labs.i18n.ListFormatSymbols_ur_IN", "goog.labs.i18n.ListFormatSymbols_ur_PK", "goog.labs.i18n.ListFormatSymbols_uz_Arab", "goog.labs.i18n.ListFormatSymbols_uz_Arab_AF", "goog.labs.i18n.ListFormatSymbols_uz_Cyrl", "goog.labs.i18n.ListFormatSymbols_uz_Cyrl_UZ", "goog.labs.i18n.ListFormatSymbols_uz_Latn", "goog.labs.i18n.ListFormatSymbols_uz_Latn_UZ", "goog.labs.i18n.ListFormatSymbols_vai", "goog.labs.i18n.ListFormatSymbols_vai_Latn", 
"goog.labs.i18n.ListFormatSymbols_vai_Latn_LR", "goog.labs.i18n.ListFormatSymbols_vai_Vaii", "goog.labs.i18n.ListFormatSymbols_vai_Vaii_LR", "goog.labs.i18n.ListFormatSymbols_vi_VN", "goog.labs.i18n.ListFormatSymbols_vun", "goog.labs.i18n.ListFormatSymbols_vun_TZ", "goog.labs.i18n.ListFormatSymbols_wae", "goog.labs.i18n.ListFormatSymbols_wae_CH", "goog.labs.i18n.ListFormatSymbols_xog", "goog.labs.i18n.ListFormatSymbols_xog_UG", "goog.labs.i18n.ListFormatSymbols_yav", "goog.labs.i18n.ListFormatSymbols_yav_CM", 
"goog.labs.i18n.ListFormatSymbols_yi", "goog.labs.i18n.ListFormatSymbols_yi_001", "goog.labs.i18n.ListFormatSymbols_yo", "goog.labs.i18n.ListFormatSymbols_yo_BJ", "goog.labs.i18n.ListFormatSymbols_yo_NG", "goog.labs.i18n.ListFormatSymbols_zgh", "goog.labs.i18n.ListFormatSymbols_zgh_MA", "goog.labs.i18n.ListFormatSymbols_zh_Hans", "goog.labs.i18n.ListFormatSymbols_zh_Hans_CN", "goog.labs.i18n.ListFormatSymbols_zh_Hans_HK", "goog.labs.i18n.ListFormatSymbols_zh_Hans_MO", "goog.labs.i18n.ListFormatSymbols_zh_Hans_SG", 
"goog.labs.i18n.ListFormatSymbols_zh_Hant", "goog.labs.i18n.ListFormatSymbols_zh_Hant_HK", "goog.labs.i18n.ListFormatSymbols_zh_Hant_MO", "goog.labs.i18n.ListFormatSymbols_zh_Hant_TW", "goog.labs.i18n.ListFormatSymbols_zu_ZA"], ["goog.labs.i18n.ListFormatSymbols"], false);
goog.addDependency("labs/iterable/iterable.js", ["goog.labs.iterable"], [], true);
goog.addDependency("labs/iterable/iterable_test.js", ["goog.labs.iterableTest"], ["goog.labs.iterable", "goog.testing.jsunit", "goog.testing.recordFunction"], true);
goog.addDependency("labs/mock/mock.js", ["goog.labs.mock", "goog.labs.mock.VerificationError"], ["goog.array", "goog.asserts", "goog.debug", "goog.debug.Error", "goog.functions", "goog.object"], false);
goog.addDependency("labs/mock/mock_test.js", ["goog.labs.mockTest"], ["goog.array", "goog.labs.mock", "goog.labs.mock.VerificationError", "goog.labs.testing.AnythingMatcher", "goog.labs.testing.GreaterThanMatcher", "goog.string", "goog.testing.jsunit"], false);
goog.addDependency("labs/net/image.js", ["goog.labs.net.image"], ["goog.Promise", "goog.events.EventHandler", "goog.events.EventType", "goog.net.EventType", "goog.userAgent"], false);
goog.addDependency("labs/net/image_test.js", ["goog.labs.net.imageTest"], ["goog.labs.net.image", "goog.string", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("labs/net/webchannel.js", ["goog.net.WebChannel"], ["goog.events", "goog.events.Event"], false);
goog.addDependency("labs/net/webchannel/basetestchannel.js", ["goog.labs.net.webChannel.BaseTestChannel"], ["goog.labs.net.webChannel.Channel", "goog.labs.net.webChannel.ChannelRequest", "goog.labs.net.webChannel.requestStats", "goog.labs.net.webChannel.requestStats.Stat"], false);
goog.addDependency("labs/net/webchannel/channel.js", ["goog.labs.net.webChannel.Channel"], [], false);
goog.addDependency("labs/net/webchannel/channelrequest.js", ["goog.labs.net.webChannel.ChannelRequest"], ["goog.Timer", "goog.async.Throttle", "goog.events.EventHandler", "goog.labs.net.webChannel.requestStats", "goog.labs.net.webChannel.requestStats.ServerReachability", "goog.labs.net.webChannel.requestStats.Stat", "goog.net.ErrorCode", "goog.net.EventType", "goog.net.XmlHttp", "goog.object", "goog.uri.utils.StandardQueryParam", "goog.userAgent"], false);
goog.addDependency("labs/net/webchannel/channelrequest_test.js", ["goog.labs.net.webChannel.channelRequestTest"], ["goog.Uri", "goog.functions", "goog.labs.net.webChannel.ChannelRequest", "goog.labs.net.webChannel.WebChannelDebug", "goog.labs.net.webChannel.requestStats", "goog.labs.net.webChannel.requestStats.ServerReachability", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.net.XhrIo", "goog.testing.recordFunction"], false);
goog.addDependency("labs/net/webchannel/connectionstate.js", ["goog.labs.net.webChannel.ConnectionState"], [], false);
goog.addDependency("labs/net/webchannel/forwardchannelrequestpool.js", ["goog.labs.net.webChannel.ForwardChannelRequestPool"], ["goog.array", "goog.string", "goog.structs.Set"], false);
goog.addDependency("labs/net/webchannel/forwardchannelrequestpool_test.js", ["goog.labs.net.webChannel.forwardChannelRequestPoolTest"], ["goog.labs.net.webChannel.ChannelRequest", "goog.labs.net.webChannel.ForwardChannelRequestPool", "goog.testing.PropertyReplacer", "goog.testing.asserts", "goog.testing.jsunit"], false);
goog.addDependency("labs/net/webchannel/netutils.js", ["goog.labs.net.webChannel.netUtils"], ["goog.Uri", "goog.labs.net.webChannel.WebChannelDebug"], false);
goog.addDependency("labs/net/webchannel/requeststats.js", ["goog.labs.net.webChannel.requestStats", "goog.labs.net.webChannel.requestStats.Event", "goog.labs.net.webChannel.requestStats.ServerReachability", "goog.labs.net.webChannel.requestStats.ServerReachabilityEvent", "goog.labs.net.webChannel.requestStats.Stat", "goog.labs.net.webChannel.requestStats.StatEvent", "goog.labs.net.webChannel.requestStats.TimingEvent"], ["goog.events.Event", "goog.events.EventTarget"], false);
goog.addDependency("labs/net/webchannel/webchannelbase.js", ["goog.labs.net.webChannel.WebChannelBase"], ["goog.Uri", "goog.array", "goog.asserts", "goog.debug.TextFormatter", "goog.json", "goog.labs.net.webChannel.BaseTestChannel", "goog.labs.net.webChannel.Channel", "goog.labs.net.webChannel.ChannelRequest", "goog.labs.net.webChannel.ConnectionState", "goog.labs.net.webChannel.ForwardChannelRequestPool", "goog.labs.net.webChannel.WebChannelDebug", "goog.labs.net.webChannel.Wire", "goog.labs.net.webChannel.WireV8", 
"goog.labs.net.webChannel.netUtils", "goog.labs.net.webChannel.requestStats", "goog.labs.net.webChannel.requestStats.Stat", "goog.log", "goog.net.XhrIo", "goog.object", "goog.string", "goog.structs", "goog.structs.CircularBuffer"], false);
goog.addDependency("labs/net/webchannel/webchannelbase_test.js", ["goog.labs.net.webChannel.webChannelBaseTest"], ["goog.Timer", "goog.array", "goog.dom", "goog.functions", "goog.json", "goog.labs.net.webChannel.ChannelRequest", "goog.labs.net.webChannel.ForwardChannelRequestPool", "goog.labs.net.webChannel.WebChannelBase", "goog.labs.net.webChannel.WebChannelBaseTransport", "goog.labs.net.webChannel.WebChannelDebug", "goog.labs.net.webChannel.Wire", "goog.labs.net.webChannel.netUtils", "goog.labs.net.webChannel.requestStats", 
"goog.labs.net.webChannel.requestStats.Stat", "goog.structs.Map", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.asserts", "goog.testing.jsunit"], false);
goog.addDependency("labs/net/webchannel/webchannelbasetransport.js", ["goog.labs.net.webChannel.WebChannelBaseTransport"], ["goog.asserts", "goog.events.EventTarget", "goog.labs.net.webChannel.ChannelRequest", "goog.labs.net.webChannel.WebChannelBase", "goog.log", "goog.net.WebChannel", "goog.net.WebChannelTransport", "goog.object", "goog.string.path"], false);
goog.addDependency("labs/net/webchannel/webchannelbasetransport_test.js", ["goog.labs.net.webChannel.webChannelBaseTransportTest"], ["goog.events", "goog.functions", "goog.labs.net.webChannel.ChannelRequest", "goog.labs.net.webChannel.WebChannelBaseTransport", "goog.net.WebChannel", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("labs/net/webchannel/webchanneldebug.js", ["goog.labs.net.webChannel.WebChannelDebug"], ["goog.json", "goog.log"], false);
goog.addDependency("labs/net/webchannel/wire.js", ["goog.labs.net.webChannel.Wire"], [], false);
goog.addDependency("labs/net/webchannel/wirev8.js", ["goog.labs.net.webChannel.WireV8"], ["goog.asserts", "goog.json", "goog.json.NativeJsonProcessor", "goog.structs"], false);
goog.addDependency("labs/net/webchannel/wirev8_test.js", ["goog.labs.net.webChannel.WireV8Test"], ["goog.labs.net.webChannel.WireV8", "goog.testing.jsunit"], false);
goog.addDependency("labs/net/webchanneltransport.js", ["goog.net.WebChannelTransport"], [], false);
goog.addDependency("labs/net/webchanneltransportfactory.js", ["goog.net.createWebChannelTransport"], ["goog.functions", "goog.labs.net.webChannel.WebChannelBaseTransport"], false);
goog.addDependency("labs/net/xhr.js", ["goog.labs.net.xhr", "goog.labs.net.xhr.Error", "goog.labs.net.xhr.HttpError", "goog.labs.net.xhr.Options", "goog.labs.net.xhr.PostData", "goog.labs.net.xhr.ResponseType", "goog.labs.net.xhr.TimeoutError"], ["goog.Promise", "goog.debug.Error", "goog.json", "goog.net.HttpStatus", "goog.net.XmlHttp", "goog.string", "goog.uri.utils", "goog.userAgent"], false);
goog.addDependency("labs/net/xhr_test.js", ["goog.labs.net.xhrTest"], ["goog.Promise", "goog.labs.net.xhr", "goog.net.WrapperXmlHttpFactory", "goog.net.XmlHttp", "goog.testing.MockClock", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("labs/object/object.js", ["goog.labs.object"], [], false);
goog.addDependency("labs/object/object_test.js", ["goog.labs.objectTest"], ["goog.labs.object", "goog.testing.jsunit"], false);
goog.addDependency("labs/pubsub/broadcastpubsub.js", ["goog.labs.pubsub.BroadcastPubSub"], ["goog.Disposable", "goog.Timer", "goog.array", "goog.async.run", "goog.events.EventHandler", "goog.events.EventType", "goog.json", "goog.log", "goog.math", "goog.pubsub.PubSub", "goog.storage.Storage", "goog.storage.mechanism.HTML5LocalStorage", "goog.string", "goog.userAgent"], false);
goog.addDependency("labs/pubsub/broadcastpubsub_test.js", ["goog.labs.pubsub.BroadcastPubSubTest"], ["goog.array", "goog.debug.Logger", "goog.json", "goog.labs.pubsub.BroadcastPubSub", "goog.storage.Storage", "goog.structs.Map", "goog.testing.MockClock", "goog.testing.MockControl", "goog.testing.events", "goog.testing.events.Event", "goog.testing.jsunit", "goog.testing.mockmatchers", "goog.testing.mockmatchers.ArgumentMatcher", "goog.testing.recordFunction", "goog.userAgent"], false);
goog.addDependency("labs/storage/boundedcollectablestorage.js", ["goog.labs.storage.BoundedCollectableStorage"], ["goog.array", "goog.asserts", "goog.iter", "goog.storage.CollectableStorage", "goog.storage.ErrorCode", "goog.storage.ExpiringStorage"], false);
goog.addDependency("labs/storage/boundedcollectablestorage_test.js", ["goog.labs.storage.BoundedCollectableStorageTest"], ["goog.labs.storage.BoundedCollectableStorage", "goog.storage.collectableStorageTester", "goog.storage.storage_test", "goog.testing.MockClock", "goog.testing.jsunit", "goog.testing.storage.FakeMechanism"], false);
goog.addDependency("labs/structs/map.js", ["goog.labs.structs.Map"], ["goog.array", "goog.asserts", "goog.labs.object", "goog.object"], false);
goog.addDependency("labs/structs/map_perf.js", ["goog.labs.structs.MapPerf"], ["goog.asserts", "goog.dom", "goog.dom.TagName", "goog.labs.structs.Map", "goog.structs.Map", "goog.testing.PerformanceTable", "goog.testing.jsunit"], false);
goog.addDependency("labs/structs/map_test.js", ["goog.labs.structs.MapTest"], ["goog.labs.structs.Map", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("labs/structs/multimap.js", ["goog.labs.structs.Multimap"], ["goog.array", "goog.labs.object", "goog.labs.structs.Map"], false);
goog.addDependency("labs/structs/multimap_test.js", ["goog.labs.structs.MultimapTest"], ["goog.labs.structs.Map", "goog.labs.structs.Multimap", "goog.testing.jsunit"], false);
goog.addDependency("labs/style/pixeldensitymonitor.js", ["goog.labs.style.PixelDensityMonitor", "goog.labs.style.PixelDensityMonitor.Density", "goog.labs.style.PixelDensityMonitor.EventType"], ["goog.events", "goog.events.EventTarget"], false);
goog.addDependency("labs/style/pixeldensitymonitor_test.js", ["goog.labs.style.PixelDensityMonitorTest"], ["goog.array", "goog.dom.DomHelper", "goog.events", "goog.labs.style.PixelDensityMonitor", "goog.testing.MockControl", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("labs/testing/assertthat.js", ["goog.labs.testing.MatcherError", "goog.labs.testing.assertThat"], ["goog.debug.Error"], false);
goog.addDependency("labs/testing/assertthat_test.js", ["goog.labs.testing.assertThatTest"], ["goog.labs.testing.MatcherError", "goog.labs.testing.assertThat", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("labs/testing/decoratormatcher.js", ["goog.labs.testing.AnythingMatcher"], ["goog.labs.testing.Matcher"], false);
goog.addDependency("labs/testing/decoratormatcher_test.js", ["goog.labs.testing.decoratorMatcherTest"], ["goog.labs.testing.AnythingMatcher", "goog.labs.testing.GreaterThanMatcher", "goog.labs.testing.MatcherError", "goog.labs.testing.assertThat", "goog.testing.jsunit"], false);
goog.addDependency("labs/testing/dictionarymatcher.js", ["goog.labs.testing.HasEntriesMatcher", "goog.labs.testing.HasEntryMatcher", "goog.labs.testing.HasKeyMatcher", "goog.labs.testing.HasValueMatcher"], ["goog.asserts", "goog.labs.testing.Matcher", "goog.object"], false);
goog.addDependency("labs/testing/dictionarymatcher_test.js", ["goog.labs.testing.dictionaryMatcherTest"], ["goog.labs.testing.HasEntryMatcher", "goog.labs.testing.MatcherError", "goog.labs.testing.assertThat", "goog.testing.jsunit"], false);
goog.addDependency("labs/testing/environment.js", ["goog.labs.testing.Environment"], ["goog.array", "goog.debug.Console", "goog.testing.MockClock", "goog.testing.MockControl", "goog.testing.TestCase", "goog.testing.jsunit"], false);
goog.addDependency("labs/testing/environment_test.js", ["goog.labs.testing.environmentTest"], ["goog.labs.testing.Environment", "goog.testing.MockControl", "goog.testing.TestCase", "goog.testing.jsunit"], false);
goog.addDependency("labs/testing/environment_usage_test.js", ["goog.labs.testing.environmentUsageTest"], ["goog.labs.testing.Environment"], false);
goog.addDependency("labs/testing/logicmatcher.js", ["goog.labs.testing.AllOfMatcher", "goog.labs.testing.AnyOfMatcher", "goog.labs.testing.IsNotMatcher"], ["goog.array", "goog.labs.testing.Matcher"], false);
goog.addDependency("labs/testing/logicmatcher_test.js", ["goog.labs.testing.logicMatcherTest"], ["goog.labs.testing.AllOfMatcher", "goog.labs.testing.GreaterThanMatcher", "goog.labs.testing.MatcherError", "goog.labs.testing.assertThat", "goog.testing.jsunit"], false);
goog.addDependency("labs/testing/matcher.js", ["goog.labs.testing.Matcher"], [], false);
goog.addDependency("labs/testing/numbermatcher.js", ["goog.labs.testing.CloseToMatcher", "goog.labs.testing.EqualToMatcher", "goog.labs.testing.GreaterThanEqualToMatcher", "goog.labs.testing.GreaterThanMatcher", "goog.labs.testing.LessThanEqualToMatcher", "goog.labs.testing.LessThanMatcher"], ["goog.asserts", "goog.labs.testing.Matcher"], false);
goog.addDependency("labs/testing/numbermatcher_test.js", ["goog.labs.testing.numberMatcherTest"], ["goog.labs.testing.LessThanMatcher", "goog.labs.testing.MatcherError", "goog.labs.testing.assertThat", "goog.testing.jsunit"], false);
goog.addDependency("labs/testing/objectmatcher.js", ["goog.labs.testing.HasPropertyMatcher", "goog.labs.testing.InstanceOfMatcher", "goog.labs.testing.IsNullMatcher", "goog.labs.testing.IsNullOrUndefinedMatcher", "goog.labs.testing.IsUndefinedMatcher", "goog.labs.testing.ObjectEqualsMatcher"], ["goog.labs.testing.Matcher"], false);
goog.addDependency("labs/testing/objectmatcher_test.js", ["goog.labs.testing.objectMatcherTest"], ["goog.labs.testing.MatcherError", "goog.labs.testing.ObjectEqualsMatcher", "goog.labs.testing.assertThat", "goog.testing.jsunit"], false);
goog.addDependency("labs/testing/stringmatcher.js", ["goog.labs.testing.ContainsStringMatcher", "goog.labs.testing.EndsWithMatcher", "goog.labs.testing.EqualToIgnoringWhitespaceMatcher", "goog.labs.testing.EqualsMatcher", "goog.labs.testing.RegexMatcher", "goog.labs.testing.StartsWithMatcher", "goog.labs.testing.StringContainsInOrderMatcher"], ["goog.asserts", "goog.labs.testing.Matcher", "goog.string"], false);
goog.addDependency("labs/testing/stringmatcher_test.js", ["goog.labs.testing.stringMatcherTest"], ["goog.labs.testing.MatcherError", "goog.labs.testing.StringContainsInOrderMatcher", "goog.labs.testing.assertThat", "goog.testing.jsunit"], false);
goog.addDependency("labs/useragent/browser.js", ["goog.labs.userAgent.browser"], ["goog.array", "goog.labs.userAgent.util", "goog.object", "goog.string"], false);
goog.addDependency("labs/useragent/browser_test.js", ["goog.labs.userAgent.browserTest"], ["goog.labs.userAgent.browser", "goog.labs.userAgent.testAgents", "goog.labs.userAgent.util", "goog.object", "goog.testing.jsunit"], false);
goog.addDependency("labs/useragent/device.js", ["goog.labs.userAgent.device"], ["goog.labs.userAgent.util"], false);
goog.addDependency("labs/useragent/device_test.js", ["goog.labs.userAgent.deviceTest"], ["goog.labs.userAgent.device", "goog.labs.userAgent.testAgents", "goog.labs.userAgent.util", "goog.testing.jsunit"], false);
goog.addDependency("labs/useragent/engine.js", ["goog.labs.userAgent.engine"], ["goog.array", "goog.labs.userAgent.util", "goog.string"], false);
goog.addDependency("labs/useragent/engine_test.js", ["goog.labs.userAgent.engineTest"], ["goog.labs.userAgent.engine", "goog.labs.userAgent.testAgents", "goog.labs.userAgent.util", "goog.testing.jsunit"], false);
goog.addDependency("labs/useragent/platform.js", ["goog.labs.userAgent.platform"], ["goog.labs.userAgent.util", "goog.string"], false);
goog.addDependency("labs/useragent/platform_test.js", ["goog.labs.userAgent.platformTest"], ["goog.labs.userAgent.platform", "goog.labs.userAgent.testAgents", "goog.labs.userAgent.util", "goog.testing.jsunit"], false);
goog.addDependency("labs/useragent/test_agents.js", ["goog.labs.userAgent.testAgents"], [], false);
goog.addDependency("labs/useragent/util.js", ["goog.labs.userAgent.util"], ["goog.string"], false);
goog.addDependency("labs/useragent/util_test.js", ["goog.labs.userAgent.utilTest"], ["goog.functions", "goog.labs.userAgent.testAgents", "goog.labs.userAgent.util", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("locale/countries.js", ["goog.locale.countries"], [], false);
goog.addDependency("locale/countrylanguagenames_test.js", ["goog.locale.countryLanguageNamesTest"], ["goog.locale", "goog.testing.jsunit"], false);
goog.addDependency("locale/defaultlocalenameconstants.js", ["goog.locale.defaultLocaleNameConstants"], [], false);
goog.addDependency("locale/genericfontnames.js", ["goog.locale.genericFontNames"], [], false);
goog.addDependency("locale/genericfontnames_test.js", ["goog.locale.genericFontNamesTest"], ["goog.locale.genericFontNames", "goog.testing.jsunit"], false);
goog.addDependency("locale/genericfontnamesdata.js", ["goog.locale.genericFontNamesData"], [], false);
goog.addDependency("locale/locale.js", ["goog.locale"], ["goog.locale.nativeNameConstants"], false);
goog.addDependency("locale/nativenameconstants.js", ["goog.locale.nativeNameConstants"], [], false);
goog.addDependency("locale/scriptToLanguages.js", ["goog.locale.scriptToLanguages"], ["goog.locale"], false);
goog.addDependency("locale/timezonedetection.js", ["goog.locale.timeZoneDetection"], ["goog.locale.TimeZoneFingerprint"], false);
goog.addDependency("locale/timezonedetection_test.js", ["goog.locale.timeZoneDetectionTest"], ["goog.locale.timeZoneDetection", "goog.testing.jsunit"], false);
goog.addDependency("locale/timezonefingerprint.js", ["goog.locale.TimeZoneFingerprint"], [], false);
goog.addDependency("locale/timezonelist.js", ["goog.locale.TimeZoneList"], ["goog.locale"], false);
goog.addDependency("locale/timezonelist_test.js", ["goog.locale.TimeZoneListTest"], ["goog.locale", "goog.locale.TimeZoneList", "goog.testing.jsunit"], false);
goog.addDependency("log/log.js", ["goog.log", "goog.log.Level", "goog.log.LogRecord", "goog.log.Logger"], ["goog.debug", "goog.debug.LogManager", "goog.debug.LogRecord", "goog.debug.Logger"], false);
goog.addDependency("log/log_test.js", ["goog.logTest"], ["goog.debug.LogManager", "goog.log", "goog.log.Level", "goog.testing.jsunit"], false);
goog.addDependency("math/affinetransform.js", ["goog.math.AffineTransform"], ["goog.math"], false);
goog.addDependency("math/affinetransform_test.js", ["goog.math.AffineTransformTest"], ["goog.array", "goog.math", "goog.math.AffineTransform", "goog.testing.jsunit"], false);
goog.addDependency("math/bezier.js", ["goog.math.Bezier"], ["goog.math", "goog.math.Coordinate"], false);
goog.addDependency("math/bezier_test.js", ["goog.math.BezierTest"], ["goog.math", "goog.math.Bezier", "goog.math.Coordinate", "goog.testing.jsunit"], false);
goog.addDependency("math/box.js", ["goog.math.Box"], ["goog.math.Coordinate"], false);
goog.addDependency("math/box_test.js", ["goog.math.BoxTest"], ["goog.math.Box", "goog.math.Coordinate", "goog.testing.jsunit"], false);
goog.addDependency("math/coordinate.js", ["goog.math.Coordinate"], ["goog.math"], false);
goog.addDependency("math/coordinate3.js", ["goog.math.Coordinate3"], [], false);
goog.addDependency("math/coordinate3_test.js", ["goog.math.Coordinate3Test"], ["goog.math.Coordinate3", "goog.testing.jsunit"], false);
goog.addDependency("math/coordinate_test.js", ["goog.math.CoordinateTest"], ["goog.math.Coordinate", "goog.testing.jsunit"], false);
goog.addDependency("math/exponentialbackoff.js", ["goog.math.ExponentialBackoff"], ["goog.asserts"], false);
goog.addDependency("math/exponentialbackoff_test.js", ["goog.math.ExponentialBackoffTest"], ["goog.math.ExponentialBackoff", "goog.testing.jsunit"], false);
goog.addDependency("math/integer.js", ["goog.math.Integer"], [], false);
goog.addDependency("math/integer_test.js", ["goog.math.IntegerTest"], ["goog.math.Integer", "goog.testing.jsunit"], false);
goog.addDependency("math/interpolator/interpolator1.js", ["goog.math.interpolator.Interpolator1"], [], false);
goog.addDependency("math/interpolator/linear1.js", ["goog.math.interpolator.Linear1"], ["goog.array", "goog.asserts", "goog.math", "goog.math.interpolator.Interpolator1"], false);
goog.addDependency("math/interpolator/linear1_test.js", ["goog.math.interpolator.Linear1Test"], ["goog.math.interpolator.Linear1", "goog.testing.jsunit"], false);
goog.addDependency("math/interpolator/pchip1.js", ["goog.math.interpolator.Pchip1"], ["goog.math", "goog.math.interpolator.Spline1"], false);
goog.addDependency("math/interpolator/pchip1_test.js", ["goog.math.interpolator.Pchip1Test"], ["goog.math.interpolator.Pchip1", "goog.testing.jsunit"], false);
goog.addDependency("math/interpolator/spline1.js", ["goog.math.interpolator.Spline1"], ["goog.array", "goog.asserts", "goog.math", "goog.math.interpolator.Interpolator1", "goog.math.tdma"], false);
goog.addDependency("math/interpolator/spline1_test.js", ["goog.math.interpolator.Spline1Test"], ["goog.math.interpolator.Spline1", "goog.testing.jsunit"], false);
goog.addDependency("math/line.js", ["goog.math.Line"], ["goog.math", "goog.math.Coordinate"], false);
goog.addDependency("math/line_test.js", ["goog.math.LineTest"], ["goog.math.Coordinate", "goog.math.Line", "goog.testing.jsunit"], false);
goog.addDependency("math/long.js", ["goog.math.Long"], [], false);
goog.addDependency("math/long_test.js", ["goog.math.LongTest"], ["goog.math.Long", "goog.testing.jsunit"], false);
goog.addDependency("math/math.js", ["goog.math"], ["goog.array", "goog.asserts"], false);
goog.addDependency("math/math_test.js", ["goog.mathTest"], ["goog.math", "goog.testing.jsunit"], false);
goog.addDependency("math/matrix.js", ["goog.math.Matrix"], ["goog.array", "goog.math", "goog.math.Size", "goog.string"], false);
goog.addDependency("math/matrix_test.js", ["goog.math.MatrixTest"], ["goog.math.Matrix", "goog.testing.jsunit"], false);
goog.addDependency("math/path.js", ["goog.math.Path", "goog.math.Path.Segment"], ["goog.array", "goog.math"], false);
goog.addDependency("math/path_test.js", ["goog.math.PathTest"], ["goog.array", "goog.math.AffineTransform", "goog.math.Path", "goog.testing.jsunit"], false);
goog.addDependency("math/paths.js", ["goog.math.paths"], ["goog.math.Coordinate", "goog.math.Path"], false);
goog.addDependency("math/paths_test.js", ["goog.math.pathsTest"], ["goog.math.Coordinate", "goog.math.paths", "goog.testing.jsunit"], false);
goog.addDependency("math/range.js", ["goog.math.Range"], ["goog.asserts"], false);
goog.addDependency("math/range_test.js", ["goog.math.RangeTest"], ["goog.math.Range", "goog.testing.jsunit"], false);
goog.addDependency("math/rangeset.js", ["goog.math.RangeSet"], ["goog.array", "goog.iter.Iterator", "goog.iter.StopIteration", "goog.math.Range"], false);
goog.addDependency("math/rangeset_test.js", ["goog.math.RangeSetTest"], ["goog.iter", "goog.math.Range", "goog.math.RangeSet", "goog.testing.jsunit"], false);
goog.addDependency("math/rect.js", ["goog.math.Rect"], ["goog.math.Box", "goog.math.Coordinate", "goog.math.Size"], false);
goog.addDependency("math/rect_test.js", ["goog.math.RectTest"], ["goog.math.Box", "goog.math.Coordinate", "goog.math.Rect", "goog.math.Size", "goog.testing.jsunit"], false);
goog.addDependency("math/size.js", ["goog.math.Size"], [], false);
goog.addDependency("math/size_test.js", ["goog.math.SizeTest"], ["goog.math.Size", "goog.testing.jsunit"], false);
goog.addDependency("math/tdma.js", ["goog.math.tdma"], [], false);
goog.addDependency("math/tdma_test.js", ["goog.math.tdmaTest"], ["goog.math.tdma", "goog.testing.jsunit"], false);
goog.addDependency("math/vec2.js", ["goog.math.Vec2"], ["goog.math", "goog.math.Coordinate"], false);
goog.addDependency("math/vec2_test.js", ["goog.math.Vec2Test"], ["goog.math.Vec2", "goog.testing.jsunit"], false);
goog.addDependency("math/vec3.js", ["goog.math.Vec3"], ["goog.math", "goog.math.Coordinate3"], false);
goog.addDependency("math/vec3_test.js", ["goog.math.Vec3Test"], ["goog.math.Coordinate3", "goog.math.Vec3", "goog.testing.jsunit"], false);
goog.addDependency("memoize/memoize.js", ["goog.memoize"], [], false);
goog.addDependency("memoize/memoize_test.js", ["goog.memoizeTest"], ["goog.memoize", "goog.testing.jsunit"], false);
goog.addDependency("messaging/abstractchannel.js", ["goog.messaging.AbstractChannel"], ["goog.Disposable", "goog.json", "goog.log", "goog.messaging.MessageChannel"], false);
goog.addDependency("messaging/abstractchannel_test.js", ["goog.messaging.AbstractChannelTest"], ["goog.messaging.AbstractChannel", "goog.testing.MockControl", "goog.testing.async.MockControl", "goog.testing.jsunit"], false);
goog.addDependency("messaging/bufferedchannel.js", ["goog.messaging.BufferedChannel"], ["goog.Disposable", "goog.Timer", "goog.events", "goog.log", "goog.messaging.MessageChannel", "goog.messaging.MultiChannel"], false);
goog.addDependency("messaging/bufferedchannel_test.js", ["goog.messaging.BufferedChannelTest"], ["goog.debug.Console", "goog.dom", "goog.dom.TagName", "goog.log", "goog.log.Level", "goog.messaging.BufferedChannel", "goog.testing.MockClock", "goog.testing.MockControl", "goog.testing.async.MockControl", "goog.testing.jsunit", "goog.testing.messaging.MockMessageChannel"], false);
goog.addDependency("messaging/deferredchannel.js", ["goog.messaging.DeferredChannel"], ["goog.Disposable", "goog.messaging.MessageChannel"], false);
goog.addDependency("messaging/deferredchannel_test.js", ["goog.messaging.DeferredChannelTest"], ["goog.async.Deferred", "goog.messaging.DeferredChannel", "goog.testing.MockControl", "goog.testing.async.MockControl", "goog.testing.jsunit", "goog.testing.messaging.MockMessageChannel"], false);
goog.addDependency("messaging/loggerclient.js", ["goog.messaging.LoggerClient"], ["goog.Disposable", "goog.debug", "goog.debug.LogManager", "goog.debug.Logger"], false);
goog.addDependency("messaging/loggerclient_test.js", ["goog.messaging.LoggerClientTest"], ["goog.debug", "goog.debug.Logger", "goog.messaging.LoggerClient", "goog.testing.MockControl", "goog.testing.jsunit", "goog.testing.messaging.MockMessageChannel"], false);
goog.addDependency("messaging/loggerserver.js", ["goog.messaging.LoggerServer"], ["goog.Disposable", "goog.log", "goog.log.Level"], false);
goog.addDependency("messaging/loggerserver_test.js", ["goog.messaging.LoggerServerTest"], ["goog.debug.LogManager", "goog.debug.Logger", "goog.log", "goog.log.Level", "goog.messaging.LoggerServer", "goog.testing.MockControl", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.messaging.MockMessageChannel"], false);
goog.addDependency("messaging/messagechannel.js", ["goog.messaging.MessageChannel"], [], false);
goog.addDependency("messaging/messaging.js", ["goog.messaging"], [], false);
goog.addDependency("messaging/messaging_test.js", ["goog.testing.messaging.MockMessageChannelTest"], ["goog.messaging", "goog.testing.MockControl", "goog.testing.jsunit", "goog.testing.messaging.MockMessageChannel"], false);
goog.addDependency("messaging/multichannel.js", ["goog.messaging.MultiChannel", "goog.messaging.MultiChannel.VirtualChannel"], ["goog.Disposable", "goog.log", "goog.messaging.MessageChannel", "goog.object"], false);
goog.addDependency("messaging/multichannel_test.js", ["goog.messaging.MultiChannelTest"], ["goog.messaging.MultiChannel", "goog.testing.MockControl", "goog.testing.jsunit", "goog.testing.messaging.MockMessageChannel", "goog.testing.mockmatchers.IgnoreArgument"], false);
goog.addDependency("messaging/portcaller.js", ["goog.messaging.PortCaller"], ["goog.Disposable", "goog.async.Deferred", "goog.messaging.DeferredChannel", "goog.messaging.PortChannel", "goog.messaging.PortNetwork", "goog.object"], false);
goog.addDependency("messaging/portcaller_test.js", ["goog.messaging.PortCallerTest"], ["goog.events.EventTarget", "goog.messaging.PortCaller", "goog.messaging.PortNetwork", "goog.testing.MockControl", "goog.testing.jsunit", "goog.testing.messaging.MockMessageChannel"], false);
goog.addDependency("messaging/portchannel.js", ["goog.messaging.PortChannel"], ["goog.Timer", "goog.array", "goog.async.Deferred", "goog.debug", "goog.events", "goog.events.EventType", "goog.json", "goog.log", "goog.messaging.AbstractChannel", "goog.messaging.DeferredChannel", "goog.object", "goog.string", "goog.userAgent"], false);
goog.addDependency("messaging/portnetwork.js", ["goog.messaging.PortNetwork"], [], false);
goog.addDependency("messaging/portoperator.js", ["goog.messaging.PortOperator"], ["goog.Disposable", "goog.asserts", "goog.log", "goog.messaging.PortChannel", "goog.messaging.PortNetwork", "goog.object"], false);
goog.addDependency("messaging/portoperator_test.js", ["goog.messaging.PortOperatorTest"], ["goog.messaging.PortNetwork", "goog.messaging.PortOperator", "goog.testing.MockControl", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.messaging.MockMessageChannel", "goog.testing.messaging.MockMessagePort"], false);
goog.addDependency("messaging/respondingchannel.js", ["goog.messaging.RespondingChannel"], ["goog.Disposable", "goog.log", "goog.messaging.MultiChannel"], false);
goog.addDependency("messaging/respondingchannel_test.js", ["goog.messaging.RespondingChannelTest"], ["goog.messaging.RespondingChannel", "goog.testing.MockControl", "goog.testing.jsunit", "goog.testing.messaging.MockMessageChannel"], false);
goog.addDependency("messaging/testdata/portchannel_worker.js", ["goog.messaging.testdata.portchannel_worker"], ["goog.messaging.PortChannel"], false);
goog.addDependency("messaging/testdata/portnetwork_worker1.js", ["goog.messaging.testdata.portnetwork_worker1"], ["goog.messaging.PortCaller", "goog.messaging.PortChannel"], false);
goog.addDependency("messaging/testdata/portnetwork_worker2.js", ["goog.messaging.testdata.portnetwork_worker2"], ["goog.messaging.PortCaller", "goog.messaging.PortChannel"], false);
goog.addDependency("module/abstractmoduleloader.js", ["goog.module.AbstractModuleLoader"], ["goog.module"], false);
goog.addDependency("module/basemodule.js", ["goog.module.BaseModule"], ["goog.Disposable", "goog.module"], false);
goog.addDependency("module/loader.js", ["goog.module.Loader"], ["goog.Timer", "goog.array", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.module", "goog.object"], false);
goog.addDependency("module/module.js", ["goog.module"], [], false);
goog.addDependency("module/moduleinfo.js", ["goog.module.ModuleInfo"], ["goog.Disposable", "goog.async.throwException", "goog.functions", "goog.module", "goog.module.BaseModule", "goog.module.ModuleLoadCallback"], false);
goog.addDependency("module/moduleinfo_test.js", ["goog.module.ModuleInfoTest"], ["goog.module.BaseModule", "goog.module.ModuleInfo", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("module/moduleloadcallback.js", ["goog.module.ModuleLoadCallback"], ["goog.debug.entryPointRegistry", "goog.module"], false);
goog.addDependency("module/moduleloadcallback_test.js", ["goog.module.ModuleLoadCallbackTest"], ["goog.debug.ErrorHandler", "goog.debug.entryPointRegistry", "goog.functions", "goog.module.ModuleLoadCallback", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("module/moduleloader.js", ["goog.module.ModuleLoader"], ["goog.Timer", "goog.array", "goog.events", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget", "goog.labs.userAgent.browser", "goog.log", "goog.module.AbstractModuleLoader", "goog.net.BulkLoader", "goog.net.EventType", "goog.net.jsloader", "goog.userAgent", "goog.userAgent.product"], false);
goog.addDependency("module/moduleloader_test.js", ["goog.module.ModuleLoaderTest"], ["goog.Promise", "goog.array", "goog.dom", "goog.dom.TagName", "goog.events", "goog.functions", "goog.module.ModuleLoader", "goog.module.ModuleManager", "goog.net.BulkLoader", "goog.net.XmlHttp", "goog.object", "goog.testing.PropertyReplacer", "goog.testing.events.EventObserver", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("module/modulemanager.js", ["goog.module.ModuleManager", "goog.module.ModuleManager.CallbackType", "goog.module.ModuleManager.FailureType"], ["goog.Disposable", "goog.array", "goog.asserts", "goog.async.Deferred", "goog.debug.Trace", "goog.dispose", "goog.log", "goog.module", "goog.module.ModuleInfo", "goog.module.ModuleLoadCallback", "goog.object"], false);
goog.addDependency("module/modulemanager_test.js", ["goog.module.ModuleManagerTest"], ["goog.array", "goog.functions", "goog.module.BaseModule", "goog.module.ModuleManager", "goog.testing", "goog.testing.MockClock", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("module/testdata/modA_1.js", ["goog.module.testdata.modA_1"], [], false);
goog.addDependency("module/testdata/modA_2.js", ["goog.module.testdata.modA_2"], ["goog.module.ModuleManager"], false);
goog.addDependency("module/testdata/modB_1.js", ["goog.module.testdata.modB_1"], ["goog.module.ModuleManager"], false);
goog.addDependency("net/browserchannel.js", ["goog.net.BrowserChannel", "goog.net.BrowserChannel.Error", "goog.net.BrowserChannel.Event", "goog.net.BrowserChannel.Handler", "goog.net.BrowserChannel.LogSaver", "goog.net.BrowserChannel.QueuedMap", "goog.net.BrowserChannel.ServerReachability", "goog.net.BrowserChannel.ServerReachabilityEvent", "goog.net.BrowserChannel.Stat", "goog.net.BrowserChannel.StatEvent", "goog.net.BrowserChannel.State", "goog.net.BrowserChannel.TimingEvent"], ["goog.Uri", "goog.array", 
"goog.asserts", "goog.debug.TextFormatter", "goog.events.Event", "goog.events.EventTarget", "goog.json", "goog.json.EvalJsonProcessor", "goog.log", "goog.net.BrowserTestChannel", "goog.net.ChannelDebug", "goog.net.ChannelRequest", "goog.net.XhrIo", "goog.net.tmpnetwork", "goog.object", "goog.string", "goog.structs", "goog.structs.CircularBuffer"], false);
goog.addDependency("net/browserchannel_test.js", ["goog.net.BrowserChannelTest"], ["goog.Timer", "goog.array", "goog.dom", "goog.functions", "goog.json", "goog.net.BrowserChannel", "goog.net.ChannelDebug", "goog.net.ChannelRequest", "goog.net.tmpnetwork", "goog.structs.Map", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.asserts", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("net/browsertestchannel.js", ["goog.net.BrowserTestChannel"], ["goog.json.EvalJsonProcessor", "goog.net.ChannelRequest", "goog.net.ChannelRequest.Error", "goog.net.tmpnetwork", "goog.string.Parser"], false);
goog.addDependency("net/bulkloader.js", ["goog.net.BulkLoader"], ["goog.events.EventHandler", "goog.events.EventTarget", "goog.log", "goog.net.BulkLoaderHelper", "goog.net.EventType", "goog.net.XhrIo"], false);
goog.addDependency("net/bulkloader_test.js", ["goog.net.BulkLoaderTest"], ["goog.events.Event", "goog.events.EventHandler", "goog.net.BulkLoader", "goog.net.EventType", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("net/bulkloaderhelper.js", ["goog.net.BulkLoaderHelper"], ["goog.Disposable"], false);
goog.addDependency("net/channeldebug.js", ["goog.net.ChannelDebug"], ["goog.json", "goog.log"], false);
goog.addDependency("net/channelrequest.js", ["goog.net.ChannelRequest", "goog.net.ChannelRequest.Error"], ["goog.Timer", "goog.async.Throttle", "goog.dom.TagName", "goog.dom.safe", "goog.events.EventHandler", "goog.html.SafeUrl", "goog.html.uncheckedconversions", "goog.net.ErrorCode", "goog.net.EventType", "goog.net.XmlHttp", "goog.object", "goog.string", "goog.string.Const", "goog.userAgent"], false);
goog.addDependency("net/channelrequest_test.js", ["goog.net.ChannelRequestTest"], ["goog.Uri", "goog.functions", "goog.net.BrowserChannel", "goog.net.ChannelDebug", "goog.net.ChannelRequest", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.net.XhrIo", "goog.testing.recordFunction"], false);
goog.addDependency("net/cookies.js", ["goog.net.Cookies", "goog.net.cookies"], [], false);
goog.addDependency("net/cookies_test.js", ["goog.net.cookiesTest"], ["goog.array", "goog.net.cookies", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("net/corsxmlhttpfactory.js", ["goog.net.CorsXmlHttpFactory", "goog.net.IeCorsXhrAdapter"], ["goog.net.HttpStatus", "goog.net.XhrLike", "goog.net.XmlHttp", "goog.net.XmlHttpFactory"], false);
goog.addDependency("net/corsxmlhttpfactory_test.js", ["goog.net.CorsXmlHttpFactoryTest"], ["goog.net.CorsXmlHttpFactory", "goog.net.IeCorsXhrAdapter", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("net/crossdomainrpc.js", ["goog.net.CrossDomainRpc"], ["goog.Uri", "goog.dom", "goog.dom.TagName", "goog.dom.safe", "goog.events", "goog.events.EventTarget", "goog.events.EventType", "goog.html.legacyconversions", "goog.json", "goog.log", "goog.net.EventType", "goog.net.HttpStatus", "goog.string", "goog.userAgent"], false);
goog.addDependency("net/crossdomainrpc_test.js", ["goog.net.CrossDomainRpcTest"], ["goog.Promise", "goog.log", "goog.net.CrossDomainRpc", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("net/errorcode.js", ["goog.net.ErrorCode"], [], false);
goog.addDependency("net/eventtype.js", ["goog.net.EventType"], [], false);
goog.addDependency("net/filedownloader.js", ["goog.net.FileDownloader", "goog.net.FileDownloader.Error"], ["goog.Disposable", "goog.asserts", "goog.async.Deferred", "goog.crypt.hash32", "goog.debug.Error", "goog.events", "goog.events.EventHandler", "goog.fs", "goog.fs.DirectoryEntry", "goog.fs.Error", "goog.fs.FileSaver", "goog.net.EventType", "goog.net.XhrIo", "goog.net.XhrIoPool", "goog.object"], false);
goog.addDependency("net/filedownloader_test.js", ["goog.net.FileDownloaderTest"], ["goog.fs.Error", "goog.net.ErrorCode", "goog.net.FileDownloader", "goog.net.XhrIo", "goog.testing.PropertyReplacer", "goog.testing.fs", "goog.testing.fs.FileSystem", "goog.testing.jsunit", "goog.testing.net.XhrIoPool"], false);
goog.addDependency("net/httpstatus.js", ["goog.net.HttpStatus"], [], false);
goog.addDependency("net/iframe_xhr_test.js", ["goog.net.iframeXhrTest"], ["goog.Timer", "goog.debug.Console", "goog.debug.LogManager", "goog.debug.Logger", "goog.dom.TagName", "goog.events", "goog.net.IframeIo", "goog.net.XhrIo", "goog.testing.AsyncTestCase", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("net/iframeio.js", ["goog.net.IframeIo", "goog.net.IframeIo.IncrementalDataEvent"], ["goog.Timer", "goog.Uri", "goog.asserts", "goog.debug", "goog.dom", "goog.dom.InputType", "goog.dom.TagName", "goog.dom.safe", "goog.events", "goog.events.Event", "goog.events.EventTarget", "goog.events.EventType", "goog.html.uncheckedconversions", "goog.json", "goog.log", "goog.log.Level", "goog.net.ErrorCode", "goog.net.EventType", "goog.reflect", "goog.string", "goog.string.Const", "goog.structs", 
"goog.userAgent"], false);
goog.addDependency("net/iframeio_different_base_test.js", ["goog.net.iframeIoDifferentBaseTest"], ["goog.events", "goog.net.EventType", "goog.net.IframeIo", "goog.testing.AsyncTestCase", "goog.testing.jsunit"], false);
goog.addDependency("net/iframeio_test.js", ["goog.net.IframeIoTest"], ["goog.debug", "goog.debug.DivConsole", "goog.debug.LogManager", "goog.dom", "goog.dom.TagName", "goog.events", "goog.events.EventType", "goog.log", "goog.log.Level", "goog.net.IframeIo", "goog.testing.events", "goog.testing.events.Event", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("net/iframeloadmonitor.js", ["goog.net.IframeLoadMonitor"], ["goog.dom", "goog.events", "goog.events.EventTarget", "goog.events.EventType", "goog.userAgent"], false);
goog.addDependency("net/iframeloadmonitor_test.js", ["goog.net.IframeLoadMonitorTest"], ["goog.dom", "goog.dom.TagName", "goog.events", "goog.net.IframeLoadMonitor", "goog.testing.AsyncTestCase", "goog.testing.jsunit"], false);
goog.addDependency("net/imageloader.js", ["goog.net.ImageLoader"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.net.EventType", "goog.object", "goog.userAgent"], false);
goog.addDependency("net/imageloader_test.js", ["goog.net.ImageLoaderTest"], ["goog.Timer", "goog.array", "goog.dispose", "goog.events", "goog.events.Event", "goog.events.EventType", "goog.net.EventType", "goog.net.ImageLoader", "goog.object", "goog.string", "goog.testing.AsyncTestCase", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("net/ipaddress.js", ["goog.net.IpAddress", "goog.net.Ipv4Address", "goog.net.Ipv6Address"], ["goog.array", "goog.math.Integer", "goog.object", "goog.string"], false);
goog.addDependency("net/ipaddress_test.js", ["goog.net.IpAddressTest"], ["goog.math.Integer", "goog.net.IpAddress", "goog.net.Ipv4Address", "goog.net.Ipv6Address", "goog.testing.jsunit"], false);
goog.addDependency("net/jsloader.js", ["goog.net.jsloader", "goog.net.jsloader.Error", "goog.net.jsloader.ErrorCode", "goog.net.jsloader.Options"], ["goog.array", "goog.async.Deferred", "goog.debug.Error", "goog.dom", "goog.dom.TagName"], false);
goog.addDependency("net/jsloader_test.js", ["goog.net.jsloaderTest"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.net.jsloader", "goog.net.jsloader.ErrorCode", "goog.testing.AsyncTestCase", "goog.testing.jsunit"], false);
goog.addDependency("net/jsonp.js", ["goog.net.Jsonp"], ["goog.Uri", "goog.net.jsloader"], false);
goog.addDependency("net/jsonp_test.js", ["goog.net.JsonpTest"], ["goog.net.Jsonp", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.userAgent"], false);
goog.addDependency("net/mockiframeio.js", ["goog.net.MockIFrameIo"], ["goog.events.EventTarget", "goog.json", "goog.net.ErrorCode", "goog.net.EventType", "goog.net.IframeIo"], false);
goog.addDependency("net/multiiframeloadmonitor.js", ["goog.net.MultiIframeLoadMonitor"], ["goog.events", "goog.net.IframeLoadMonitor"], false);
goog.addDependency("net/multiiframeloadmonitor_test.js", ["goog.net.MultiIframeLoadMonitorTest"], ["goog.dom", "goog.dom.TagName", "goog.net.IframeLoadMonitor", "goog.net.MultiIframeLoadMonitor", "goog.testing.AsyncTestCase", "goog.testing.jsunit"], false);
goog.addDependency("net/networkstatusmonitor.js", ["goog.net.NetworkStatusMonitor"], ["goog.events.Listenable"], false);
goog.addDependency("net/networktester.js", ["goog.net.NetworkTester"], ["goog.Timer", "goog.Uri", "goog.log"], false);
goog.addDependency("net/networktester_test.js", ["goog.net.NetworkTesterTest"], ["goog.Uri", "goog.net.NetworkTester", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("net/testdata/jsloader_test1.js", ["goog.net.testdata.jsloader_test1"], [], false);
goog.addDependency("net/testdata/jsloader_test2.js", ["goog.net.testdata.jsloader_test2"], [], false);
goog.addDependency("net/testdata/jsloader_test3.js", ["goog.net.testdata.jsloader_test3"], [], false);
goog.addDependency("net/testdata/jsloader_test4.js", ["goog.net.testdata.jsloader_test4"], [], false);
goog.addDependency("net/tmpnetwork.js", ["goog.net.tmpnetwork"], ["goog.Uri", "goog.net.ChannelDebug"], false);
goog.addDependency("net/websocket.js", ["goog.net.WebSocket", "goog.net.WebSocket.ErrorEvent", "goog.net.WebSocket.EventType", "goog.net.WebSocket.MessageEvent"], ["goog.Timer", "goog.asserts", "goog.debug.entryPointRegistry", "goog.events", "goog.events.Event", "goog.events.EventTarget", "goog.log"], false);
goog.addDependency("net/websocket_test.js", ["goog.net.WebSocketTest"], ["goog.debug.EntryPointMonitor", "goog.debug.ErrorHandler", "goog.debug.entryPointRegistry", "goog.events", "goog.functions", "goog.net.WebSocket", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("net/wrapperxmlhttpfactory.js", ["goog.net.WrapperXmlHttpFactory"], ["goog.net.XhrLike", "goog.net.XmlHttpFactory"], false);
goog.addDependency("net/xhrio.js", ["goog.net.XhrIo", "goog.net.XhrIo.ResponseType"], ["goog.Timer", "goog.array", "goog.debug.entryPointRegistry", "goog.events.EventTarget", "goog.json", "goog.log", "goog.net.ErrorCode", "goog.net.EventType", "goog.net.HttpStatus", "goog.net.XmlHttp", "goog.object", "goog.string", "goog.structs", "goog.structs.Map", "goog.uri.utils", "goog.userAgent"], false);
goog.addDependency("net/xhrio_test.js", ["goog.net.XhrIoTest"], ["goog.Uri", "goog.debug.EntryPointMonitor", "goog.debug.ErrorHandler", "goog.debug.entryPointRegistry", "goog.events", "goog.functions", "goog.net.EventType", "goog.net.WrapperXmlHttpFactory", "goog.net.XhrIo", "goog.net.XmlHttp", "goog.object", "goog.string", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.net.XhrIo", "goog.testing.recordFunction"], false);
goog.addDependency("net/xhriopool.js", ["goog.net.XhrIoPool"], ["goog.net.XhrIo", "goog.structs.PriorityPool"], false);
goog.addDependency("net/xhrlike.js", ["goog.net.XhrLike"], [], false);
goog.addDependency("net/xhrmanager.js", ["goog.net.XhrManager", "goog.net.XhrManager.Event", "goog.net.XhrManager.Request"], ["goog.events", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget", "goog.net.ErrorCode", "goog.net.EventType", "goog.net.XhrIo", "goog.net.XhrIoPool", "goog.structs.Map"], false);
goog.addDependency("net/xhrmanager_test.js", ["goog.net.XhrManagerTest"], ["goog.events", "goog.net.EventType", "goog.net.XhrIo", "goog.net.XhrManager", "goog.testing.jsunit", "goog.testing.net.XhrIoPool", "goog.testing.recordFunction"], false);
goog.addDependency("net/xmlhttp.js", ["goog.net.DefaultXmlHttpFactory", "goog.net.XmlHttp", "goog.net.XmlHttp.OptionType", "goog.net.XmlHttp.ReadyState", "goog.net.XmlHttpDefines"], ["goog.asserts", "goog.net.WrapperXmlHttpFactory", "goog.net.XmlHttpFactory"], false);
goog.addDependency("net/xmlhttpfactory.js", ["goog.net.XmlHttpFactory"], ["goog.net.XhrLike"], false);
goog.addDependency("net/xpc/crosspagechannel.js", ["goog.net.xpc.CrossPageChannel"], ["goog.Uri", "goog.async.Deferred", "goog.async.Delay", "goog.dispose", "goog.dom", "goog.dom.TagName", "goog.events", "goog.events.EventHandler", "goog.events.EventType", "goog.json", "goog.log", "goog.messaging.AbstractChannel", "goog.net.xpc", "goog.net.xpc.CfgFields", "goog.net.xpc.ChannelStates", "goog.net.xpc.CrossPageChannelRole", "goog.net.xpc.DirectTransport", "goog.net.xpc.FrameElementMethodTransport", 
"goog.net.xpc.IframePollingTransport", "goog.net.xpc.IframeRelayTransport", "goog.net.xpc.NativeMessagingTransport", "goog.net.xpc.NixTransport", "goog.net.xpc.TransportTypes", "goog.net.xpc.UriCfgFields", "goog.string", "goog.uri.utils", "goog.userAgent"], false);
goog.addDependency("net/xpc/crosspagechannel_test.js", ["goog.net.xpc.CrossPageChannelTest"], ["goog.Disposable", "goog.Uri", "goog.async.Deferred", "goog.dom", "goog.dom.TagName", "goog.labs.userAgent.browser", "goog.log", "goog.log.Level", "goog.net.xpc", "goog.net.xpc.CfgFields", "goog.net.xpc.CrossPageChannel", "goog.net.xpc.CrossPageChannelRole", "goog.net.xpc.TransportTypes", "goog.object", "goog.testing.AsyncTestCase", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("net/xpc/crosspagechannelrole.js", ["goog.net.xpc.CrossPageChannelRole"], [], false);
goog.addDependency("net/xpc/directtransport.js", ["goog.net.xpc.DirectTransport"], ["goog.Timer", "goog.async.Deferred", "goog.events.EventHandler", "goog.log", "goog.net.xpc", "goog.net.xpc.CfgFields", "goog.net.xpc.CrossPageChannelRole", "goog.net.xpc.Transport", "goog.net.xpc.TransportTypes", "goog.object"], false);
goog.addDependency("net/xpc/directtransport_test.js", ["goog.net.xpc.DirectTransportTest"], ["goog.Promise", "goog.dom", "goog.dom.TagName", "goog.labs.userAgent.browser", "goog.log", "goog.log.Level", "goog.net.xpc", "goog.net.xpc.CfgFields", "goog.net.xpc.CrossPageChannel", "goog.net.xpc.CrossPageChannelRole", "goog.net.xpc.TransportTypes", "goog.testing.jsunit"], false);
goog.addDependency("net/xpc/frameelementmethodtransport.js", ["goog.net.xpc.FrameElementMethodTransport"], ["goog.log", "goog.net.xpc", "goog.net.xpc.CrossPageChannelRole", "goog.net.xpc.Transport", "goog.net.xpc.TransportTypes"], false);
goog.addDependency("net/xpc/iframepollingtransport.js", ["goog.net.xpc.IframePollingTransport", "goog.net.xpc.IframePollingTransport.Receiver", "goog.net.xpc.IframePollingTransport.Sender"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.log", "goog.log.Level", "goog.net.xpc", "goog.net.xpc.CfgFields", "goog.net.xpc.CrossPageChannelRole", "goog.net.xpc.Transport", "goog.net.xpc.TransportTypes", "goog.userAgent"], false);
goog.addDependency("net/xpc/iframepollingtransport_test.js", ["goog.net.xpc.IframePollingTransportTest"], ["goog.Timer", "goog.dom", "goog.dom.TagName", "goog.functions", "goog.net.xpc.CfgFields", "goog.net.xpc.CrossPageChannel", "goog.net.xpc.CrossPageChannelRole", "goog.net.xpc.TransportTypes", "goog.object", "goog.testing.MockClock", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("net/xpc/iframerelaytransport.js", ["goog.net.xpc.IframeRelayTransport"], ["goog.dom", "goog.dom.TagName", "goog.dom.safe", "goog.events", "goog.html.SafeHtml", "goog.log", "goog.log.Level", "goog.net.xpc", "goog.net.xpc.CfgFields", "goog.net.xpc.Transport", "goog.net.xpc.TransportTypes", "goog.string", "goog.string.Const", "goog.userAgent"], false);
goog.addDependency("net/xpc/nativemessagingtransport.js", ["goog.net.xpc.NativeMessagingTransport"], ["goog.Timer", "goog.asserts", "goog.async.Deferred", "goog.events", "goog.events.EventHandler", "goog.log", "goog.net.xpc", "goog.net.xpc.CrossPageChannelRole", "goog.net.xpc.Transport", "goog.net.xpc.TransportTypes"], false);
goog.addDependency("net/xpc/nativemessagingtransport_test.js", ["goog.net.xpc.NativeMessagingTransportTest"], ["goog.dom", "goog.events", "goog.net.xpc", "goog.net.xpc.CfgFields", "goog.net.xpc.CrossPageChannel", "goog.net.xpc.CrossPageChannelRole", "goog.net.xpc.NativeMessagingTransport", "goog.testing.jsunit"], false);
goog.addDependency("net/xpc/nixtransport.js", ["goog.net.xpc.NixTransport"], ["goog.log", "goog.net.xpc", "goog.net.xpc.CfgFields", "goog.net.xpc.CrossPageChannelRole", "goog.net.xpc.Transport", "goog.net.xpc.TransportTypes", "goog.reflect"], false);
goog.addDependency("net/xpc/relay.js", ["goog.net.xpc.relay"], [], false);
goog.addDependency("net/xpc/transport.js", ["goog.net.xpc.Transport"], ["goog.Disposable", "goog.dom", "goog.net.xpc.TransportNames"], false);
goog.addDependency("net/xpc/xpc.js", ["goog.net.xpc", "goog.net.xpc.CfgFields", "goog.net.xpc.ChannelStates", "goog.net.xpc.TransportNames", "goog.net.xpc.TransportTypes", "goog.net.xpc.UriCfgFields"], ["goog.log"], false);
goog.addDependency("object/object.js", ["goog.object"], [], false);
goog.addDependency("object/object_test.js", ["goog.objectTest"], ["goog.functions", "goog.object", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("positioning/absoluteposition.js", ["goog.positioning.AbsolutePosition"], ["goog.math.Coordinate", "goog.positioning", "goog.positioning.AbstractPosition"], false);
goog.addDependency("positioning/abstractposition.js", ["goog.positioning.AbstractPosition"], [], false);
goog.addDependency("positioning/anchoredposition.js", ["goog.positioning.AnchoredPosition"], ["goog.positioning", "goog.positioning.AbstractPosition"], false);
goog.addDependency("positioning/anchoredposition_test.js", ["goog.positioning.AnchoredPositionTest"], ["goog.dom", "goog.positioning.AnchoredPosition", "goog.positioning.Corner", "goog.positioning.Overflow", "goog.style", "goog.testing.jsunit"], false);
goog.addDependency("positioning/anchoredviewportposition.js", ["goog.positioning.AnchoredViewportPosition"], ["goog.positioning", "goog.positioning.AnchoredPosition", "goog.positioning.Overflow", "goog.positioning.OverflowStatus"], false);
goog.addDependency("positioning/anchoredviewportposition_test.js", ["goog.positioning.AnchoredViewportPositionTest"], ["goog.dom", "goog.math.Box", "goog.positioning.AnchoredViewportPosition", "goog.positioning.Corner", "goog.positioning.OverflowStatus", "goog.style", "goog.testing.jsunit"], false);
goog.addDependency("positioning/clientposition.js", ["goog.positioning.ClientPosition"], ["goog.asserts", "goog.dom", "goog.math.Coordinate", "goog.positioning", "goog.positioning.AbstractPosition", "goog.style"], false);
goog.addDependency("positioning/clientposition_test.js", ["goog.positioning.clientPositionTest"], ["goog.dom", "goog.dom.TagName", "goog.positioning.ClientPosition", "goog.positioning.Corner", "goog.style", "goog.testing.jsunit"], false);
goog.addDependency("positioning/menuanchoredposition.js", ["goog.positioning.MenuAnchoredPosition"], ["goog.positioning.AnchoredViewportPosition", "goog.positioning.Overflow"], false);
goog.addDependency("positioning/menuanchoredposition_test.js", ["goog.positioning.MenuAnchoredPositionTest"], ["goog.dom", "goog.dom.TagName", "goog.positioning.Corner", "goog.positioning.MenuAnchoredPosition", "goog.testing.jsunit"], false);
goog.addDependency("positioning/positioning.js", ["goog.positioning", "goog.positioning.Corner", "goog.positioning.CornerBit", "goog.positioning.Overflow", "goog.positioning.OverflowStatus"], ["goog.asserts", "goog.dom", "goog.dom.TagName", "goog.math.Coordinate", "goog.math.Rect", "goog.math.Size", "goog.style", "goog.style.bidi"], false);
goog.addDependency("positioning/positioning_test.js", ["goog.positioningTest"], ["goog.dom", "goog.dom.DomHelper", "goog.dom.TagName", "goog.math.Box", "goog.math.Coordinate", "goog.math.Size", "goog.positioning", "goog.positioning.Corner", "goog.positioning.Overflow", "goog.positioning.OverflowStatus", "goog.style", "goog.testing.ExpectedFailures", "goog.testing.jsunit", "goog.userAgent", "goog.userAgent.product"], false);
goog.addDependency("positioning/viewportclientposition.js", ["goog.positioning.ViewportClientPosition"], ["goog.dom", "goog.math.Coordinate", "goog.positioning", "goog.positioning.ClientPosition", "goog.positioning.Overflow", "goog.positioning.OverflowStatus", "goog.style"], false);
goog.addDependency("positioning/viewportclientposition_test.js", ["goog.positioning.ViewportClientPositionTest"], ["goog.dom", "goog.positioning.Corner", "goog.positioning.Overflow", "goog.positioning.ViewportClientPosition", "goog.style", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("positioning/viewportposition.js", ["goog.positioning.ViewportPosition"], ["goog.math.Coordinate", "goog.positioning", "goog.positioning.AbstractPosition", "goog.positioning.Corner", "goog.style"], false);
goog.addDependency("promise/promise.js", ["goog.Promise"], ["goog.Thenable", "goog.asserts", "goog.async.FreeList", "goog.async.run", "goog.async.throwException", "goog.debug.Error", "goog.promise.Resolver"], false);
goog.addDependency("promise/promise_test.js", ["goog.PromiseTest"], ["goog.Promise", "goog.Thenable", "goog.Timer", "goog.functions", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("promise/resolver.js", ["goog.promise.Resolver"], [], false);
goog.addDependency("promise/testsuiteadapter.js", ["goog.promise.testSuiteAdapter"], ["goog.Promise"], false);
goog.addDependency("promise/thenable.js", ["goog.Thenable"], [], false);
goog.addDependency("proto/proto.js", ["goog.proto"], ["goog.proto.Serializer"], false);
goog.addDependency("proto/serializer.js", ["goog.proto.Serializer"], ["goog.json.Serializer", "goog.string"], false);
goog.addDependency("proto/serializer_test.js", ["goog.protoTest"], ["goog.proto", "goog.testing.jsunit"], false);
goog.addDependency("proto2/descriptor.js", ["goog.proto2.Descriptor", "goog.proto2.Metadata"], ["goog.array", "goog.asserts", "goog.object", "goog.string"], false);
goog.addDependency("proto2/descriptor_test.js", ["goog.proto2.DescriptorTest"], ["goog.proto2.Descriptor", "goog.proto2.Message", "goog.testing.jsunit"], false);
goog.addDependency("proto2/fielddescriptor.js", ["goog.proto2.FieldDescriptor"], ["goog.asserts", "goog.string"], false);
goog.addDependency("proto2/fielddescriptor_test.js", ["goog.proto2.FieldDescriptorTest"], ["goog.proto2.FieldDescriptor", "goog.proto2.Message", "goog.testing.jsunit"], false);
goog.addDependency("proto2/lazydeserializer.js", ["goog.proto2.LazyDeserializer"], ["goog.asserts", "goog.proto2.Message", "goog.proto2.Serializer"], false);
goog.addDependency("proto2/message.js", ["goog.proto2.Message"], ["goog.asserts", "goog.proto2.Descriptor", "goog.proto2.FieldDescriptor"], false);
goog.addDependency("proto2/message_test.js", ["goog.proto2.MessageTest"], ["goog.testing.jsunit", "proto2.TestAllTypes", "proto2.TestAllTypes.NestedEnum", "proto2.TestAllTypes.NestedMessage", "proto2.TestAllTypes.OptionalGroup", "proto2.TestAllTypes.RepeatedGroup"], false);
goog.addDependency("proto2/objectserializer.js", ["goog.proto2.ObjectSerializer"], ["goog.asserts", "goog.proto2.FieldDescriptor", "goog.proto2.Serializer", "goog.string"], false);
goog.addDependency("proto2/objectserializer_test.js", ["goog.proto2.ObjectSerializerTest"], ["goog.proto2.ObjectSerializer", "goog.proto2.Serializer", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "proto2.TestAllTypes"], false);
goog.addDependency("proto2/package_test.pb.js", ["someprotopackage.TestPackageTypes"], ["goog.proto2.Message", "proto2.TestAllTypes"], false);
goog.addDependency("proto2/pbliteserializer.js", ["goog.proto2.PbLiteSerializer"], ["goog.asserts", "goog.proto2.FieldDescriptor", "goog.proto2.LazyDeserializer", "goog.proto2.Serializer"], false);
goog.addDependency("proto2/pbliteserializer_test.js", ["goog.proto2.PbLiteSerializerTest"], ["goog.proto2.PbLiteSerializer", "goog.testing.jsunit", "proto2.TestAllTypes"], false);
goog.addDependency("proto2/proto_test.js", ["goog.proto2.messageTest"], ["goog.proto2.FieldDescriptor", "goog.testing.jsunit", "proto2.TestAllTypes", "someprotopackage.TestPackageTypes"], false);
goog.addDependency("proto2/serializer.js", ["goog.proto2.Serializer"], ["goog.asserts", "goog.proto2.FieldDescriptor", "goog.proto2.Message"], false);
goog.addDependency("proto2/test.pb.js", ["proto2.TestAllTypes", "proto2.TestAllTypes.NestedEnum", "proto2.TestAllTypes.NestedMessage", "proto2.TestAllTypes.OptionalGroup", "proto2.TestAllTypes.RepeatedGroup", "proto2.TestDefaultChild", "proto2.TestDefaultParent"], ["goog.proto2.Message"], false);
goog.addDependency("proto2/textformatserializer.js", ["goog.proto2.TextFormatSerializer"], ["goog.array", "goog.asserts", "goog.json", "goog.math", "goog.object", "goog.proto2.FieldDescriptor", "goog.proto2.Message", "goog.proto2.Serializer", "goog.string"], false);
goog.addDependency("proto2/textformatserializer_test.js", ["goog.proto2.TextFormatSerializerTest"], ["goog.proto2.ObjectSerializer", "goog.proto2.TextFormatSerializer", "goog.testing.jsunit", "proto2.TestAllTypes"], false);
goog.addDependency("proto2/util.js", ["goog.proto2.Util"], ["goog.asserts"], false);
goog.addDependency("pubsub/pubsub.js", ["goog.pubsub.PubSub"], ["goog.Disposable", "goog.array"], false);
goog.addDependency("pubsub/pubsub_test.js", ["goog.pubsub.PubSubTest"], ["goog.array", "goog.pubsub.PubSub", "goog.testing.jsunit"], false);
goog.addDependency("pubsub/topicid.js", ["goog.pubsub.TopicId"], [], false);
goog.addDependency("pubsub/typedpubsub.js", ["goog.pubsub.TypedPubSub"], ["goog.Disposable", "goog.pubsub.PubSub"], false);
goog.addDependency("pubsub/typedpubsub_test.js", ["goog.pubsub.TypedPubSubTest"], ["goog.array", "goog.pubsub.TopicId", "goog.pubsub.TypedPubSub", "goog.testing.jsunit"], false);
goog.addDependency("reflect/reflect.js", ["goog.reflect"], [], false);
goog.addDependency("result/deferredadaptor.js", ["goog.result.DeferredAdaptor"], ["goog.async.Deferred", "goog.result", "goog.result.Result"], false);
goog.addDependency("result/dependentresult.js", ["goog.result.DependentResult"], ["goog.result.Result"], false);
goog.addDependency("result/result_interface.js", ["goog.result.Result"], ["goog.Thenable"], false);
goog.addDependency("result/resultutil.js", ["goog.result"], ["goog.array", "goog.result.DependentResult", "goog.result.Result", "goog.result.SimpleResult"], false);
goog.addDependency("result/simpleresult.js", ["goog.result.SimpleResult", "goog.result.SimpleResult.StateError"], ["goog.Promise", "goog.Thenable", "goog.debug.Error", "goog.result.Result"], false);
goog.addDependency("soy/data.js", ["goog.soy.data.SanitizedContent", "goog.soy.data.SanitizedContentKind"], ["goog.html.SafeHtml", "goog.html.uncheckedconversions", "goog.string.Const"], false);
goog.addDependency("soy/data_test.js", ["goog.soy.dataTest"], ["goog.html.SafeHtml", "goog.soy.testHelper", "goog.testing.jsunit"], false);
goog.addDependency("soy/renderer.js", ["goog.soy.InjectedDataSupplier", "goog.soy.Renderer"], ["goog.asserts", "goog.dom", "goog.soy", "goog.soy.data.SanitizedContent", "goog.soy.data.SanitizedContentKind"], false);
goog.addDependency("soy/renderer_test.js", ["goog.soy.RendererTest"], ["goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.html.SafeHtml", "goog.i18n.bidi.Dir", "goog.soy.Renderer", "goog.soy.data.SanitizedContentKind", "goog.soy.testHelper", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("soy/soy.js", ["goog.soy"], ["goog.asserts", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.soy.data.SanitizedContent", "goog.soy.data.SanitizedContentKind", "goog.string"], false);
goog.addDependency("soy/soy_test.js", ["goog.soyTest"], ["goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.functions", "goog.soy", "goog.soy.testHelper", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("soy/soy_testhelper.js", ["goog.soy.testHelper"], ["goog.dom", "goog.dom.TagName", "goog.i18n.bidi.Dir", "goog.soy.data.SanitizedContent", "goog.soy.data.SanitizedContentKind", "goog.string", "goog.userAgent"], false);
goog.addDependency("spell/spellcheck.js", ["goog.spell.SpellCheck", "goog.spell.SpellCheck.WordChangedEvent"], ["goog.Timer", "goog.events.Event", "goog.events.EventTarget", "goog.structs.Set"], false);
goog.addDependency("spell/spellcheck_test.js", ["goog.spell.SpellCheckTest"], ["goog.spell.SpellCheck", "goog.testing.jsunit"], false);
goog.addDependency("stats/basicstat.js", ["goog.stats.BasicStat"], ["goog.asserts", "goog.log", "goog.string.format", "goog.structs.CircularBuffer"], false);
goog.addDependency("stats/basicstat_test.js", ["goog.stats.BasicStatTest"], ["goog.array", "goog.stats.BasicStat", "goog.string.format", "goog.testing.PseudoRandom", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("storage/collectablestorage.js", ["goog.storage.CollectableStorage"], ["goog.array", "goog.iter", "goog.storage.ErrorCode", "goog.storage.ExpiringStorage", "goog.storage.RichStorage"], false);
goog.addDependency("storage/collectablestorage_test.js", ["goog.storage.CollectableStorageTest"], ["goog.storage.CollectableStorage", "goog.storage.collectableStorageTester", "goog.storage.storage_test", "goog.testing.MockClock", "goog.testing.jsunit", "goog.testing.storage.FakeMechanism"], false);
goog.addDependency("storage/collectablestoragetester.js", ["goog.storage.collectableStorageTester"], ["goog.testing.asserts"], false);
goog.addDependency("storage/encryptedstorage.js", ["goog.storage.EncryptedStorage"], ["goog.crypt", "goog.crypt.Arc4", "goog.crypt.Sha1", "goog.crypt.base64", "goog.json", "goog.json.Serializer", "goog.storage.CollectableStorage", "goog.storage.ErrorCode", "goog.storage.RichStorage"], false);
goog.addDependency("storage/encryptedstorage_test.js", ["goog.storage.EncryptedStorageTest"], ["goog.json", "goog.storage.EncryptedStorage", "goog.storage.ErrorCode", "goog.storage.RichStorage", "goog.storage.collectableStorageTester", "goog.storage.storage_test", "goog.testing.MockClock", "goog.testing.PseudoRandom", "goog.testing.jsunit", "goog.testing.storage.FakeMechanism"], false);
goog.addDependency("storage/errorcode.js", ["goog.storage.ErrorCode"], [], false);
goog.addDependency("storage/expiringstorage.js", ["goog.storage.ExpiringStorage"], ["goog.storage.RichStorage"], false);
goog.addDependency("storage/expiringstorage_test.js", ["goog.storage.ExpiringStorageTest"], ["goog.storage.ExpiringStorage", "goog.storage.storage_test", "goog.testing.MockClock", "goog.testing.jsunit", "goog.testing.storage.FakeMechanism"], false);
goog.addDependency("storage/mechanism/errorcode.js", ["goog.storage.mechanism.ErrorCode"], [], false);
goog.addDependency("storage/mechanism/errorhandlingmechanism.js", ["goog.storage.mechanism.ErrorHandlingMechanism"], ["goog.storage.mechanism.Mechanism"], false);
goog.addDependency("storage/mechanism/errorhandlingmechanism_test.js", ["goog.storage.mechanism.ErrorHandlingMechanismTest"], ["goog.storage.mechanism.ErrorHandlingMechanism", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("storage/mechanism/html5localstorage.js", ["goog.storage.mechanism.HTML5LocalStorage"], ["goog.storage.mechanism.HTML5WebStorage"], false);
goog.addDependency("storage/mechanism/html5localstorage_test.js", ["goog.storage.mechanism.HTML5LocalStorageTest"], ["goog.storage.mechanism.HTML5LocalStorage", "goog.storage.mechanism.mechanismSeparationTester", "goog.storage.mechanism.mechanismSharingTester", "goog.storage.mechanism.mechanismTestDefinition", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("storage/mechanism/html5sessionstorage.js", ["goog.storage.mechanism.HTML5SessionStorage"], ["goog.storage.mechanism.HTML5WebStorage"], false);
goog.addDependency("storage/mechanism/html5sessionstorage_test.js", ["goog.storage.mechanism.HTML5SessionStorageTest"], ["goog.storage.mechanism.HTML5SessionStorage", "goog.storage.mechanism.mechanismSeparationTester", "goog.storage.mechanism.mechanismSharingTester", "goog.storage.mechanism.mechanismTestDefinition", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("storage/mechanism/html5webstorage.js", ["goog.storage.mechanism.HTML5WebStorage"], ["goog.asserts", "goog.iter.Iterator", "goog.iter.StopIteration", "goog.storage.mechanism.ErrorCode", "goog.storage.mechanism.IterableMechanism"], false);
goog.addDependency("storage/mechanism/html5webstorage_test.js", ["goog.storage.mechanism.HTML5MockStorage", "goog.storage.mechanism.HTML5WebStorageTest", "goog.storage.mechanism.MockThrowableStorage"], ["goog.storage.mechanism.ErrorCode", "goog.storage.mechanism.HTML5WebStorage", "goog.testing.jsunit"], false);
goog.addDependency("storage/mechanism/ieuserdata.js", ["goog.storage.mechanism.IEUserData"], ["goog.asserts", "goog.iter.Iterator", "goog.iter.StopIteration", "goog.storage.mechanism.ErrorCode", "goog.storage.mechanism.IterableMechanism", "goog.structs.Map", "goog.userAgent"], false);
goog.addDependency("storage/mechanism/ieuserdata_test.js", ["goog.storage.mechanism.IEUserDataTest"], ["goog.storage.mechanism.IEUserData", "goog.storage.mechanism.mechanismSeparationTester", "goog.storage.mechanism.mechanismSharingTester", "goog.storage.mechanism.mechanismTestDefinition", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("storage/mechanism/iterablemechanism.js", ["goog.storage.mechanism.IterableMechanism"], ["goog.array", "goog.asserts", "goog.iter", "goog.storage.mechanism.Mechanism"], false);
goog.addDependency("storage/mechanism/iterablemechanismtester.js", ["goog.storage.mechanism.iterableMechanismTester"], ["goog.iter.Iterator", "goog.storage.mechanism.IterableMechanism", "goog.testing.asserts"], false);
goog.addDependency("storage/mechanism/mechanism.js", ["goog.storage.mechanism.Mechanism"], [], false);
goog.addDependency("storage/mechanism/mechanismfactory.js", ["goog.storage.mechanism.mechanismfactory"], ["goog.storage.mechanism.HTML5LocalStorage", "goog.storage.mechanism.HTML5SessionStorage", "goog.storage.mechanism.IEUserData", "goog.storage.mechanism.PrefixedMechanism"], false);
goog.addDependency("storage/mechanism/mechanismfactory_test.js", ["goog.storage.mechanism.mechanismfactoryTest"], ["goog.storage.mechanism.mechanismfactory", "goog.testing.jsunit"], false);
goog.addDependency("storage/mechanism/mechanismseparationtester.js", ["goog.storage.mechanism.mechanismSeparationTester"], ["goog.iter.StopIteration", "goog.storage.mechanism.mechanismTestDefinition", "goog.testing.asserts"], false);
goog.addDependency("storage/mechanism/mechanismsharingtester.js", ["goog.storage.mechanism.mechanismSharingTester"], ["goog.iter.StopIteration", "goog.storage.mechanism.mechanismTestDefinition", "goog.testing.asserts"], false);
goog.addDependency("storage/mechanism/mechanismtestdefinition.js", ["goog.storage.mechanism.mechanismTestDefinition"], [], false);
goog.addDependency("storage/mechanism/mechanismtester.js", ["goog.storage.mechanism.mechanismTester"], ["goog.storage.mechanism.ErrorCode", "goog.testing.asserts", "goog.userAgent", "goog.userAgent.product", "goog.userAgent.product.isVersion"], false);
goog.addDependency("storage/mechanism/prefixedmechanism.js", ["goog.storage.mechanism.PrefixedMechanism"], ["goog.iter.Iterator", "goog.storage.mechanism.IterableMechanism"], false);
goog.addDependency("storage/mechanism/prefixedmechanism_test.js", ["goog.storage.mechanism.PrefixedMechanismTest"], ["goog.storage.mechanism.HTML5LocalStorage", "goog.storage.mechanism.PrefixedMechanism", "goog.storage.mechanism.mechanismSeparationTester", "goog.storage.mechanism.mechanismSharingTester", "goog.testing.jsunit"], false);
goog.addDependency("storage/richstorage.js", ["goog.storage.RichStorage", "goog.storage.RichStorage.Wrapper"], ["goog.storage.ErrorCode", "goog.storage.Storage"], false);
goog.addDependency("storage/richstorage_test.js", ["goog.storage.RichStorageTest"], ["goog.storage.ErrorCode", "goog.storage.RichStorage", "goog.storage.storage_test", "goog.testing.jsunit", "goog.testing.storage.FakeMechanism"], false);
goog.addDependency("storage/storage.js", ["goog.storage.Storage"], ["goog.json", "goog.storage.ErrorCode"], false);
goog.addDependency("storage/storage_test.js", ["goog.storage.storage_test"], ["goog.structs.Map", "goog.testing.asserts"], false);
goog.addDependency("string/const.js", ["goog.string.Const"], ["goog.asserts", "goog.string.TypedString"], false);
goog.addDependency("string/const_test.js", ["goog.string.constTest"], ["goog.string.Const", "goog.testing.jsunit"], false);
goog.addDependency("string/linkify.js", ["goog.string.linkify"], ["goog.string"], false);
goog.addDependency("string/linkify_test.js", ["goog.string.linkifyTest"], ["goog.dom.TagName", "goog.string", "goog.string.linkify", "goog.testing.dom", "goog.testing.jsunit"], false);
goog.addDependency("string/newlines.js", ["goog.string.newlines", "goog.string.newlines.Line"], ["goog.array"], false);
goog.addDependency("string/newlines_test.js", ["goog.string.newlinesTest"], ["goog.string.newlines", "goog.testing.jsunit"], false);
goog.addDependency("string/parser.js", ["goog.string.Parser"], [], false);
goog.addDependency("string/path.js", ["goog.string.path"], ["goog.array", "goog.string"], false);
goog.addDependency("string/path_test.js", ["goog.string.pathTest"], ["goog.string.path", "goog.testing.jsunit"], false);
goog.addDependency("string/string.js", ["goog.string", "goog.string.Unicode"], [], false);
goog.addDependency("string/string_test.js", ["goog.stringTest"], ["goog.dom.TagName", "goog.functions", "goog.object", "goog.string", "goog.string.Unicode", "goog.testing.MockControl", "goog.testing.PropertyReplacer", "goog.testing.jsunit"], false);
goog.addDependency("string/stringbuffer.js", ["goog.string.StringBuffer"], [], false);
goog.addDependency("string/stringbuffer_test.js", ["goog.string.StringBufferTest"], ["goog.string.StringBuffer", "goog.testing.jsunit"], false);
goog.addDependency("string/stringformat.js", ["goog.string.format"], ["goog.string"], false);
goog.addDependency("string/stringformat_test.js", ["goog.string.formatTest"], ["goog.string.format", "goog.testing.jsunit"], false);
goog.addDependency("string/stringifier.js", ["goog.string.Stringifier"], [], false);
goog.addDependency("string/typedstring.js", ["goog.string.TypedString"], [], false);
goog.addDependency("structs/avltree.js", ["goog.structs.AvlTree", "goog.structs.AvlTree.Node"], ["goog.structs.Collection"], false);
goog.addDependency("structs/avltree_test.js", ["goog.structs.AvlTreeTest"], ["goog.array", "goog.structs.AvlTree", "goog.testing.jsunit"], false);
goog.addDependency("structs/circularbuffer.js", ["goog.structs.CircularBuffer"], [], false);
goog.addDependency("structs/circularbuffer_test.js", ["goog.structs.CircularBufferTest"], ["goog.structs.CircularBuffer", "goog.testing.jsunit"], false);
goog.addDependency("structs/collection.js", ["goog.structs.Collection"], [], false);
goog.addDependency("structs/collection_test.js", ["goog.structs.CollectionTest"], ["goog.structs.AvlTree", "goog.structs.Set", "goog.testing.jsunit"], false);
goog.addDependency("structs/heap.js", ["goog.structs.Heap"], ["goog.array", "goog.object", "goog.structs.Node"], false);
goog.addDependency("structs/heap_test.js", ["goog.structs.HeapTest"], ["goog.structs", "goog.structs.Heap", "goog.testing.jsunit"], false);
goog.addDependency("structs/inversionmap.js", ["goog.structs.InversionMap"], ["goog.array"], false);
goog.addDependency("structs/inversionmap_test.js", ["goog.structs.InversionMapTest"], ["goog.structs.InversionMap", "goog.testing.jsunit"], false);
goog.addDependency("structs/linkedmap.js", ["goog.structs.LinkedMap"], ["goog.structs.Map"], false);
goog.addDependency("structs/linkedmap_test.js", ["goog.structs.LinkedMapTest"], ["goog.structs.LinkedMap", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("structs/map.js", ["goog.structs.Map"], ["goog.iter.Iterator", "goog.iter.StopIteration", "goog.object"], false);
goog.addDependency("structs/map_test.js", ["goog.structs.MapTest"], ["goog.iter", "goog.structs", "goog.structs.Map", "goog.testing.jsunit"], false);
goog.addDependency("structs/node.js", ["goog.structs.Node"], [], false);
goog.addDependency("structs/pool.js", ["goog.structs.Pool"], ["goog.Disposable", "goog.structs.Queue", "goog.structs.Set"], false);
goog.addDependency("structs/pool_test.js", ["goog.structs.PoolTest"], ["goog.structs.Pool", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("structs/prioritypool.js", ["goog.structs.PriorityPool"], ["goog.structs.Pool", "goog.structs.PriorityQueue"], false);
goog.addDependency("structs/prioritypool_test.js", ["goog.structs.PriorityPoolTest"], ["goog.structs.PriorityPool", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("structs/priorityqueue.js", ["goog.structs.PriorityQueue"], ["goog.structs.Heap"], false);
goog.addDependency("structs/priorityqueue_test.js", ["goog.structs.PriorityQueueTest"], ["goog.structs", "goog.structs.PriorityQueue", "goog.testing.jsunit"], false);
goog.addDependency("structs/quadtree.js", ["goog.structs.QuadTree", "goog.structs.QuadTree.Node", "goog.structs.QuadTree.Point"], ["goog.math.Coordinate"], false);
goog.addDependency("structs/quadtree_test.js", ["goog.structs.QuadTreeTest"], ["goog.structs", "goog.structs.QuadTree", "goog.testing.jsunit"], false);
goog.addDependency("structs/queue.js", ["goog.structs.Queue"], ["goog.array"], false);
goog.addDependency("structs/queue_test.js", ["goog.structs.QueueTest"], ["goog.structs.Queue", "goog.testing.jsunit"], false);
goog.addDependency("structs/set.js", ["goog.structs.Set"], ["goog.structs", "goog.structs.Collection", "goog.structs.Map"], false);
goog.addDependency("structs/set_test.js", ["goog.structs.SetTest"], ["goog.iter", "goog.structs", "goog.structs.Set", "goog.testing.jsunit"], false);
goog.addDependency("structs/simplepool.js", ["goog.structs.SimplePool"], ["goog.Disposable"], false);
goog.addDependency("structs/stringset.js", ["goog.structs.StringSet"], ["goog.asserts", "goog.iter"], false);
goog.addDependency("structs/stringset_test.js", ["goog.structs.StringSetTest"], ["goog.array", "goog.iter", "goog.structs.StringSet", "goog.testing.asserts", "goog.testing.jsunit"], false);
goog.addDependency("structs/structs.js", ["goog.structs"], ["goog.array", "goog.object"], false);
goog.addDependency("structs/structs_test.js", ["goog.structsTest"], ["goog.array", "goog.dom.TagName", "goog.structs", "goog.structs.Map", "goog.structs.Set", "goog.testing.jsunit"], false);
goog.addDependency("structs/treenode.js", ["goog.structs.TreeNode"], ["goog.array", "goog.asserts", "goog.structs.Node"], false);
goog.addDependency("structs/treenode_test.js", ["goog.structs.TreeNodeTest"], ["goog.structs.TreeNode", "goog.testing.jsunit"], false);
goog.addDependency("structs/trie.js", ["goog.structs.Trie"], ["goog.object", "goog.structs"], false);
goog.addDependency("structs/trie_test.js", ["goog.structs.TrieTest"], ["goog.object", "goog.structs", "goog.structs.Trie", "goog.testing.jsunit"], false);
goog.addDependency("structs/weak/weak.js", ["goog.structs.weak"], ["goog.userAgent"], false);
goog.addDependency("structs/weak/weak_test.js", ["goog.structs.weakTest"], ["goog.array", "goog.structs.weak", "goog.testing.jsunit"], false);
goog.addDependency("style/bidi.js", ["goog.style.bidi"], ["goog.dom", "goog.style", "goog.userAgent"], false);
goog.addDependency("style/bidi_test.js", ["goog.style.bidiTest"], ["goog.dom", "goog.style", "goog.style.bidi", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("style/cursor.js", ["goog.style.cursor"], ["goog.userAgent"], false);
goog.addDependency("style/cursor_test.js", ["goog.style.cursorTest"], ["goog.style.cursor", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("style/style.js", ["goog.style"], ["goog.array", "goog.asserts", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.vendor", "goog.math.Box", "goog.math.Coordinate", "goog.math.Rect", "goog.math.Size", "goog.object", "goog.string", "goog.userAgent"], false);
goog.addDependency("style/style_document_scroll_test.js", ["goog.style.style_document_scroll_test"], ["goog.dom", "goog.style", "goog.testing.jsunit"], false);
goog.addDependency("style/style_test.js", ["goog.style_test"], ["goog.array", "goog.color", "goog.dom", "goog.dom.TagName", "goog.events.BrowserEvent", "goog.labs.userAgent.util", "goog.math.Box", "goog.math.Coordinate", "goog.math.Rect", "goog.math.Size", "goog.object", "goog.string", "goog.style", "goog.testing.ExpectedFailures", "goog.testing.MockUserAgent", "goog.testing.asserts", "goog.testing.jsunit", "goog.userAgent", "goog.userAgent.product", "goog.userAgentTestUtil", "goog.userAgentTestUtil.UserAgents"], 
false);
goog.addDependency("style/style_webkit_scrollbars_test.js", ["goog.style.webkitScrollbarsTest"], ["goog.asserts", "goog.style", "goog.styleScrollbarTester", "goog.testing.ExpectedFailures", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("style/stylescrollbartester.js", ["goog.styleScrollbarTester"], ["goog.dom", "goog.dom.TagName", "goog.style", "goog.testing.asserts"], false);
goog.addDependency("style/transform.js", ["goog.style.transform"], ["goog.functions", "goog.math.Coordinate", "goog.math.Coordinate3", "goog.style", "goog.userAgent", "goog.userAgent.product.isVersion"], false);
goog.addDependency("style/transform_test.js", ["goog.style.transformTest"], ["goog.dom", "goog.dom.TagName", "goog.style.transform", "goog.testing.jsunit", "goog.userAgent", "goog.userAgent.product.isVersion"], false);
goog.addDependency("style/transition.js", ["goog.style.transition", "goog.style.transition.Css3Property"], ["goog.array", "goog.asserts", "goog.dom.TagName", "goog.dom.safe", "goog.dom.vendor", "goog.functions", "goog.html.SafeHtml", "goog.style", "goog.userAgent"], false);
goog.addDependency("style/transition_test.js", ["goog.style.transitionTest"], ["goog.style", "goog.style.transition", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("test_module.js", ["goog.test_module"], ["goog.test_module_dep"], true);
goog.addDependency("test_module_dep.js", ["goog.test_module_dep"], [], true);
goog.addDependency("testing/asserts.js", ["goog.testing.JsUnitException", "goog.testing.asserts", "goog.testing.asserts.ArrayLike"], ["goog.testing.stacktrace"], false);
goog.addDependency("testing/asserts_test.js", ["goog.testing.assertsTest"], ["goog.array", "goog.dom", "goog.iter.Iterator", "goog.iter.StopIteration", "goog.labs.userAgent.browser", "goog.string", "goog.structs.Map", "goog.structs.Set", "goog.testing.asserts", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("testing/async/mockcontrol.js", ["goog.testing.async.MockControl"], ["goog.asserts", "goog.async.Deferred", "goog.debug", "goog.testing.asserts", "goog.testing.mockmatchers.IgnoreArgument"], false);
goog.addDependency("testing/async/mockcontrol_test.js", ["goog.testing.async.MockControlTest"], ["goog.async.Deferred", "goog.testing.MockControl", "goog.testing.asserts", "goog.testing.async.MockControl", "goog.testing.jsunit"], false);
goog.addDependency("testing/asynctestcase.js", ["goog.testing.AsyncTestCase", "goog.testing.AsyncTestCase.ControlBreakingException"], ["goog.testing.TestCase", "goog.testing.asserts"], false);
goog.addDependency("testing/asynctestcase_async_test.js", ["goog.testing.AsyncTestCaseAsyncTest"], ["goog.testing.AsyncTestCase", "goog.testing.jsunit"], false);
goog.addDependency("testing/asynctestcase_noasync_test.js", ["goog.testing.AsyncTestCaseSyncTest"], ["goog.testing.AsyncTestCase", "goog.testing.jsunit"], false);
goog.addDependency("testing/asynctestcase_test.js", ["goog.testing.AsyncTestCaseTest"], ["goog.debug.Error", "goog.testing.AsyncTestCase", "goog.testing.asserts", "goog.testing.jsunit"], false);
goog.addDependency("testing/benchmark.js", ["goog.testing.benchmark"], ["goog.dom", "goog.dom.TagName", "goog.testing.PerformanceTable", "goog.testing.PerformanceTimer", "goog.testing.TestCase"], false);
goog.addDependency("testing/continuationtestcase.js", ["goog.testing.ContinuationTestCase", "goog.testing.ContinuationTestCase.Step", "goog.testing.ContinuationTestCase.Test"], ["goog.array", "goog.events.EventHandler", "goog.testing.TestCase", "goog.testing.asserts"], false);
goog.addDependency("testing/continuationtestcase_test.js", ["goog.testing.ContinuationTestCaseTest"], ["goog.events", "goog.events.EventTarget", "goog.testing.ContinuationTestCase", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.TestCase", "goog.testing.jsunit"], false);
goog.addDependency("testing/deferredtestcase.js", ["goog.testing.DeferredTestCase"], ["goog.testing.AsyncTestCase", "goog.testing.TestCase"], false);
goog.addDependency("testing/deferredtestcase_test.js", ["goog.testing.DeferredTestCaseTest"], ["goog.async.Deferred", "goog.testing.DeferredTestCase", "goog.testing.TestCase", "goog.testing.TestRunner", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("testing/dom.js", ["goog.testing.dom"], ["goog.array", "goog.asserts", "goog.dom", "goog.dom.InputType", "goog.dom.NodeIterator", "goog.dom.NodeType", "goog.dom.TagIterator", "goog.dom.TagName", "goog.dom.classlist", "goog.iter", "goog.object", "goog.string", "goog.style", "goog.testing.asserts", "goog.userAgent"], false);
goog.addDependency("testing/dom_test.js", ["goog.testing.domTest"], ["goog.dom", "goog.dom.TagName", "goog.testing.dom", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("testing/editor/dom.js", ["goog.testing.editor.dom"], ["goog.dom.NodeType", "goog.dom.TagIterator", "goog.dom.TagWalkType", "goog.iter", "goog.string", "goog.testing.asserts"], false);
goog.addDependency("testing/editor/dom_test.js", ["goog.testing.editor.domTest"], ["goog.dom", "goog.dom.TagName", "goog.functions", "goog.testing.editor.dom", "goog.testing.jsunit"], false);
goog.addDependency("testing/editor/fieldmock.js", ["goog.testing.editor.FieldMock"], ["goog.dom", "goog.dom.Range", "goog.editor.Field", "goog.testing.LooseMock", "goog.testing.mockmatchers"], false);
goog.addDependency("testing/editor/testhelper.js", ["goog.testing.editor.TestHelper"], ["goog.Disposable", "goog.dom", "goog.dom.Range", "goog.editor.BrowserFeature", "goog.editor.node", "goog.editor.plugins.AbstractBubblePlugin", "goog.testing.dom"], false);
goog.addDependency("testing/editor/testhelper_test.js", ["goog.testing.editor.TestHelperTest"], ["goog.dom", "goog.dom.TagName", "goog.editor.node", "goog.testing.editor.TestHelper", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("testing/events/eventobserver.js", ["goog.testing.events.EventObserver"], ["goog.array"], false);
goog.addDependency("testing/events/eventobserver_test.js", ["goog.testing.events.EventObserverTest"], ["goog.array", "goog.events", "goog.events.Event", "goog.events.EventTarget", "goog.testing.events.EventObserver", "goog.testing.jsunit"], false);
goog.addDependency("testing/events/events.js", ["goog.testing.events", "goog.testing.events.Event"], ["goog.Disposable", "goog.asserts", "goog.dom.NodeType", "goog.events", "goog.events.BrowserEvent", "goog.events.BrowserFeature", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.object", "goog.style", "goog.userAgent"], false);
goog.addDependency("testing/events/events_test.js", ["goog.testing.eventsTest"], ["goog.array", "goog.dom", "goog.dom.InputType", "goog.dom.TagName", "goog.events", "goog.events.EventType", "goog.events.KeyCodes", "goog.math.Coordinate", "goog.string", "goog.style", "goog.testing.PropertyReplacer", "goog.testing.events", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.userAgent"], false);
goog.addDependency("testing/events/matchers.js", ["goog.testing.events.EventMatcher"], ["goog.events.Event", "goog.testing.mockmatchers.ArgumentMatcher"], false);
goog.addDependency("testing/events/matchers_test.js", ["goog.testing.events.EventMatcherTest"], ["goog.events.Event", "goog.testing.events.EventMatcher", "goog.testing.jsunit"], false);
goog.addDependency("testing/events/onlinehandler.js", ["goog.testing.events.OnlineHandler"], ["goog.events.EventTarget", "goog.net.NetworkStatusMonitor"], false);
goog.addDependency("testing/events/onlinehandler_test.js", ["goog.testing.events.OnlineHandlerTest"], ["goog.events", "goog.net.NetworkStatusMonitor", "goog.testing.events.EventObserver", "goog.testing.events.OnlineHandler", "goog.testing.jsunit"], false);
goog.addDependency("testing/expectedfailures.js", ["goog.testing.ExpectedFailures"], ["goog.debug.DivConsole", "goog.dom", "goog.dom.TagName", "goog.events", "goog.events.EventType", "goog.log", "goog.style", "goog.testing.JsUnitException", "goog.testing.TestCase", "goog.testing.asserts"], false);
goog.addDependency("testing/expectedfailures_test.js", ["goog.testing.ExpectedFailuresTest"], ["goog.debug.Logger", "goog.testing.ExpectedFailures", "goog.testing.JsUnitException", "goog.testing.jsunit"], false);
goog.addDependency("testing/fs/blob.js", ["goog.testing.fs.Blob"], ["goog.crypt.base64"], false);
goog.addDependency("testing/fs/blob_test.js", ["goog.testing.fs.BlobTest"], ["goog.testing.fs.Blob", "goog.testing.jsunit"], false);
goog.addDependency("testing/fs/directoryentry_test.js", ["goog.testing.fs.DirectoryEntryTest"], ["goog.array", "goog.fs.DirectoryEntry", "goog.fs.Error", "goog.testing.MockClock", "goog.testing.fs.FileSystem", "goog.testing.jsunit"], false);
goog.addDependency("testing/fs/entry.js", ["goog.testing.fs.DirectoryEntry", "goog.testing.fs.Entry", "goog.testing.fs.FileEntry"], ["goog.Timer", "goog.array", "goog.asserts", "goog.async.Deferred", "goog.fs.DirectoryEntry", "goog.fs.DirectoryEntryImpl", "goog.fs.Entry", "goog.fs.Error", "goog.fs.FileEntry", "goog.functions", "goog.object", "goog.string", "goog.testing.fs.File", "goog.testing.fs.FileWriter"], false);
goog.addDependency("testing/fs/entry_test.js", ["goog.testing.fs.EntryTest"], ["goog.fs.DirectoryEntry", "goog.fs.Error", "goog.testing.MockClock", "goog.testing.fs.FileSystem", "goog.testing.jsunit"], false);
goog.addDependency("testing/fs/file.js", ["goog.testing.fs.File"], ["goog.testing.fs.Blob"], false);
goog.addDependency("testing/fs/fileentry_test.js", ["goog.testing.fs.FileEntryTest"], ["goog.testing.MockClock", "goog.testing.fs.FileEntry", "goog.testing.fs.FileSystem", "goog.testing.jsunit"], false);
goog.addDependency("testing/fs/filereader.js", ["goog.testing.fs.FileReader"], ["goog.Timer", "goog.events.EventTarget", "goog.fs.Error", "goog.fs.FileReader", "goog.testing.fs.ProgressEvent"], false);
goog.addDependency("testing/fs/filereader_test.js", ["goog.testing.fs.FileReaderTest"], ["goog.Promise", "goog.array", "goog.events", "goog.fs.Error", "goog.fs.FileReader", "goog.object", "goog.testing.events.EventObserver", "goog.testing.fs.FileReader", "goog.testing.fs.FileSystem", "goog.testing.jsunit"], false);
goog.addDependency("testing/fs/filesystem.js", ["goog.testing.fs.FileSystem"], ["goog.fs.FileSystem", "goog.testing.fs.DirectoryEntry"], false);
goog.addDependency("testing/fs/filewriter.js", ["goog.testing.fs.FileWriter"], ["goog.Timer", "goog.events.EventTarget", "goog.fs.Error", "goog.fs.FileSaver", "goog.string", "goog.testing.fs.ProgressEvent"], false);
goog.addDependency("testing/fs/filewriter_test.js", ["goog.testing.fs.FileWriterTest"], ["goog.Promise", "goog.array", "goog.events", "goog.fs.Error", "goog.fs.FileSaver", "goog.object", "goog.testing.MockClock", "goog.testing.events.EventObserver", "goog.testing.fs.Blob", "goog.testing.fs.FileSystem", "goog.testing.jsunit"], false);
goog.addDependency("testing/fs/fs.js", ["goog.testing.fs"], ["goog.Timer", "goog.array", "goog.async.Deferred", "goog.fs", "goog.testing.fs.Blob", "goog.testing.fs.FileSystem"], false);
goog.addDependency("testing/fs/fs_test.js", ["goog.testing.fsTest"], ["goog.testing.AsyncTestCase", "goog.testing.fs", "goog.testing.fs.Blob", "goog.testing.jsunit"], false);
goog.addDependency("testing/fs/integration_test.js", ["goog.testing.fs.integrationTest"], ["goog.async.Deferred", "goog.async.DeferredList", "goog.events", "goog.fs", "goog.fs.DirectoryEntry", "goog.fs.Error", "goog.fs.FileSaver", "goog.testing.AsyncTestCase", "goog.testing.PropertyReplacer", "goog.testing.fs", "goog.testing.jsunit"], false);
goog.addDependency("testing/fs/progressevent.js", ["goog.testing.fs.ProgressEvent"], ["goog.events.Event"], false);
goog.addDependency("testing/functionmock.js", ["goog.testing", "goog.testing.FunctionMock", "goog.testing.GlobalFunctionMock", "goog.testing.MethodMock"], ["goog.object", "goog.testing.LooseMock", "goog.testing.Mock", "goog.testing.PropertyReplacer", "goog.testing.StrictMock"], false);
goog.addDependency("testing/functionmock_test.js", ["goog.testing.FunctionMockTest"], ["goog.array", "goog.string", "goog.testing", "goog.testing.FunctionMock", "goog.testing.Mock", "goog.testing.StrictMock", "goog.testing.asserts", "goog.testing.jsunit", "goog.testing.mockmatchers"], false);
goog.addDependency("testing/graphics.js", ["goog.testing.graphics"], ["goog.graphics.Path", "goog.testing.asserts"], false);
goog.addDependency("testing/i18n/asserts.js", ["goog.testing.i18n.asserts"], ["goog.testing.jsunit"], false);
goog.addDependency("testing/i18n/asserts_test.js", ["goog.testing.i18n.assertsTest"], ["goog.testing.ExpectedFailures", "goog.testing.i18n.asserts"], false);
goog.addDependency("testing/jsunit.js", ["goog.testing.jsunit"], ["goog.dom.TagName", "goog.testing.TestCase", "goog.testing.TestRunner"], false);
goog.addDependency("testing/loosemock.js", ["goog.testing.LooseExpectationCollection", "goog.testing.LooseMock"], ["goog.array", "goog.structs.Map", "goog.testing.Mock"], false);
goog.addDependency("testing/loosemock_test.js", ["goog.testing.LooseMockTest"], ["goog.testing.LooseMock", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.mockmatchers"], false);
goog.addDependency("testing/messaging/mockmessagechannel.js", ["goog.testing.messaging.MockMessageChannel"], ["goog.messaging.AbstractChannel", "goog.testing.asserts"], false);
goog.addDependency("testing/messaging/mockmessageevent.js", ["goog.testing.messaging.MockMessageEvent"], ["goog.events.BrowserEvent", "goog.events.EventType", "goog.testing.events.Event"], false);
goog.addDependency("testing/messaging/mockmessageport.js", ["goog.testing.messaging.MockMessagePort"], ["goog.events.EventTarget"], false);
goog.addDependency("testing/messaging/mockportnetwork.js", ["goog.testing.messaging.MockPortNetwork"], ["goog.messaging.PortNetwork", "goog.testing.messaging.MockMessageChannel"], false);
goog.addDependency("testing/mock.js", ["goog.testing.Mock", "goog.testing.MockExpectation"], ["goog.array", "goog.object", "goog.testing.JsUnitException", "goog.testing.MockInterface", "goog.testing.mockmatchers"], false);
goog.addDependency("testing/mock_test.js", ["goog.testing.MockTest"], ["goog.array", "goog.testing", "goog.testing.Mock", "goog.testing.MockControl", "goog.testing.MockExpectation", "goog.testing.jsunit"], false);
goog.addDependency("testing/mockclassfactory.js", ["goog.testing.MockClassFactory", "goog.testing.MockClassRecord"], ["goog.array", "goog.object", "goog.testing.LooseMock", "goog.testing.StrictMock", "goog.testing.TestCase", "goog.testing.mockmatchers"], false);
goog.addDependency("testing/mockclassfactory_test.js", ["fake.BaseClass", "fake.ChildClass", "goog.testing.MockClassFactoryTest"], ["goog.testing", "goog.testing.MockClassFactory", "goog.testing.jsunit"], false);
goog.addDependency("testing/mockclock.js", ["goog.testing.MockClock"], ["goog.Disposable", "goog.async.run", "goog.testing.PropertyReplacer", "goog.testing.events", "goog.testing.events.Event", "goog.testing.watchers"], false);
goog.addDependency("testing/mockclock_test.js", ["goog.testing.MockClockTest"], ["goog.Promise", "goog.Timer", "goog.events", "goog.functions", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.recordFunction"], false);
goog.addDependency("testing/mockcontrol.js", ["goog.testing.MockControl"], ["goog.array", "goog.testing", "goog.testing.LooseMock", "goog.testing.StrictMock"], false);
goog.addDependency("testing/mockcontrol_test.js", ["goog.testing.MockControlTest"], ["goog.testing.Mock", "goog.testing.MockControl", "goog.testing.jsunit"], false);
goog.addDependency("testing/mockinterface.js", ["goog.testing.MockInterface"], [], false);
goog.addDependency("testing/mockmatchers.js", ["goog.testing.mockmatchers", "goog.testing.mockmatchers.ArgumentMatcher", "goog.testing.mockmatchers.IgnoreArgument", "goog.testing.mockmatchers.InstanceOf", "goog.testing.mockmatchers.ObjectEquals", "goog.testing.mockmatchers.RegexpMatch", "goog.testing.mockmatchers.SaveArgument", "goog.testing.mockmatchers.TypeOf"], ["goog.array", "goog.dom", "goog.testing.asserts"], false);
goog.addDependency("testing/mockmatchers_test.js", ["goog.testing.mockmatchersTest"], ["goog.dom", "goog.dom.TagName", "goog.testing.jsunit", "goog.testing.mockmatchers", "goog.testing.mockmatchers.ArgumentMatcher"], false);
goog.addDependency("testing/mockrandom.js", ["goog.testing.MockRandom"], ["goog.Disposable"], false);
goog.addDependency("testing/mockrandom_test.js", ["goog.testing.MockRandomTest"], ["goog.testing.MockRandom", "goog.testing.jsunit"], false);
goog.addDependency("testing/mockrange.js", ["goog.testing.MockRange"], ["goog.dom.AbstractRange", "goog.testing.LooseMock"], false);
goog.addDependency("testing/mockrange_test.js", ["goog.testing.MockRangeTest"], ["goog.testing.MockRange", "goog.testing.jsunit"], false);
goog.addDependency("testing/mockstorage.js", ["goog.testing.MockStorage"], ["goog.structs.Map"], false);
goog.addDependency("testing/mockstorage_test.js", ["goog.testing.MockStorageTest"], ["goog.testing.MockStorage", "goog.testing.jsunit"], false);
goog.addDependency("testing/mockuseragent.js", ["goog.testing.MockUserAgent"], ["goog.Disposable", "goog.labs.userAgent.util", "goog.testing.PropertyReplacer", "goog.userAgent"], false);
goog.addDependency("testing/mockuseragent_test.js", ["goog.testing.MockUserAgentTest"], ["goog.dispose", "goog.testing.MockUserAgent", "goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("testing/multitestrunner.js", ["goog.testing.MultiTestRunner", "goog.testing.MultiTestRunner.TestFrame"], ["goog.Timer", "goog.array", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events.EventHandler", "goog.functions", "goog.string", "goog.ui.Component", "goog.ui.ServerChart", "goog.ui.TableSorter"], false);
goog.addDependency("testing/net/xhrio.js", ["goog.testing.net.XhrIo"], ["goog.array", "goog.dom.xml", "goog.events", "goog.events.EventTarget", "goog.json", "goog.net.ErrorCode", "goog.net.EventType", "goog.net.HttpStatus", "goog.net.XhrIo", "goog.net.XmlHttp", "goog.object", "goog.structs.Map"], false);
goog.addDependency("testing/net/xhrio_test.js", ["goog.testing.net.XhrIoTest"], ["goog.dom.xml", "goog.events", "goog.events.Event", "goog.net.ErrorCode", "goog.net.EventType", "goog.net.XmlHttp", "goog.object", "goog.testing.MockControl", "goog.testing.asserts", "goog.testing.jsunit", "goog.testing.mockmatchers.InstanceOf", "goog.testing.net.XhrIo"], false);
goog.addDependency("testing/net/xhriopool.js", ["goog.testing.net.XhrIoPool"], ["goog.net.XhrIoPool", "goog.testing.net.XhrIo"], false);
goog.addDependency("testing/objectpropertystring.js", ["goog.testing.ObjectPropertyString"], [], false);
goog.addDependency("testing/performancetable.js", ["goog.testing.PerformanceTable"], ["goog.dom", "goog.dom.TagName", "goog.testing.PerformanceTimer"], false);
goog.addDependency("testing/performancetimer.js", ["goog.testing.PerformanceTimer", "goog.testing.PerformanceTimer.Task"], ["goog.array", "goog.async.Deferred", "goog.math"], false);
goog.addDependency("testing/performancetimer_test.js", ["goog.testing.PerformanceTimerTest"], ["goog.async.Deferred", "goog.dom", "goog.math", "goog.testing.MockClock", "goog.testing.PerformanceTimer", "goog.testing.jsunit"], false);
goog.addDependency("testing/propertyreplacer.js", ["goog.testing.PropertyReplacer"], ["goog.testing.ObjectPropertyString", "goog.userAgent"], false);
goog.addDependency("testing/propertyreplacer_test.js", ["goog.testing.PropertyReplacerTest"], ["goog.dom.TagName", "goog.testing.PropertyReplacer", "goog.testing.asserts", "goog.testing.jsunit"], false);
goog.addDependency("testing/proto2/proto2.js", ["goog.testing.proto2"], ["goog.proto2.Message", "goog.proto2.ObjectSerializer", "goog.testing.asserts"], false);
goog.addDependency("testing/proto2/proto2_test.js", ["goog.testing.proto2Test"], ["goog.testing.jsunit", "goog.testing.proto2", "proto2.TestAllTypes"], false);
goog.addDependency("testing/pseudorandom.js", ["goog.testing.PseudoRandom"], ["goog.Disposable"], false);
goog.addDependency("testing/pseudorandom_test.js", ["goog.testing.PseudoRandomTest"], ["goog.testing.PseudoRandom", "goog.testing.jsunit"], false);
goog.addDependency("testing/recordfunction.js", ["goog.testing.FunctionCall", "goog.testing.recordConstructor", "goog.testing.recordFunction"], ["goog.testing.asserts"], false);
goog.addDependency("testing/recordfunction_test.js", ["goog.testing.recordFunctionTest"], ["goog.functions", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.recordConstructor", "goog.testing.recordFunction"], false);
goog.addDependency("testing/shardingtestcase.js", ["goog.testing.ShardingTestCase"], ["goog.asserts", "goog.testing.TestCase"], false);
goog.addDependency("testing/shardingtestcase_test.js", ["goog.testing.ShardingTestCaseTest"], ["goog.testing.ShardingTestCase", "goog.testing.TestCase", "goog.testing.asserts", "goog.testing.jsunit"], false);
goog.addDependency("testing/singleton.js", ["goog.testing.singleton"], [], false);
goog.addDependency("testing/singleton_test.js", ["goog.testing.singletonTest"], ["goog.testing.asserts", "goog.testing.jsunit", "goog.testing.singleton"], false);
goog.addDependency("testing/stacktrace.js", ["goog.testing.stacktrace", "goog.testing.stacktrace.Frame"], [], false);
goog.addDependency("testing/stacktrace_test.js", ["goog.testing.stacktraceTest"], ["goog.functions", "goog.string", "goog.testing.ExpectedFailures", "goog.testing.PropertyReplacer", "goog.testing.StrictMock", "goog.testing.asserts", "goog.testing.jsunit", "goog.testing.stacktrace", "goog.testing.stacktrace.Frame", "goog.userAgent"], false);
goog.addDependency("testing/storage/fakemechanism.js", ["goog.testing.storage.FakeMechanism"], ["goog.storage.mechanism.IterableMechanism", "goog.structs.Map"], false);
goog.addDependency("testing/strictmock.js", ["goog.testing.StrictMock"], ["goog.array", "goog.testing.Mock"], false);
goog.addDependency("testing/strictmock_test.js", ["goog.testing.StrictMockTest"], ["goog.testing.StrictMock", "goog.testing.jsunit"], false);
goog.addDependency("testing/style/layoutasserts.js", ["goog.testing.style.layoutasserts"], ["goog.style", "goog.testing.asserts", "goog.testing.style"], false);
goog.addDependency("testing/style/layoutasserts_test.js", ["goog.testing.style.layoutassertsTest"], ["goog.dom", "goog.dom.TagName", "goog.style", "goog.testing.jsunit", "goog.testing.style.layoutasserts"], false);
goog.addDependency("testing/style/style.js", ["goog.testing.style"], ["goog.dom", "goog.math.Rect", "goog.style"], false);
goog.addDependency("testing/style/style_test.js", ["goog.testing.styleTest"], ["goog.dom", "goog.dom.TagName", "goog.style", "goog.testing.jsunit", "goog.testing.style"], false);
goog.addDependency("testing/testcase.js", ["goog.testing.TestCase", "goog.testing.TestCase.Error", "goog.testing.TestCase.Order", "goog.testing.TestCase.Result", "goog.testing.TestCase.Test"], ["goog.Promise", "goog.Thenable", "goog.dom.TagName", "goog.object", "goog.testing.asserts", "goog.testing.stacktrace"], false);
goog.addDependency("testing/testcase_test.js", ["goog.testing.TestCaseTest"], ["goog.Promise", "goog.testing.MockRandom", "goog.testing.TestCase", "goog.testing.jsunit"], false);
goog.addDependency("testing/testqueue.js", ["goog.testing.TestQueue"], [], false);
goog.addDependency("testing/testrunner.js", ["goog.testing.TestRunner"], ["goog.dom.TagName", "goog.testing.TestCase"], false);
goog.addDependency("testing/testsuite.js", ["goog.testing.testSuite"], ["goog.testing.TestCase"], false);
goog.addDependency("testing/ui/rendererasserts.js", ["goog.testing.ui.rendererasserts"], ["goog.testing.asserts", "goog.ui.ControlRenderer"], false);
goog.addDependency("testing/ui/rendererasserts_test.js", ["goog.testing.ui.rendererassertsTest"], ["goog.testing.asserts", "goog.testing.jsunit", "goog.testing.ui.rendererasserts", "goog.ui.ControlRenderer"], false);
goog.addDependency("testing/ui/rendererharness.js", ["goog.testing.ui.RendererHarness"], ["goog.Disposable", "goog.dom.NodeType", "goog.testing.asserts", "goog.testing.dom"], false);
goog.addDependency("testing/ui/style.js", ["goog.testing.ui.style"], ["goog.array", "goog.asserts", "goog.dom", "goog.dom.classlist", "goog.testing.asserts"], false);
goog.addDependency("testing/ui/style_test.js", ["goog.testing.ui.styleTest"], ["goog.dom", "goog.testing.jsunit", "goog.testing.ui.style"], false);
goog.addDependency("testing/watchers.js", ["goog.testing.watchers"], [], false);
goog.addDependency("timer/timer.js", ["goog.Timer"], ["goog.Promise", "goog.events.EventTarget"], false);
goog.addDependency("timer/timer_test.js", ["goog.TimerTest"], ["goog.Promise", "goog.Timer", "goog.events", "goog.testing.MockClock", "goog.testing.jsunit"], false);
goog.addDependency("tweak/entries.js", ["goog.tweak.BaseEntry", "goog.tweak.BasePrimitiveSetting", "goog.tweak.BaseSetting", "goog.tweak.BooleanGroup", "goog.tweak.BooleanInGroupSetting", "goog.tweak.BooleanSetting", "goog.tweak.ButtonAction", "goog.tweak.NumericSetting", "goog.tweak.StringSetting"], ["goog.array", "goog.asserts", "goog.log", "goog.object"], false);
goog.addDependency("tweak/entries_test.js", ["goog.tweak.BaseEntryTest"], ["goog.testing.MockControl", "goog.testing.jsunit", "goog.tweak.testhelpers"], false);
goog.addDependency("tweak/registry.js", ["goog.tweak.Registry"], ["goog.array", "goog.asserts", "goog.log", "goog.string", "goog.tweak.BasePrimitiveSetting", "goog.tweak.BaseSetting", "goog.tweak.BooleanSetting", "goog.tweak.NumericSetting", "goog.tweak.StringSetting", "goog.uri.utils"], false);
goog.addDependency("tweak/registry_test.js", ["goog.tweak.RegistryTest"], ["goog.asserts.AssertionError", "goog.testing.jsunit", "goog.tweak", "goog.tweak.testhelpers"], false);
goog.addDependency("tweak/testhelpers.js", ["goog.tweak.testhelpers"], ["goog.tweak", "goog.tweak.BooleanGroup", "goog.tweak.BooleanInGroupSetting", "goog.tweak.BooleanSetting", "goog.tweak.ButtonAction", "goog.tweak.NumericSetting", "goog.tweak.Registry", "goog.tweak.StringSetting"], false);
goog.addDependency("tweak/tweak.js", ["goog.tweak", "goog.tweak.ConfigParams"], ["goog.asserts", "goog.tweak.BaseSetting", "goog.tweak.BooleanGroup", "goog.tweak.BooleanInGroupSetting", "goog.tweak.BooleanSetting", "goog.tweak.ButtonAction", "goog.tweak.NumericSetting", "goog.tweak.Registry", "goog.tweak.StringSetting"], false);
goog.addDependency("tweak/tweakui.js", ["goog.tweak.EntriesPanel", "goog.tweak.TweakUi"], ["goog.array", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.safe", "goog.html.SafeHtml", "goog.object", "goog.string.Const", "goog.style", "goog.tweak", "goog.tweak.BaseEntry", "goog.tweak.BooleanGroup", "goog.tweak.BooleanInGroupSetting", "goog.tweak.BooleanSetting", "goog.tweak.ButtonAction", "goog.tweak.NumericSetting", "goog.tweak.StringSetting", "goog.ui.Zippy", "goog.userAgent"], false);
goog.addDependency("tweak/tweakui_test.js", ["goog.tweak.TweakUiTest"], ["goog.dom", "goog.dom.TagName", "goog.string", "goog.testing.jsunit", "goog.tweak", "goog.tweak.TweakUi", "goog.tweak.testhelpers"], false);
goog.addDependency("ui/abstractspellchecker.js", ["goog.ui.AbstractSpellChecker", "goog.ui.AbstractSpellChecker.AsyncResult"], ["goog.a11y.aria", "goog.array", "goog.asserts", "goog.dom", "goog.dom.InputType", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classlist", "goog.dom.selection", "goog.events", "goog.events.Event", "goog.events.EventType", "goog.math.Coordinate", "goog.spell.SpellCheck", "goog.structs.Set", "goog.style", "goog.ui.Component", "goog.ui.MenuItem", "goog.ui.MenuSeparator", 
"goog.ui.PopupMenu"], false);
goog.addDependency("ui/ac/ac.js", ["goog.ui.ac"], ["goog.ui.ac.ArrayMatcher", "goog.ui.ac.AutoComplete", "goog.ui.ac.InputHandler", "goog.ui.ac.Renderer"], false);
goog.addDependency("ui/ac/ac_test.js", ["goog.ui.acTest"], ["goog.array", "goog.asserts", "goog.dom", "goog.dom.NodeType", "goog.dom.classlist", "goog.dom.selection", "goog.events", "goog.events.BrowserEvent", "goog.events.Event", "goog.events.EventType", "goog.events.KeyCodes", "goog.style", "goog.testing.MockClock", "goog.testing.jsunit", "goog.ui.ac", "goog.userAgent"], false);
goog.addDependency("ui/ac/arraymatcher.js", ["goog.ui.ac.ArrayMatcher"], ["goog.string"], false);
goog.addDependency("ui/ac/arraymatcher_test.js", ["goog.ui.ac.ArrayMatcherTest"], ["goog.testing.jsunit", "goog.ui.ac.ArrayMatcher"], false);
goog.addDependency("ui/ac/autocomplete.js", ["goog.ui.ac.AutoComplete", "goog.ui.ac.AutoComplete.EventType"], ["goog.array", "goog.asserts", "goog.events", "goog.events.EventTarget", "goog.object"], false);
goog.addDependency("ui/ac/autocomplete_test.js", ["goog.ui.ac.AutoCompleteTest"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.dom", "goog.dom.InputType", "goog.dom.TagName", "goog.events.EventHandler", "goog.events.EventTarget", "goog.string", "goog.testing.MockControl", "goog.testing.events", "goog.testing.jsunit", "goog.testing.mockmatchers", "goog.ui.ac.AutoComplete", "goog.ui.ac.InputHandler", "goog.ui.ac.RenderOptions", "goog.ui.ac.Renderer"], false);
goog.addDependency("ui/ac/cachingmatcher.js", ["goog.ui.ac.CachingMatcher"], ["goog.array", "goog.async.Throttle", "goog.ui.ac.ArrayMatcher", "goog.ui.ac.RenderOptions"], false);
goog.addDependency("ui/ac/cachingmatcher_test.js", ["goog.ui.ac.CachingMatcherTest"], ["goog.testing.MockControl", "goog.testing.jsunit", "goog.testing.mockmatchers", "goog.ui.ac.CachingMatcher"], false);
goog.addDependency("ui/ac/inputhandler.js", ["goog.ui.ac.InputHandler"], ["goog.Disposable", "goog.Timer", "goog.a11y.aria", "goog.dom", "goog.dom.selection", "goog.events.EventHandler", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.string", "goog.userAgent", "goog.userAgent.product"], false);
goog.addDependency("ui/ac/inputhandler_test.js", ["goog.ui.ac.InputHandlerTest"], ["goog.dom.selection", "goog.events.BrowserEvent", "goog.events.Event", "goog.events.EventTarget", "goog.events.KeyCodes", "goog.functions", "goog.object", "goog.testing.MockClock", "goog.testing.jsunit", "goog.ui.ac.InputHandler", "goog.userAgent"], false);
goog.addDependency("ui/ac/remote.js", ["goog.ui.ac.Remote"], ["goog.ui.ac.AutoComplete", "goog.ui.ac.InputHandler", "goog.ui.ac.RemoteArrayMatcher", "goog.ui.ac.Renderer"], false);
goog.addDependency("ui/ac/remotearraymatcher.js", ["goog.ui.ac.RemoteArrayMatcher"], ["goog.Disposable", "goog.Uri", "goog.events", "goog.json", "goog.net.EventType", "goog.net.XhrIo"], false);
goog.addDependency("ui/ac/remotearraymatcher_test.js", ["goog.ui.ac.RemoteArrayMatcherTest"], ["goog.json", "goog.net.XhrIo", "goog.testing.MockControl", "goog.testing.jsunit", "goog.testing.net.XhrIo", "goog.ui.ac.RemoteArrayMatcher"], false);
goog.addDependency("ui/ac/renderer.js", ["goog.ui.ac.Renderer", "goog.ui.ac.Renderer.CustomRenderer"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.array", "goog.asserts", "goog.dispose", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.events.EventTarget", "goog.events.EventType", "goog.fx.dom.FadeInAndShow", "goog.fx.dom.FadeOutAndHide", "goog.positioning", "goog.positioning.Corner", "goog.positioning.Overflow", "goog.string", 
"goog.style", "goog.ui.IdGenerator", "goog.ui.ac.AutoComplete"], false);
goog.addDependency("ui/ac/renderer_test.js", ["goog.ui.ac.RendererTest"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.fx.dom.FadeInAndShow", "goog.fx.dom.FadeOutAndHide", "goog.string", "goog.style", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.ui.ac.AutoComplete", "goog.ui.ac.Renderer"], false);
goog.addDependency("ui/ac/renderoptions.js", ["goog.ui.ac.RenderOptions"], [], false);
goog.addDependency("ui/ac/richinputhandler.js", ["goog.ui.ac.RichInputHandler"], ["goog.ui.ac.InputHandler"], false);
goog.addDependency("ui/ac/richremote.js", ["goog.ui.ac.RichRemote"], ["goog.ui.ac.AutoComplete", "goog.ui.ac.Remote", "goog.ui.ac.Renderer", "goog.ui.ac.RichInputHandler", "goog.ui.ac.RichRemoteArrayMatcher"], false);
goog.addDependency("ui/ac/richremotearraymatcher.js", ["goog.ui.ac.RichRemoteArrayMatcher"], ["goog.dom.safe", "goog.html.legacyconversions", "goog.json", "goog.ui.ac.RemoteArrayMatcher"], false);
goog.addDependency("ui/activitymonitor.js", ["goog.ui.ActivityMonitor"], ["goog.array", "goog.asserts", "goog.dom", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType"], false);
goog.addDependency("ui/activitymonitor_test.js", ["goog.ui.ActivityMonitorTest"], ["goog.dom", "goog.events", "goog.events.Event", "goog.events.EventType", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.events", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.ui.ActivityMonitor"], false);
goog.addDependency("ui/advancedtooltip.js", ["goog.ui.AdvancedTooltip"], ["goog.events", "goog.events.EventType", "goog.math.Box", "goog.math.Coordinate", "goog.style", "goog.ui.Tooltip", "goog.userAgent"], false);
goog.addDependency("ui/advancedtooltip_test.js", ["goog.ui.AdvancedTooltipTest"], ["goog.dom", "goog.dom.TagName", "goog.events.Event", "goog.events.EventType", "goog.math.Box", "goog.math.Coordinate", "goog.style", "goog.testing.MockClock", "goog.testing.events", "goog.testing.jsunit", "goog.ui.AdvancedTooltip", "goog.ui.Tooltip", "goog.userAgent"], false);
goog.addDependency("ui/animatedzippy.js", ["goog.ui.AnimatedZippy"], ["goog.dom", "goog.dom.TagName", "goog.events", "goog.fx.Animation", "goog.fx.Transition", "goog.fx.easing", "goog.ui.Zippy", "goog.ui.ZippyEvent"], false);
goog.addDependency("ui/animatedzippy_test.js", ["goog.ui.AnimatedZippyTest"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.asserts", "goog.dom", "goog.events", "goog.functions", "goog.fx.Animation", "goog.fx.Transition", "goog.testing.PropertyReplacer", "goog.testing.asserts", "goog.testing.jsunit", "goog.ui.AnimatedZippy", "goog.ui.Zippy"], false);
goog.addDependency("ui/attachablemenu.js", ["goog.ui.AttachableMenu"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.array", "goog.asserts", "goog.dom", "goog.dom.classlist", "goog.events.Event", "goog.events.KeyCodes", "goog.string", "goog.style", "goog.ui.ItemEvent", "goog.ui.MenuBase", "goog.ui.PopupBase", "goog.userAgent"], false);
goog.addDependency("ui/bidiinput.js", ["goog.ui.BidiInput"], ["goog.dom", "goog.dom.InputType", "goog.dom.TagName", "goog.events", "goog.events.InputHandler", "goog.i18n.bidi", "goog.ui.Component"], false);
goog.addDependency("ui/bidiinput_test.js", ["goog.ui.BidiInputTest"], ["goog.dom", "goog.testing.jsunit", "goog.ui.BidiInput"], false);
goog.addDependency("ui/bubble.js", ["goog.ui.Bubble"], ["goog.Timer", "goog.dom.safe", "goog.events", "goog.events.EventType", "goog.html.SafeHtml", "goog.html.legacyconversions", "goog.math.Box", "goog.positioning", "goog.positioning.AbsolutePosition", "goog.positioning.AnchoredPosition", "goog.positioning.Corner", "goog.positioning.CornerBit", "goog.string.Const", "goog.style", "goog.ui.Component", "goog.ui.Popup"], false);
goog.addDependency("ui/button.js", ["goog.ui.Button", "goog.ui.Button.Side"], ["goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.ui.ButtonRenderer", "goog.ui.ButtonSide", "goog.ui.Component", "goog.ui.Control", "goog.ui.NativeButtonRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/button_test.js", ["goog.ui.ButtonTest"], ["goog.dom", "goog.dom.classlist", "goog.events", "goog.events.Event", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.testing.events", "goog.testing.jsunit", "goog.ui.Button", "goog.ui.ButtonRenderer", "goog.ui.ButtonSide", "goog.ui.Component", "goog.ui.NativeButtonRenderer"], false);
goog.addDependency("ui/buttonrenderer.js", ["goog.ui.ButtonRenderer"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.asserts", "goog.ui.ButtonSide", "goog.ui.Component", "goog.ui.ControlRenderer"], false);
goog.addDependency("ui/buttonrenderer_test.js", ["goog.ui.ButtonRendererTest"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.testing.ExpectedFailures", "goog.testing.jsunit", "goog.testing.ui.rendererasserts", "goog.ui.Button", "goog.ui.ButtonRenderer", "goog.ui.ButtonSide", "goog.ui.Component"], false);
goog.addDependency("ui/buttonside.js", ["goog.ui.ButtonSide"], [], false);
goog.addDependency("ui/charcounter.js", ["goog.ui.CharCounter", "goog.ui.CharCounter.Display"], ["goog.dom", "goog.events", "goog.events.EventTarget", "goog.events.InputHandler"], false);
goog.addDependency("ui/charcounter_test.js", ["goog.ui.CharCounterTest"], ["goog.dom", "goog.testing.asserts", "goog.testing.jsunit", "goog.ui.CharCounter", "goog.userAgent"], false);
goog.addDependency("ui/charpicker.js", ["goog.ui.CharPicker"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.array", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventType", "goog.events.InputHandler", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.i18n.CharListDecompressor", "goog.i18n.uChar", "goog.structs.Set", "goog.style", "goog.ui.Button", "goog.ui.Component", "goog.ui.ContainerScroller", 
"goog.ui.FlatButtonRenderer", "goog.ui.HoverCard", "goog.ui.LabelInput", "goog.ui.Menu", "goog.ui.MenuButton", "goog.ui.MenuItem", "goog.ui.Tooltip"], false);
goog.addDependency("ui/charpicker_test.js", ["goog.ui.CharPickerTest"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.dispose", "goog.dom", "goog.events.Event", "goog.events.EventType", "goog.i18n.CharPickerData", "goog.i18n.uChar.NameFetcher", "goog.testing.MockControl", "goog.testing.events", "goog.testing.jsunit", "goog.testing.mockmatchers", "goog.ui.CharPicker", "goog.ui.FlatButtonRenderer"], false);
goog.addDependency("ui/checkbox.js", ["goog.ui.Checkbox", "goog.ui.Checkbox.State"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.events.EventType", "goog.events.KeyCodes", "goog.string", "goog.ui.CheckboxRenderer", "goog.ui.Component", "goog.ui.Control", "goog.ui.registry"], false);
goog.addDependency("ui/checkbox_test.js", ["goog.ui.CheckboxTest"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.events.KeyCodes", "goog.testing.events", "goog.testing.jsunit", "goog.ui.Checkbox", "goog.ui.CheckboxRenderer", "goog.ui.Component", "goog.ui.ControlRenderer", "goog.ui.decorate"], false);
goog.addDependency("ui/checkboxmenuitem.js", ["goog.ui.CheckBoxMenuItem"], ["goog.ui.MenuItem", "goog.ui.registry"], false);
goog.addDependency("ui/checkboxrenderer.js", ["goog.ui.CheckboxRenderer"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.array", "goog.asserts", "goog.dom.TagName", "goog.dom.classlist", "goog.object", "goog.ui.ControlRenderer"], false);
goog.addDependency("ui/colorbutton.js", ["goog.ui.ColorButton"], ["goog.ui.Button", "goog.ui.ColorButtonRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/colorbutton_test.js", ["goog.ui.ColorButtonTest"], ["goog.array", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.testing.jsunit", "goog.ui.ColorButton", "goog.ui.decorate"], false);
goog.addDependency("ui/colorbuttonrenderer.js", ["goog.ui.ColorButtonRenderer"], ["goog.asserts", "goog.dom.classlist", "goog.functions", "goog.ui.ColorMenuButtonRenderer"], false);
goog.addDependency("ui/colormenubutton.js", ["goog.ui.ColorMenuButton"], ["goog.array", "goog.object", "goog.ui.ColorMenuButtonRenderer", "goog.ui.ColorPalette", "goog.ui.Component", "goog.ui.Menu", "goog.ui.MenuButton", "goog.ui.registry"], false);
goog.addDependency("ui/colormenubuttonrenderer.js", ["goog.ui.ColorMenuButtonRenderer"], ["goog.asserts", "goog.color", "goog.dom.TagName", "goog.dom.classlist", "goog.ui.MenuButtonRenderer", "goog.userAgent"], false);
goog.addDependency("ui/colormenubuttonrenderer_test.js", ["goog.ui.ColorMenuButtonTest"], ["goog.dom", "goog.dom.TagName", "goog.testing.jsunit", "goog.testing.ui.RendererHarness", "goog.testing.ui.rendererasserts", "goog.ui.ColorMenuButton", "goog.ui.ColorMenuButtonRenderer", "goog.userAgent"], false);
goog.addDependency("ui/colorpalette.js", ["goog.ui.ColorPalette"], ["goog.array", "goog.color", "goog.dom.TagName", "goog.style", "goog.ui.Palette", "goog.ui.PaletteRenderer"], false);
goog.addDependency("ui/colorpalette_test.js", ["goog.ui.ColorPaletteTest"], ["goog.color", "goog.dom.TagName", "goog.testing.jsunit", "goog.ui.ColorPalette"], false);
goog.addDependency("ui/colorpicker.js", ["goog.ui.ColorPicker", "goog.ui.ColorPicker.EventType"], ["goog.ui.ColorPalette", "goog.ui.Component"], false);
goog.addDependency("ui/colorsplitbehavior.js", ["goog.ui.ColorSplitBehavior"], ["goog.ui.ColorMenuButton", "goog.ui.SplitBehavior"], false);
goog.addDependency("ui/combobox.js", ["goog.ui.ComboBox", "goog.ui.ComboBoxItem"], ["goog.Timer", "goog.asserts", "goog.dom", "goog.dom.InputType", "goog.dom.TagName", "goog.dom.classlist", "goog.events.EventType", "goog.events.InputHandler", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.log", "goog.positioning.Corner", "goog.positioning.MenuAnchoredPosition", "goog.string", "goog.style", "goog.ui.Component", "goog.ui.ItemEvent", "goog.ui.LabelInput", "goog.ui.Menu", "goog.ui.MenuItem", 
"goog.ui.MenuSeparator", "goog.ui.registry", "goog.userAgent"], false);
goog.addDependency("ui/combobox_test.js", ["goog.ui.ComboBoxTest"], ["goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events.KeyCodes", "goog.testing.MockClock", "goog.testing.events", "goog.testing.jsunit", "goog.ui.ComboBox", "goog.ui.ComboBoxItem", "goog.ui.Component", "goog.ui.ControlRenderer", "goog.ui.LabelInput", "goog.ui.Menu", "goog.ui.MenuItem"], false);
goog.addDependency("ui/component.js", ["goog.ui.Component", "goog.ui.Component.Error", "goog.ui.Component.EventType", "goog.ui.Component.State"], ["goog.array", "goog.asserts", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.events.EventHandler", "goog.events.EventTarget", "goog.object", "goog.style", "goog.ui.IdGenerator"], false);
goog.addDependency("ui/component_test.js", ["goog.ui.ComponentTest"], ["goog.dom", "goog.dom.DomHelper", "goog.dom.NodeType", "goog.dom.TagName", "goog.events.EventTarget", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.ui.Component"], false);
goog.addDependency("ui/container.js", ["goog.ui.Container", "goog.ui.Container.EventType", "goog.ui.Container.Orientation"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.asserts", "goog.dom", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.object", "goog.style", "goog.ui.Component", "goog.ui.ContainerRenderer", "goog.ui.Control"], false);
goog.addDependency("ui/container_test.js", ["goog.ui.ContainerTest"], ["goog.a11y.aria", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.events.Event", "goog.events.KeyCodes", "goog.events.KeyEvent", "goog.testing.events", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.Container", "goog.ui.Control"], false);
goog.addDependency("ui/containerrenderer.js", ["goog.ui.ContainerRenderer"], ["goog.a11y.aria", "goog.array", "goog.asserts", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classlist", "goog.string", "goog.style", "goog.ui.registry", "goog.userAgent"], false);
goog.addDependency("ui/containerrenderer_test.js", ["goog.ui.ContainerRendererTest"], ["goog.dom", "goog.dom.TagName", "goog.style", "goog.testing.ExpectedFailures", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.testing.ui.rendererasserts", "goog.ui.Container", "goog.ui.ContainerRenderer", "goog.userAgent"], false);
goog.addDependency("ui/containerscroller.js", ["goog.ui.ContainerScroller"], ["goog.Disposable", "goog.Timer", "goog.events.EventHandler", "goog.style", "goog.ui.Component", "goog.ui.Container"], false);
goog.addDependency("ui/containerscroller_test.js", ["goog.ui.ContainerScrollerTest"], ["goog.dom", "goog.testing.MockClock", "goog.testing.events", "goog.testing.jsunit", "goog.ui.Container", "goog.ui.ContainerScroller"], false);
goog.addDependency("ui/control.js", ["goog.ui.Control"], ["goog.Disposable", "goog.array", "goog.dom", "goog.events.BrowserEvent", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.string", "goog.ui.Component", "goog.ui.ControlContent", "goog.ui.ControlRenderer", "goog.ui.decorate", "goog.ui.registry", "goog.userAgent"], false);
goog.addDependency("ui/control_test.js", ["goog.ui.ControlTest"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.array", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.events.BrowserEvent", "goog.events.KeyCodes", "goog.object", "goog.string", "goog.style", "goog.testing.ExpectedFailures", "goog.testing.events", "goog.testing.events.Event", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.Control", "goog.ui.ControlRenderer", "goog.ui.registry", "goog.userAgent"], 
false);
goog.addDependency("ui/controlcontent.js", ["goog.ui.ControlContent"], [], false);
goog.addDependency("ui/controlrenderer.js", ["goog.ui.ControlRenderer"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.array", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.object", "goog.string", "goog.style", "goog.ui.Component", "goog.userAgent"], false);
goog.addDependency("ui/controlrenderer_test.js", ["goog.ui.ControlRendererTest"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classlist", "goog.object", "goog.style", "goog.testing.ExpectedFailures", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.Control", "goog.ui.ControlRenderer", "goog.userAgent"], false);
goog.addDependency("ui/cookieeditor.js", ["goog.ui.CookieEditor"], ["goog.asserts", "goog.dom", "goog.dom.TagName", "goog.events.EventType", "goog.net.cookies", "goog.string", "goog.style", "goog.ui.Component"], false);
goog.addDependency("ui/cookieeditor_test.js", ["goog.ui.CookieEditorTest"], ["goog.dom", "goog.events.Event", "goog.events.EventType", "goog.net.cookies", "goog.testing.events", "goog.testing.jsunit", "goog.ui.CookieEditor"], false);
goog.addDependency("ui/css3buttonrenderer.js", ["goog.ui.Css3ButtonRenderer"], ["goog.asserts", "goog.dom.TagName", "goog.dom.classlist", "goog.ui.Button", "goog.ui.ButtonRenderer", "goog.ui.Component", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.registry"], false);
goog.addDependency("ui/css3menubuttonrenderer.js", ["goog.ui.Css3MenuButtonRenderer"], ["goog.dom", "goog.dom.TagName", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.MenuButton", "goog.ui.MenuButtonRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/cssnames.js", ["goog.ui.INLINE_BLOCK_CLASSNAME"], [], false);
goog.addDependency("ui/custombutton.js", ["goog.ui.CustomButton"], ["goog.ui.Button", "goog.ui.CustomButtonRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/custombuttonrenderer.js", ["goog.ui.CustomButtonRenderer"], ["goog.a11y.aria.Role", "goog.asserts", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classlist", "goog.string", "goog.ui.ButtonRenderer", "goog.ui.INLINE_BLOCK_CLASSNAME"], false);
goog.addDependency("ui/customcolorpalette.js", ["goog.ui.CustomColorPalette"], ["goog.color", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.ui.ColorPalette", "goog.ui.Component"], false);
goog.addDependency("ui/customcolorpalette_test.js", ["goog.ui.CustomColorPaletteTest"], ["goog.dom.TagName", "goog.dom.classlist", "goog.testing.jsunit", "goog.ui.CustomColorPalette"], false);
goog.addDependency("ui/datepicker.js", ["goog.ui.DatePicker", "goog.ui.DatePicker.Events", "goog.ui.DatePickerEvent"], ["goog.a11y.aria", "goog.asserts", "goog.date.Date", "goog.date.DateRange", "goog.date.Interval", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classlist", "goog.events.Event", "goog.events.EventType", "goog.events.KeyHandler", "goog.i18n.DateTimeFormat", "goog.i18n.DateTimePatterns", "goog.i18n.DateTimeSymbols", "goog.style", "goog.ui.Component", "goog.ui.DefaultDatePickerRenderer", 
"goog.ui.IdGenerator"], false);
goog.addDependency("ui/datepicker_test.js", ["goog.ui.DatePickerTest"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.date.Date", "goog.date.DateRange", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.i18n.DateTimeSymbols", "goog.i18n.DateTimeSymbols_en_US", "goog.i18n.DateTimeSymbols_zh_HK", "goog.style", "goog.testing.jsunit", "goog.ui.DatePicker"], false);
goog.addDependency("ui/datepickerrenderer.js", ["goog.ui.DatePickerRenderer"], [], false);
goog.addDependency("ui/decorate.js", ["goog.ui.decorate"], ["goog.ui.registry"], false);
goog.addDependency("ui/decorate_test.js", ["goog.ui.decorateTest"], ["goog.testing.jsunit", "goog.ui.decorate", "goog.ui.registry"], false);
goog.addDependency("ui/defaultdatepickerrenderer.js", ["goog.ui.DefaultDatePickerRenderer"], ["goog.dom", "goog.dom.TagName", "goog.ui.DatePickerRenderer"], false);
goog.addDependency("ui/dialog.js", ["goog.ui.Dialog", "goog.ui.Dialog.ButtonSet", "goog.ui.Dialog.ButtonSet.DefaultButtons", "goog.ui.Dialog.DefaultButtonCaptions", "goog.ui.Dialog.DefaultButtonKeys", "goog.ui.Dialog.Event", "goog.ui.Dialog.EventType"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.asserts", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classlist", "goog.dom.safe", "goog.events", "goog.events.Event", "goog.events.EventType", "goog.events.KeyCodes", 
"goog.fx.Dragger", "goog.html.SafeHtml", "goog.html.legacyconversions", "goog.math.Rect", "goog.string", "goog.structs.Map", "goog.style", "goog.ui.ModalPopup"], false);
goog.addDependency("ui/dialog_test.js", ["goog.ui.DialogTest"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.events.EventType", "goog.events.KeyCodes", "goog.fx.css3", "goog.html.SafeHtml", "goog.html.testing", "goog.style", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.events", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.ui.Dialog", "goog.userAgent"], false);
goog.addDependency("ui/dimensionpicker.js", ["goog.ui.DimensionPicker"], ["goog.events.EventType", "goog.events.KeyCodes", "goog.math.Size", "goog.ui.Component", "goog.ui.Control", "goog.ui.DimensionPickerRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/dimensionpicker_test.js", ["goog.ui.DimensionPickerTest"], ["goog.dom", "goog.dom.TagName", "goog.events.KeyCodes", "goog.math.Size", "goog.testing.jsunit", "goog.testing.ui.rendererasserts", "goog.ui.DimensionPicker", "goog.ui.DimensionPickerRenderer"], false);
goog.addDependency("ui/dimensionpickerrenderer.js", ["goog.ui.DimensionPickerRenderer"], ["goog.a11y.aria.Announcer", "goog.a11y.aria.LivePriority", "goog.dom", "goog.dom.TagName", "goog.i18n.bidi", "goog.style", "goog.ui.ControlRenderer", "goog.userAgent"], false);
goog.addDependency("ui/dimensionpickerrenderer_test.js", ["goog.ui.DimensionPickerRendererTest"], ["goog.a11y.aria.LivePriority", "goog.array", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.ui.DimensionPicker", "goog.ui.DimensionPickerRenderer"], false);
goog.addDependency("ui/dragdropdetector.js", ["goog.ui.DragDropDetector", "goog.ui.DragDropDetector.EventType", "goog.ui.DragDropDetector.ImageDropEvent", "goog.ui.DragDropDetector.LinkDropEvent"], ["goog.dom", "goog.dom.InputType", "goog.dom.TagName", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.math.Coordinate", "goog.string", "goog.style", "goog.userAgent"], false);
goog.addDependency("ui/drilldownrow.js", ["goog.ui.DrilldownRow"], ["goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.dom.safe", "goog.html.SafeHtml", "goog.html.legacyconversions", "goog.ui.Component"], false);
goog.addDependency("ui/drilldownrow_test.js", ["goog.ui.DrilldownRowTest"], ["goog.dom", "goog.dom.TagName", "goog.html.SafeHtml", "goog.testing.jsunit", "goog.ui.DrilldownRow"], false);
goog.addDependency("ui/editor/abstractdialog.js", ["goog.ui.editor.AbstractDialog", "goog.ui.editor.AbstractDialog.Builder", "goog.ui.editor.AbstractDialog.EventType"], ["goog.asserts", "goog.dom", "goog.dom.classlist", "goog.events.EventTarget", "goog.string", "goog.ui.Dialog", "goog.ui.PopupBase"], false);
goog.addDependency("ui/editor/abstractdialog_test.js", ["goog.ui.editor.AbstractDialogTest"], ["goog.dom", "goog.dom.DomHelper", "goog.dom.TagName", "goog.dom.classlist", "goog.events.Event", "goog.events.EventHandler", "goog.events.KeyCodes", "goog.testing.MockControl", "goog.testing.events", "goog.testing.jsunit", "goog.testing.mockmatchers.ArgumentMatcher", "goog.ui.editor.AbstractDialog", "goog.userAgent"], false);
goog.addDependency("ui/editor/bubble.js", ["goog.ui.editor.Bubble"], ["goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.ViewportSizeMonitor", "goog.dom.classlist", "goog.editor.style", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.functions", "goog.log", "goog.math.Box", "goog.object", "goog.positioning", "goog.positioning.Corner", "goog.positioning.Overflow", "goog.positioning.OverflowStatus", "goog.string", "goog.style", "goog.ui.Component", "goog.ui.PopupBase", 
"goog.userAgent"], false);
goog.addDependency("ui/editor/bubble_test.js", ["goog.ui.editor.BubbleTest"], ["goog.dom", "goog.dom.TagName", "goog.events", "goog.events.EventType", "goog.positioning.Corner", "goog.positioning.OverflowStatus", "goog.string", "goog.style", "goog.testing.editor.TestHelper", "goog.testing.events", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.editor.Bubble"], false);
goog.addDependency("ui/editor/defaulttoolbar.js", ["goog.ui.editor.ButtonDescriptor", "goog.ui.editor.DefaultToolbar"], ["goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.editor.Command", "goog.style", "goog.ui.editor.ToolbarFactory", "goog.ui.editor.messages", "goog.userAgent"], false);
goog.addDependency("ui/editor/linkdialog.js", ["goog.ui.editor.LinkDialog", "goog.ui.editor.LinkDialog.BeforeTestLinkEvent", "goog.ui.editor.LinkDialog.EventType", "goog.ui.editor.LinkDialog.OkEvent"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.dom", "goog.dom.InputType", "goog.dom.TagName", "goog.dom.safe", "goog.editor.BrowserFeature", "goog.editor.Link", "goog.editor.focus", "goog.editor.node", "goog.events.Event", "goog.events.EventHandler", "goog.events.InputHandler", "goog.html.SafeHtml", 
"goog.string", "goog.string.Unicode", "goog.style", "goog.ui.Button", "goog.ui.Component", "goog.ui.LinkButtonRenderer", "goog.ui.editor.AbstractDialog", "goog.ui.editor.TabPane", "goog.ui.editor.messages", "goog.userAgent", "goog.window"], false);
goog.addDependency("ui/editor/linkdialog_test.js", ["goog.ui.editor.LinkDialogTest"], ["goog.dom", "goog.dom.DomHelper", "goog.dom.TagName", "goog.editor.BrowserFeature", "goog.editor.Link", "goog.events", "goog.events.EventHandler", "goog.events.EventType", "goog.events.KeyCodes", "goog.style", "goog.testing.MockControl", "goog.testing.PropertyReplacer", "goog.testing.dom", "goog.testing.events", "goog.testing.events.Event", "goog.testing.jsunit", "goog.testing.mockmatchers", "goog.testing.mockmatchers.ArgumentMatcher", 
"goog.ui.editor.AbstractDialog", "goog.ui.editor.LinkDialog", "goog.ui.editor.messages", "goog.userAgent"], false);
goog.addDependency("ui/editor/messages.js", ["goog.ui.editor.messages"], ["goog.html.uncheckedconversions", "goog.string.Const"], false);
goog.addDependency("ui/editor/tabpane.js", ["goog.ui.editor.TabPane"], ["goog.asserts", "goog.dom.InputType", "goog.dom.TagName", "goog.dom.classlist", "goog.events.EventHandler", "goog.events.EventType", "goog.style", "goog.ui.Component", "goog.ui.Control", "goog.ui.Tab", "goog.ui.TabBar"], false);
goog.addDependency("ui/editor/toolbarcontroller.js", ["goog.ui.editor.ToolbarController"], ["goog.editor.Field", "goog.events.EventHandler", "goog.events.EventTarget", "goog.ui.Component"], false);
goog.addDependency("ui/editor/toolbarfactory.js", ["goog.ui.editor.ToolbarFactory"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.string", "goog.string.Unicode", "goog.style", "goog.ui.Component", "goog.ui.Container", "goog.ui.Option", "goog.ui.Toolbar", "goog.ui.ToolbarButton", "goog.ui.ToolbarColorMenuButton", "goog.ui.ToolbarMenuButton", "goog.ui.ToolbarRenderer", "goog.ui.ToolbarSelect", "goog.userAgent"], false);
goog.addDependency("ui/editor/toolbarfactory_test.js", ["goog.ui.editor.ToolbarFactoryTest"], ["goog.dom", "goog.testing.ExpectedFailures", "goog.testing.editor.TestHelper", "goog.testing.jsunit", "goog.ui.editor.ToolbarFactory", "goog.userAgent"], false);
goog.addDependency("ui/emoji/emoji.js", ["goog.ui.emoji.Emoji"], [], false);
goog.addDependency("ui/emoji/emojipalette.js", ["goog.ui.emoji.EmojiPalette"], ["goog.events.EventType", "goog.net.ImageLoader", "goog.ui.Palette", "goog.ui.emoji.Emoji", "goog.ui.emoji.EmojiPaletteRenderer"], false);
goog.addDependency("ui/emoji/emojipaletterenderer.js", ["goog.ui.emoji.EmojiPaletteRenderer"], ["goog.a11y.aria", "goog.asserts", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classlist", "goog.style", "goog.ui.PaletteRenderer", "goog.ui.emoji.Emoji"], false);
goog.addDependency("ui/emoji/emojipicker.js", ["goog.ui.emoji.EmojiPicker"], ["goog.dom.TagName", "goog.style", "goog.ui.Component", "goog.ui.TabPane", "goog.ui.emoji.Emoji", "goog.ui.emoji.EmojiPalette", "goog.ui.emoji.EmojiPaletteRenderer", "goog.ui.emoji.ProgressiveEmojiPaletteRenderer"], false);
goog.addDependency("ui/emoji/emojipicker_test.js", ["goog.ui.emoji.EmojiPickerTest"], ["goog.dom.TagName", "goog.dom.classlist", "goog.events.EventHandler", "goog.style", "goog.testing.events", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.emoji.Emoji", "goog.ui.emoji.EmojiPicker", "goog.ui.emoji.SpriteInfo"], false);
goog.addDependency("ui/emoji/fast_nonprogressive_emojipicker_test.js", ["goog.ui.emoji.FastNonProgressiveEmojiPickerTest"], ["goog.dom.classlist", "goog.events", "goog.events.EventType", "goog.net.EventType", "goog.style", "goog.testing.AsyncTestCase", "goog.testing.jsunit", "goog.ui.emoji.Emoji", "goog.ui.emoji.EmojiPicker", "goog.ui.emoji.SpriteInfo", "goog.userAgent"], false);
goog.addDependency("ui/emoji/fast_progressive_emojipicker_test.js", ["goog.ui.emoji.FastProgressiveEmojiPickerTest"], ["goog.dom.classlist", "goog.events", "goog.events.EventType", "goog.net.EventType", "goog.style", "goog.testing.AsyncTestCase", "goog.testing.jsunit", "goog.ui.emoji.Emoji", "goog.ui.emoji.EmojiPicker", "goog.ui.emoji.SpriteInfo"], false);
goog.addDependency("ui/emoji/popupemojipicker.js", ["goog.ui.emoji.PopupEmojiPicker"], ["goog.events.EventType", "goog.positioning.AnchoredPosition", "goog.positioning.Corner", "goog.ui.Component", "goog.ui.Popup", "goog.ui.emoji.EmojiPicker"], false);
goog.addDependency("ui/emoji/popupemojipicker_test.js", ["goog.ui.emoji.PopupEmojiPickerTest"], ["goog.dom", "goog.testing.jsunit", "goog.ui.emoji.PopupEmojiPicker"], false);
goog.addDependency("ui/emoji/progressiveemojipaletterenderer.js", ["goog.ui.emoji.ProgressiveEmojiPaletteRenderer"], ["goog.dom.TagName", "goog.style", "goog.ui.emoji.EmojiPaletteRenderer"], false);
goog.addDependency("ui/emoji/spriteinfo.js", ["goog.ui.emoji.SpriteInfo"], [], false);
goog.addDependency("ui/emoji/spriteinfo_test.js", ["goog.ui.emoji.SpriteInfoTest"], ["goog.testing.jsunit", "goog.ui.emoji.SpriteInfo"], false);
goog.addDependency("ui/filteredmenu.js", ["goog.ui.FilteredMenu"], ["goog.a11y.aria", "goog.a11y.aria.AutoCompleteValues", "goog.a11y.aria.State", "goog.dom", "goog.dom.InputType", "goog.dom.TagName", "goog.events", "goog.events.EventType", "goog.events.InputHandler", "goog.events.KeyCodes", "goog.object", "goog.string", "goog.style", "goog.ui.Component", "goog.ui.FilterObservingMenuItem", "goog.ui.Menu", "goog.ui.MenuItem", "goog.userAgent"], false);
goog.addDependency("ui/filteredmenu_test.js", ["goog.ui.FilteredMenuTest"], ["goog.a11y.aria", "goog.a11y.aria.AutoCompleteValues", "goog.a11y.aria.State", "goog.dom", "goog.dom.TagName", "goog.events", "goog.events.EventType", "goog.events.KeyCodes", "goog.math.Rect", "goog.style", "goog.testing.events", "goog.testing.jsunit", "goog.ui.FilteredMenu", "goog.ui.MenuItem"], false);
goog.addDependency("ui/filterobservingmenuitem.js", ["goog.ui.FilterObservingMenuItem"], ["goog.ui.FilterObservingMenuItemRenderer", "goog.ui.MenuItem", "goog.ui.registry"], false);
goog.addDependency("ui/filterobservingmenuitemrenderer.js", ["goog.ui.FilterObservingMenuItemRenderer"], ["goog.ui.MenuItemRenderer"], false);
goog.addDependency("ui/flatbuttonrenderer.js", ["goog.ui.FlatButtonRenderer"], ["goog.a11y.aria.Role", "goog.asserts", "goog.dom.TagName", "goog.dom.classlist", "goog.ui.Button", "goog.ui.ButtonRenderer", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.registry"], false);
goog.addDependency("ui/flatmenubuttonrenderer.js", ["goog.ui.FlatMenuButtonRenderer"], ["goog.dom", "goog.dom.TagName", "goog.style", "goog.ui.FlatButtonRenderer", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.Menu", "goog.ui.MenuButton", "goog.ui.MenuRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/formpost.js", ["goog.ui.FormPost"], ["goog.array", "goog.dom.InputType", "goog.dom.TagName", "goog.dom.safe", "goog.html.SafeHtml", "goog.ui.Component"], false);
goog.addDependency("ui/formpost_test.js", ["goog.ui.FormPostTest"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.object", "goog.testing.jsunit", "goog.ui.FormPost", "goog.userAgent.product", "goog.userAgent.product.isVersion"], false);
goog.addDependency("ui/gauge.js", ["goog.ui.Gauge", "goog.ui.GaugeColoredRange"], ["goog.a11y.aria", "goog.asserts", "goog.dom.TagName", "goog.events", "goog.fx.Animation", "goog.fx.Transition", "goog.fx.easing", "goog.graphics", "goog.graphics.Font", "goog.graphics.Path", "goog.graphics.SolidFill", "goog.math", "goog.ui.Component", "goog.ui.GaugeTheme"], false);
goog.addDependency("ui/gaugetheme.js", ["goog.ui.GaugeTheme"], ["goog.graphics.LinearGradient", "goog.graphics.SolidFill", "goog.graphics.Stroke"], false);
goog.addDependency("ui/hovercard.js", ["goog.ui.HoverCard", "goog.ui.HoverCard.EventType", "goog.ui.HoverCard.TriggerEvent"], ["goog.array", "goog.dom", "goog.events", "goog.events.Event", "goog.events.EventType", "goog.ui.AdvancedTooltip", "goog.ui.PopupBase", "goog.ui.Tooltip"], false);
goog.addDependency("ui/hovercard_test.js", ["goog.ui.HoverCardTest"], ["goog.dom", "goog.events", "goog.math.Coordinate", "goog.style", "goog.testing.MockClock", "goog.testing.events", "goog.testing.events.Event", "goog.testing.jsunit", "goog.ui.HoverCard"], false);
goog.addDependency("ui/hsvapalette.js", ["goog.ui.HsvaPalette"], ["goog.array", "goog.color.alpha", "goog.dom.TagName", "goog.events", "goog.events.EventType", "goog.style", "goog.ui.Component", "goog.ui.HsvPalette"], false);
goog.addDependency("ui/hsvapalette_test.js", ["goog.ui.HsvaPaletteTest"], ["goog.color.alpha", "goog.dom.TagName", "goog.dom.classlist", "goog.events.Event", "goog.math.Coordinate", "goog.style", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.ui.HsvaPalette", "goog.userAgent"], false);
goog.addDependency("ui/hsvpalette.js", ["goog.ui.HsvPalette"], ["goog.color", "goog.dom.InputType", "goog.dom.TagName", "goog.events", "goog.events.EventType", "goog.events.InputHandler", "goog.style", "goog.style.bidi", "goog.ui.Component", "goog.userAgent"], false);
goog.addDependency("ui/hsvpalette_test.js", ["goog.ui.HsvPaletteTest"], ["goog.color", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.events.Event", "goog.math.Coordinate", "goog.style", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.HsvPalette", "goog.userAgent"], false);
goog.addDependency("ui/idgenerator.js", ["goog.ui.IdGenerator"], [], false);
goog.addDependency("ui/idletimer.js", ["goog.ui.IdleTimer"], ["goog.Timer", "goog.events", "goog.events.EventTarget", "goog.structs.Set", "goog.ui.ActivityMonitor"], false);
goog.addDependency("ui/idletimer_test.js", ["goog.ui.IdleTimerTest"], ["goog.events", "goog.testing.MockClock", "goog.testing.jsunit", "goog.ui.IdleTimer", "goog.ui.MockActivityMonitor"], false);
goog.addDependency("ui/iframemask.js", ["goog.ui.IframeMask"], ["goog.Disposable", "goog.Timer", "goog.dom", "goog.dom.iframe", "goog.events.EventHandler", "goog.style"], false);
goog.addDependency("ui/iframemask_test.js", ["goog.ui.IframeMaskTest"], ["goog.dom", "goog.dom.TagName", "goog.dom.iframe", "goog.structs.Pool", "goog.style", "goog.testing.MockClock", "goog.testing.StrictMock", "goog.testing.jsunit", "goog.ui.IframeMask", "goog.ui.Popup", "goog.ui.PopupBase", "goog.userAgent"], false);
goog.addDependency("ui/imagelessbuttonrenderer.js", ["goog.ui.ImagelessButtonRenderer"], ["goog.dom.TagName", "goog.dom.classlist", "goog.ui.Button", "goog.ui.Component", "goog.ui.CustomButtonRenderer", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.registry"], false);
goog.addDependency("ui/imagelessmenubuttonrenderer.js", ["goog.ui.ImagelessMenuButtonRenderer"], ["goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.MenuButton", "goog.ui.MenuButtonRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/inputdatepicker.js", ["goog.ui.InputDatePicker"], ["goog.date.DateTime", "goog.dom", "goog.dom.InputType", "goog.dom.TagName", "goog.string", "goog.ui.Component", "goog.ui.DatePicker", "goog.ui.LabelInput", "goog.ui.PopupBase", "goog.ui.PopupDatePicker"], false);
goog.addDependency("ui/inputdatepicker_test.js", ["goog.ui.InputDatePickerTest"], ["goog.dom", "goog.i18n.DateTimeFormat", "goog.i18n.DateTimeParse", "goog.testing.jsunit", "goog.ui.InputDatePicker"], false);
goog.addDependency("ui/itemevent.js", ["goog.ui.ItemEvent"], ["goog.events.Event"], false);
goog.addDependency("ui/keyboardshortcuthandler.js", ["goog.ui.KeyboardShortcutEvent", "goog.ui.KeyboardShortcutHandler", "goog.ui.KeyboardShortcutHandler.EventType"], ["goog.Timer", "goog.array", "goog.asserts", "goog.dom.TagName", "goog.events", "goog.events.Event", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyNames", "goog.object", "goog.userAgent"], false);
goog.addDependency("ui/keyboardshortcuthandler_test.js", ["goog.ui.KeyboardShortcutHandlerTest"], ["goog.dom", "goog.events", "goog.events.BrowserEvent", "goog.events.KeyCodes", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.StrictMock", "goog.testing.events", "goog.testing.jsunit", "goog.ui.KeyboardShortcutHandler", "goog.userAgent"], false);
goog.addDependency("ui/labelinput.js", ["goog.ui.LabelInput"], ["goog.Timer", "goog.a11y.aria", "goog.a11y.aria.State", "goog.asserts", "goog.dom", "goog.dom.InputType", "goog.dom.TagName", "goog.dom.classlist", "goog.events.EventHandler", "goog.events.EventType", "goog.ui.Component", "goog.userAgent"], false);
goog.addDependency("ui/labelinput_test.js", ["goog.ui.LabelInputTest"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.dom", "goog.dom.classlist", "goog.events.EventType", "goog.testing.MockClock", "goog.testing.events", "goog.testing.events.Event", "goog.testing.jsunit", "goog.ui.LabelInput", "goog.userAgent"], false);
goog.addDependency("ui/linkbuttonrenderer.js", ["goog.ui.LinkButtonRenderer"], ["goog.ui.Button", "goog.ui.FlatButtonRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/media/flashobject.js", ["goog.ui.media.FlashObject", "goog.ui.media.FlashObject.ScriptAccessLevel", "goog.ui.media.FlashObject.Wmodes"], ["goog.asserts", "goog.dom.TagName", "goog.dom.safe", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventType", "goog.html.SafeUrl", "goog.html.TrustedResourceUrl", "goog.html.flash", "goog.html.legacyconversions", "goog.log", "goog.object", "goog.string", "goog.structs.Map", "goog.style", "goog.ui.Component", "goog.userAgent", 
"goog.userAgent.flash"], false);
goog.addDependency("ui/media/flashobject_test.js", ["goog.ui.media.FlashObjectTest"], ["goog.dom", "goog.dom.DomHelper", "goog.dom.TagName", "goog.events", "goog.events.Event", "goog.events.EventType", "goog.html.SafeUrl", "goog.testing.MockControl", "goog.testing.events", "goog.testing.jsunit", "goog.ui.media.FlashObject", "goog.userAgent"], false);
goog.addDependency("ui/media/flickr.js", ["goog.ui.media.FlickrSet", "goog.ui.media.FlickrSetModel"], ["goog.html.TrustedResourceUrl", "goog.string.Const", "goog.ui.media.FlashObject", "goog.ui.media.Media", "goog.ui.media.MediaModel", "goog.ui.media.MediaRenderer"], false);
goog.addDependency("ui/media/flickr_test.js", ["goog.ui.media.FlickrSetTest"], ["goog.dom", "goog.dom.TagName", "goog.html.testing", "goog.testing.jsunit", "goog.ui.media.FlashObject", "goog.ui.media.FlickrSet", "goog.ui.media.FlickrSetModel", "goog.ui.media.Media"], false);
goog.addDependency("ui/media/googlevideo.js", ["goog.ui.media.GoogleVideo", "goog.ui.media.GoogleVideoModel"], ["goog.string", "goog.ui.media.FlashObject", "goog.ui.media.Media", "goog.ui.media.MediaModel", "goog.ui.media.MediaRenderer"], false);
goog.addDependency("ui/media/googlevideo_test.js", ["goog.ui.media.GoogleVideoTest"], ["goog.dom", "goog.dom.TagName", "goog.testing.jsunit", "goog.ui.media.FlashObject", "goog.ui.media.GoogleVideo", "goog.ui.media.GoogleVideoModel", "goog.ui.media.Media"], false);
goog.addDependency("ui/media/media.js", ["goog.ui.media.Media", "goog.ui.media.MediaRenderer"], ["goog.asserts", "goog.dom.TagName", "goog.style", "goog.ui.Component", "goog.ui.Control", "goog.ui.ControlRenderer"], false);
goog.addDependency("ui/media/media_test.js", ["goog.ui.media.MediaTest"], ["goog.dom", "goog.dom.TagName", "goog.math.Size", "goog.testing.jsunit", "goog.ui.ControlRenderer", "goog.ui.media.Media", "goog.ui.media.MediaModel", "goog.ui.media.MediaRenderer"], false);
goog.addDependency("ui/media/mediamodel.js", ["goog.ui.media.MediaModel", "goog.ui.media.MediaModel.Category", "goog.ui.media.MediaModel.Credit", "goog.ui.media.MediaModel.Credit.Role", "goog.ui.media.MediaModel.Credit.Scheme", "goog.ui.media.MediaModel.Medium", "goog.ui.media.MediaModel.MimeType", "goog.ui.media.MediaModel.Player", "goog.ui.media.MediaModel.SubTitle", "goog.ui.media.MediaModel.Thumbnail"], ["goog.array", "goog.html.TrustedResourceUrl", "goog.html.legacyconversions"], false);
goog.addDependency("ui/media/mediamodel_test.js", ["goog.ui.media.MediaModelTest"], ["goog.testing.jsunit", "goog.ui.media.MediaModel"], false);
goog.addDependency("ui/media/mp3.js", ["goog.ui.media.Mp3"], ["goog.string", "goog.ui.media.FlashObject", "goog.ui.media.Media", "goog.ui.media.MediaRenderer"], false);
goog.addDependency("ui/media/mp3_test.js", ["goog.ui.media.Mp3Test"], ["goog.dom", "goog.dom.TagName", "goog.testing.jsunit", "goog.ui.media.FlashObject", "goog.ui.media.Media", "goog.ui.media.MediaModel", "goog.ui.media.Mp3"], false);
goog.addDependency("ui/media/photo.js", ["goog.ui.media.Photo"], ["goog.dom.TagName", "goog.ui.media.Media", "goog.ui.media.MediaRenderer"], false);
goog.addDependency("ui/media/photo_test.js", ["goog.ui.media.PhotoTest"], ["goog.dom", "goog.dom.TagName", "goog.testing.jsunit", "goog.ui.media.MediaModel", "goog.ui.media.Photo"], false);
goog.addDependency("ui/media/picasa.js", ["goog.ui.media.PicasaAlbum", "goog.ui.media.PicasaAlbumModel"], ["goog.html.TrustedResourceUrl", "goog.string.Const", "goog.ui.media.FlashObject", "goog.ui.media.Media", "goog.ui.media.MediaModel", "goog.ui.media.MediaRenderer"], false);
goog.addDependency("ui/media/picasa_test.js", ["goog.ui.media.PicasaTest"], ["goog.dom", "goog.dom.TagName", "goog.testing.jsunit", "goog.ui.media.FlashObject", "goog.ui.media.Media", "goog.ui.media.PicasaAlbum", "goog.ui.media.PicasaAlbumModel"], false);
goog.addDependency("ui/media/vimeo.js", ["goog.ui.media.Vimeo", "goog.ui.media.VimeoModel"], ["goog.string", "goog.ui.media.FlashObject", "goog.ui.media.Media", "goog.ui.media.MediaModel", "goog.ui.media.MediaRenderer"], false);
goog.addDependency("ui/media/vimeo_test.js", ["goog.ui.media.VimeoTest"], ["goog.dom", "goog.dom.TagName", "goog.testing.jsunit", "goog.ui.media.FlashObject", "goog.ui.media.Media", "goog.ui.media.Vimeo", "goog.ui.media.VimeoModel"], false);
goog.addDependency("ui/media/youtube.js", ["goog.ui.media.Youtube", "goog.ui.media.YoutubeModel"], ["goog.dom.TagName", "goog.string", "goog.ui.Component", "goog.ui.media.FlashObject", "goog.ui.media.Media", "goog.ui.media.MediaModel", "goog.ui.media.MediaRenderer"], false);
goog.addDependency("ui/media/youtube_test.js", ["goog.ui.media.YoutubeTest"], ["goog.dom", "goog.dom.TagName", "goog.testing.jsunit", "goog.ui.media.FlashObject", "goog.ui.media.Youtube", "goog.ui.media.YoutubeModel"], false);
goog.addDependency("ui/menu.js", ["goog.ui.Menu", "goog.ui.Menu.EventType"], ["goog.dom.TagName", "goog.math.Coordinate", "goog.string", "goog.style", "goog.ui.Component.EventType", "goog.ui.Component.State", "goog.ui.Container", "goog.ui.Container.Orientation", "goog.ui.MenuHeader", "goog.ui.MenuItem", "goog.ui.MenuRenderer", "goog.ui.MenuSeparator"], false);
goog.addDependency("ui/menu_test.js", ["goog.ui.MenuTest"], ["goog.dom", "goog.events", "goog.math.Coordinate", "goog.testing.events", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.Menu"], false);
goog.addDependency("ui/menubar.js", ["goog.ui.menuBar"], ["goog.ui.Container", "goog.ui.MenuBarRenderer"], false);
goog.addDependency("ui/menubardecorator.js", ["goog.ui.menuBarDecorator"], ["goog.ui.MenuBarRenderer", "goog.ui.menuBar", "goog.ui.registry"], false);
goog.addDependency("ui/menubarrenderer.js", ["goog.ui.MenuBarRenderer"], ["goog.a11y.aria.Role", "goog.ui.Container", "goog.ui.ContainerRenderer"], false);
goog.addDependency("ui/menubase.js", ["goog.ui.MenuBase"], ["goog.events.EventHandler", "goog.events.EventType", "goog.events.KeyHandler", "goog.ui.Popup"], false);
goog.addDependency("ui/menubutton.js", ["goog.ui.MenuButton"], ["goog.Timer", "goog.a11y.aria", "goog.a11y.aria.State", "goog.asserts", "goog.dom", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.math.Box", "goog.math.Rect", "goog.positioning", "goog.positioning.Corner", "goog.positioning.MenuAnchoredPosition", "goog.positioning.Overflow", "goog.style", "goog.ui.Button", "goog.ui.Component", "goog.ui.IdGenerator", "goog.ui.Menu", "goog.ui.MenuButtonRenderer", "goog.ui.MenuItem", 
"goog.ui.MenuRenderer", "goog.ui.registry", "goog.userAgent", "goog.userAgent.product"], false);
goog.addDependency("ui/menubutton_test.js", ["goog.ui.MenuButtonTest"], ["goog.Timer", "goog.a11y.aria", "goog.a11y.aria.State", "goog.dom", "goog.dom.TagName", "goog.events", "goog.events.Event", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.positioning", "goog.positioning.Corner", "goog.positioning.MenuAnchoredPosition", "goog.positioning.Overflow", "goog.style", "goog.testing.ExpectedFailures", "goog.testing.PropertyReplacer", "goog.testing.events", "goog.testing.jsunit", 
"goog.testing.recordFunction", "goog.ui.Component", "goog.ui.Menu", "goog.ui.MenuButton", "goog.ui.MenuItem", "goog.ui.SubMenu", "goog.userAgent", "goog.userAgent.product", "goog.userAgent.product.isVersion"], false);
goog.addDependency("ui/menubuttonrenderer.js", ["goog.ui.MenuButtonRenderer"], ["goog.dom", "goog.dom.TagName", "goog.style", "goog.ui.CustomButtonRenderer", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.Menu", "goog.ui.MenuRenderer"], false);
goog.addDependency("ui/menubuttonrenderer_test.js", ["goog.ui.MenuButtonRendererTest"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.testing.jsunit", "goog.testing.ui.rendererasserts", "goog.ui.MenuButton", "goog.ui.MenuButtonRenderer", "goog.userAgent"], false);
goog.addDependency("ui/menuheader.js", ["goog.ui.MenuHeader"], ["goog.ui.Component", "goog.ui.Control", "goog.ui.MenuHeaderRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/menuheaderrenderer.js", ["goog.ui.MenuHeaderRenderer"], ["goog.ui.ControlRenderer"], false);
goog.addDependency("ui/menuitem.js", ["goog.ui.MenuItem"], ["goog.a11y.aria.Role", "goog.array", "goog.dom", "goog.dom.classlist", "goog.math.Coordinate", "goog.string", "goog.ui.Component", "goog.ui.Control", "goog.ui.MenuItemRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/menuitem_test.js", ["goog.ui.MenuItemTest"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.array", "goog.dom", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classlist", "goog.events.KeyCodes", "goog.math.Coordinate", "goog.testing.events", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.ui.Component", "goog.ui.MenuItem", "goog.ui.MenuItemRenderer"], false);
goog.addDependency("ui/menuitemrenderer.js", ["goog.ui.MenuItemRenderer"], ["goog.a11y.aria.Role", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.ui.Component", "goog.ui.ControlRenderer"], false);
goog.addDependency("ui/menuitemrenderer_test.js", ["goog.ui.MenuItemRendererTest"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.dom", "goog.dom.classlist", "goog.testing.jsunit", "goog.testing.ui.rendererasserts", "goog.ui.Component", "goog.ui.MenuItem", "goog.ui.MenuItemRenderer"], false);
goog.addDependency("ui/menurenderer.js", ["goog.ui.MenuRenderer"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.ui.ContainerRenderer", "goog.ui.Separator"], false);
goog.addDependency("ui/menuseparator.js", ["goog.ui.MenuSeparator"], ["goog.ui.MenuSeparatorRenderer", "goog.ui.Separator", "goog.ui.registry"], false);
goog.addDependency("ui/menuseparatorrenderer.js", ["goog.ui.MenuSeparatorRenderer"], ["goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.ui.ControlRenderer"], false);
goog.addDependency("ui/menuseparatorrenderer_test.js", ["goog.ui.MenuSeparatorRendererTest"], ["goog.dom", "goog.testing.jsunit", "goog.ui.MenuSeparator", "goog.ui.MenuSeparatorRenderer"], false);
goog.addDependency("ui/mockactivitymonitor.js", ["goog.ui.MockActivityMonitor"], ["goog.events.EventType", "goog.ui.ActivityMonitor"], false);
goog.addDependency("ui/mockactivitymonitor_test.js", ["goog.ui.MockActivityMonitorTest"], ["goog.events", "goog.functions", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.ui.ActivityMonitor", "goog.ui.MockActivityMonitor"], false);
goog.addDependency("ui/modalariavisibilityhelper.js", ["goog.ui.ModalAriaVisibilityHelper"], ["goog.a11y.aria", "goog.a11y.aria.State"], false);
goog.addDependency("ui/modalariavisibilityhelper_test.js", ["goog.ui.ModalAriaVisibilityHelperTest"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.dom", "goog.string", "goog.testing.jsunit", "goog.ui.ModalAriaVisibilityHelper"], false);
goog.addDependency("ui/modalpopup.js", ["goog.ui.ModalPopup"], ["goog.Timer", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.dom.iframe", "goog.events", "goog.events.EventType", "goog.events.FocusHandler", "goog.fx.Transition", "goog.string", "goog.style", "goog.ui.Component", "goog.ui.ModalAriaVisibilityHelper", "goog.ui.PopupBase", "goog.userAgent"], false);
goog.addDependency("ui/modalpopup_test.js", ["goog.ui.ModalPopupTest"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.dispose", "goog.dom", "goog.dom.TagName", "goog.events", "goog.events.EventTarget", "goog.fx.Transition", "goog.fx.css3", "goog.string", "goog.style", "goog.testing.MockClock", "goog.testing.jsunit", "goog.ui.ModalPopup", "goog.ui.PopupBase"], false);
goog.addDependency("ui/nativebuttonrenderer.js", ["goog.ui.NativeButtonRenderer"], ["goog.asserts", "goog.dom.InputType", "goog.dom.TagName", "goog.dom.classlist", "goog.events.EventType", "goog.ui.ButtonRenderer", "goog.ui.Component"], false);
goog.addDependency("ui/nativebuttonrenderer_test.js", ["goog.ui.NativeButtonRendererTest"], ["goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.testing.ExpectedFailures", "goog.testing.events", "goog.testing.jsunit", "goog.testing.ui.rendererasserts", "goog.ui.Button", "goog.ui.Component", "goog.ui.NativeButtonRenderer", "goog.userAgent"], false);
goog.addDependency("ui/option.js", ["goog.ui.Option"], ["goog.ui.Component", "goog.ui.MenuItem", "goog.ui.registry"], false);
goog.addDependency("ui/palette.js", ["goog.ui.Palette"], ["goog.array", "goog.dom", "goog.events", "goog.events.EventType", "goog.events.KeyCodes", "goog.math.Size", "goog.ui.Component", "goog.ui.Control", "goog.ui.PaletteRenderer", "goog.ui.SelectionModel"], false);
goog.addDependency("ui/palette_test.js", ["goog.ui.PaletteTest"], ["goog.a11y.aria", "goog.dom", "goog.events", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyEvent", "goog.testing.events.Event", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.ui.Component", "goog.ui.Container", "goog.ui.Palette"], false);
goog.addDependency("ui/paletterenderer.js", ["goog.ui.PaletteRenderer"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.array", "goog.asserts", "goog.dom", "goog.dom.NodeIterator", "goog.dom.NodeType", "goog.dom.TagName", "goog.dom.classlist", "goog.iter", "goog.style", "goog.ui.ControlRenderer", "goog.userAgent"], false);
goog.addDependency("ui/paletterenderer_test.js", ["goog.ui.PaletteRendererTest"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.array", "goog.dom", "goog.dom.TagName", "goog.testing.jsunit", "goog.ui.Palette", "goog.ui.PaletteRenderer"], false);
goog.addDependency("ui/plaintextspellchecker.js", ["goog.ui.PlainTextSpellChecker"], ["goog.Timer", "goog.a11y.aria", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.events.EventHandler", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.spell.SpellCheck", "goog.style", "goog.ui.AbstractSpellChecker", "goog.ui.Component", "goog.userAgent"], false);
goog.addDependency("ui/plaintextspellchecker_test.js", ["goog.ui.PlainTextSpellCheckerTest"], ["goog.Timer", "goog.dom", "goog.events.KeyCodes", "goog.spell.SpellCheck", "goog.testing.events", "goog.testing.jsunit", "goog.ui.PlainTextSpellChecker"], false);
goog.addDependency("ui/popup.js", ["goog.ui.Popup"], ["goog.math.Box", "goog.positioning.Corner", "goog.style", "goog.ui.PopupBase"], false);
goog.addDependency("ui/popup_test.js", ["goog.ui.PopupTest"], ["goog.positioning.AnchoredPosition", "goog.positioning.Corner", "goog.style", "goog.testing.jsunit", "goog.ui.Popup", "goog.userAgent"], false);
goog.addDependency("ui/popupbase.js", ["goog.ui.PopupBase", "goog.ui.PopupBase.EventType", "goog.ui.PopupBase.Type"], ["goog.Timer", "goog.array", "goog.dom", "goog.dom.TagName", "goog.events", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.fx.Transition", "goog.style", "goog.userAgent"], false);
goog.addDependency("ui/popupbase_test.js", ["goog.ui.PopupBaseTest"], ["goog.dom", "goog.dom.TagName", "goog.events", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.fx.Transition", "goog.fx.css3", "goog.testing.MockClock", "goog.testing.events", "goog.testing.events.Event", "goog.testing.jsunit", "goog.ui.PopupBase"], false);
goog.addDependency("ui/popupcolorpicker.js", ["goog.ui.PopupColorPicker"], ["goog.asserts", "goog.dom.classlist", "goog.events.EventType", "goog.positioning.AnchoredPosition", "goog.positioning.Corner", "goog.ui.ColorPicker", "goog.ui.Component", "goog.ui.Popup"], false);
goog.addDependency("ui/popupcolorpicker_test.js", ["goog.ui.PopupColorPickerTest"], ["goog.dom", "goog.events", "goog.testing.events", "goog.testing.jsunit", "goog.ui.ColorPicker", "goog.ui.PopupColorPicker"], false);
goog.addDependency("ui/popupdatepicker.js", ["goog.ui.PopupDatePicker"], ["goog.events.EventType", "goog.positioning.AnchoredPosition", "goog.positioning.Corner", "goog.positioning.Overflow", "goog.style", "goog.ui.Component", "goog.ui.DatePicker", "goog.ui.Popup", "goog.ui.PopupBase"], false);
goog.addDependency("ui/popupdatepicker_test.js", ["goog.ui.PopupDatePickerTest"], ["goog.events", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.ui.PopupBase", "goog.ui.PopupDatePicker"], false);
goog.addDependency("ui/popupmenu.js", ["goog.ui.PopupMenu"], ["goog.events", "goog.events.BrowserEvent", "goog.events.EventType", "goog.events.KeyCodes", "goog.positioning.AnchoredViewportPosition", "goog.positioning.Corner", "goog.positioning.MenuAnchoredPosition", "goog.positioning.Overflow", "goog.positioning.ViewportClientPosition", "goog.structs.Map", "goog.style", "goog.ui.Component", "goog.ui.Menu", "goog.ui.PopupBase", "goog.userAgent"], false);
goog.addDependency("ui/popupmenu_test.js", ["goog.ui.PopupMenuTest"], ["goog.dom", "goog.events.EventHandler", "goog.events.EventType", "goog.events.KeyCodes", "goog.math.Box", "goog.math.Coordinate", "goog.positioning.Corner", "goog.style", "goog.testing.events", "goog.testing.jsunit", "goog.ui.Menu", "goog.ui.MenuItem", "goog.ui.PopupMenu"], false);
goog.addDependency("ui/progressbar.js", ["goog.ui.ProgressBar", "goog.ui.ProgressBar.Orientation"], ["goog.a11y.aria", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.events.EventType", "goog.ui.Component", "goog.ui.RangeModel", "goog.userAgent"], false);
goog.addDependency("ui/prompt.js", ["goog.ui.Prompt"], ["goog.Timer", "goog.dom", "goog.dom.InputType", "goog.dom.TagName", "goog.events", "goog.events.EventType", "goog.functions", "goog.html.SafeHtml", "goog.html.legacyconversions", "goog.ui.Component", "goog.ui.Dialog", "goog.userAgent"], false);
goog.addDependency("ui/prompt_test.js", ["goog.ui.PromptTest"], ["goog.dom.selection", "goog.events.InputHandler", "goog.events.KeyCodes", "goog.functions", "goog.string", "goog.testing.events", "goog.testing.jsunit", "goog.ui.BidiInput", "goog.ui.Dialog", "goog.ui.Prompt", "goog.userAgent", "goog.userAgent.product"], false);
goog.addDependency("ui/rangemodel.js", ["goog.ui.RangeModel"], ["goog.events.EventTarget", "goog.ui.Component"], false);
goog.addDependency("ui/rangemodel_test.js", ["goog.ui.RangeModelTest"], ["goog.testing.jsunit", "goog.ui.RangeModel"], false);
goog.addDependency("ui/ratings.js", ["goog.ui.Ratings", "goog.ui.Ratings.EventType"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.asserts", "goog.dom.TagName", "goog.dom.classlist", "goog.events.EventType", "goog.ui.Component"], false);
goog.addDependency("ui/registry.js", ["goog.ui.registry"], ["goog.asserts", "goog.dom.classlist"], false);
goog.addDependency("ui/registry_test.js", ["goog.ui.registryTest"], ["goog.object", "goog.testing.jsunit", "goog.ui.registry"], false);
goog.addDependency("ui/richtextspellchecker.js", ["goog.ui.RichTextSpellChecker"], ["goog.Timer", "goog.asserts", "goog.dom", "goog.dom.NodeType", "goog.dom.Range", "goog.events.EventHandler", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.math.Coordinate", "goog.spell.SpellCheck", "goog.string.StringBuffer", "goog.style", "goog.ui.AbstractSpellChecker", "goog.ui.Component", "goog.ui.PopupMenu"], false);
goog.addDependency("ui/richtextspellchecker_test.js", ["goog.ui.RichTextSpellCheckerTest"], ["goog.dom.Range", "goog.dom.TagName", "goog.dom.classlist", "goog.events.KeyCodes", "goog.object", "goog.spell.SpellCheck", "goog.testing.MockClock", "goog.testing.events", "goog.testing.jsunit", "goog.ui.RichTextSpellChecker"], false);
goog.addDependency("ui/roundedpanel.js", ["goog.ui.BaseRoundedPanel", "goog.ui.CssRoundedPanel", "goog.ui.GraphicsRoundedPanel", "goog.ui.RoundedPanel", "goog.ui.RoundedPanel.Corner"], ["goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.graphics", "goog.graphics.Path", "goog.graphics.SolidFill", "goog.graphics.Stroke", "goog.math", "goog.math.Coordinate", "goog.style", "goog.ui.Component", "goog.userAgent"], false);
goog.addDependency("ui/roundedpanel_test.js", ["goog.ui.RoundedPanelTest"], ["goog.testing.jsunit", "goog.ui.CssRoundedPanel", "goog.ui.GraphicsRoundedPanel", "goog.ui.RoundedPanel", "goog.userAgent"], false);
goog.addDependency("ui/roundedtabrenderer.js", ["goog.ui.RoundedTabRenderer"], ["goog.dom", "goog.dom.TagName", "goog.ui.Tab", "goog.ui.TabBar", "goog.ui.TabRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/scrollfloater.js", ["goog.ui.ScrollFloater", "goog.ui.ScrollFloater.EventType"], ["goog.array", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events.EventType", "goog.style", "goog.ui.Component", "goog.userAgent"], false);
goog.addDependency("ui/scrollfloater_test.js", ["goog.ui.ScrollFloaterTest"], ["goog.dom", "goog.events", "goog.style", "goog.testing.jsunit", "goog.ui.ScrollFloater"], false);
goog.addDependency("ui/select.js", ["goog.ui.Select"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.array", "goog.events.EventType", "goog.ui.Component", "goog.ui.IdGenerator", "goog.ui.MenuButton", "goog.ui.MenuItem", "goog.ui.MenuRenderer", "goog.ui.SelectionModel", "goog.ui.registry"], false);
goog.addDependency("ui/select_test.js", ["goog.ui.SelectTest"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.dom", "goog.events", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.ui.Component", "goog.ui.CustomButtonRenderer", "goog.ui.Menu", "goog.ui.MenuItem", "goog.ui.Select", "goog.ui.Separator"], false);
goog.addDependency("ui/selectionmenubutton.js", ["goog.ui.SelectionMenuButton", "goog.ui.SelectionMenuButton.SelectionState"], ["goog.dom.InputType", "goog.dom.TagName", "goog.events.EventType", "goog.style", "goog.ui.Component", "goog.ui.MenuButton", "goog.ui.MenuItem", "goog.ui.registry"], false);
goog.addDependency("ui/selectionmenubutton_test.js", ["goog.ui.SelectionMenuButtonTest"], ["goog.dom", "goog.events", "goog.testing.events", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.SelectionMenuButton"], false);
goog.addDependency("ui/selectionmodel.js", ["goog.ui.SelectionModel"], ["goog.array", "goog.events.EventTarget", "goog.events.EventType"], false);
goog.addDependency("ui/selectionmodel_test.js", ["goog.ui.SelectionModelTest"], ["goog.array", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.ui.SelectionModel"], false);
goog.addDependency("ui/separator.js", ["goog.ui.Separator"], ["goog.a11y.aria", "goog.asserts", "goog.ui.Component", "goog.ui.Control", "goog.ui.MenuSeparatorRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/serverchart.js", ["goog.ui.ServerChart", "goog.ui.ServerChart.AxisDisplayType", "goog.ui.ServerChart.ChartType", "goog.ui.ServerChart.EncodingType", "goog.ui.ServerChart.Event", "goog.ui.ServerChart.LegendPosition", "goog.ui.ServerChart.MaximumValue", "goog.ui.ServerChart.MultiAxisAlignment", "goog.ui.ServerChart.MultiAxisType", "goog.ui.ServerChart.UriParam", "goog.ui.ServerChart.UriTooLongEvent"], ["goog.Uri", "goog.array", "goog.asserts", "goog.dom.TagName", "goog.events.Event", 
"goog.string", "goog.ui.Component"], false);
goog.addDependency("ui/serverchart_test.js", ["goog.ui.ServerChartTest"], ["goog.Uri", "goog.events", "goog.testing.jsunit", "goog.ui.ServerChart"], false);
goog.addDependency("ui/slider.js", ["goog.ui.Slider", "goog.ui.Slider.Orientation"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.dom", "goog.dom.TagName", "goog.ui.SliderBase"], false);
goog.addDependency("ui/sliderbase.js", ["goog.ui.SliderBase", "goog.ui.SliderBase.AnimationFactory", "goog.ui.SliderBase.Orientation"], ["goog.Timer", "goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.array", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.events.EventType", "goog.events.KeyCodes", "goog.events.KeyHandler", "goog.events.MouseWheelHandler", "goog.functions", "goog.fx.AnimationParallelQueue", "goog.fx.Dragger", "goog.fx.Transition", 
"goog.fx.dom.ResizeHeight", "goog.fx.dom.ResizeWidth", "goog.fx.dom.Slide", "goog.math", "goog.math.Coordinate", "goog.style", "goog.style.bidi", "goog.ui.Component", "goog.ui.RangeModel"], false);
goog.addDependency("ui/sliderbase_test.js", ["goog.ui.SliderBaseTest"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.events.EventType", "goog.events.KeyCodes", "goog.fx.Animation", "goog.math.Coordinate", "goog.style", "goog.style.bidi", "goog.testing.MockClock", "goog.testing.MockControl", "goog.testing.events", "goog.testing.jsunit", "goog.testing.mockmatchers", "goog.testing.recordFunction", "goog.ui.Component", "goog.ui.SliderBase", 
"goog.userAgent"], false);
goog.addDependency("ui/splitbehavior.js", ["goog.ui.SplitBehavior", "goog.ui.SplitBehavior.DefaultHandlers"], ["goog.Disposable", "goog.asserts", "goog.dispose", "goog.dom.NodeType", "goog.dom.classlist", "goog.events.EventHandler", "goog.ui.ButtonSide", "goog.ui.Component", "goog.ui.decorate", "goog.ui.registry"], false);
goog.addDependency("ui/splitbehavior_test.js", ["goog.ui.SplitBehaviorTest"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.events", "goog.events.Event", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.CustomButton", "goog.ui.Menu", "goog.ui.MenuButton", "goog.ui.MenuItem", "goog.ui.SplitBehavior", "goog.ui.decorate"], false);
goog.addDependency("ui/splitpane.js", ["goog.ui.SplitPane", "goog.ui.SplitPane.Orientation"], ["goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events.EventType", "goog.fx.Dragger", "goog.math.Rect", "goog.math.Size", "goog.style", "goog.ui.Component", "goog.userAgent"], false);
goog.addDependency("ui/splitpane_test.js", ["goog.ui.SplitPaneTest"], ["goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.math.Size", "goog.style", "goog.testing.events", "goog.testing.jsunit", "goog.testing.recordFunction", "goog.ui.Component", "goog.ui.SplitPane"], false);
goog.addDependency("ui/style/app/buttonrenderer.js", ["goog.ui.style.app.ButtonRenderer"], ["goog.dom.TagName", "goog.dom.classlist", "goog.ui.Button", "goog.ui.CustomButtonRenderer", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.registry"], false);
goog.addDependency("ui/style/app/buttonrenderer_test.js", ["goog.ui.style.app.ButtonRendererTest"], ["goog.dom", "goog.testing.jsunit", "goog.testing.ui.style", "goog.ui.Button", "goog.ui.Component", "goog.ui.style.app.ButtonRenderer", "goog.userAgent"], false);
goog.addDependency("ui/style/app/menubuttonrenderer.js", ["goog.ui.style.app.MenuButtonRenderer"], ["goog.a11y.aria.Role", "goog.array", "goog.dom", "goog.dom.TagName", "goog.style", "goog.ui.Menu", "goog.ui.MenuRenderer", "goog.ui.style.app.ButtonRenderer"], false);
goog.addDependency("ui/style/app/menubuttonrenderer_test.js", ["goog.ui.style.app.MenuButtonRendererTest"], ["goog.dom", "goog.testing.jsunit", "goog.testing.ui.style", "goog.ui.Component", "goog.ui.MenuButton", "goog.ui.style.app.MenuButtonRenderer"], false);
goog.addDependency("ui/style/app/primaryactionbuttonrenderer.js", ["goog.ui.style.app.PrimaryActionButtonRenderer"], ["goog.ui.Button", "goog.ui.registry", "goog.ui.style.app.ButtonRenderer"], false);
goog.addDependency("ui/style/app/primaryactionbuttonrenderer_test.js", ["goog.ui.style.app.PrimaryActionButtonRendererTest"], ["goog.dom", "goog.testing.jsunit", "goog.testing.ui.style", "goog.ui.Button", "goog.ui.Component", "goog.ui.style.app.PrimaryActionButtonRenderer"], false);
goog.addDependency("ui/submenu.js", ["goog.ui.SubMenu"], ["goog.Timer", "goog.asserts", "goog.dom", "goog.dom.classlist", "goog.events.KeyCodes", "goog.positioning.AnchoredViewportPosition", "goog.positioning.Corner", "goog.style", "goog.ui.Component", "goog.ui.Menu", "goog.ui.MenuItem", "goog.ui.SubMenuRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/submenu_test.js", ["goog.ui.SubMenuTest"], ["goog.dom", "goog.dom.classlist", "goog.events", "goog.events.Event", "goog.events.KeyCodes", "goog.functions", "goog.positioning", "goog.positioning.Overflow", "goog.style", "goog.testing.MockClock", "goog.testing.events", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.Menu", "goog.ui.MenuItem", "goog.ui.SubMenu", "goog.ui.SubMenuRenderer"], false);
goog.addDependency("ui/submenurenderer.js", ["goog.ui.SubMenuRenderer"], ["goog.a11y.aria", "goog.a11y.aria.State", "goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.style", "goog.ui.Menu", "goog.ui.MenuItemRenderer"], false);
goog.addDependency("ui/tab.js", ["goog.ui.Tab"], ["goog.ui.Component", "goog.ui.Control", "goog.ui.TabRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/tab_test.js", ["goog.ui.TabTest"], ["goog.dom", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.Tab", "goog.ui.TabRenderer"], false);
goog.addDependency("ui/tabbar.js", ["goog.ui.TabBar", "goog.ui.TabBar.Location"], ["goog.ui.Component.EventType", "goog.ui.Container", "goog.ui.Container.Orientation", "goog.ui.Tab", "goog.ui.TabBarRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/tabbar_test.js", ["goog.ui.TabBarTest"], ["goog.dom", "goog.events", "goog.events.Event", "goog.events.EventType", "goog.events.KeyCodes", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.Container", "goog.ui.Tab", "goog.ui.TabBar", "goog.ui.TabBarRenderer"], false);
goog.addDependency("ui/tabbarrenderer.js", ["goog.ui.TabBarRenderer"], ["goog.a11y.aria.Role", "goog.object", "goog.ui.ContainerRenderer"], false);
goog.addDependency("ui/tabbarrenderer_test.js", ["goog.ui.TabBarRendererTest"], ["goog.a11y.aria.Role", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.testing.jsunit", "goog.testing.ui.rendererasserts", "goog.ui.Container", "goog.ui.TabBar", "goog.ui.TabBarRenderer"], false);
goog.addDependency("ui/tablesorter.js", ["goog.ui.TableSorter", "goog.ui.TableSorter.EventType"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events.EventType", "goog.functions", "goog.ui.Component"], false);
goog.addDependency("ui/tablesorter_test.js", ["goog.ui.TableSorterTest"], ["goog.array", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.testing.events", "goog.testing.jsunit", "goog.ui.TableSorter"], false);
goog.addDependency("ui/tabpane.js", ["goog.ui.TabPane", "goog.ui.TabPane.Events", "goog.ui.TabPane.TabLocation", "goog.ui.TabPane.TabPage", "goog.ui.TabPaneEvent"], ["goog.asserts", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.events.Event", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.style"], false);
goog.addDependency("ui/tabpane_test.js", ["goog.ui.TabPaneTest"], ["goog.dom", "goog.testing.jsunit", "goog.ui.TabPane"], false);
goog.addDependency("ui/tabrenderer.js", ["goog.ui.TabRenderer"], ["goog.a11y.aria.Role", "goog.ui.Component", "goog.ui.ControlRenderer"], false);
goog.addDependency("ui/tabrenderer_test.js", ["goog.ui.TabRendererTest"], ["goog.a11y.aria.Role", "goog.dom", "goog.dom.classlist", "goog.testing.dom", "goog.testing.jsunit", "goog.testing.ui.rendererasserts", "goog.ui.Tab", "goog.ui.TabRenderer"], false);
goog.addDependency("ui/textarea.js", ["goog.ui.Textarea", "goog.ui.Textarea.EventType"], ["goog.asserts", "goog.dom", "goog.dom.classlist", "goog.events.EventType", "goog.style", "goog.ui.Control", "goog.ui.TextareaRenderer", "goog.userAgent"], false);
goog.addDependency("ui/textarea_test.js", ["goog.ui.TextareaTest"], ["goog.dom", "goog.dom.classlist", "goog.events", "goog.style", "goog.testing.ExpectedFailures", "goog.testing.events.EventObserver", "goog.testing.jsunit", "goog.ui.Textarea", "goog.ui.TextareaRenderer", "goog.userAgent", "goog.userAgent.product"], false);
goog.addDependency("ui/textarearenderer.js", ["goog.ui.TextareaRenderer"], ["goog.dom.TagName", "goog.ui.Component", "goog.ui.ControlRenderer"], false);
goog.addDependency("ui/togglebutton.js", ["goog.ui.ToggleButton"], ["goog.ui.Button", "goog.ui.Component", "goog.ui.CustomButtonRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/toolbar.js", ["goog.ui.Toolbar"], ["goog.ui.Container", "goog.ui.ToolbarRenderer"], false);
goog.addDependency("ui/toolbar_test.js", ["goog.ui.ToolbarTest"], ["goog.a11y.aria", "goog.dom", "goog.events.EventType", "goog.testing.events", "goog.testing.events.Event", "goog.testing.jsunit", "goog.ui.Toolbar", "goog.ui.ToolbarMenuButton"], false);
goog.addDependency("ui/toolbarbutton.js", ["goog.ui.ToolbarButton"], ["goog.ui.Button", "goog.ui.ToolbarButtonRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/toolbarbuttonrenderer.js", ["goog.ui.ToolbarButtonRenderer"], ["goog.ui.CustomButtonRenderer"], false);
goog.addDependency("ui/toolbarcolormenubutton.js", ["goog.ui.ToolbarColorMenuButton"], ["goog.ui.ColorMenuButton", "goog.ui.ToolbarColorMenuButtonRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/toolbarcolormenubuttonrenderer.js", ["goog.ui.ToolbarColorMenuButtonRenderer"], ["goog.asserts", "goog.dom.classlist", "goog.ui.ColorMenuButtonRenderer", "goog.ui.MenuButtonRenderer", "goog.ui.ToolbarMenuButtonRenderer"], false);
goog.addDependency("ui/toolbarcolormenubuttonrenderer_test.js", ["goog.ui.ToolbarColorMenuButtonRendererTest"], ["goog.dom", "goog.testing.jsunit", "goog.testing.ui.RendererHarness", "goog.testing.ui.rendererasserts", "goog.ui.ToolbarColorMenuButton", "goog.ui.ToolbarColorMenuButtonRenderer"], false);
goog.addDependency("ui/toolbarmenubutton.js", ["goog.ui.ToolbarMenuButton"], ["goog.ui.MenuButton", "goog.ui.ToolbarMenuButtonRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/toolbarmenubuttonrenderer.js", ["goog.ui.ToolbarMenuButtonRenderer"], ["goog.ui.MenuButtonRenderer"], false);
goog.addDependency("ui/toolbarrenderer.js", ["goog.ui.ToolbarRenderer"], ["goog.a11y.aria.Role", "goog.dom.TagName", "goog.ui.Container", "goog.ui.ContainerRenderer", "goog.ui.Separator", "goog.ui.ToolbarSeparatorRenderer"], false);
goog.addDependency("ui/toolbarselect.js", ["goog.ui.ToolbarSelect"], ["goog.ui.Select", "goog.ui.ToolbarMenuButtonRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/toolbarseparator.js", ["goog.ui.ToolbarSeparator"], ["goog.ui.Separator", "goog.ui.ToolbarSeparatorRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/toolbarseparatorrenderer.js", ["goog.ui.ToolbarSeparatorRenderer"], ["goog.asserts", "goog.dom.TagName", "goog.dom.classlist", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.MenuSeparatorRenderer"], false);
goog.addDependency("ui/toolbarseparatorrenderer_test.js", ["goog.ui.ToolbarSeparatorRendererTest"], ["goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.INLINE_BLOCK_CLASSNAME", "goog.ui.ToolbarSeparator", "goog.ui.ToolbarSeparatorRenderer"], false);
goog.addDependency("ui/toolbartogglebutton.js", ["goog.ui.ToolbarToggleButton"], ["goog.ui.ToggleButton", "goog.ui.ToolbarButtonRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/tooltip.js", ["goog.ui.Tooltip", "goog.ui.Tooltip.CursorTooltipPosition", "goog.ui.Tooltip.ElementTooltipPosition", "goog.ui.Tooltip.State"], ["goog.Timer", "goog.array", "goog.dom", "goog.dom.TagName", "goog.dom.safe", "goog.events", "goog.events.EventType", "goog.events.FocusHandler", "goog.html.legacyconversions", "goog.math.Box", "goog.math.Coordinate", "goog.positioning", "goog.positioning.AnchoredPosition", "goog.positioning.Corner", "goog.positioning.Overflow", "goog.positioning.OverflowStatus", 
"goog.positioning.ViewportPosition", "goog.structs.Set", "goog.style", "goog.ui.Popup", "goog.ui.PopupBase"], false);
goog.addDependency("ui/tooltip_test.js", ["goog.ui.TooltipTest"], ["goog.dom", "goog.dom.TagName", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventType", "goog.events.FocusHandler", "goog.html.testing", "goog.math.Coordinate", "goog.positioning.AbsolutePosition", "goog.style", "goog.testing.MockClock", "goog.testing.PropertyReplacer", "goog.testing.TestQueue", "goog.testing.events", "goog.testing.jsunit", "goog.ui.PopupBase", "goog.ui.Tooltip", "goog.userAgent"], false);
goog.addDependency("ui/tree/basenode.js", ["goog.ui.tree.BaseNode", "goog.ui.tree.BaseNode.EventType"], ["goog.Timer", "goog.a11y.aria", "goog.asserts", "goog.dom.safe", "goog.events.Event", "goog.events.KeyCodes", "goog.html.SafeHtml", "goog.html.SafeStyle", "goog.html.legacyconversions", "goog.string", "goog.string.StringBuffer", "goog.style", "goog.ui.Component"], false);
goog.addDependency("ui/tree/basenode_test.js", ["goog.ui.tree.BaseNodeTest"], ["goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.html.legacyconversions", "goog.html.testing", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.ui.Component", "goog.ui.tree.BaseNode", "goog.ui.tree.TreeControl", "goog.ui.tree.TreeNode"], false);
goog.addDependency("ui/tree/treecontrol.js", ["goog.ui.tree.TreeControl"], ["goog.a11y.aria", "goog.asserts", "goog.dom.classlist", "goog.events.EventType", "goog.events.FocusHandler", "goog.events.KeyHandler", "goog.html.SafeHtml", "goog.log", "goog.ui.tree.BaseNode", "goog.ui.tree.TreeNode", "goog.ui.tree.TypeAhead", "goog.userAgent"], false);
goog.addDependency("ui/tree/treecontrol_test.js", ["goog.ui.tree.TreeControlTest"], ["goog.dom", "goog.testing.jsunit", "goog.ui.tree.TreeControl"], false);
goog.addDependency("ui/tree/treenode.js", ["goog.ui.tree.TreeNode"], ["goog.ui.tree.BaseNode"], false);
goog.addDependency("ui/tree/typeahead.js", ["goog.ui.tree.TypeAhead", "goog.ui.tree.TypeAhead.Offset"], ["goog.array", "goog.events.KeyCodes", "goog.string", "goog.structs.Trie"], false);
goog.addDependency("ui/tree/typeahead_test.js", ["goog.ui.tree.TypeAheadTest"], ["goog.dom", "goog.events.KeyCodes", "goog.testing.jsunit", "goog.ui.tree.TreeControl", "goog.ui.tree.TypeAhead"], false);
goog.addDependency("ui/tristatemenuitem.js", ["goog.ui.TriStateMenuItem", "goog.ui.TriStateMenuItem.State"], ["goog.dom.classlist", "goog.ui.Component", "goog.ui.MenuItem", "goog.ui.TriStateMenuItemRenderer", "goog.ui.registry"], false);
goog.addDependency("ui/tristatemenuitemrenderer.js", ["goog.ui.TriStateMenuItemRenderer"], ["goog.asserts", "goog.dom.classlist", "goog.ui.MenuItemRenderer"], false);
goog.addDependency("ui/twothumbslider.js", ["goog.ui.TwoThumbSlider"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.dom", "goog.dom.TagName", "goog.ui.SliderBase"], false);
goog.addDependency("ui/twothumbslider_test.js", ["goog.ui.TwoThumbSliderTest"], ["goog.testing.jsunit", "goog.ui.SliderBase", "goog.ui.TwoThumbSlider"], false);
goog.addDependency("ui/zippy.js", ["goog.ui.Zippy", "goog.ui.Zippy.Events", "goog.ui.ZippyEvent"], ["goog.a11y.aria", "goog.a11y.aria.Role", "goog.a11y.aria.State", "goog.dom", "goog.dom.classlist", "goog.events.Event", "goog.events.EventHandler", "goog.events.EventTarget", "goog.events.EventType", "goog.events.KeyCodes", "goog.style"], false);
goog.addDependency("ui/zippy_test.js", ["goog.ui.ZippyTest"], ["goog.a11y.aria", "goog.dom", "goog.dom.TagName", "goog.dom.classlist", "goog.events", "goog.object", "goog.testing.events", "goog.testing.jsunit", "goog.ui.Zippy"], false);
goog.addDependency("uri/uri.js", ["goog.Uri", "goog.Uri.QueryData"], ["goog.array", "goog.string", "goog.structs", "goog.structs.Map", "goog.uri.utils", "goog.uri.utils.ComponentIndex", "goog.uri.utils.StandardQueryParam"], false);
goog.addDependency("uri/uri_test.js", ["goog.UriTest"], ["goog.Uri", "goog.testing.jsunit"], false);
goog.addDependency("uri/utils.js", ["goog.uri.utils", "goog.uri.utils.ComponentIndex", "goog.uri.utils.QueryArray", "goog.uri.utils.QueryValue", "goog.uri.utils.StandardQueryParam"], ["goog.asserts", "goog.string", "goog.userAgent"], false);
goog.addDependency("uri/utils_test.js", ["goog.uri.utilsTest"], ["goog.functions", "goog.string", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.uri.utils"], false);
goog.addDependency("useragent/adobereader.js", ["goog.userAgent.adobeReader"], ["goog.string", "goog.userAgent"], false);
goog.addDependency("useragent/adobereader_test.js", ["goog.userAgent.adobeReaderTest"], ["goog.testing.jsunit", "goog.userAgent.adobeReader"], false);
goog.addDependency("useragent/flash.js", ["goog.userAgent.flash"], ["goog.string"], false);
goog.addDependency("useragent/flash_test.js", ["goog.userAgent.flashTest"], ["goog.testing.jsunit", "goog.userAgent.flash"], false);
goog.addDependency("useragent/iphoto.js", ["goog.userAgent.iphoto"], ["goog.string", "goog.userAgent"], false);
goog.addDependency("useragent/jscript.js", ["goog.userAgent.jscript"], ["goog.string"], false);
goog.addDependency("useragent/jscript_test.js", ["goog.userAgent.jscriptTest"], ["goog.testing.jsunit", "goog.userAgent.jscript"], false);
goog.addDependency("useragent/keyboard.js", ["goog.userAgent.keyboard"], ["goog.labs.userAgent.platform"], false);
goog.addDependency("useragent/keyboard_test.js", ["goog.userAgent.keyboardTest"], ["goog.labs.userAgent.testAgents", "goog.labs.userAgent.util", "goog.testing.MockUserAgent", "goog.testing.jsunit", "goog.userAgent.keyboard", "goog.userAgentTestUtil"], false);
goog.addDependency("useragent/platform.js", ["goog.userAgent.platform"], ["goog.string", "goog.userAgent"], false);
goog.addDependency("useragent/platform_test.js", ["goog.userAgent.platformTest"], ["goog.testing.MockUserAgent", "goog.testing.jsunit", "goog.userAgent", "goog.userAgent.platform", "goog.userAgentTestUtil"], false);
goog.addDependency("useragent/product.js", ["goog.userAgent.product"], ["goog.labs.userAgent.browser", "goog.labs.userAgent.platform", "goog.userAgent"], false);
goog.addDependency("useragent/product_isversion.js", ["goog.userAgent.product.isVersion"], ["goog.labs.userAgent.platform", "goog.string", "goog.userAgent", "goog.userAgent.product"], false);
goog.addDependency("useragent/product_test.js", ["goog.userAgent.productTest"], ["goog.array", "goog.labs.userAgent.testAgents", "goog.labs.userAgent.util", "goog.testing.MockUserAgent", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.userAgent", "goog.userAgent.product", "goog.userAgent.product.isVersion", "goog.userAgentTestUtil"], false);
goog.addDependency("useragent/useragent.js", ["goog.userAgent"], ["goog.labs.userAgent.browser", "goog.labs.userAgent.engine", "goog.labs.userAgent.platform", "goog.labs.userAgent.util", "goog.string"], false);
goog.addDependency("useragent/useragent_quirks_test.js", ["goog.userAgentQuirksTest"], ["goog.testing.jsunit", "goog.userAgent"], false);
goog.addDependency("useragent/useragent_test.js", ["goog.userAgentTest"], ["goog.array", "goog.labs.userAgent.platform", "goog.labs.userAgent.testAgents", "goog.labs.userAgent.util", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.userAgent", "goog.userAgentTestUtil"], false);
goog.addDependency("useragent/useragenttestutil.js", ["goog.userAgentTestUtil", "goog.userAgentTestUtil.UserAgents"], ["goog.labs.userAgent.browser", "goog.labs.userAgent.engine", "goog.labs.userAgent.platform", "goog.userAgent", "goog.userAgent.keyboard", "goog.userAgent.platform", "goog.userAgent.product", "goog.userAgent.product.isVersion"], false);
goog.addDependency("vec/float32array.js", ["goog.vec.Float32Array"], [], false);
goog.addDependency("vec/float64array.js", ["goog.vec.Float64Array"], [], false);
goog.addDependency("vec/mat3.js", ["goog.vec.Mat3"], ["goog.vec"], false);
goog.addDependency("vec/mat3d.js", ["goog.vec.mat3d", "goog.vec.mat3d.Type"], ["goog.vec"], false);
goog.addDependency("vec/mat3f.js", ["goog.vec.mat3f", "goog.vec.mat3f.Type"], ["goog.vec"], false);
goog.addDependency("vec/mat4.js", ["goog.vec.Mat4"], ["goog.vec", "goog.vec.Vec3", "goog.vec.Vec4"], false);
goog.addDependency("vec/mat4d.js", ["goog.vec.mat4d", "goog.vec.mat4d.Type"], ["goog.vec", "goog.vec.vec3d", "goog.vec.vec4d"], false);
goog.addDependency("vec/mat4f.js", ["goog.vec.mat4f", "goog.vec.mat4f.Type"], ["goog.vec", "goog.vec.vec3f", "goog.vec.vec4f"], false);
goog.addDependency("vec/matrix3.js", ["goog.vec.Matrix3"], [], false);
goog.addDependency("vec/matrix4.js", ["goog.vec.Matrix4"], ["goog.vec", "goog.vec.Vec3", "goog.vec.Vec4"], false);
goog.addDependency("vec/quaternion.js", ["goog.vec.Quaternion"], ["goog.vec", "goog.vec.Vec3", "goog.vec.Vec4"], false);
goog.addDependency("vec/ray.js", ["goog.vec.Ray"], ["goog.vec.Vec3"], false);
goog.addDependency("vec/vec.js", ["goog.vec", "goog.vec.AnyType", "goog.vec.ArrayType", "goog.vec.Float32", "goog.vec.Float64", "goog.vec.Number"], ["goog.vec.Float32Array", "goog.vec.Float64Array"], false);
goog.addDependency("vec/vec2.js", ["goog.vec.Vec2"], ["goog.vec"], false);
goog.addDependency("vec/vec2d.js", ["goog.vec.vec2d", "goog.vec.vec2d.Type"], ["goog.vec"], false);
goog.addDependency("vec/vec2f.js", ["goog.vec.vec2f", "goog.vec.vec2f.Type"], ["goog.vec"], false);
goog.addDependency("vec/vec3.js", ["goog.vec.Vec3"], ["goog.vec"], false);
goog.addDependency("vec/vec3d.js", ["goog.vec.vec3d", "goog.vec.vec3d.Type"], ["goog.vec"], false);
goog.addDependency("vec/vec3f.js", ["goog.vec.vec3f", "goog.vec.vec3f.Type"], ["goog.vec"], false);
goog.addDependency("vec/vec4.js", ["goog.vec.Vec4"], ["goog.vec"], false);
goog.addDependency("vec/vec4d.js", ["goog.vec.vec4d", "goog.vec.vec4d.Type"], ["goog.vec"], false);
goog.addDependency("vec/vec4f.js", ["goog.vec.vec4f", "goog.vec.vec4f.Type"], ["goog.vec"], false);
goog.addDependency("webgl/webgl.js", ["goog.webgl"], [], false);
goog.addDependency("window/window.js", ["goog.window"], ["goog.dom.TagName", "goog.dom.safe", "goog.html.SafeHtml", "goog.html.SafeUrl", "goog.html.uncheckedconversions", "goog.labs.userAgent.platform", "goog.string", "goog.string.Const", "goog.userAgent"], false);
goog.addDependency("window/window_test.js", ["goog.windowTest"], ["goog.Promise", "goog.dom", "goog.dom.TagName", "goog.events", "goog.functions", "goog.labs.userAgent.browser", "goog.labs.userAgent.engine", "goog.labs.userAgent.platform", "goog.string", "goog.testing.PropertyReplacer", "goog.testing.jsunit", "goog.window"], false);
goog.addDependency("base.js", ["goog"], []);
goog.addDependency("../cljs/core.js", ["cljs.core"], ["goog.string", "goog.object", "goog.string.StringBuffer", "goog.array"]);
goog.addDependency("../constants_table.js", ["constants_table"], ["cljs.core"]);
goog.addDependency("../clojure/string.js", ["clojure.string"], ["goog.string", "cljs.core", "goog.string.StringBuffer", "constants_table"]);
goog.addDependency("../cljs/tools/reader/impl/utils.js", ["cljs.tools.reader.impl.utils"], ["goog.string", "cljs.core", "constants_table", "clojure.string"]);
goog.addDependency("../cljs/tools/reader/reader_types.js", ["cljs.tools.reader.reader_types"], ["goog.string", "cljs.core", "goog.string.StringBuffer", "cljs.tools.reader.impl.utils", "constants_table"]);
goog.addDependency("../cljs/tools/reader/impl/commons.js", ["cljs.tools.reader.impl.commons"], ["cljs.core", "cljs.tools.reader.reader_types", "cljs.tools.reader.impl.utils", "constants_table"]);
goog.addDependency("../cljs/tools/reader.js", ["cljs.tools.reader"], ["cljs.tools.reader.impl.commons", "goog.string", "cljs.core", "cljs.tools.reader.reader_types", "goog.string.StringBuffer", "cljs.tools.reader.impl.utils", "constants_table", "clojure.string", "goog.array"]);
goog.addDependency("../cljs/env.js", ["cljs.env"], ["cljs.core", "constants_table"]);
goog.addDependency("../clojure/set.js", ["clojure.set"], ["cljs.core", "constants_table"]);
goog.addDependency("../cljs/reader.js", ["cljs.reader"], ["goog.string", "cljs.core", "goog.string.StringBuffer", "constants_table"]);
goog.addDependency("../cljs/tagged_literals.js", ["cljs.tagged_literals"], ["cljs.core", "constants_table", "cljs.reader"]);
goog.addDependency("../cljs/analyzer.js", ["cljs.analyzer"], ["cljs.tools.reader", "goog.string", "cljs.core", "cljs.tools.reader.reader_types", "cljs.env", "clojure.set", "cljs.tagged_literals", "constants_table", "clojure.string", "cljs.reader"]);
goog.addDependency("../cljs/source_map/base64.js", ["cljs.source_map.base64"], ["cljs.core", "constants_table"]);
goog.addDependency("../cljs/source_map/base64_vlq.js", ["cljs.source_map.base64_vlq"], ["cljs.source_map.base64", "cljs.core", "goog.string.StringBuffer", "constants_table", "clojure.string"]);
goog.addDependency("../cljs/source_map.js", ["cljs.source_map"], ["cljs.source_map.base64_vlq", "cljs.core", "goog.object", "clojure.set", "constants_table", "clojure.string"]);
goog.addDependency("../cljs/compiler.js", ["cljs.compiler"], ["cljs.tools.reader", "goog.string", "cljs.core", "cljs.env", "goog.string.StringBuffer", "constants_table", "cljs.analyzer", "cljs.source_map", "clojure.string"]);
goog.addDependency("../clojure/walk.js", ["clojure.walk"], ["cljs.core", "constants_table"]);
goog.addDependency("../cljs/core$macros.js", ["cljs.core$macros"], ["cljs.compiler", "cljs.core", "cljs.env", "clojure.set", "constants_table", "cljs.analyzer", "clojure.walk"]);
goog.addDependency("../cljs/js.js", ["cljs.js"], ["cljs.compiler", "cljs.tools.reader", "cljs.core", "goog.crypt.base64", "cljs.tools.reader.reader_types", "cljs.env", "goog.string.StringBuffer", "cljs.tagged_literals", "constants_table", "cljs.analyzer", "cljs.source_map", "clojure.string", "cljs.core$macros"]);
goog.addDependency("../com/cognitect/transit/util.js", ["com.cognitect.transit.util"], ["goog.object"]);
goog.addDependency("../com/cognitect/transit/eq.js", ["com.cognitect.transit.eq"], ["com.cognitect.transit.util"]);
goog.addDependency("../com/cognitect/transit/types.js", ["com.cognitect.transit.types"], ["com.cognitect.transit.util", "com.cognitect.transit.eq", "goog.math.Long"]);
goog.addDependency("../com/cognitect/transit/delimiters.js", ["com.cognitect.transit.delimiters"], []);
goog.addDependency("../com/cognitect/transit/caching.js", ["com.cognitect.transit.caching"], ["com.cognitect.transit.delimiters"]);
goog.addDependency("../com/cognitect/transit/impl/decoder.js", ["com.cognitect.transit.impl.decoder"], ["com.cognitect.transit.util", "com.cognitect.transit.delimiters", "com.cognitect.transit.caching", "com.cognitect.transit.types"]);
goog.addDependency("../com/cognitect/transit/impl/reader.js", ["com.cognitect.transit.impl.reader"], ["com.cognitect.transit.impl.decoder", "com.cognitect.transit.caching"]);
goog.addDependency("../com/cognitect/transit/handlers.js", ["com.cognitect.transit.handlers"], ["com.cognitect.transit.util", "com.cognitect.transit.types", "goog.math.Long"]);
goog.addDependency("../com/cognitect/transit/impl/writer.js", ["com.cognitect.transit.impl.writer"], ["com.cognitect.transit.util", "com.cognitect.transit.caching", "com.cognitect.transit.handlers", "com.cognitect.transit.types", "com.cognitect.transit.delimiters", "goog.math.Long"]);
goog.addDependency("../com/cognitect/transit.js", ["com.cognitect.transit"], ["com.cognitect.transit.impl.reader", "com.cognitect.transit.impl.writer", "com.cognitect.transit.types", "com.cognitect.transit.eq", "com.cognitect.transit.impl.decoder", "com.cognitect.transit.caching"]);
goog.addDependency("../cognitect/transit.js", ["cognitect.transit"], ["com.cognitect.transit.eq", "cljs.core", "com.cognitect.transit.types", "constants_table", "com.cognitect.transit", "goog.math.Long"]);
goog.addDependency("../cljs/repl.js", ["cljs.repl"], ["cljs.core", "constants_table"]);
goog.addDependency("../cljs_bootstrap/core.js", ["cljs_bootstrap.core"], ["cljs.tools.reader", "cljs.js", "cljs.core", "cognitect.transit", "cljs.tagged_literals", "constants_table", "cljs.analyzer", "cljs.repl"]);
goog.addDependency("../cljs_bootstrap/node.js", ["cljs_bootstrap.node"], ["cljs.core", "constants_table", "cljs_bootstrap.core"]);
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "&amp;").replace(goog.string.LT_RE_, "&lt;").replace(goog.string.GT_RE_, "&gt;").replace(goog.string.QUOT_RE_, "&quot;").replace(goog.string.SINGLE_QUOTE_RE_, "&#39;").replace(goog.string.NULL_RE_, "&#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "&#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("&") != -1) {
      str = str.replace(goog.string.AMP_RE_, "&amp;");
    }
    if (str.indexOf("<") != -1) {
      str = str.replace(goog.string.LT_RE_, "&lt;");
    }
    if (str.indexOf(">") != -1) {
      str = str.replace(goog.string.GT_RE_, "&gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "&quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "&#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "&#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "&#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "&")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "&")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"&amp;":"&", "&lt;":"<", "&gt;":">", "&quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "&";
      case "lt":
        return "<";
      case "gt":
        return ">";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0;i < b.length + 1;i++) {
    v0[i] = i;
  }
  for (var i = 0;i < a.length;i++) {
    v1[0] = i + 1;
    for (var j = 0;j < b.length;j++) {
      var cost = a[i] != b[j];
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0;j < v0.length;j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.object");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge") || goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchIE_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent("Android"));
};
goog.labs.userAgent.browser.matchCoast_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Coast");
};
goog.labs.userAgent.browser.matchIosWebview_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("iPhone")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && goog.labs.userAgent.util.matchUserAgent("AppleWebKit");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS")) && !goog.labs.userAgent.browser.matchOpera_() && !goog.labs.userAgent.browser.matchIE_();
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;
goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  var versionMap = {};
  goog.array.forEach(versionTuples, function(tuple) {
    var key = tuple[0];
    var value = tuple[1];
    versionMap[key] = value;
  });
  var versionMapHasKey = goog.partial(goog.object.containsKey, versionMap);
  function lookUpValueWithKeys(keys) {
    var key = goog.array.find(keys, versionMapHasKey);
    return versionMap[key] || "";
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return lookUpValueWithKeys(["Version", "Opera", "OPR"]);
  }
  if (goog.labs.userAgent.browser.isChrome()) {
    return lookUpValueWithKeys(["Chrome", "CriOS"]);
  }
  var tuple = versionTuples[2];
  return tuple && tuple[1] || "";
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var edge = /Edge\/([\d\.]+)/.exec(userAgent);
  if (edge) {
    return edge[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isEdge = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit") && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident() && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = goog.labs.userAgent.engine.getEngineTuple_(tuples);
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.getEngineTuple_ = function(tuples) {
  if (!goog.labs.userAgent.engine.isEdge()) {
    return tuples[1];
  }
  for (var i = 0;i < tuples.length;i++) {
    var tuple = tuples[i];
    if (tuple[0] == "Edge") {
      return tuple;
    }
  }
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.labs.userAgent.platform");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.platform.isAndroid = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.platform.isIpod = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPod");
};
goog.labs.userAgent.platform.isIphone = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPhone") && !goog.labs.userAgent.util.matchUserAgent("iPod") && !goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIpad = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIos = function() {
  return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpad() || goog.labs.userAgent.platform.isIpod();
};
goog.labs.userAgent.platform.isMacintosh = function() {
  return goog.labs.userAgent.util.matchUserAgent("Macintosh");
};
goog.labs.userAgent.platform.isLinux = function() {
  return goog.labs.userAgent.util.matchUserAgent("Linux");
};
goog.labs.userAgent.platform.isWindows = function() {
  return goog.labs.userAgent.util.matchUserAgent("Windows");
};
goog.labs.userAgent.platform.isChromeOS = function() {
  return goog.labs.userAgent.util.matchUserAgent("CrOS");
};
goog.labs.userAgent.platform.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  var version = "", re;
  if (goog.labs.userAgent.platform.isWindows()) {
    re = /Windows (?:NT|Phone) ([0-9.]+)/;
    var match = re.exec(userAgentString);
    if (match) {
      version = match[1];
    } else {
      version = "0.0";
    }
  } else {
    if (goog.labs.userAgent.platform.isIos()) {
      re = /(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/;
      var match = re.exec(userAgentString);
      version = match && match[1].replace(/_/g, ".");
    } else {
      if (goog.labs.userAgent.platform.isMacintosh()) {
        re = /Mac OS X ([0-9_.]+)/;
        var match = re.exec(userAgentString);
        version = match ? match[1].replace(/_/g, ".") : "10";
      } else {
        if (goog.labs.userAgent.platform.isAndroid()) {
          re = /Android\s+([^\);]+)(\)|;)/;
          var match = re.exec(userAgentString);
          version = match && match[1];
        } else {
          if (goog.labs.userAgent.platform.isChromeOS()) {
            re = /(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/;
            var match = re.exec(userAgentString);
            version = match && match[1];
          }
        }
      }
    }
  }
  return version || "";
};
goog.labs.userAgent.platform.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(), version) >= 0;
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.platform");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.labs.userAgent.platform.isMacintosh();
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.labs.userAgent.platform.isWindows();
goog.userAgent.isLegacyLinux_ = function() {
  return goog.labs.userAgent.platform.isLinux() || goog.labs.userAgent.platform.isChromeOS();
};
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.isLegacyLinux_();
goog.userAgent.isX11_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return !!navigator && goog.string.contains(navigator["appVersion"] || "", "X11");
};
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.isX11_();
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.labs.userAgent.platform.isAndroid();
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.labs.userAgent.platform.isIphone();
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
goog.userAgent.determineVersion_ = function() {
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    return goog.isFunction(operaVersion) ? operaVersion() : operaVersion;
  }
  var version = "";
  var arr = goog.userAgent.getVersionRegexResult_();
  if (arr) {
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE && !goog.labs.userAgent.engine.isEdge()) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getVersionRegexResult_ = function() {
  var userAgent = goog.userAgent.getUserAgentString();
  if (goog.userAgent.GECKO) {
    return /rv\:([^\);]+)(\)|;)/.exec(userAgent);
  }
  if (goog.userAgent.IE && goog.labs.userAgent.engine.isEdge()) {
    return /Edge\/([\d\.]+)/.exec(userAgent);
  }
  if (goog.userAgent.IE) {
    return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(userAgent);
  }
  if (goog.userAgent.WEBKIT) {
    return /WebKit\/(\S+)/.exec(userAgent);
  }
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.IE && (goog.labs.userAgent.engine.isEdge() || goog.userAgent.DOCUMENT_MODE >= documentMode);
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  var mode = goog.userAgent.getDocumentMode_();
  if (!doc || !goog.userAgent.IE || !mode && goog.labs.userAgent.engine.isEdge()) {
    return undefined;
  }
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0;j < len2;j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0;c < element.length;c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0;r < recurseResult.length;r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.crypt.base64");
goog.require("goog.crypt");
goog.require("goog.userAgent");
goog.crypt.base64.byteToCharMap_ = null;
goog.crypt.base64.charToByteMap_ = null;
goog.crypt.base64.byteToCharMapWebSafe_ = null;
goog.crypt.base64.charToByteMapWebSafe_ = null;
goog.crypt.base64.ENCODED_VALS_BASE = "ABCDEFGHIJKLMNOPQRSTUVWXYZ" + "abcdefghijklmnopqrstuvwxyz" + "0123456789";
goog.crypt.base64.ENCODED_VALS = goog.crypt.base64.ENCODED_VALS_BASE + "+/=";
goog.crypt.base64.ENCODED_VALS_WEBSAFE = goog.crypt.base64.ENCODED_VALS_BASE + "-_.";
goog.crypt.base64.HAS_NATIVE_SUPPORT = goog.userAgent.GECKO || goog.userAgent.WEBKIT || goog.userAgent.OPERA || typeof goog.global.atob == "function";
goog.crypt.base64.encodeByteArray = function(input, opt_webSafe) {
  if (!goog.isArrayLike(input)) {
    throw Error("encodeByteArray takes an array as a parameter");
  }
  goog.crypt.base64.init_();
  var byteToCharMap = opt_webSafe ? goog.crypt.base64.byteToCharMapWebSafe_ : goog.crypt.base64.byteToCharMap_;
  var output = [];
  for (var i = 0;i < input.length;i += 3) {
    var byte1 = input[i];
    var haveByte2 = i + 1 < input.length;
    var byte2 = haveByte2 ? input[i + 1] : 0;
    var haveByte3 = i + 2 < input.length;
    var byte3 = haveByte3 ? input[i + 2] : 0;
    var outByte1 = byte1 >> 2;
    var outByte2 = (byte1 & 3) << 4 | byte2 >> 4;
    var outByte3 = (byte2 & 15) << 2 | byte3 >> 6;
    var outByte4 = byte3 & 63;
    if (!haveByte3) {
      outByte4 = 64;
      if (!haveByte2) {
        outByte3 = 64;
      }
    }
    output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);
  }
  return output.join("");
};
goog.crypt.base64.encodeString = function(input, opt_webSafe) {
  if (goog.crypt.base64.HAS_NATIVE_SUPPORT && !opt_webSafe) {
    return goog.global.btoa(input);
  }
  return goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(input), opt_webSafe);
};
goog.crypt.base64.decodeString = function(input, opt_webSafe) {
  if (goog.crypt.base64.HAS_NATIVE_SUPPORT && !opt_webSafe) {
    return goog.global.atob(input);
  }
  return goog.crypt.byteArrayToString(goog.crypt.base64.decodeStringToByteArray(input, opt_webSafe));
};
goog.crypt.base64.decodeStringToByteArray = function(input, opt_webSafe) {
  goog.crypt.base64.init_();
  var charToByteMap = opt_webSafe ? goog.crypt.base64.charToByteMapWebSafe_ : goog.crypt.base64.charToByteMap_;
  var output = [];
  for (var i = 0;i < input.length;) {
    var byte1 = charToByteMap[input.charAt(i++)];
    var haveByte2 = i < input.length;
    var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;
    ++i;
    var haveByte3 = i < input.length;
    var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;
    ++i;
    var haveByte4 = i < input.length;
    var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;
    ++i;
    if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {
      throw Error();
    }
    var outByte1 = byte1 << 2 | byte2 >> 4;
    output.push(outByte1);
    if (byte3 != 64) {
      var outByte2 = byte2 << 4 & 240 | byte3 >> 2;
      output.push(outByte2);
      if (byte4 != 64) {
        var outByte3 = byte3 << 6 & 192 | byte4;
        output.push(outByte3);
      }
    }
  }
  return output;
};
goog.crypt.base64.init_ = function() {
  if (!goog.crypt.base64.byteToCharMap_) {
    goog.crypt.base64.byteToCharMap_ = {};
    goog.crypt.base64.charToByteMap_ = {};
    goog.crypt.base64.byteToCharMapWebSafe_ = {};
    goog.crypt.base64.charToByteMapWebSafe_ = {};
    for (var i = 0;i < goog.crypt.base64.ENCODED_VALS.length;i++) {
      goog.crypt.base64.byteToCharMap_[i] = goog.crypt.base64.ENCODED_VALS.charAt(i);
      goog.crypt.base64.charToByteMap_[goog.crypt.base64.byteToCharMap_[i]] = i;
      goog.crypt.base64.byteToCharMapWebSafe_[i] = goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(i);
      goog.crypt.base64.charToByteMapWebSafe_[goog.crypt.base64.byteToCharMapWebSafe_[i]] = i;
      if (i >= goog.crypt.base64.ENCODED_VALS_BASE.length) {
        goog.crypt.base64.charToByteMap_[goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(i)] = i;
        goog.crypt.base64.charToByteMapWebSafe_[goog.crypt.base64.ENCODED_VALS.charAt(i)] = i;
      }
    }
  }
};
goog.provide("goog.crypt");
goog.require("goog.array");
goog.require("goog.asserts");
goog.crypt.stringToByteArray = function(str) {
  var output = [], p = 0;
  for (var i = 0;i < str.length;i++) {
    var c = str.charCodeAt(i);
    while (c > 255) {
      output[p++] = c & 255;
      c >>= 8;
    }
    output[p++] = c;
  }
  return output;
};
goog.crypt.byteArrayToString = function(bytes) {
  var CHUNK_SIZE = 8192;
  if (bytes.length < CHUNK_SIZE) {
    return String.fromCharCode.apply(null, bytes);
  }
  var str = "";
  for (var i = 0;i < bytes.length;i += CHUNK_SIZE) {
    var chunk = goog.array.slice(bytes, i, i + CHUNK_SIZE);
    str += String.fromCharCode.apply(null, chunk);
  }
  return str;
};
goog.crypt.byteArrayToHex = function(array) {
  return goog.array.map(array, function(numByte) {
    var hexByte = numByte.toString(16);
    return hexByte.length > 1 ? hexByte : "0" + hexByte;
  }).join("");
};
goog.crypt.hexToByteArray = function(hexString) {
  goog.asserts.assert(hexString.length % 2 == 0, "Key string length must be multiple of 2");
  var arr = [];
  for (var i = 0;i < hexString.length;i += 2) {
    arr.push(parseInt(hexString.substring(i, i + 2), 16));
  }
  return arr;
};
goog.crypt.stringToUtf8ByteArray = function(str) {
  str = str.replace(/\r\n/g, "\n");
  var out = [], p = 0;
  for (var i = 0;i < str.length;i++) {
    var c = str.charCodeAt(i);
    if (c < 128) {
      out[p++] = c;
    } else {
      if (c < 2048) {
        out[p++] = c >> 6 | 192;
        out[p++] = c & 63 | 128;
      } else {
        out[p++] = c >> 12 | 224;
        out[p++] = c >> 6 & 63 | 128;
        out[p++] = c & 63 | 128;
      }
    }
  }
  return out;
};
goog.crypt.utf8ByteArrayToString = function(bytes) {
  var out = [], pos = 0, c = 0;
  while (pos < bytes.length) {
    var c1 = bytes[pos++];
    if (c1 < 128) {
      out[c++] = String.fromCharCode(c1);
    } else {
      if (c1 > 191 && c1 < 224) {
        var c2 = bytes[pos++];
        out[c++] = String.fromCharCode((c1 & 31) << 6 | c2 & 63);
      } else {
        var c2 = bytes[pos++];
        var c3 = bytes[pos++];
        out[c++] = String.fromCharCode((c1 & 15) << 12 | (c2 & 63) << 6 | c3 & 63);
      }
    }
  }
  return out.join("");
};
goog.crypt.xorByteArray = function(bytes1, bytes2) {
  goog.asserts.assert(bytes1.length == bytes2.length, "XOR array lengths must match");
  var result = [];
  for (var i = 0;i < bytes1.length;i++) {
    result.push(bytes1[i] ^ bytes2[i]);
  }
  return result;
};
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.math.Long");
goog.math.Long = function(low, high) {
  this.low_ = low | 0;
  this.high_ = high | 0;
};
goog.math.Long.IntCache_ = {};
goog.math.Long.fromInt = function(value) {
  if (-128 <= value && value < 128) {
    var cachedObj = goog.math.Long.IntCache_[value];
    if (cachedObj) {
      return cachedObj;
    }
  }
  var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
  if (-128 <= value && value < 128) {
    goog.math.Long.IntCache_[value] = obj;
  }
  return obj;
};
goog.math.Long.fromNumber = function(value) {
  if (isNaN(value) || !isFinite(value)) {
    return goog.math.Long.ZERO;
  } else {
    if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else {
      if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
        return goog.math.Long.MAX_VALUE;
      } else {
        if (value < 0) {
          return goog.math.Long.fromNumber(-value).negate();
        } else {
          return new goog.math.Long(value % goog.math.Long.TWO_PWR_32_DBL_ | 0, value / goog.math.Long.TWO_PWR_32_DBL_ | 0);
        }
      }
    }
  }
};
goog.math.Long.fromBits = function(lowBits, highBits) {
  return new goog.math.Long(lowBits, highBits);
};
goog.math.Long.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Long.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Long.ZERO;
  for (var i = 0;i < str.length;i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Long.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Long.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Long.fromNumber(value));
    }
  }
  return result;
};
goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;
goog.math.Long.TWO_PWR_32_DBL_ = goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
goog.math.Long.TWO_PWR_31_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ / 2;
goog.math.Long.TWO_PWR_48_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
goog.math.Long.TWO_PWR_64_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
goog.math.Long.TWO_PWR_63_DBL_ = goog.math.Long.TWO_PWR_64_DBL_ / 2;
goog.math.Long.ZERO = goog.math.Long.fromInt(0);
goog.math.Long.ONE = goog.math.Long.fromInt(1);
goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);
goog.math.Long.MAX_VALUE = goog.math.Long.fromBits(4294967295 | 0, 2147483647 | 0);
goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 2147483648 | 0);
goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);
goog.math.Long.prototype.toInt = function() {
  return this.low_;
};
goog.math.Long.prototype.toNumber = function() {
  return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();
};
goog.math.Long.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  }
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      var radixLong = goog.math.Long.fromNumber(radix);
      var div = this.div(radixLong);
      var rem = div.multiply(radixLong).subtract(this);
      return div.toString(radix) + rem.toInt().toString(radix);
    } else {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.div(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Long.prototype.getHighBits = function() {
  return this.high_;
};
goog.math.Long.prototype.getLowBits = function() {
  return this.low_;
};
goog.math.Long.prototype.getLowBitsUnsigned = function() {
  return this.low_ >= 0 ? this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
};
goog.math.Long.prototype.getNumBitsAbs = function() {
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return 64;
    } else {
      return this.negate().getNumBitsAbs();
    }
  } else {
    var val = this.high_ != 0 ? this.high_ : this.low_;
    for (var bit = 31;bit > 0;bit--) {
      if ((val & 1 << bit) != 0) {
        break;
      }
    }
    return this.high_ != 0 ? bit + 33 : bit + 1;
  }
};
goog.math.Long.prototype.isZero = function() {
  return this.high_ == 0 && this.low_ == 0;
};
goog.math.Long.prototype.isNegative = function() {
  return this.high_ < 0;
};
goog.math.Long.prototype.isOdd = function() {
  return (this.low_ & 1) == 1;
};
goog.math.Long.prototype.equals = function(other) {
  return this.high_ == other.high_ && this.low_ == other.low_;
};
goog.math.Long.prototype.notEquals = function(other) {
  return this.high_ != other.high_ || this.low_ != other.low_;
};
goog.math.Long.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Long.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Long.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Long.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Long.prototype.compare = function(other) {
  if (this.equals(other)) {
    return 0;
  }
  var thisNeg = this.isNegative();
  var otherNeg = other.isNegative();
  if (thisNeg && !otherNeg) {
    return -1;
  }
  if (!thisNeg && otherNeg) {
    return 1;
  }
  if (this.subtract(other).isNegative()) {
    return -1;
  } else {
    return 1;
  }
};
goog.math.Long.prototype.negate = function() {
  if (this.equals(goog.math.Long.MIN_VALUE)) {
    return goog.math.Long.MIN_VALUE;
  } else {
    return this.not().add(goog.math.Long.ONE);
  }
};
goog.math.Long.prototype.add = function(other) {
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 + b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 + b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 + b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 + b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Long.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Long.ZERO;
  } else {
    if (other.isZero()) {
      return goog.math.Long.ZERO;
    }
  }
  if (this.equals(goog.math.Long.MIN_VALUE)) {
    return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
  } else {
    if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Long.TWO_PWR_24_) && other.lessThan(goog.math.Long.TWO_PWR_24_)) {
    return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
  }
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 * b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 * b00;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c16 += a00 * b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 * b00;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a16 * b16;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a00 * b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.div = function(other) {
  if (other.isZero()) {
    throw Error("division by zero");
  } else {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    }
  }
  if (this.equals(goog.math.Long.MIN_VALUE)) {
    if (other.equals(goog.math.Long.ONE) || other.equals(goog.math.Long.NEG_ONE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    }
  } else {
    if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().div(other.negate());
    } else {
      return this.negate().div(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
  }
  var res = goog.math.Long.ZERO;
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Long.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Long.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Long.ONE;
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};
goog.math.Long.prototype.modulo = function(other) {
  return this.subtract(this.div(other).multiply(other));
};
goog.math.Long.prototype.not = function() {
  return goog.math.Long.fromBits(~this.low_, ~this.high_);
};
goog.math.Long.prototype.and = function(other) {
  return goog.math.Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);
};
goog.math.Long.prototype.or = function(other) {
  return goog.math.Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);
};
goog.math.Long.prototype.xor = function(other) {
  return goog.math.Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);
};
goog.math.Long.prototype.shiftLeft = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var low = this.low_;
    if (numBits < 32) {
      var high = this.high_;
      return goog.math.Long.fromBits(low << numBits, high << numBits | low >>> 32 - numBits);
    } else {
      return goog.math.Long.fromBits(0, low << numBits - 32);
    }
  }
};
goog.math.Long.prototype.shiftRight = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >> numBits);
    } else {
      return goog.math.Long.fromBits(high >> numBits - 32, high >= 0 ? 0 : -1);
    }
  }
};
goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits);
    } else {
      if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> numBits - 32, 0);
      }
    }
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("cljs.core");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "1.7.45";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_target_STAR_ = "default";
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
if (typeof cljs.core._STAR_print_err_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_err_fn_STAR_ = function cljs$core$_STAR_print_err_fn_STAR_(_) {
    throw new Error("No *print-err-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var G__6338__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__6338 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__6339__i = 0, G__6339__a = new Array(arguments.length - 0);
        while (G__6339__i < G__6339__a.length) {
          G__6339__a[G__6339__i] = arguments[G__6339__i + 0];
          ++G__6339__i;
        }
        args = new cljs.core.IndexedSeq(G__6339__a, 0);
      }
      return G__6338__delegate.call(this, args);
    };
    G__6338.cljs$lang$maxFixedArity = 0;
    G__6338.cljs$lang$applyTo = function(arglist__6340) {
      var args = cljs.core.seq(arglist__6340);
      return G__6338__delegate(args);
    };
    G__6338.cljs$core$IFn$_invoke$arity$variadic = G__6338__delegate;
    return G__6338;
  }();
  cljs.core._STAR_print_err_fn_STAR_ = function() {
    var G__6341__delegate = function(args) {
      return console.error.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__6341 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__6342__i = 0, G__6342__a = new Array(arguments.length - 0);
        while (G__6342__i < G__6342__a.length) {
          G__6342__a[G__6342__i] = arguments[G__6342__i + 0];
          ++G__6342__i;
        }
        args = new cljs.core.IndexedSeq(G__6342__a, 0);
      }
      return G__6341__delegate.call(this, args);
    };
    G__6341.cljs$lang$maxFixedArity = 0;
    G__6341.cljs$lang$applyTo = function(arglist__6343) {
      var args = cljs.core.seq(arglist__6343);
      return G__6341__delegate(args);
    };
    G__6341.cljs$core$IFn$_invoke$arity$variadic = G__6341__delegate;
    return G__6341;
  }();
  return null;
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return goog.string.isUnicodeChar(x);
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__4130__auto__ = ty;
    if (cljs.core.truth_(and__4130__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__4130__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4423__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4423__auto__)) {
    var s = temp__4423__auto__;
    return s;
  } else {
    return [cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "=":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "&":"_AMPERSAND_", ":":"_COLON_", "<":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", ">":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"=", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":">", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"&", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"<", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.make_array = function cljs$core$make_array() {
  var args6344 = [];
  var len__5181__auto___6347 = arguments.length;
  var i__5182__auto___6348 = 0;
  while (true) {
    if (i__5182__auto___6348 < len__5181__auto___6347) {
      args6344.push(arguments[i__5182__auto___6348]);
      var G__6349 = i__5182__auto___6348 + 1;
      i__5182__auto___6348 = G__6349;
      continue;
    } else {
    }
    break;
  }
  var G__6346 = args6344.length;
  switch(G__6346) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6344.length)].join(""));;
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__5026__auto___6351 = len;
  var i_6352 = 0;
  while (true) {
    if (i_6352 < n__5026__auto___6351) {
      new_arr[i_6352] = arr[i_6352];
      var G__6353 = i_6352 + 1;
      i_6352 = G__6353;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__6354 = i + 1;
      i = G__6354;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function cljs$core$aget() {
  var args6355 = [];
  var len__5181__auto___6364 = arguments.length;
  var i__5182__auto___6365 = 0;
  while (true) {
    if (i__5182__auto___6365 < len__5181__auto___6364) {
      args6355.push(arguments[i__5182__auto___6365]);
      var G__6366 = i__5182__auto___6365 + 1;
      i__5182__auto___6365 = G__6366;
      continue;
    } else {
    }
    break;
  }
  var G__6360 = args6355.length;
  switch(G__6360) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args6355.slice(2), 0);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return array[i];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, i, idxs) {
  var G__6361 = cljs.core.aget;
  var G__6362 = array[i];
  var G__6363 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__6361, G__6362, G__6363) : cljs.core.apply.call(null, G__6361, G__6362, G__6363);
};
cljs.core.aget.cljs$lang$applyTo = function(seq6356) {
  var G__6357 = cljs.core.first(seq6356);
  var seq6356__$1 = cljs.core.next(seq6356);
  var G__6358 = cljs.core.first(seq6356__$1);
  var seq6356__$2 = cljs.core.next(seq6356__$1);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(G__6357, G__6358, seq6356__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset() {
  var args6368 = [];
  var len__5181__auto___6379 = arguments.length;
  var i__5182__auto___6380 = 0;
  while (true) {
    if (i__5182__auto___6380 < len__5181__auto___6379) {
      args6368.push(arguments[i__5182__auto___6380]);
      var G__6381 = i__5182__auto___6380 + 1;
      i__5182__auto___6380 = G__6381;
      continue;
    } else {
    }
    break;
  }
  var G__6374 = args6368.length;
  switch(G__6374) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args6368.slice(3), 0);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5200__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, i, val) {
  return array[i] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__6375 = cljs.core.aset;
  var G__6376 = array[idx];
  var G__6377 = idx2;
  var G__6378 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__6375, G__6376, G__6377, G__6378) : cljs.core.apply.call(null, G__6375, G__6376, G__6377, G__6378);
};
cljs.core.aset.cljs$lang$applyTo = function(seq6369) {
  var G__6370 = cljs.core.first(seq6369);
  var seq6369__$1 = cljs.core.next(seq6369);
  var G__6371 = cljs.core.first(seq6369__$1);
  var seq6369__$2 = cljs.core.next(seq6369__$1);
  var G__6372 = cljs.core.first(seq6369__$2);
  var seq6369__$3 = cljs.core.next(seq6369__$2);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(G__6370, G__6371, G__6372, seq6369__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array() {
  var args6383 = [];
  var len__5181__auto___6389 = arguments.length;
  var i__5182__auto___6390 = 0;
  while (true) {
    if (i__5182__auto___6390 < len__5181__auto___6389) {
      args6383.push(arguments[i__5182__auto___6390]);
      var G__6391 = i__5182__auto___6390 + 1;
      i__5182__auto___6390 = G__6391;
      continue;
    } else {
    }
    break;
  }
  var G__6385 = args6383.length;
  switch(G__6385) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6383.length)].join(""));;
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  var G__6386 = function(a, x) {
    a.push(x);
    return a;
  };
  var G__6387 = [];
  var G__6388 = aseq;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__6386, G__6387, G__6388) : cljs.core.reduce.call(null, G__6386, G__6387, G__6388);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke() {
  var args__5188__auto__ = [];
  var len__5181__auto___6396 = arguments.length;
  var i__5182__auto___6397 = 0;
  while (true) {
    if (i__5182__auto___6397 < len__5181__auto___6396) {
      args__5188__auto__.push(arguments[i__5182__auto___6397]);
      var G__6398 = i__5182__auto___6397 + 1;
      i__5182__auto___6397 = G__6398;
      continue;
    } else {
    }
    break;
  }
  var argseq__5189__auto__ = 2 < args__5188__auto__.length ? new cljs.core.IndexedSeq(args__5188__auto__.slice(2), 0) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5189__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq6393) {
  var G__6394 = cljs.core.first(seq6393);
  var seq6393__$1 = cljs.core.next(seq6393);
  var G__6395 = cljs.core.first(seq6393__$1);
  var seq6393__$2 = cljs.core.next(seq6393__$1);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(G__6394, G__6395, seq6393__$2);
};
cljs.core.Fn = {};
cljs.core.IFn = {};
cljs.core._invoke = function cljs$core$_invoke() {
  var args6403 = [];
  var len__5181__auto___6406 = arguments.length;
  var i__5182__auto___6407 = 0;
  while (true) {
    if (i__5182__auto___6407 < len__5181__auto___6406) {
      args6403.push(arguments[i__5182__auto___6407]);
      var G__6408 = i__5182__auto___6407 + 1;
      i__5182__auto___6407 = G__6408;
      continue;
    } else {
    }
    break;
  }
  var G__6405 = args6403.length;
  switch(G__6405) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6403.length)].join(""));;
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__4778__auto__ = this$ == null ? null : this$;
    var m__4779__auto__ = cljs.core._invoke[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4779__auto__.call(null, this$);
    } else {
      var m__4779__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(this$) : m__4779__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__4778__auto__ = this$ == null ? null : this$;
    var m__4779__auto__ = cljs.core._invoke[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__4779__auto__.call(null, this$, a);
    } else {
      var m__4779__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, a) : m__4779__auto____$1.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__4778__auto__ = this$ == null ? null : this$;
    var m__4779__auto__ = cljs.core._invoke[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__4779__auto__.call(null, this$, a, b);
    } else {
      var m__4779__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__4779__auto____$1.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__4778__auto__ = this$ == null ? null : this$;
    var m__4779__auto__ = cljs.core._invoke[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__4779__auto__.call(null, this$, a, b, c);
    } else {
      var m__4779__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__4779__auto____$1.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__4778__auto__ = this$ == null ? null : this$;
    var m__4779__auto__ = cljs.core._invoke[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__4779__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__4779__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__4779__auto____$1.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__4778__auto__ = this$ == null ? null : this$;
    var m__4779__auto__ = cljs.core._invoke[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__4779__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__4779__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$6 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__4779__auto____$1.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__4778__auto__ = this$ == null ? null : this$;
    var m__4779__auto__ = cljs.core._invoke[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$7 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__4779__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__4779__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$7 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__4779__auto____$1.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__4778__auto__ = this$ == null ? null : this$;
    var m__4779__auto__ = cljs.core._invoke[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$8 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__4779__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__4779__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$8 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__4779__auto____$1.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__4778__auto__ = this$ == null ? null : this$;
    var m__4779__auto__ = cljs.core._invoke[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$9 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__4779__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__4779__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$9 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__4779__auto____$1.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__4778__auto__ = this$ == null ? null : this$;
    var m__4779__auto__ = cljs.core._invoke[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$10 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__4779__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__4779__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$10 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__4779__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__4778__auto__ = this$ == null ? null : this$;
    var m__4779__auto__ = cljs.core._invoke[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$11 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__4779__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__4779__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$11 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__4779__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__4778__auto__ = this$ == null ? null : this$;
    var m__4779__auto__ = cljs.core._invoke[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$12 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__4779__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__4779__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$12 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__4779__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__4778__auto__ = this$ == null ? null : this$;
    var m__4779__auto__ = cljs.core._invoke[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$13 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__4779__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__4779__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$13 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__4779__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__4778__auto__ = this$ == null ? null : this$;
    var m__4779__auto__ = cljs.core._invoke[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$14 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__4779__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__4779__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$14 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__4779__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__4778__auto__ = this$ == null ? null : this$;
    var m__4779__auto__ = cljs.core._invoke[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$15 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__4779__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__4779__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$15 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__4779__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__4778__auto__ = this$ == null ? null : this$;
    var m__4779__auto__ = cljs.core._invoke[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$16 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__4779__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__4779__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$16 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__4779__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__4778__auto__ = this$ == null ? null : this$;
    var m__4779__auto__ = cljs.core._invoke[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$17 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__4779__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__4779__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$17 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__4779__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__4778__auto__ = this$ == null ? null : this$;
    var m__4779__auto__ = cljs.core._invoke[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$18 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__4779__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__4779__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$18 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__4779__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__4778__auto__ = this$ == null ? null : this$;
    var m__4779__auto__ = cljs.core._invoke[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$19 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__4779__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__4779__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$19 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__4779__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__4778__auto__ = this$ == null ? null : this$;
    var m__4779__auto__ = cljs.core._invoke[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$20 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__4779__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__4779__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$20 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__4779__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__4778__auto__ = this$ == null ? null : this$;
    var m__4779__auto__ = cljs.core._invoke[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$21 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__4779__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__4779__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$21 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__4779__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__4778__auto__ = this$ == null ? null : this$;
    var m__4779__auto__ = cljs.core._invoke[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$22 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__4779__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__4779__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$22 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__4779__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = {};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4778__auto__ = value == null ? null : value;
    var m__4779__auto__ = cljs.core._clone[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__4779__auto__.call(null, value);
    } else {
      var m__4779__auto____$1 = cljs.core._clone["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(value) : m__4779__auto____$1.call(null, value);
      } else {
        throw cljs.core.missing_protocol("ICloneable.-clone", value);
      }
    }
  }
};
cljs.core.ICounted = {};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._count[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto__.call(null, coll);
    } else {
      var m__4779__auto____$1 = cljs.core._count["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ICounted.-count", coll);
      }
    }
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._empty[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto__.call(null, coll);
    } else {
      var m__4779__auto____$1 = cljs.core._empty["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
      }
    }
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._conj[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__4779__auto__.call(null, coll, o);
    } else {
      var m__4779__auto____$1 = cljs.core._conj["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, o) : m__4779__auto____$1.call(null, coll, o);
      } else {
        throw cljs.core.missing_protocol("ICollection.-conj", coll);
      }
    }
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function cljs$core$_nth() {
  var args6420 = [];
  var len__5181__auto___6423 = arguments.length;
  var i__5182__auto___6424 = 0;
  while (true) {
    if (i__5182__auto___6424 < len__5181__auto___6423) {
      args6420.push(arguments[i__5182__auto___6424]);
      var G__6425 = i__5182__auto___6424 + 1;
      i__5182__auto___6424 = G__6425;
      continue;
    } else {
    }
    break;
  }
  var G__6422 = args6420.length;
  switch(G__6422) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6420.length)].join(""));;
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._nth[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__4779__auto__.call(null, coll, n);
    } else {
      var m__4779__auto____$1 = cljs.core._nth["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, n) : m__4779__auto____$1.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._nth[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__4779__auto__.call(null, coll, n, not_found);
    } else {
      var m__4779__auto____$1 = cljs.core._nth["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__4779__auto____$1.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._first[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto__.call(null, coll);
    } else {
      var m__4779__auto____$1 = cljs.core._first["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-first", coll);
      }
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._rest[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto__.call(null, coll);
    } else {
      var m__4779__auto____$1 = cljs.core._rest["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-rest", coll);
      }
    }
  }
};
cljs.core.INext = {};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._next[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto__.call(null, coll);
    } else {
      var m__4779__auto____$1 = cljs.core._next["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("INext.-next", coll);
      }
    }
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function cljs$core$_lookup() {
  var args6435 = [];
  var len__5181__auto___6438 = arguments.length;
  var i__5182__auto___6439 = 0;
  while (true) {
    if (i__5182__auto___6439 < len__5181__auto___6438) {
      args6435.push(arguments[i__5182__auto___6439]);
      var G__6440 = i__5182__auto___6439 + 1;
      i__5182__auto___6439 = G__6440;
      continue;
    } else {
    }
    break;
  }
  var G__6437 = args6435.length;
  switch(G__6437) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6435.length)].join(""));;
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__4778__auto__ = o == null ? null : o;
    var m__4779__auto__ = cljs.core._lookup[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__4779__auto__.call(null, o, k);
    } else {
      var m__4779__auto____$1 = cljs.core._lookup["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2(o, k) : m__4779__auto____$1.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__4778__auto__ = o == null ? null : o;
    var m__4779__auto__ = cljs.core._lookup[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__4779__auto__.call(null, o, k, not_found);
    } else {
      var m__4779__auto____$1 = cljs.core._lookup["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__4779__auto____$1.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4779__auto__.call(null, coll, k);
    } else {
      var m__4779__auto____$1 = cljs.core._contains_key_QMARK_["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4779__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
      }
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._assoc[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__4779__auto__.call(null, coll, k, v);
    } else {
      var m__4779__auto____$1 = cljs.core._assoc["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__4779__auto____$1.call(null, coll, k, v);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
      }
    }
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._dissoc[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4779__auto__.call(null, coll, k);
    } else {
      var m__4779__auto____$1 = cljs.core._dissoc["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4779__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IMap.-dissoc", coll);
      }
    }
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._key[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto__.call(null, coll);
    } else {
      var m__4779__auto____$1 = cljs.core._key["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-key", coll);
      }
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._val[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto__.call(null, coll);
    } else {
      var m__4779__auto____$1 = cljs.core._val["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-val", coll);
      }
    }
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._disjoin[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__4779__auto__.call(null, coll, v);
    } else {
      var m__4779__auto____$1 = cljs.core._disjoin["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, v) : m__4779__auto____$1.call(null, coll, v);
      } else {
        throw cljs.core.missing_protocol("ISet.-disjoin", coll);
      }
    }
  }
};
cljs.core.IStack = {};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._peek[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto__.call(null, coll);
    } else {
      var m__4779__auto____$1 = cljs.core._peek["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-peek", coll);
      }
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._pop[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto__.call(null, coll);
    } else {
      var m__4779__auto____$1 = cljs.core._pop["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-pop", coll);
      }
    }
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._assoc_n[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__4779__auto__.call(null, coll, n, val);
    } else {
      var m__4779__auto____$1 = cljs.core._assoc_n["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__4779__auto____$1.call(null, coll, n, val);
      } else {
        throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
      }
    }
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4778__auto__ = o == null ? null : o;
    var m__4779__auto__ = cljs.core._deref[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4779__auto__.call(null, o);
    } else {
      var m__4779__auto____$1 = cljs.core._deref["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__4779__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IDeref.-deref", o);
      }
    }
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4778__auto__ = o == null ? null : o;
    var m__4779__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__4779__auto__.call(null, o, msec, timeout_val);
    } else {
      var m__4779__auto____$1 = cljs.core._deref_with_timeout["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__4779__auto____$1.call(null, o, msec, timeout_val);
      } else {
        throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
      }
    }
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4778__auto__ = o == null ? null : o;
    var m__4779__auto__ = cljs.core._meta[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4779__auto__.call(null, o);
    } else {
      var m__4779__auto____$1 = cljs.core._meta["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__4779__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IMeta.-meta", o);
      }
    }
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4778__auto__ = o == null ? null : o;
    var m__4779__auto__ = cljs.core._with_meta[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__4779__auto__.call(null, o, meta);
    } else {
      var m__4779__auto____$1 = cljs.core._with_meta["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2(o, meta) : m__4779__auto____$1.call(null, o, meta);
      } else {
        throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
      }
    }
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function cljs$core$_reduce() {
  var args6464 = [];
  var len__5181__auto___6467 = arguments.length;
  var i__5182__auto___6468 = 0;
  while (true) {
    if (i__5182__auto___6468 < len__5181__auto___6467) {
      args6464.push(arguments[i__5182__auto___6468]);
      var G__6469 = i__5182__auto___6468 + 1;
      i__5182__auto___6468 = G__6469;
      continue;
    } else {
    }
    break;
  }
  var G__6466 = args6464.length;
  switch(G__6466) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6464.length)].join(""));;
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._reduce[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__4779__auto__.call(null, coll, f);
    } else {
      var m__4779__auto____$1 = cljs.core._reduce["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, f) : m__4779__auto____$1.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._reduce[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__4779__auto__.call(null, coll, f, start);
    } else {
      var m__4779__auto____$1 = cljs.core._reduce["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__4779__auto____$1.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__4779__auto__.call(null, coll, f, init);
    } else {
      var m__4779__auto____$1 = cljs.core._kv_reduce["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__4779__auto____$1.call(null, coll, f, init);
      } else {
        throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
      }
    }
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4778__auto__ = o == null ? null : o;
    var m__4779__auto__ = cljs.core._equiv[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__4779__auto__.call(null, o, other);
    } else {
      var m__4779__auto____$1 = cljs.core._equiv["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2(o, other) : m__4779__auto____$1.call(null, o, other);
      } else {
        throw cljs.core.missing_protocol("IEquiv.-equiv", o);
      }
    }
  }
};
cljs.core.IHash = {};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4778__auto__ = o == null ? null : o;
    var m__4779__auto__ = cljs.core._hash[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4779__auto__.call(null, o);
    } else {
      var m__4779__auto____$1 = cljs.core._hash["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__4779__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IHash.-hash", o);
      }
    }
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4778__auto__ = o == null ? null : o;
    var m__4779__auto__ = cljs.core._seq[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4779__auto__.call(null, o);
    } else {
      var m__4779__auto____$1 = cljs.core._seq["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__4779__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("ISeqable.-seq", o);
      }
    }
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._rseq[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto__.call(null, coll);
    } else {
      var m__4779__auto____$1 = cljs.core._rseq["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IReversible.-rseq", coll);
      }
    }
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__4779__auto__.call(null, coll, ascending_QMARK_);
    } else {
      var m__4779__auto____$1 = cljs.core._sorted_seq["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__4779__auto____$1.call(null, coll, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
      }
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__4779__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      var m__4779__auto____$1 = cljs.core._sorted_seq_from["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__4779__auto____$1.call(null, coll, k, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
      }
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._entry_key[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__4779__auto__.call(null, coll, entry);
    } else {
      var m__4779__auto____$1 = cljs.core._entry_key["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__4779__auto____$1.call(null, coll, entry);
      } else {
        throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
      }
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._comparator[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto__.call(null, coll);
    } else {
      var m__4779__auto____$1 = cljs.core._comparator["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISorted.-comparator", coll);
      }
    }
  }
};
cljs.core.IWriter = {};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4778__auto__ = writer == null ? null : writer;
    var m__4779__auto__ = cljs.core._write[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__4779__auto__.call(null, writer, s);
    } else {
      var m__4779__auto____$1 = cljs.core._write["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2(writer, s) : m__4779__auto____$1.call(null, writer, s);
      } else {
        throw cljs.core.missing_protocol("IWriter.-write", writer);
      }
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4778__auto__ = writer == null ? null : writer;
    var m__4779__auto__ = cljs.core._flush[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__4779__auto__.call(null, writer);
    } else {
      var m__4779__auto____$1 = cljs.core._flush["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(writer) : m__4779__auto____$1.call(null, writer);
      } else {
        throw cljs.core.missing_protocol("IWriter.-flush", writer);
      }
    }
  }
};
cljs.core.IPrintWithWriter = {};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4778__auto__ = o == null ? null : o;
    var m__4779__auto__ = cljs.core._pr_writer[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__4779__auto__.call(null, o, writer, opts);
    } else {
      var m__4779__auto____$1 = cljs.core._pr_writer["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__4779__auto____$1.call(null, o, writer, opts);
      } else {
        throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
      }
    }
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(d) {
  if (!(d == null) && !(d.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4778__auto__ = d == null ? null : d;
    var m__4779__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(d) : m__4779__auto__.call(null, d);
    } else {
      var m__4779__auto____$1 = cljs.core._realized_QMARK_["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(d) : m__4779__auto____$1.call(null, d);
      } else {
        throw cljs.core.missing_protocol("IPending.-realized?", d);
      }
    }
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4778__auto__ = this$ == null ? null : this$;
    var m__4779__auto__ = cljs.core._notify_watches[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__4779__auto__.call(null, this$, oldval, newval);
    } else {
      var m__4779__auto____$1 = cljs.core._notify_watches["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__4779__auto____$1.call(null, this$, oldval, newval);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
      }
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4778__auto__ = this$ == null ? null : this$;
    var m__4779__auto__ = cljs.core._add_watch[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__4779__auto__.call(null, this$, key, f);
    } else {
      var m__4779__auto____$1 = cljs.core._add_watch["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__4779__auto____$1.call(null, this$, key, f);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
      }
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4778__auto__ = this$ == null ? null : this$;
    var m__4779__auto__ = cljs.core._remove_watch[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__4779__auto__.call(null, this$, key);
    } else {
      var m__4779__auto____$1 = cljs.core._remove_watch["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, key) : m__4779__auto____$1.call(null, this$, key);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
      }
    }
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._as_transient[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto__.call(null, coll);
    } else {
      var m__4779__auto____$1 = cljs.core._as_transient["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
      }
    }
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4778__auto__ = tcoll == null ? null : tcoll;
    var m__4779__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__4779__auto__.call(null, tcoll, val);
    } else {
      var m__4779__auto____$1 = cljs.core._conj_BANG_["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__4779__auto____$1.call(null, tcoll, val);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
      }
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4778__auto__ = tcoll == null ? null : tcoll;
    var m__4779__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4779__auto__.call(null, tcoll);
    } else {
      var m__4779__auto____$1 = cljs.core._persistent_BANG_["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4779__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
      }
    }
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4778__auto__ = tcoll == null ? null : tcoll;
    var m__4779__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__4779__auto__.call(null, tcoll, key, val);
    } else {
      var m__4779__auto____$1 = cljs.core._assoc_BANG_["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__4779__auto____$1.call(null, tcoll, key, val);
      } else {
        throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4778__auto__ = tcoll == null ? null : tcoll;
    var m__4779__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__4779__auto__.call(null, tcoll, key);
    } else {
      var m__4779__auto____$1 = cljs.core._dissoc_BANG_["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__4779__auto____$1.call(null, tcoll, key);
      } else {
        throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4778__auto__ = tcoll == null ? null : tcoll;
    var m__4779__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__4779__auto__.call(null, tcoll, n, val);
    } else {
      var m__4779__auto____$1 = cljs.core._assoc_n_BANG_["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__4779__auto____$1.call(null, tcoll, n, val);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
      }
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4778__auto__ = tcoll == null ? null : tcoll;
    var m__4779__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4779__auto__.call(null, tcoll);
    } else {
      var m__4779__auto____$1 = cljs.core._pop_BANG_["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4779__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
      }
    }
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4778__auto__ = tcoll == null ? null : tcoll;
    var m__4779__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__4779__auto__.call(null, tcoll, v);
    } else {
      var m__4779__auto____$1 = cljs.core._disjoin_BANG_["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__4779__auto____$1.call(null, tcoll, v);
      } else {
        throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
      }
    }
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4778__auto__ = x == null ? null : x;
    var m__4779__auto__ = cljs.core._compare[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__4779__auto__.call(null, x, y);
    } else {
      var m__4779__auto____$1 = cljs.core._compare["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2(x, y) : m__4779__auto____$1.call(null, x, y);
      } else {
        throw cljs.core.missing_protocol("IComparable.-compare", x);
      }
    }
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._drop_first[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto__.call(null, coll);
    } else {
      var m__4779__auto____$1 = cljs.core._drop_first["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
      }
    }
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._chunked_first[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto__.call(null, coll);
    } else {
      var m__4779__auto____$1 = cljs.core._chunked_first["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
      }
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto__.call(null, coll);
    } else {
      var m__4779__auto____$1 = cljs.core._chunked_rest["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
      }
    }
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._chunked_next[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto__.call(null, coll);
    } else {
      var m__4779__auto____$1 = cljs.core._chunked_next["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
      }
    }
  }
};
cljs.core.INamed = {};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4778__auto__ = x == null ? null : x;
    var m__4779__auto__ = cljs.core._name[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4779__auto__.call(null, x);
    } else {
      var m__4779__auto____$1 = cljs.core._name["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__4779__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-name", x);
      }
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4778__auto__ = x == null ? null : x;
    var m__4779__auto__ = cljs.core._namespace[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4779__auto__.call(null, x);
    } else {
      var m__4779__auto____$1 = cljs.core._namespace["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__4779__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-namespace", x);
      }
    }
  }
};
cljs.core.IAtom = {};
cljs.core.IReset = {};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4778__auto__ = o == null ? null : o;
    var m__4779__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4779__auto__.call(null, o, new_value);
    } else {
      var m__4779__auto____$1 = cljs.core._reset_BANG_["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4779__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IReset.-reset!", o);
      }
    }
  }
};
cljs.core.ISwap = {};
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_() {
  var args6525 = [];
  var len__5181__auto___6528 = arguments.length;
  var i__5182__auto___6529 = 0;
  while (true) {
    if (i__5182__auto___6529 < len__5181__auto___6528) {
      args6525.push(arguments[i__5182__auto___6529]);
      var G__6530 = i__5182__auto___6529 + 1;
      i__5182__auto___6529 = G__6530;
      continue;
    } else {
    }
    break;
  }
  var G__6527 = args6525.length;
  switch(G__6527) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6525.length)].join(""));;
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__4778__auto__ = o == null ? null : o;
    var m__4779__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__4779__auto__.call(null, o, f);
    } else {
      var m__4779__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2(o, f) : m__4779__auto____$1.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__4778__auto__ = o == null ? null : o;
    var m__4779__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__4779__auto__.call(null, o, f, a);
    } else {
      var m__4779__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__4779__auto____$1.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__4778__auto__ = o == null ? null : o;
    var m__4779__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__4779__auto__.call(null, o, f, a, b);
    } else {
      var m__4779__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__4779__auto____$1.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__4778__auto__ = o == null ? null : o;
    var m__4779__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__4779__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__4779__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__4779__auto____$1.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = {};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4778__auto__ = o == null ? null : o;
    var m__4779__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4779__auto__.call(null, o, new_value);
    } else {
      var m__4779__auto____$1 = cljs.core._vreset_BANG_["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4779__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
      }
    }
  }
};
cljs.core.IIterable = {};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4778__auto__ = coll == null ? null : coll;
    var m__4779__auto__ = cljs.core._iterator[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto__.call(null, coll);
    } else {
      var m__4779__auto____$1 = cljs.core._iterator["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4779__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IIterable.-iterator", coll);
      }
    }
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return [cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__6536 = i + 2;
        var G__6537 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__6536;
        h1 = G__6537;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__6540 = i + 1;
          var G__6541 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__6540;
          hash = G__6541;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || o.cljs$core$IHash$ ? true : false : false) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4130__auto__ = cljs.core.not(a.ns);
      if (and__4130__auto__) {
        return b.ns;
      } else {
        return and__4130__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__6554 = a.ns;
            var G__6555 = b.ns;
            return goog.array.defaultCompare(G__6554, G__6555);
          }();
          if (0 === nsc) {
            var G__6556 = a.name;
            var G__6557 = b.name;
            return goog.array.defaultCompare(G__6556, G__6557);
          } else {
            return nsc;
          }
        }
      } else {
        var G__6558 = a.name;
        var G__6559 = b.name;
        return goog.array.defaultCompare(G__6558, G__6559);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__6561 = null;
  var G__6561__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
  };
  var G__6561__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
  };
  G__6561 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6561__2.call(this, self__, coll);
      case 3:
        return G__6561__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6561.cljs$core$IFn$_invoke$arity$2 = G__6561__2;
  G__6561.cljs$core$IFn$_invoke$arity$3 = G__6561__3;
  return G__6561;
}();
cljs.core.Symbol.prototype.apply = function(self__, args6560) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args6560)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4558__auto__ = self__._hash;
  if (!(h__4558__auto__ == null)) {
    return h__4558__auto__;
  } else {
    var h__4558__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4558__auto____$1;
    return h__4558__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol() {
  var args6562 = [];
  var len__5181__auto___6565 = arguments.length;
  var i__5182__auto___6566 = 0;
  while (true) {
    if (i__5182__auto___6566 < len__5181__auto___6565) {
      args6562.push(arguments[i__5182__auto___6566]);
      var G__6567 = i__5182__auto___6566 + 1;
      i__5182__auto___6566 = G__6567;
      continue;
    } else {
    }
    break;
  }
  var G__6564 = args6562.length;
  switch(G__6564) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6562.length)].join(""));;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    var idx = name.indexOf("/");
    if (idx === -1) {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    } else {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
    }
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2523137;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    var G__6570 = this$__$1.sym;
    var G__6571 = other.sym;
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(G__6570, G__6571) : cljs.core._EQ_.call(null, G__6570, G__6571);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.call = function() {
  var G__6616 = null;
  var G__6616__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
  };
  var G__6616__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
  };
  var G__6616__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
  };
  var G__6616__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
  };
  var G__6616__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
  };
  var G__6616__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
  };
  var G__6616__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
  };
  var G__6616__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
  };
  var G__6616__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
  };
  var G__6616__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__6616__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__6616__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__6616__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__6616__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__6616__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__6616__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__6616__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__6616__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__6616__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__6616__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__6616__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__6616__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6572 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    var G__6573 = a;
    var G__6574 = b;
    var G__6575 = c;
    var G__6576 = d;
    var G__6577 = e;
    var G__6578 = f;
    var G__6579 = g;
    var G__6580 = h;
    var G__6581 = i;
    var G__6582 = j;
    var G__6583 = k;
    var G__6584 = l;
    var G__6585 = m;
    var G__6586 = n;
    var G__6587 = o;
    var G__6588 = p;
    var G__6589 = q;
    var G__6590 = r;
    var G__6591 = s;
    var G__6592 = t;
    var G__6593 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6572, G__6573, G__6574, G__6575, G__6576, G__6577, G__6578, G__6579, G__6580, G__6581, G__6582, G__6583, G__6584, G__6585, G__6586, G__6587, G__6588, G__6589, G__6590, G__6591, G__6592, G__6593) : cljs.core.apply.call(null, G__6572, G__6573, G__6574, G__6575, G__6576, G__6577, G__6578, G__6579, G__6580, G__6581, G__6582, G__6583, G__6584, G__6585, G__6586, G__6587, G__6588, G__6589, G__6590, 
    G__6591, G__6592, G__6593);
  };
  G__6616 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__6616__1.call(this, self__);
      case 2:
        return G__6616__2.call(this, self__, a);
      case 3:
        return G__6616__3.call(this, self__, a, b);
      case 4:
        return G__6616__4.call(this, self__, a, b, c);
      case 5:
        return G__6616__5.call(this, self__, a, b, c, d);
      case 6:
        return G__6616__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__6616__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__6616__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__6616__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__6616__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__6616__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__6616__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__6616__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__6616__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__6616__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__6616__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__6616__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__6616__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__6616__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__6616__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__6616__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__6616__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6616.cljs$core$IFn$_invoke$arity$1 = G__6616__1;
  G__6616.cljs$core$IFn$_invoke$arity$2 = G__6616__2;
  G__6616.cljs$core$IFn$_invoke$arity$3 = G__6616__3;
  G__6616.cljs$core$IFn$_invoke$arity$4 = G__6616__4;
  G__6616.cljs$core$IFn$_invoke$arity$5 = G__6616__5;
  G__6616.cljs$core$IFn$_invoke$arity$6 = G__6616__6;
  G__6616.cljs$core$IFn$_invoke$arity$7 = G__6616__7;
  G__6616.cljs$core$IFn$_invoke$arity$8 = G__6616__8;
  G__6616.cljs$core$IFn$_invoke$arity$9 = G__6616__9;
  G__6616.cljs$core$IFn$_invoke$arity$10 = G__6616__10;
  G__6616.cljs$core$IFn$_invoke$arity$11 = G__6616__11;
  G__6616.cljs$core$IFn$_invoke$arity$12 = G__6616__12;
  G__6616.cljs$core$IFn$_invoke$arity$13 = G__6616__13;
  G__6616.cljs$core$IFn$_invoke$arity$14 = G__6616__14;
  G__6616.cljs$core$IFn$_invoke$arity$15 = G__6616__15;
  G__6616.cljs$core$IFn$_invoke$arity$16 = G__6616__16;
  G__6616.cljs$core$IFn$_invoke$arity$17 = G__6616__17;
  G__6616.cljs$core$IFn$_invoke$arity$18 = G__6616__18;
  G__6616.cljs$core$IFn$_invoke$arity$19 = G__6616__19;
  G__6616.cljs$core$IFn$_invoke$arity$20 = G__6616__20;
  G__6616.cljs$core$IFn$_invoke$arity$21 = G__6616__21;
  G__6616.cljs$core$IFn$_invoke$arity$22 = G__6616__22;
  return G__6616;
}();
cljs.core.Var.prototype.apply = function(self__, args6569) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args6569)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__6594 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  var G__6595 = a;
  var G__6596 = b;
  var G__6597 = c;
  var G__6598 = d;
  var G__6599 = e;
  var G__6600 = f;
  var G__6601 = g;
  var G__6602 = h;
  var G__6603 = i;
  var G__6604 = j;
  var G__6605 = k;
  var G__6606 = l;
  var G__6607 = m;
  var G__6608 = n;
  var G__6609 = o;
  var G__6610 = p;
  var G__6611 = q;
  var G__6612 = r;
  var G__6613 = s;
  var G__6614 = t;
  var G__6615 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6594, G__6595, G__6596, G__6597, G__6598, G__6599, G__6600, G__6601, G__6602, G__6603, G__6604, G__6605, G__6606, G__6607, G__6608, G__6609, G__6610, G__6611, G__6612, G__6613, G__6614, G__6615) : cljs.core.apply.call(null, G__6594, G__6595, G__6596, G__6597, G__6598, G__6599, G__6600, G__6601, G__6602, G__6603, G__6604, G__6605, G__6606, G__6607, G__6608, G__6609, G__6610, G__6611, G__6612, 
  G__6613, G__6614, G__6615);
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || coll.cljs$core$INext$ ? true : false : false) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_() {
  var args6629 = [];
  var len__5181__auto___6635 = arguments.length;
  var i__5182__auto___6636 = 0;
  while (true) {
    if (i__5182__auto___6636 < len__5181__auto___6635) {
      args6629.push(arguments[i__5182__auto___6636]);
      var G__6637 = i__5182__auto___6636 + 1;
      i__5182__auto___6636 = G__6637;
      continue;
    } else {
    }
    break;
  }
  var G__6634 = args6629.length;
  switch(G__6634) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args6629.slice(2), 0);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__6639 = y;
        var G__6640 = cljs.core.first(more);
        var G__6641 = cljs.core.next(more);
        x = G__6639;
        y = G__6640;
        more = G__6641;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq6630) {
  var G__6631 = cljs.core.first(seq6630);
  var seq6630__$1 = cljs.core.next(seq6630);
  var G__6632 = cljs.core.first(seq6630__$1);
  var seq6630__$2 = cljs.core.next(seq6630__$1);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(G__6631, G__6632, seq6630__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(self__.iter) : cljs.core.es6_iterator_seq.call(null, self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__6642 = n + 1;
      var G__6643 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__6644 = cljs.core.next(coll__$1);
      n = G__6642;
      hash_code = G__6643;
      coll__$1 = G__6644;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__6645 = n + 1;
      var G__6646 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__6647 = cljs.core.next(coll__$1);
      n = G__6645;
      hash_code = G__6646;
      coll__$1 = G__6647;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = true;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    var G__6648 = this$__$1.valueOf();
    var G__6649 = other.valueOf();
    return goog.array.defaultCompare(G__6648, G__6649);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.Fn["function"] = true;
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce() {
  var args6650 = [];
  var len__5181__auto___6659 = arguments.length;
  var i__5182__auto___6660 = 0;
  while (true) {
    if (i__5182__auto___6660 < len__5181__auto___6659) {
      args6650.push(arguments[i__5182__auto___6660]);
      var G__6661 = i__5182__auto___6660 + 1;
      i__5182__auto___6660 = G__6661;
      continue;
    } else {
    }
    break;
  }
  var G__6652 = args6650.length;
  switch(G__6652) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6650.length)].join(""));;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__6653 = val;
          var G__6654 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6653, G__6654) : f.call(null, G__6653, G__6654);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__6663 = nval;
          var G__6664 = n + 1;
          val = G__6663;
          n = G__6664;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__6655 = val__$1;
        var G__6656 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6655, G__6656) : f.call(null, G__6655, G__6656);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__6665 = nval;
        var G__6666 = n + 1;
        val__$1 = G__6665;
        n = G__6666;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__6657 = val__$1;
        var G__6658 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6657, G__6658) : f.call(null, G__6657, G__6658);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__6667 = nval;
        var G__6668 = n + 1;
        val__$1 = G__6667;
        n = G__6668;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce() {
  var args6669 = [];
  var len__5181__auto___6678 = arguments.length;
  var i__5182__auto___6679 = 0;
  while (true) {
    if (i__5182__auto___6679 < len__5181__auto___6678) {
      args6669.push(arguments[i__5182__auto___6679]);
      var G__6680 = i__5182__auto___6679 + 1;
      i__5182__auto___6679 = G__6680;
      continue;
    } else {
    }
    break;
  }
  var G__6671 = args6669.length;
  switch(G__6671) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6669.length)].join(""));;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__6672 = val;
          var G__6673 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6672, G__6673) : f.call(null, G__6672, G__6673);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__6682 = nval;
          var G__6683 = n + 1;
          val = G__6682;
          n = G__6683;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__6674 = val__$1;
        var G__6675 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6674, G__6675) : f.call(null, G__6674, G__6675);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__6684 = nval;
        var G__6685 = n + 1;
        val__$1 = G__6684;
        n = G__6685;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__6676 = val__$1;
        var G__6677 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6676, G__6677) : f.call(null, G__6676, G__6677);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__6686 = nval;
        var G__6687 = n + 1;
        val__$1 = G__6686;
        n = G__6687;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__4454__auto__ = 0;
  var y__4455__auto__ = self__.arr.length - self__.i;
  return x__4454__auto__ > y__4455__auto__ ? x__4454__auto__ : y__4455__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.prim_seq = function cljs$core$prim_seq() {
  var args6692 = [];
  var len__5181__auto___6695 = arguments.length;
  var i__5182__auto___6696 = 0;
  while (true) {
    if (i__5182__auto___6696 < len__5181__auto___6695) {
      args6692.push(arguments[i__5182__auto___6696]);
      var G__6697 = i__5182__auto___6696 + 1;
      i__5182__auto___6696 = G__6697;
      continue;
    } else {
    }
    break;
  }
  var G__6694 = args6692.length;
  switch(G__6694) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6692.length)].join(""));;
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq() {
  var args6699 = [];
  var len__5181__auto___6702 = arguments.length;
  var i__5182__auto___6703 = 0;
  while (true) {
    if (i__5182__auto___6703 < len__5181__auto___6702) {
      args6699.push(arguments[i__5182__auto___6703]);
      var G__6704 = i__5182__auto___6703 + 1;
      i__5182__auto___6703 = G__6704;
      continue;
    } else {
    }
    break;
  }
  var G__6701 = args6699.length;
  switch(G__6701) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6699.length)].join(""));;
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__6706 = cljs.core.List.EMPTY;
  var G__6707 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__6706, G__6707) : cljs.core.with_meta.call(null, G__6706, G__6707);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1) : cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1) : cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__6708 = sn;
      s = G__6708;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function cljs$core$conj() {
  var args6709 = [];
  var len__5181__auto___6715 = arguments.length;
  var i__5182__auto___6716 = 0;
  while (true) {
    if (i__5182__auto___6716 < len__5181__auto___6715) {
      args6709.push(arguments[i__5182__auto___6716]);
      var G__6717 = i__5182__auto___6716 + 1;
      i__5182__auto___6716 = G__6717;
      continue;
    } else {
    }
    break;
  }
  var G__6714 = args6709.length;
  switch(G__6714) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args6709.slice(2), 0);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return cljs.core._conj(cljs.core.List.EMPTY, x);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__6719 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__6720 = cljs.core.first(xs);
      var G__6721 = cljs.core.next(xs);
      coll = G__6719;
      x = G__6720;
      xs = G__6721;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq6710) {
  var G__6711 = cljs.core.first(seq6710);
  var seq6710__$1 = cljs.core.next(seq6710);
  var G__6712 = cljs.core.first(seq6710__$1);
  var seq6710__$2 = cljs.core.next(seq6710__$1);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__6711, G__6712, seq6710__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__6722 = cljs.core.next(s);
      var G__6723 = acc + 1;
      s = G__6722;
      acc = G__6723;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || coll.cljs$core$ICounted$ ? true : false : false) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth() {
  var args6728 = [];
  var len__5181__auto___6731 = arguments.length;
  var i__5182__auto___6732 = 0;
  while (true) {
    if (i__5182__auto___6732 < len__5181__auto___6731) {
      args6728.push(arguments[i__5182__auto___6732]);
      var G__6733 = i__5182__auto___6732 + 1;
      i__5182__auto___6732 = G__6733;
      continue;
    } else {
    }
    break;
  }
  var G__6730 = args6728.length;
  switch(G__6730) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6728.length)].join(""));;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__6735 = cljs.core.next(coll);
            var G__6736 = n - 1;
            coll = G__6735;
            n = G__6736;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__6737 = cljs.core.next(coll);
            var G__6738 = n - 1;
            var G__6739 = not_found;
            coll = G__6737;
            n = G__6738;
            not_found = G__6739;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth() {
  var args6740 = [];
  var len__5181__auto___6747 = arguments.length;
  var i__5182__auto___6748 = 0;
  while (true) {
    if (i__5182__auto___6748 < len__5181__auto___6747) {
      args6740.push(arguments[i__5182__auto___6748]);
      var G__6749 = i__5182__auto___6748 + 1;
      i__5182__auto___6748 = G__6749;
      continue;
    } else {
    }
    break;
  }
  var G__6742 = args6740.length;
  switch(G__6742) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6740.length)].join(""));;
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return null;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return not_found;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__6751 = n__$1 - 1;
      var G__6752 = cljs.core.rest(xs);
      n__$1 = G__6751;
      xs = G__6752;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get() {
  var args6753 = [];
  var len__5181__auto___6758 = arguments.length;
  var i__5182__auto___6759 = 0;
  while (true) {
    if (i__5182__auto___6759 < len__5181__auto___6758) {
      args6753.push(arguments[i__5182__auto___6759]);
      var G__6760 = i__5182__auto___6759 + 1;
      i__5182__auto___6759 = G__6760;
      continue;
    } else {
    }
    break;
  }
  var G__6755 = args6753.length;
  switch(G__6755) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6753.length)].join(""));;
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k | 0];
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc() {
  var args6762 = [];
  var len__5181__auto___6769 = arguments.length;
  var i__5182__auto___6770 = 0;
  while (true) {
    if (i__5182__auto___6770 < len__5181__auto___6769) {
      args6762.push(arguments[i__5182__auto___6770]);
      var G__6771 = i__5182__auto___6770 + 1;
      i__5182__auto___6770 = G__6771;
      continue;
    } else {
    }
    break;
  }
  var G__6768 = args6762.length;
  switch(G__6768) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args6762.slice(3), 0);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5200__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentHashMap.fromArrays([k], [v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__6773 = ret;
      var G__6774 = cljs.core.first(kvs);
      var G__6775 = cljs.core.second(kvs);
      var G__6776 = cljs.core.nnext(kvs);
      coll = G__6773;
      k = G__6774;
      v = G__6775;
      kvs = G__6776;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq6763) {
  var G__6764 = cljs.core.first(seq6763);
  var seq6763__$1 = cljs.core.next(seq6763);
  var G__6765 = cljs.core.first(seq6763__$1);
  var seq6763__$2 = cljs.core.next(seq6763__$1);
  var G__6766 = cljs.core.first(seq6763__$2);
  var seq6763__$3 = cljs.core.next(seq6763__$2);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__6764, G__6765, G__6766, seq6763__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc() {
  var args6777 = [];
  var len__5181__auto___6783 = arguments.length;
  var i__5182__auto___6784 = 0;
  while (true) {
    if (i__5182__auto___6784 < len__5181__auto___6783) {
      args6777.push(arguments[i__5182__auto___6784]);
      var G__6785 = i__5182__auto___6784 + 1;
      i__5182__auto___6784 = G__6785;
      continue;
    } else {
    }
    break;
  }
  var G__6782 = args6777.length;
  switch(G__6782) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args6777.slice(2), 0);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__6787 = ret;
        var G__6788 = cljs.core.first(ks);
        var G__6789 = cljs.core.next(ks);
        coll = G__6787;
        k = G__6788;
        ks = G__6789;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq6778) {
  var G__6779 = cljs.core.first(seq6778);
  var seq6778__$1 = cljs.core.next(seq6778);
  var G__6780 = cljs.core.first(seq6778__$1);
  var seq6778__$2 = cljs.core.next(seq6778__$1);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__6779, G__6780, seq6778__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__4142__auto__ = goog.isFunction(f);
  if (or__4142__auto__) {
    return or__4142__auto__;
  } else {
    if (!(f == null)) {
      if (false || f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.call = function() {
  var G__6795 = null;
  var G__6795__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__6795__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
  };
  var G__6795__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
  };
  var G__6795__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
  };
  var G__6795__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
  };
  var G__6795__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
  };
  var G__6795__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__6795__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__6795__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__6795__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__6795__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__6795__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__6795__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__6795__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__6795__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__6795__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__6795__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__6795__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__6795__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__6795__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__6795__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__6795__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__6795 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__6795__1.call(this, self__);
      case 2:
        return G__6795__2.call(this, self__, a);
      case 3:
        return G__6795__3.call(this, self__, a, b);
      case 4:
        return G__6795__4.call(this, self__, a, b, c);
      case 5:
        return G__6795__5.call(this, self__, a, b, c, d);
      case 6:
        return G__6795__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__6795__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__6795__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__6795__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__6795__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__6795__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__6795__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__6795__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__6795__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__6795__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__6795__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__6795__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__6795__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__6795__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__6795__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__6795__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__6795__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6795.cljs$core$IFn$_invoke$arity$1 = G__6795__1;
  G__6795.cljs$core$IFn$_invoke$arity$2 = G__6795__2;
  G__6795.cljs$core$IFn$_invoke$arity$3 = G__6795__3;
  G__6795.cljs$core$IFn$_invoke$arity$4 = G__6795__4;
  G__6795.cljs$core$IFn$_invoke$arity$5 = G__6795__5;
  G__6795.cljs$core$IFn$_invoke$arity$6 = G__6795__6;
  G__6795.cljs$core$IFn$_invoke$arity$7 = G__6795__7;
  G__6795.cljs$core$IFn$_invoke$arity$8 = G__6795__8;
  G__6795.cljs$core$IFn$_invoke$arity$9 = G__6795__9;
  G__6795.cljs$core$IFn$_invoke$arity$10 = G__6795__10;
  G__6795.cljs$core$IFn$_invoke$arity$11 = G__6795__11;
  G__6795.cljs$core$IFn$_invoke$arity$12 = G__6795__12;
  G__6795.cljs$core$IFn$_invoke$arity$13 = G__6795__13;
  G__6795.cljs$core$IFn$_invoke$arity$14 = G__6795__14;
  G__6795.cljs$core$IFn$_invoke$arity$15 = G__6795__15;
  G__6795.cljs$core$IFn$_invoke$arity$16 = G__6795__16;
  G__6795.cljs$core$IFn$_invoke$arity$17 = G__6795__17;
  G__6795.cljs$core$IFn$_invoke$arity$18 = G__6795__18;
  G__6795.cljs$core$IFn$_invoke$arity$19 = G__6795__19;
  G__6795.cljs$core$IFn$_invoke$arity$20 = G__6795__20;
  G__6795.cljs$core$IFn$_invoke$arity$21 = G__6795__21;
  G__6795.cljs$core$IFn$_invoke$arity$22 = G__6795__22;
  return G__6795;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args6794) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args6794)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (goog.isFunction(o)) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__4130__auto__ = !(o == null);
    if (and__4130__auto__) {
      if (!(o == null)) {
        if (o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$) {
          return true;
        } else {
          if (!o.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
      }
    } else {
      return and__4130__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj() {
  var args6800 = [];
  var len__5181__auto___6806 = arguments.length;
  var i__5182__auto___6807 = 0;
  while (true) {
    if (i__5182__auto___6807 < len__5181__auto___6806) {
      args6800.push(arguments[i__5182__auto___6807]);
      var G__6808 = i__5182__auto___6807 + 1;
      i__5182__auto___6807 = G__6808;
      continue;
    } else {
    }
    break;
  }
  var G__6805 = args6800.length;
  switch(G__6805) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args6800.slice(2), 0);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__6810 = ret;
        var G__6811 = cljs.core.first(ks);
        var G__6812 = cljs.core.next(ks);
        coll = G__6810;
        k = G__6811;
        ks = G__6812;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq6801) {
  var G__6802 = cljs.core.first(seq6801);
  var seq6801__$1 = cljs.core.next(seq6801);
  var G__6803 = cljs.core.first(seq6801__$1);
  var seq6801__$2 = cljs.core.next(seq6801__$1);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(G__6802, G__6803, seq6801__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj() {
  var args6833 = [];
  var len__5181__auto___6839 = arguments.length;
  var i__5182__auto___6840 = 0;
  while (true) {
    if (i__5182__auto___6840 < len__5181__auto___6839) {
      args6833.push(arguments[i__5182__auto___6840]);
      var G__6841 = i__5182__auto___6840 + 1;
      i__5182__auto___6840 = G__6841;
      continue;
    } else {
    }
    break;
  }
  var G__6836 = args6833.length;
  switch(G__6836) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args6833.slice(0), 0);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__5200__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals) : cljs.core.apply.call(null, goog.object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq6834) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq6834));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__6845_6847 = obj;
  var G__6846_6848 = function(G__6845_6847, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__6845_6847, keys);
  goog.object.forEach(G__6845_6847, G__6846_6848);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__6849 = i__$1 + 1;
      var G__6850 = j__$1 + 1;
      var G__6851 = len__$1 - 1;
      i__$1 = G__6849;
      j__$1 = G__6850;
      len__$1 = G__6851;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__6852 = i__$1 - 1;
      var G__6853 = j__$1 - 1;
      var G__6854 = len__$1 - 1;
      i__$1 = G__6852;
      j__$1 = G__6853;
      len__$1 = G__6854;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  if (!(s == null)) {
    if (s.cljs$lang$protocol_mask$partition0$ & 8388608 || s.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!s.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__4142__auto__ = cljs.core.fn_QMARK_(f);
  if (or__4142__auto__) {
    return or__4142__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_() {
  var args6865 = [];
  var len__5181__auto___6871 = arguments.length;
  var i__5182__auto___6872 = 0;
  while (true) {
    if (i__5182__auto___6872 < len__5181__auto___6871) {
      args6865.push(arguments[i__5182__auto___6872]);
      var G__6873 = i__5182__auto___6872 + 1;
      i__5182__auto___6872 = G__6873;
      continue;
    } else {
    }
    break;
  }
  var G__6870 = args6865.length;
  switch(G__6870) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args6865.slice(2), 0);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__6875 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__6876 = etc;
          s = G__6875;
          xs = G__6876;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq6866) {
  var G__6867 = cljs.core.first(seq6866);
  var seq6866__$1 = cljs.core.next(seq6866);
  var G__6868 = cljs.core.first(seq6866__$1);
  var seq6866__$2 = cljs.core.next(seq6866__$1);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__6867, G__6868, seq6866__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return goog.array.defaultCompare(x, y);
          } else {
            throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              return goog.array.defaultCompare(x, y);
            } else {
              throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed() {
  var args6879 = [];
  var len__5181__auto___6882 = arguments.length;
  var i__5182__auto___6883 = 0;
  while (true) {
    if (i__5182__auto___6883 < len__5181__auto___6882) {
      args6879.push(arguments[i__5182__auto___6883]);
      var G__6884 = i__5182__auto___6883 + 1;
      i__5182__auto___6883 = G__6884;
      continue;
    } else {
    }
    break;
  }
  var G__6881 = args6879.length;
  switch(G__6881) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6879.length)].join(""));;
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__6886 = xs;
      var G__6887 = ys;
      var G__6888 = len;
      var G__6889 = n + 1;
      xs = G__6886;
      ys = G__6887;
      len = G__6888;
      n = G__6889;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort() {
  var args6890 = [];
  var len__5181__auto___6895 = arguments.length;
  var i__5182__auto___6896 = 0;
  while (true) {
    if (i__5182__auto___6896 < len__5181__auto___6895) {
      args6890.push(arguments[i__5182__auto___6896]);
      var G__6897 = i__5182__auto___6896 + 1;
      i__5182__auto___6896 = G__6897;
      continue;
    } else {
    }
    break;
  }
  var G__6892 = args6890.length;
  switch(G__6892) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6890.length)].join(""));;
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
    var G__6893_6899 = a;
    var G__6894_6900 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__6893_6899, G__6894_6900);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by() {
  var args6901 = [];
  var len__5181__auto___6904 = arguments.length;
  var i__5182__auto___6905 = 0;
  while (true) {
    if (i__5182__auto___6905 < len__5181__auto___6904) {
      args6901.push(arguments[i__5182__auto___6905]);
      var G__6906 = i__5182__auto___6905 + 1;
      i__5182__auto___6905 = G__6906;
      continue;
    } else {
    }
    break;
  }
  var G__6903 = args6901.length;
  switch(G__6903) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6901.length)].join(""));;
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    return cljs.core.fn__GT_comparator(comp).call(null, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x), keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y));
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce() {
  var args6908 = [];
  var len__5181__auto___6916 = arguments.length;
  var i__5182__auto___6917 = 0;
  while (true) {
    if (i__5182__auto___6917 < len__5181__auto___6916) {
      args6908.push(arguments[i__5182__auto___6917]);
      var G__6918 = i__5182__auto___6917 + 1;
      i__5182__auto___6917 = G__6918;
      continue;
    } else {
    }
    break;
  }
  var G__6910 = args6908.length;
  switch(G__6910) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6908.length)].join(""));;
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4423__auto__ = cljs.core.seq(coll);
  if (temp__4423__auto__) {
    var s = temp__4423__auto__;
    var G__6911 = f;
    var G__6912 = cljs.core.first(s);
    var G__6913 = cljs.core.next(s);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__6911, G__6912, G__6913) : cljs.core.reduce.call(null, G__6911, G__6912, G__6913);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__6914 = val__$1;
        var G__6915 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6914, G__6915) : f.call(null, G__6914, G__6915);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__6920 = nval;
        var G__6921 = cljs.core.next(coll__$1);
        val__$1 = G__6920;
        coll__$1 = G__6921;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.vec.call(null, a);
};
cljs.core.reduce = function cljs$core$reduce() {
  var args6922 = [];
  var len__5181__auto___6927 = arguments.length;
  var i__5182__auto___6928 = 0;
  while (true) {
    if (i__5182__auto___6928 < len__5181__auto___6927) {
      args6922.push(arguments[i__5182__auto___6928]);
      var G__6929 = i__5182__auto___6928 + 1;
      i__5182__auto___6928 = G__6929;
      continue;
    } else {
    }
    break;
  }
  var G__6924 = args6922.length;
  switch(G__6924) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6922.length)].join(""));;
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing() {
  var args6931 = [];
  var len__5181__auto___6934 = arguments.length;
  var i__5182__auto___6935 = 0;
  while (true) {
    if (i__5182__auto___6935 < len__5181__auto___6934) {
      args6931.push(arguments[i__5182__auto___6935]);
      var G__6936 = i__5182__auto___6935 + 1;
      i__5182__auto___6935 = G__6936;
      continue;
    } else {
    }
    break;
  }
  var G__6933 = args6931.length;
  switch(G__6933) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6931.length)].join(""));;
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__6938 = null;
    var G__6938__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__6938__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__6938__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__6938 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__6938__0.call(this);
        case 1:
          return G__6938__1.call(this, x);
        case 2:
          return G__6938__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__6938.cljs$core$IFn$_invoke$arity$0 = G__6938__0;
    G__6938.cljs$core$IFn$_invoke$arity$1 = G__6938__1;
    G__6938.cljs$core$IFn$_invoke$arity$2 = G__6938__2;
    return G__6938;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce() {
  var args6939 = [];
  var len__5181__auto___6942 = arguments.length;
  var i__5182__auto___6943 = 0;
  while (true) {
    if (i__5182__auto___6943 < len__5181__auto___6942) {
      args6939.push(arguments[i__5182__auto___6943]);
      var G__6944 = i__5182__auto___6943 + 1;
      i__5182__auto___6943 = G__6944;
      continue;
    } else {
    }
    break;
  }
  var G__6941 = args6939.length;
  switch(G__6941) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6939.length)].join(""));;
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_() {
  var args6946 = [];
  var len__5181__auto___6952 = arguments.length;
  var i__5182__auto___6953 = 0;
  while (true) {
    if (i__5182__auto___6953 < len__5181__auto___6952) {
      args6946.push(arguments[i__5182__auto___6953]);
      var G__6954 = i__5182__auto___6953 + 1;
      i__5182__auto___6953 = G__6954;
      continue;
    } else {
    }
    break;
  }
  var G__6951 = args6946.length;
  switch(G__6951) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args6946.slice(2), 0);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq6947) {
  var G__6948 = cljs.core.first(seq6947);
  var seq6947__$1 = cljs.core.next(seq6947);
  var G__6949 = cljs.core.first(seq6947__$1);
  var seq6947__$2 = cljs.core.next(seq6947__$1);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__6948, G__6949, seq6947__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_() {
  var args6956 = [];
  var len__5181__auto___6962 = arguments.length;
  var i__5182__auto___6963 = 0;
  while (true) {
    if (i__5182__auto___6963 < len__5181__auto___6962) {
      args6956.push(arguments[i__5182__auto___6963]);
      var G__6964 = i__5182__auto___6963 + 1;
      i__5182__auto___6963 = G__6964;
      continue;
    } else {
    }
    break;
  }
  var G__6961 = args6956.length;
  switch(G__6961) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args6956.slice(2), 0);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq6957) {
  var G__6958 = cljs.core.first(seq6957);
  var seq6957__$1 = cljs.core.next(seq6957);
  var G__6959 = cljs.core.first(seq6957__$1);
  var seq6957__$2 = cljs.core.next(seq6957__$1);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(G__6958, G__6959, seq6957__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_() {
  var args6966 = [];
  var len__5181__auto___6972 = arguments.length;
  var i__5182__auto___6973 = 0;
  while (true) {
    if (i__5182__auto___6973 < len__5181__auto___6972) {
      args6966.push(arguments[i__5182__auto___6973]);
      var G__6974 = i__5182__auto___6973 + 1;
      i__5182__auto___6973 = G__6974;
      continue;
    } else {
    }
    break;
  }
  var G__6971 = args6966.length;
  switch(G__6971) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args6966.slice(2), 0);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq6967) {
  var G__6968 = cljs.core.first(seq6967);
  var seq6967__$1 = cljs.core.next(seq6967);
  var G__6969 = cljs.core.first(seq6967__$1);
  var seq6967__$2 = cljs.core.next(seq6967__$1);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__6968, G__6969, seq6967__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_() {
  var args6976 = [];
  var len__5181__auto___6982 = arguments.length;
  var i__5182__auto___6983 = 0;
  while (true) {
    if (i__5182__auto___6983 < len__5181__auto___6982) {
      args6976.push(arguments[i__5182__auto___6983]);
      var G__6984 = i__5182__auto___6983 + 1;
      i__5182__auto___6983 = G__6984;
      continue;
    } else {
    }
    break;
  }
  var G__6981 = args6976.length;
  switch(G__6981) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args6976.slice(2), 0);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq6977) {
  var G__6978 = cljs.core.first(seq6977);
  var seq6977__$1 = cljs.core.next(seq6977);
  var G__6979 = cljs.core.first(seq6977__$1);
  var seq6977__$2 = cljs.core.next(seq6977__$1);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__6978, G__6979, seq6977__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_() {
  var args6986 = [];
  var len__5181__auto___6992 = arguments.length;
  var i__5182__auto___6993 = 0;
  while (true) {
    if (i__5182__auto___6993 < len__5181__auto___6992) {
      args6986.push(arguments[i__5182__auto___6993]);
      var G__6994 = i__5182__auto___6993 + 1;
      i__5182__auto___6993 = G__6994;
      continue;
    } else {
    }
    break;
  }
  var G__6991 = args6986.length;
  switch(G__6991) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args6986.slice(2), 0);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__6996 = y;
        var G__6997 = cljs.core.first(more);
        var G__6998 = cljs.core.next(more);
        x = G__6996;
        y = G__6997;
        more = G__6998;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq6987) {
  var G__6988 = cljs.core.first(seq6987);
  var seq6987__$1 = cljs.core.next(seq6987);
  var G__6989 = cljs.core.first(seq6987__$1);
  var seq6987__$2 = cljs.core.next(seq6987__$1);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(G__6988, G__6989, seq6987__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_() {
  var args6999 = [];
  var len__5181__auto___7005 = arguments.length;
  var i__5182__auto___7006 = 0;
  while (true) {
    if (i__5182__auto___7006 < len__5181__auto___7005) {
      args6999.push(arguments[i__5182__auto___7006]);
      var G__7007 = i__5182__auto___7006 + 1;
      i__5182__auto___7006 = G__7007;
      continue;
    } else {
    }
    break;
  }
  var G__7004 = args6999.length;
  switch(G__7004) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args6999.slice(2), 0);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__7009 = y;
        var G__7010 = cljs.core.first(more);
        var G__7011 = cljs.core.next(more);
        x = G__7009;
        y = G__7010;
        more = G__7011;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq7000) {
  var G__7001 = cljs.core.first(seq7000);
  var seq7000__$1 = cljs.core.next(seq7000);
  var G__7002 = cljs.core.first(seq7000__$1);
  var seq7000__$2 = cljs.core.next(seq7000__$1);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__7001, G__7002, seq7000__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_() {
  var args7012 = [];
  var len__5181__auto___7018 = arguments.length;
  var i__5182__auto___7019 = 0;
  while (true) {
    if (i__5182__auto___7019 < len__5181__auto___7018) {
      args7012.push(arguments[i__5182__auto___7019]);
      var G__7020 = i__5182__auto___7019 + 1;
      i__5182__auto___7019 = G__7020;
      continue;
    } else {
    }
    break;
  }
  var G__7017 = args7012.length;
  switch(G__7017) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7012.slice(2), 0);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__7022 = y;
        var G__7023 = cljs.core.first(more);
        var G__7024 = cljs.core.next(more);
        x = G__7022;
        y = G__7023;
        more = G__7024;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq7013) {
  var G__7014 = cljs.core.first(seq7013);
  var seq7013__$1 = cljs.core.next(seq7013);
  var G__7015 = cljs.core.first(seq7013__$1);
  var seq7013__$2 = cljs.core.next(seq7013__$1);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(G__7014, G__7015, seq7013__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_() {
  var args7025 = [];
  var len__5181__auto___7031 = arguments.length;
  var i__5182__auto___7032 = 0;
  while (true) {
    if (i__5182__auto___7032 < len__5181__auto___7031) {
      args7025.push(arguments[i__5182__auto___7032]);
      var G__7033 = i__5182__auto___7032 + 1;
      i__5182__auto___7032 = G__7033;
      continue;
    } else {
    }
    break;
  }
  var G__7030 = args7025.length;
  switch(G__7030) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7025.slice(2), 0);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__7035 = y;
        var G__7036 = cljs.core.first(more);
        var G__7037 = cljs.core.next(more);
        x = G__7035;
        y = G__7036;
        more = G__7037;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq7026) {
  var G__7027 = cljs.core.first(seq7026);
  var seq7026__$1 = cljs.core.next(seq7026);
  var G__7028 = cljs.core.first(seq7026__$1);
  var seq7026__$2 = cljs.core.next(seq7026__$1);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__7027, G__7028, seq7026__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max() {
  var args7038 = [];
  var len__5181__auto___7044 = arguments.length;
  var i__5182__auto___7045 = 0;
  while (true) {
    if (i__5182__auto___7045 < len__5181__auto___7044) {
      args7038.push(arguments[i__5182__auto___7045]);
      var G__7046 = i__5182__auto___7045 + 1;
      i__5182__auto___7045 = G__7046;
      continue;
    } else {
    }
    break;
  }
  var G__7043 = args7038.length;
  switch(G__7043) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7038.slice(2), 0);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4454__auto__ = x;
  var y__4455__auto__ = y;
  return x__4454__auto__ > y__4455__auto__ ? x__4454__auto__ : y__4455__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__4454__auto__ = x;
    var y__4455__auto__ = y;
    return x__4454__auto__ > y__4455__auto__ ? x__4454__auto__ : y__4455__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq7039) {
  var G__7040 = cljs.core.first(seq7039);
  var seq7039__$1 = cljs.core.next(seq7039);
  var G__7041 = cljs.core.first(seq7039__$1);
  var seq7039__$2 = cljs.core.next(seq7039__$1);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(G__7040, G__7041, seq7039__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min() {
  var args7048 = [];
  var len__5181__auto___7054 = arguments.length;
  var i__5182__auto___7055 = 0;
  while (true) {
    if (i__5182__auto___7055 < len__5181__auto___7054) {
      args7048.push(arguments[i__5182__auto___7055]);
      var G__7056 = i__5182__auto___7055 + 1;
      i__5182__auto___7055 = G__7056;
      continue;
    } else {
    }
    break;
  }
  var G__7053 = args7048.length;
  switch(G__7053) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7048.slice(2), 0);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4461__auto__ = x;
  var y__4462__auto__ = y;
  return x__4461__auto__ < y__4462__auto__ ? x__4461__auto__ : y__4462__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__4461__auto__ = x;
    var y__4462__auto__ = y;
    return x__4461__auto__ < y__4462__auto__ ? x__4461__auto__ : y__4462__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq7049) {
  var G__7050 = cljs.core.first(seq7049);
  var seq7049__$1 = cljs.core.next(seq7049);
  var G__7051 = cljs.core.first(seq7049__$1);
  var seq7049__$2 = cljs.core.next(seq7049__$1);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(G__7050, G__7051, seq7049__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add() {
  var args7058 = [];
  var len__5181__auto___7064 = arguments.length;
  var i__5182__auto___7065 = 0;
  while (true) {
    if (i__5182__auto___7065 < len__5181__auto___7064) {
      args7058.push(arguments[i__5182__auto___7065]);
      var G__7066 = i__5182__auto___7065 + 1;
      i__5182__auto___7065 = G__7066;
      continue;
    } else {
    }
    break;
  }
  var G__7063 = args7058.length;
  switch(G__7063) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7058.slice(2), 0);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq7059) {
  var G__7060 = cljs.core.first(seq7059);
  var seq7059__$1 = cljs.core.next(seq7059);
  var G__7061 = cljs.core.first(seq7059__$1);
  var seq7059__$2 = cljs.core.next(seq7059__$1);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__7060, G__7061, seq7059__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int() {
  var args7068 = [];
  var len__5181__auto___7074 = arguments.length;
  var i__5182__auto___7075 = 0;
  while (true) {
    if (i__5182__auto___7075 < len__5181__auto___7074) {
      args7068.push(arguments[i__5182__auto___7075]);
      var G__7076 = i__5182__auto___7075 + 1;
      i__5182__auto___7075 = G__7076;
      continue;
    } else {
    }
    break;
  }
  var G__7073 = args7068.length;
  switch(G__7073) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7068.slice(2), 0);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq7069) {
  var G__7070 = cljs.core.first(seq7069);
  var seq7069__$1 = cljs.core.next(seq7069);
  var G__7071 = cljs.core.first(seq7069__$1);
  var seq7069__$2 = cljs.core.next(seq7069__$1);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__7070, G__7071, seq7069__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int() {
  var args7078 = [];
  var len__5181__auto___7084 = arguments.length;
  var i__5182__auto___7085 = 0;
  while (true) {
    if (i__5182__auto___7085 < len__5181__auto___7084) {
      args7078.push(arguments[i__5182__auto___7085]);
      var G__7086 = i__5182__auto___7085 + 1;
      i__5182__auto___7085 = G__7086;
      continue;
    } else {
    }
    break;
  }
  var G__7083 = args7078.length;
  switch(G__7083) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7078.slice(2), 0);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq7079) {
  var G__7080 = cljs.core.first(seq7079);
  var seq7079__$1 = cljs.core.next(seq7079);
  var G__7081 = cljs.core.first(seq7079__$1);
  var seq7079__$2 = cljs.core.next(seq7079__$1);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__7080, G__7081, seq7079__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply() {
  var args7088 = [];
  var len__5181__auto___7094 = arguments.length;
  var i__5182__auto___7095 = 0;
  while (true) {
    if (i__5182__auto___7095 < len__5181__auto___7094) {
      args7088.push(arguments[i__5182__auto___7095]);
      var G__7096 = i__5182__auto___7095 + 1;
      i__5182__auto___7095 = G__7096;
      continue;
    } else {
    }
    break;
  }
  var G__7093 = args7088.length;
  switch(G__7093) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7088.slice(2), 0);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq7089) {
  var G__7090 = cljs.core.first(seq7089);
  var seq7089__$1 = cljs.core.next(seq7089);
  var G__7091 = cljs.core.first(seq7089__$1);
  var seq7089__$2 = cljs.core.next(seq7089__$1);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__7090, G__7091, seq7089__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int() {
  var args7098 = [];
  var len__5181__auto___7104 = arguments.length;
  var i__5182__auto___7105 = 0;
  while (true) {
    if (i__5182__auto___7105 < len__5181__auto___7104) {
      args7098.push(arguments[i__5182__auto___7105]);
      var G__7106 = i__5182__auto___7105 + 1;
      i__5182__auto___7105 = G__7106;
      continue;
    } else {
    }
    break;
  }
  var G__7103 = args7098.length;
  switch(G__7103) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7098.slice(2), 0);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq7099) {
  var G__7100 = cljs.core.first(seq7099);
  var seq7099__$1 = cljs.core.next(seq7099);
  var G__7101 = cljs.core.first(seq7099__$1);
  var seq7099__$2 = cljs.core.next(seq7099__$1);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__7100, G__7101, seq7099__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(x, n) : cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract() {
  var args7108 = [];
  var len__5181__auto___7114 = arguments.length;
  var i__5182__auto___7115 = 0;
  while (true) {
    if (i__5182__auto___7115 < len__5181__auto___7114) {
      args7108.push(arguments[i__5182__auto___7115]);
      var G__7116 = i__5182__auto___7115 + 1;
      i__5182__auto___7115 = G__7116;
      continue;
    } else {
    }
    break;
  }
  var G__7113 = args7108.length;
  switch(G__7113) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7108.slice(2), 0);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq7109) {
  var G__7110 = cljs.core.first(seq7109);
  var seq7109__$1 = cljs.core.next(seq7109);
  var G__7111 = cljs.core.first(seq7109__$1);
  var seq7109__$2 = cljs.core.next(seq7109__$1);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__7110, G__7111, seq7109__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int() {
  var args7118 = [];
  var len__5181__auto___7124 = arguments.length;
  var i__5182__auto___7125 = 0;
  while (true) {
    if (i__5182__auto___7125 < len__5181__auto___7124) {
      args7118.push(arguments[i__5182__auto___7125]);
      var G__7126 = i__5182__auto___7125 + 1;
      i__5182__auto___7125 = G__7126;
      continue;
    } else {
    }
    break;
  }
  var G__7123 = args7118.length;
  switch(G__7123) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7118.slice(2), 0);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq7119) {
  var G__7120 = cljs.core.first(seq7119);
  var seq7119__$1 = cljs.core.next(seq7119);
  var G__7121 = cljs.core.first(seq7119__$1);
  var seq7119__$2 = cljs.core.next(seq7119__$1);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__7120, G__7121, seq7119__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor() {
  var args7128 = [];
  var len__5181__auto___7134 = arguments.length;
  var i__5182__auto___7135 = 0;
  while (true) {
    if (i__5182__auto___7135 < len__5181__auto___7134) {
      args7128.push(arguments[i__5182__auto___7135]);
      var G__7136 = i__5182__auto___7135 + 1;
      i__5182__auto___7135 = G__7136;
      continue;
    } else {
    }
    break;
  }
  var G__7133 = args7128.length;
  switch(G__7133) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7128.slice(2), 0);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq7129) {
  var G__7130 = cljs.core.first(seq7129);
  var seq7129__$1 = cljs.core.next(seq7129);
  var G__7131 = cljs.core.first(seq7129__$1);
  var seq7129__$2 = cljs.core.next(seq7129__$1);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__7130, G__7131, seq7129__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and() {
  var args7138 = [];
  var len__5181__auto___7144 = arguments.length;
  var i__5182__auto___7145 = 0;
  while (true) {
    if (i__5182__auto___7145 < len__5181__auto___7144) {
      args7138.push(arguments[i__5182__auto___7145]);
      var G__7146 = i__5182__auto___7145 + 1;
      i__5182__auto___7145 = G__7146;
      continue;
    } else {
    }
    break;
  }
  var G__7143 = args7138.length;
  switch(G__7143) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7138.slice(2), 0);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq7139) {
  var G__7140 = cljs.core.first(seq7139);
  var seq7139__$1 = cljs.core.next(seq7139);
  var G__7141 = cljs.core.first(seq7139__$1);
  var seq7139__$2 = cljs.core.next(seq7139__$1);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__7140, G__7141, seq7139__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or() {
  var args7148 = [];
  var len__5181__auto___7154 = arguments.length;
  var i__5182__auto___7155 = 0;
  while (true) {
    if (i__5182__auto___7155 < len__5181__auto___7154) {
      args7148.push(arguments[i__5182__auto___7155]);
      var G__7156 = i__5182__auto___7155 + 1;
      i__5182__auto___7155 = G__7156;
      continue;
    } else {
    }
    break;
  }
  var G__7153 = args7148.length;
  switch(G__7153) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7148.slice(2), 0);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq7149) {
  var G__7150 = cljs.core.first(seq7149);
  var seq7149__$1 = cljs.core.next(seq7149);
  var G__7151 = cljs.core.first(seq7149__$1);
  var seq7149__$2 = cljs.core.next(seq7149__$1);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__7150, G__7151, seq7149__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not() {
  var args7158 = [];
  var len__5181__auto___7164 = arguments.length;
  var i__5182__auto___7165 = 0;
  while (true) {
    if (i__5182__auto___7165 < len__5181__auto___7164) {
      args7158.push(arguments[i__5182__auto___7165]);
      var G__7166 = i__5182__auto___7165 + 1;
      i__5182__auto___7165 = G__7166;
      continue;
    } else {
    }
    break;
  }
  var G__7163 = args7158.length;
  switch(G__7163) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7158.slice(2), 0);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq7159) {
  var G__7160 = cljs.core.first(seq7159);
  var seq7159__$1 = cljs.core.next(seq7159);
  var G__7161 = cljs.core.first(seq7159__$1);
  var seq7159__$2 = cljs.core.next(seq7159__$1);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__7160, G__7161, seq7159__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_() {
  var args7168 = [];
  var len__5181__auto___7174 = arguments.length;
  var i__5182__auto___7175 = 0;
  while (true) {
    if (i__5182__auto___7175 < len__5181__auto___7174) {
      args7168.push(arguments[i__5182__auto___7175]);
      var G__7176 = i__5182__auto___7175 + 1;
      i__5182__auto___7175 = G__7176;
      continue;
    } else {
    }
    break;
  }
  var G__7173 = args7168.length;
  switch(G__7173) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7168.slice(2), 0);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__7178 = y;
        var G__7179 = cljs.core.first(more);
        var G__7180 = cljs.core.next(more);
        x = G__7178;
        y = G__7179;
        more = G__7180;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq7169) {
  var G__7170 = cljs.core.first(seq7169);
  var seq7169__$1 = cljs.core.next(seq7169);
  var G__7171 = cljs.core.first(seq7169__$1);
  var seq7169__$2 = cljs.core.next(seq7169__$1);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__7170, G__7171, seq7169__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__7181 = n__$1 - 1;
      var G__7182 = cljs.core.next(xs);
      n__$1 = G__7181;
      xs = G__7182;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str() {
  var args7183 = [];
  var len__5181__auto___7188 = arguments.length;
  var i__5182__auto___7189 = 0;
  while (true) {
    if (i__5182__auto___7189 < len__5181__auto___7188) {
      args7183.push(arguments[i__5182__auto___7189]);
      var G__7190 = i__5182__auto___7189 + 1;
      i__5182__auto___7189 = G__7190;
      continue;
    } else {
    }
    break;
  }
  var G__7187 = args7183.length;
  switch(G__7187) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7183.slice(1), 0);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5200__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer([cljs.core.str(x)].join(""));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__7192 = sb.append([cljs.core.str(cljs.core.first(more))].join(""));
      var G__7193 = cljs.core.next(more);
      sb = G__7192;
      more = G__7193;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq7184) {
  var G__7185 = cljs.core.first(seq7184);
  var seq7184__$1 = cljs.core.next(seq7184);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(G__7185, seq7184__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs() {
  var args7194 = [];
  var len__5181__auto___7197 = arguments.length;
  var i__5182__auto___7198 = 0;
  while (true) {
    if (i__5182__auto___7198 < len__5181__auto___7197) {
      args7194.push(arguments[i__5182__auto___7198]);
      var G__7199 = i__5182__auto___7198 + 1;
      i__5182__auto___7198 = G__7199;
      continue;
    } else {
    }
    break;
  }
  var G__7196 = args7194.length;
  switch(G__7196) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7194.length)].join(""));;
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__7201 = cljs.core.next(xs);
            var G__7202 = cljs.core.next(ys);
            xs = G__7201;
            ys = G__7202;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__7203 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__7204 = cljs.core.next(s);
        res = G__7203;
        s = G__7204;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__7205 = (h + (cljs.core.hash(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e)) ^ cljs.core.hash(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__7206 = cljs.core.next(s);
      h = G__7205;
      s = G__7206;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__7207 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__7208 = cljs.core.next(s__$1);
      h = G__7207;
      s__$1 = G__7208;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__7215_7221 = cljs.core.seq(fn_map);
  var chunk__7216_7222 = null;
  var count__7217_7223 = 0;
  var i__7218_7224 = 0;
  while (true) {
    if (i__7218_7224 < count__7217_7223) {
      var vec__7219_7225 = chunk__7216_7222.cljs$core$IIndexed$_nth$arity$2(null, i__7218_7224);
      var key_name_7226 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7219_7225, 0, null);
      var f_7227 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7219_7225, 1, null);
      var str_name_7228 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_7226) : cljs.core.name.call(null, key_name_7226);
      obj[str_name_7228] = f_7227;
      var G__7229 = seq__7215_7221;
      var G__7230 = chunk__7216_7222;
      var G__7231 = count__7217_7223;
      var G__7232 = i__7218_7224 + 1;
      seq__7215_7221 = G__7229;
      chunk__7216_7222 = G__7230;
      count__7217_7223 = G__7231;
      i__7218_7224 = G__7232;
      continue;
    } else {
      var temp__4425__auto___7233 = cljs.core.seq(seq__7215_7221);
      if (temp__4425__auto___7233) {
        var seq__7215_7234__$1 = temp__4425__auto___7233;
        if (cljs.core.chunked_seq_QMARK_(seq__7215_7234__$1)) {
          var c__4926__auto___7235 = cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(seq__7215_7234__$1) : cljs.core.chunk_first.call(null, seq__7215_7234__$1);
          var G__7236 = cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(seq__7215_7234__$1) : cljs.core.chunk_rest.call(null, seq__7215_7234__$1);
          var G__7237 = c__4926__auto___7235;
          var G__7238 = cljs.core.count(c__4926__auto___7235);
          var G__7239 = 0;
          seq__7215_7221 = G__7236;
          chunk__7216_7222 = G__7237;
          count__7217_7223 = G__7238;
          i__7218_7224 = G__7239;
          continue;
        } else {
          var vec__7220_7240 = cljs.core.first(seq__7215_7234__$1);
          var key_name_7241 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7220_7240, 0, null);
          var f_7242 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7220_7240, 1, null);
          var str_name_7243 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_7241) : cljs.core.name.call(null, key_name_7241);
          obj[str_name_7243] = f_7242;
          var G__7244 = cljs.core.next(seq__7215_7234__$1);
          var G__7245 = null;
          var G__7246 = 0;
          var G__7247 = 0;
          seq__7215_7221 = G__7244;
          chunk__7216_7222 = G__7245;
          count__7217_7223 = G__7246;
          i__7218_7224 = G__7247;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4558__auto__ = self__.__hash;
  if (!(h__4558__auto__ == null)) {
    return h__4558__auto__;
  } else {
    var h__4558__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4558__auto____$1;
    return h__4558__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list() {
  var args__5188__auto__ = [];
  var len__5181__auto___7253 = arguments.length;
  var i__5182__auto___7254 = 0;
  while (true) {
    if (i__5182__auto___7254 < len__5181__auto___7253) {
      args__5188__auto__.push(arguments[i__5182__auto___7254]);
      var G__7255 = i__5182__auto___7254 + 1;
      i__5182__auto___7254 = G__7255;
      continue;
    } else {
    }
    break;
  }
  var argseq__5189__auto__ = 0 < args__5188__auto__.length ? new cljs.core.IndexedSeq(args__5188__auto__.slice(0), 0) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__5189__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__7256 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__7256;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__7257 = i - 1;
      var G__7258 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__7257;
      r = G__7258;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq7252) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq7252));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4558__auto__ = self__.__hash;
  if (!(h__4558__auto__ == null)) {
    return h__4558__auto__;
  } else {
    var h__4558__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4558__auto____$1;
    return h__4558__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__4142__auto__ = coll == null;
    if (or__4142__auto__) {
      return or__4142__auto__;
    } else {
      if (!(coll == null)) {
        if (coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4130__auto__ = cljs.core.not(a.ns);
      if (and__4130__auto__) {
        return b.ns;
      } else {
        return and__4130__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__7269 = a.ns;
            var G__7270 = b.ns;
            return goog.array.defaultCompare(G__7269, G__7270);
          }();
          if (0 === nsc) {
            var G__7271 = a.name;
            var G__7272 = b.name;
            return goog.array.defaultCompare(G__7271, G__7272);
          } else {
            return nsc;
          }
        }
      } else {
        var G__7273 = a.name;
        var G__7274 = b.name;
        return goog.array.defaultCompare(G__7273, G__7274);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__7276 = null;
  var G__7276__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__7276__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__7276 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7276__2.call(this, self__, coll);
      case 3:
        return G__7276__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7276.cljs$core$IFn$_invoke$arity$2 = G__7276__2;
  G__7276.cljs$core$IFn$_invoke$arity$3 = G__7276__3;
  return G__7276;
}();
cljs.core.Keyword.prototype.apply = function(self__, args7275) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args7275)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4558__auto__ = self__._hash;
  if (!(h__4558__auto__ == null)) {
    return h__4558__auto__;
  } else {
    var h__4558__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4558__auto____$1;
    return h__4558__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function cljs$core$keyword() {
  var args7279 = [];
  var len__5181__auto___7282 = arguments.length;
  var i__5182__auto___7283 = 0;
  while (true) {
    if (i__5182__auto___7283 < len__5181__auto___7282) {
      args7279.push(arguments[i__5182__auto___7283]);
      var G__7284 = i__5182__auto___7283 + 1;
      i__5182__auto___7283 = G__7284;
      continue;
    } else {
    }
    break;
  }
  var G__7281 = args7279.length;
  switch(G__7281) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7279.length)].join(""));;
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null, name), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4558__auto__ = self__.__hash;
  if (!(h__4558__auto__ == null)) {
    return h__4558__auto__;
  } else {
    var h__4558__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4558__auto____$1;
    return h__4558__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__7286 = ls.sval();
        ls = G__7286;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk() {
  var args7287 = [];
  var len__5181__auto___7290 = arguments.length;
  var i__5182__auto___7291 = 0;
  while (true) {
    if (i__5182__auto___7291 < len__5181__auto___7290) {
      args7287.push(arguments[i__5182__auto___7291]);
      var G__7292 = i__5182__auto___7291 + 1;
      i__5182__auto___7291 = G__7292;
      continue;
    } else {
    }
    break;
  }
  var G__7289 = args7287.length;
  switch(G__7289) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7287.length)].join(""));;
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4558__auto__ = self__.__hash;
  if (!(h__4558__auto__ == null)) {
    return h__4558__auto__;
  } else {
    var h__4558__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4558__auto____$1;
    return h__4558__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || s.cljs$core$IChunkedNext$ ? true : false : false) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__7296 = cljs.core.next(s__$1);
      s__$1 = G__7296;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_7297 = 0;
  var xs_7298 = cljs.core.seq(coll);
  while (true) {
    if (xs_7298) {
      ret[i_7297] = cljs.core.to_array(cljs.core.first(xs_7298));
      var G__7299 = i_7297 + 1;
      var G__7300 = cljs.core.next(xs_7298);
      i_7297 = G__7299;
      xs_7298 = G__7300;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array() {
  var args7301 = [];
  var len__5181__auto___7304 = arguments.length;
  var i__5182__auto___7305 = 0;
  while (true) {
    if (i__5182__auto___7305 < len__5181__auto___7304) {
      args7301.push(arguments[i__5182__auto___7305]);
      var G__7306 = i__5182__auto___7305 + 1;
      i__5182__auto___7305 = G__7306;
      continue;
    } else {
    }
    break;
  }
  var G__7303 = args7301.length;
  switch(G__7303) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7301.length)].join(""));;
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__7308 = i + 1;
        var G__7309 = cljs.core.next(s__$1);
        i = G__7308;
        s__$1 = G__7309;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5026__auto___7310 = size;
    var i_7311 = 0;
    while (true) {
      if (i_7311 < n__5026__auto___7310) {
        a[i_7311] = init_val_or_seq;
        var G__7312 = i_7311 + 1;
        i_7311 = G__7312;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array() {
  var args7313 = [];
  var len__5181__auto___7316 = arguments.length;
  var i__5182__auto___7317 = 0;
  while (true) {
    if (i__5182__auto___7317 < len__5181__auto___7316) {
      args7313.push(arguments[i__5182__auto___7317]);
      var G__7318 = i__5182__auto___7317 + 1;
      i__5182__auto___7317 = G__7318;
      continue;
    } else {
    }
    break;
  }
  var G__7315 = args7313.length;
  switch(G__7315) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7313.length)].join(""));;
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__7320 = i + 1;
        var G__7321 = cljs.core.next(s__$1);
        i = G__7320;
        s__$1 = G__7321;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5026__auto___7322 = size;
    var i_7323 = 0;
    while (true) {
      if (i_7323 < n__5026__auto___7322) {
        a[i_7323] = init_val_or_seq;
        var G__7324 = i_7323 + 1;
        i_7323 = G__7324;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array() {
  var args7325 = [];
  var len__5181__auto___7328 = arguments.length;
  var i__5182__auto___7329 = 0;
  while (true) {
    if (i__5182__auto___7329 < len__5181__auto___7328) {
      args7325.push(arguments[i__5182__auto___7329]);
      var G__7330 = i__5182__auto___7329 + 1;
      i__5182__auto___7329 = G__7330;
      continue;
    } else {
    }
    break;
  }
  var G__7327 = args7325.length;
  switch(G__7327) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7325.length)].join(""));;
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__7332 = i + 1;
        var G__7333 = cljs.core.next(s__$1);
        i = G__7332;
        s__$1 = G__7333;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5026__auto___7334 = size;
    var i_7335 = 0;
    while (true) {
      if (i_7335 < n__5026__auto___7334) {
        a[i_7335] = init_val_or_seq;
        var G__7336 = i_7335 + 1;
        i_7335 = G__7336;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array() {
  var args7337 = [];
  var len__5181__auto___7340 = arguments.length;
  var i__5182__auto___7341 = 0;
  while (true) {
    if (i__5182__auto___7341 < len__5181__auto___7340) {
      args7337.push(arguments[i__5182__auto___7341]);
      var G__7342 = i__5182__auto___7341 + 1;
      i__5182__auto___7341 = G__7342;
      continue;
    } else {
    }
    break;
  }
  var G__7339 = args7337.length;
  switch(G__7339) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7337.length)].join(""));;
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__7344 = i + 1;
        var G__7345 = cljs.core.next(s__$1);
        i = G__7344;
        s__$1 = G__7345;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5026__auto___7346 = size;
    var i_7347 = 0;
    while (true) {
      if (i_7347 < n__5026__auto___7346) {
        a[i_7347] = init_val_or_seq;
        var G__7348 = i_7347 + 1;
        i_7347 = G__7348;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__7349 = cljs.core.next(s__$1);
        var G__7350 = i - 1;
        var G__7351 = sum + 1;
        s__$1 = G__7349;
        i = G__7350;
        sum = G__7351;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function cljs$core$concat() {
  var args7353 = [];
  var len__5181__auto___7365 = arguments.length;
  var i__5182__auto___7366 = 0;
  while (true) {
    if (i__5182__auto___7366 < len__5181__auto___7365) {
      args7353.push(arguments[i__5182__auto___7366]);
      var G__7367 = i__5182__auto___7366 + 1;
      i__5182__auto___7366 = G__7367;
      continue;
    } else {
    }
    break;
  }
  var G__7358 = args7353.length;
  switch(G__7358) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7353.slice(2), 0);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq7354) {
  var G__7355 = cljs.core.first(seq7354);
  var seq7354__$1 = cljs.core.next(seq7354);
  var G__7356 = cljs.core.first(seq7354__$1);
  var seq7354__$2 = cljs.core.next(seq7354__$1);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(G__7355, G__7356, seq7354__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_() {
  var args7369 = [];
  var len__5181__auto___7377 = arguments.length;
  var i__5182__auto___7378 = 0;
  while (true) {
    if (i__5182__auto___7378 < len__5181__auto___7377) {
      args7369.push(arguments[i__5182__auto___7378]);
      var G__7379 = i__5182__auto___7378 + 1;
      i__5182__auto___7378 = G__7379;
      continue;
    } else {
    }
    break;
  }
  var G__7376 = args7369.length;
  switch(G__7376) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7369.slice(4), 0);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5200__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq7370) {
  var G__7371 = cljs.core.first(seq7370);
  var seq7370__$1 = cljs.core.next(seq7370);
  var G__7372 = cljs.core.first(seq7370__$1);
  var seq7370__$2 = cljs.core.next(seq7370__$1);
  var G__7373 = cljs.core.first(seq7370__$2);
  var seq7370__$3 = cljs.core.next(seq7370__$2);
  var G__7374 = cljs.core.first(seq7370__$3);
  var seq7370__$4 = cljs.core.next(seq7370__$3);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__7371, G__7372, G__7373, G__7374, seq7370__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_() {
  var args7381 = [];
  var len__5181__auto___7387 = arguments.length;
  var i__5182__auto___7388 = 0;
  while (true) {
    if (i__5182__auto___7388 < len__5181__auto___7387) {
      args7381.push(arguments[i__5182__auto___7388]);
      var G__7389 = i__5182__auto___7388 + 1;
      i__5182__auto___7388 = G__7389;
      continue;
    } else {
    }
    break;
  }
  var G__7386 = args7381.length;
  switch(G__7386) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7381.slice(2), 0);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__7391 = ntcoll;
      var G__7392 = cljs.core.first(vals);
      var G__7393 = cljs.core.next(vals);
      tcoll = G__7391;
      val = G__7392;
      vals = G__7393;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq7382) {
  var G__7383 = cljs.core.first(seq7382);
  var seq7382__$1 = cljs.core.next(seq7382);
  var G__7384 = cljs.core.first(seq7382__$1);
  var seq7382__$2 = cljs.core.next(seq7382__$1);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__7383, G__7384, seq7382__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_() {
  var args7394 = [];
  var len__5181__auto___7401 = arguments.length;
  var i__5182__auto___7402 = 0;
  while (true) {
    if (i__5182__auto___7402 < len__5181__auto___7401) {
      args7394.push(arguments[i__5182__auto___7402]);
      var G__7403 = i__5182__auto___7402 + 1;
      i__5182__auto___7402 = G__7403;
      continue;
    } else {
    }
    break;
  }
  var G__7400 = args7394.length;
  switch(G__7400) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7394.slice(3), 0);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5200__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__7405 = ntcoll;
      var G__7406 = cljs.core.first(kvs);
      var G__7407 = cljs.core.second(kvs);
      var G__7408 = cljs.core.nnext(kvs);
      tcoll = G__7405;
      key = G__7406;
      val = G__7407;
      kvs = G__7408;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq7395) {
  var G__7396 = cljs.core.first(seq7395);
  var seq7395__$1 = cljs.core.next(seq7395);
  var G__7397 = cljs.core.first(seq7395__$1);
  var seq7395__$2 = cljs.core.next(seq7395__$1);
  var G__7398 = cljs.core.first(seq7395__$2);
  var seq7395__$3 = cljs.core.next(seq7395__$2);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__7396, G__7397, G__7398, seq7395__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_() {
  var args7409 = [];
  var len__5181__auto___7415 = arguments.length;
  var i__5182__auto___7416 = 0;
  while (true) {
    if (i__5182__auto___7416 < len__5181__auto___7415) {
      args7409.push(arguments[i__5182__auto___7416]);
      var G__7417 = i__5182__auto___7416 + 1;
      i__5182__auto___7416 = G__7417;
      continue;
    } else {
    }
    break;
  }
  var G__7414 = args7409.length;
  switch(G__7414) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7409.slice(2), 0);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__7419 = ntcoll;
      var G__7420 = cljs.core.first(ks);
      var G__7421 = cljs.core.next(ks);
      tcoll = G__7419;
      key = G__7420;
      ks = G__7421;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq7410) {
  var G__7411 = cljs.core.first(seq7410);
  var seq7410__$1 = cljs.core.next(seq7410);
  var G__7412 = cljs.core.first(seq7410__$1);
  var seq7410__$2 = cljs.core.next(seq7410__$1);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__7411, G__7412, seq7410__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_() {
  var args7422 = [];
  var len__5181__auto___7428 = arguments.length;
  var i__5182__auto___7429 = 0;
  while (true) {
    if (i__5182__auto___7429 < len__5181__auto___7428) {
      args7422.push(arguments[i__5182__auto___7429]);
      var G__7430 = i__5182__auto___7429 + 1;
      i__5182__auto___7429 = G__7430;
      continue;
    } else {
    }
    break;
  }
  var G__7427 = args7422.length;
  switch(G__7427) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7422.slice(2), 0);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__7432 = ntcoll;
      var G__7433 = cljs.core.first(vals);
      var G__7434 = cljs.core.next(vals);
      tcoll = G__7432;
      val = G__7433;
      vals = G__7434;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq7423) {
  var G__7424 = cljs.core.first(seq7423);
  var seq7423__$1 = cljs.core.next(seq7423);
  var G__7425 = cljs.core.first(seq7423__$1);
  var seq7423__$2 = cljs.core.next(seq7423__$1);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__7424, G__7425, seq7423__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a5070 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a5070);
      } else {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a5070) : f.call(null, a5070);
      }
    } else {
      var b5071 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a5070, b5071);
        } else {
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a5070, b5071) : f.call(null, a5070, b5071);
        }
      } else {
        var c5072 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a5070, b5071, c5072);
          } else {
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a5070, b5071, c5072) : f.call(null, a5070, b5071, c5072);
          }
        } else {
          var d5073 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a5070, b5071, c5072, d5073);
            } else {
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a5070, b5071, c5072, d5073) : f.call(null, a5070, b5071, c5072, d5073);
            }
          } else {
            var e5074 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a5070, b5071, c5072, d5073, e5074);
              } else {
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a5070, b5071, c5072, d5073, e5074) : f.call(null, a5070, b5071, c5072, d5073, e5074);
              }
            } else {
              var f5075 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a5070, b5071, c5072, d5073, e5074, f5075);
                } else {
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a5070, b5071, c5072, d5073, e5074, f5075) : f.call(null, a5070, b5071, c5072, d5073, e5074, f5075);
                }
              } else {
                var g5076 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a5070, b5071, c5072, d5073, e5074, f5075, g5076);
                  } else {
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a5070, b5071, c5072, d5073, e5074, f5075, g5076) : f.call(null, a5070, b5071, c5072, d5073, e5074, f5075, g5076);
                  }
                } else {
                  var h5077 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077);
                    } else {
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077) : f.call(null, a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077);
                    }
                  } else {
                    var i5078 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078);
                      } else {
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078) : f.call(null, a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078);
                      }
                    } else {
                      var j5079 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079);
                        } else {
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079) : f.call(null, a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079);
                        }
                      } else {
                        var k5080 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080);
                          } else {
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080) : f.call(null, a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080);
                          }
                        } else {
                          var l5081 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080, l5081);
                            } else {
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080, l5081) : f.call(null, a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080, l5081);
                            }
                          } else {
                            var m5082 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080, l5081, m5082);
                              } else {
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080, l5081, m5082) : f.call(null, a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080, l5081, m5082);
                              }
                            } else {
                              var n5083 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080, l5081, m5082, n5083);
                                } else {
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080, l5081, m5082, n5083) : f.call(null, a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080, l5081, m5082, n5083);
                                }
                              } else {
                                var o5084 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080, l5081, m5082, n5083, o5084);
                                  } else {
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080, l5081, m5082, n5083, o5084) : f.call(null, a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080, l5081, m5082, n5083, o5084);
                                  }
                                } else {
                                  var p5085 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080, l5081, m5082, n5083, o5084, p5085);
                                    } else {
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080, l5081, m5082, n5083, o5084, p5085) : f.call(null, a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080, l5081, m5082, n5083, o5084, p5085);
                                    }
                                  } else {
                                    var q5086 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080, l5081, m5082, n5083, o5084, p5085, q5086);
                                      } else {
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080, l5081, m5082, n5083, o5084, p5085, q5086) : f.call(null, a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080, l5081, m5082, n5083, o5084, p5085, q5086);
                                      }
                                    } else {
                                      var r5087 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080, l5081, m5082, n5083, o5084, p5085, q5086, r5087);
                                        } else {
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080, l5081, m5082, n5083, o5084, p5085, q5086, r5087) : f.call(null, a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080, l5081, m5082, n5083, o5084, p5085, q5086, r5087);
                                        }
                                      } else {
                                        var s5088 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080, l5081, m5082, n5083, o5084, p5085, q5086, r5087, s5088);
                                          } else {
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080, l5081, m5082, n5083, o5084, p5085, q5086, r5087, s5088) : f.call(null, a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080, l5081, m5082, n5083, o5084, p5085, q5086, r5087, s5088);
                                          }
                                        } else {
                                          var t5089 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080, l5081, m5082, n5083, o5084, p5085, q5086, r5087, s5088, t5089);
                                            } else {
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080, l5081, m5082, n5083, o5084, p5085, q5086, r5087, s5088, t5089) : f.call(null, a5070, b5071, c5072, d5073, e5074, f5075, g5076, h5077, i5078, j5079, k5080, l5081, m5082, n5083, o5084, p5085, q5086, r5087, s5088, t5089);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function cljs$core$apply() {
  var args7435 = [];
  var len__5181__auto___7444 = arguments.length;
  var i__5182__auto___7445 = 0;
  while (true) {
    if (i__5182__auto___7445 < len__5181__auto___7444) {
      args7435.push(arguments[i__5182__auto___7445]);
      var G__7446 = i__5182__auto___7445 + 1;
      i__5182__auto___7445 = G__7446;
      continue;
    } else {
    }
    break;
  }
  var G__7443 = args7435.length;
  switch(G__7443) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7435.slice(5), 0);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__5200__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(args, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return f.apply(f, cljs.core.to_array(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq7436) {
  var G__7437 = cljs.core.first(seq7436);
  var seq7436__$1 = cljs.core.next(seq7436);
  var G__7438 = cljs.core.first(seq7436__$1);
  var seq7436__$2 = cljs.core.next(seq7436__$1);
  var G__7439 = cljs.core.first(seq7436__$2);
  var seq7436__$3 = cljs.core.next(seq7436__$2);
  var G__7440 = cljs.core.first(seq7436__$3);
  var seq7436__$4 = cljs.core.next(seq7436__$3);
  var G__7441 = cljs.core.first(seq7436__$4);
  var seq7436__$5 = cljs.core.next(seq7436__$4);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(G__7437, G__7438, G__7439, G__7440, G__7441, seq7436__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta() {
  var args7448 = [];
  var len__5181__auto___7473 = arguments.length;
  var i__5182__auto___7474 = 0;
  while (true) {
    if (i__5182__auto___7474 < len__5181__auto___7473) {
      args7448.push(arguments[i__5182__auto___7474]);
      var G__7475 = i__5182__auto___7474 + 1;
      i__5182__auto___7474 = G__7475;
      continue;
    } else {
    }
    break;
  }
  var G__7457 = args7448.length;
  switch(G__7457) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7448.slice(6), 0);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5200__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__7458 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7458) : f.call(null, G__7458);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__7459 = cljs.core.meta(obj);
    var G__7460 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7459, G__7460) : f.call(null, G__7459, G__7460);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__7461 = cljs.core.meta(obj);
    var G__7462 = a;
    var G__7463 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7461, G__7462, G__7463) : f.call(null, G__7461, G__7462, G__7463);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__7464 = cljs.core.meta(obj);
    var G__7465 = a;
    var G__7466 = b;
    var G__7467 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__7464, G__7465, G__7466, G__7467) : f.call(null, G__7464, G__7465, G__7466, G__7467);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__7468 = cljs.core.meta(obj);
    var G__7469 = a;
    var G__7470 = b;
    var G__7471 = c;
    var G__7472 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__7468, G__7469, G__7470, G__7471, G__7472) : f.call(null, G__7468, G__7469, G__7470, G__7471, G__7472);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq7449) {
  var G__7450 = cljs.core.first(seq7449);
  var seq7449__$1 = cljs.core.next(seq7449);
  var G__7451 = cljs.core.first(seq7449__$1);
  var seq7449__$2 = cljs.core.next(seq7449__$1);
  var G__7452 = cljs.core.first(seq7449__$2);
  var seq7449__$3 = cljs.core.next(seq7449__$2);
  var G__7453 = cljs.core.first(seq7449__$3);
  var seq7449__$4 = cljs.core.next(seq7449__$3);
  var G__7454 = cljs.core.first(seq7449__$4);
  var seq7449__$5 = cljs.core.next(seq7449__$4);
  var G__7455 = cljs.core.first(seq7449__$5);
  var seq7449__$6 = cljs.core.next(seq7449__$5);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(G__7450, G__7451, G__7452, G__7453, G__7454, G__7455, seq7449__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_() {
  var args7477 = [];
  var len__5181__auto___7483 = arguments.length;
  var i__5182__auto___7484 = 0;
  while (true) {
    if (i__5182__auto___7484 < len__5181__auto___7483) {
      args7477.push(arguments[i__5182__auto___7484]);
      var G__7485 = i__5182__auto___7484 + 1;
      i__5182__auto___7484 = G__7485;
      continue;
    } else {
    }
    break;
  }
  var G__7482 = args7477.length;
  switch(G__7482) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7477.slice(2), 0);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq7478) {
  var G__7479 = cljs.core.first(seq7478);
  var seq7478__$1 = cljs.core.next(seq7478);
  var G__7480 = cljs.core.first(seq7478__$1);
  var seq7478__$2 = cljs.core.next(seq7478__$1);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__7479, G__7480, seq7478__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t7490 !== "undefined") {
  } else {
    cljs.core.t7490 = function(nil_iter, meta7491) {
      this.nil_iter = nil_iter;
      this.meta7491 = meta7491;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t7490.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_7492, meta7491__$1) {
      var self__ = this;
      var _7492__$1 = this;
      return new cljs.core.t7490(self__.nil_iter, meta7491__$1);
    };
    cljs.core.t7490.prototype.cljs$core$IMeta$_meta$arity$1 = function(_7492) {
      var self__ = this;
      var _7492__$1 = this;
      return self__.meta7491;
    };
    cljs.core.t7490.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t7490.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t7490.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t7490.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "nil-iter", "nil-iter", 1101030523, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), new cljs.core.Symbol(null, "meta7491", "meta7491", -2106124784, null)], 
      null);
    };
    cljs.core.t7490.cljs$lang$type = true;
    cljs.core.t7490.cljs$lang$ctorStr = "cljs.core/t7490";
    cljs.core.t7490.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
      return cljs.core._write(writer__4722__auto__, "cljs.core/t7490");
    };
    cljs.core.__GT_t7490 = function cljs$core$nil_iter_$___GT_t7490(nil_iter__$1, meta7491) {
      return new cljs.core.t7490(nil_iter__$1, meta7491);
    };
  }
  return new cljs.core.t7490(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.truth_(cljs.core.iterable_QMARK_(coll))) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4130__auto__ = !(lt.stepper == null);
      if (and__4130__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__4130__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__7493 = lt;
        var G__7494 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__7493, G__7494) : self__.xform.call(null, G__7493, G__7494);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.Stepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__7495 = cljs.core.next(iters__$1);
        iters__$1 = G__7495;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__5026__auto___7496 = self__.iters.length;
  var i_7497 = 0;
  while (true) {
    if (i_7497 < n__5026__auto___7496) {
      self__.nexts[i_7497] = self__.iters[i_7497].next();
      var G__7498 = i_7497 + 1;
      i_7497 = G__7498;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4130__auto__ = !(lt.stepper == null);
      if (and__4130__auto__) {
        return this$.hasNext();
      } else {
        return and__4130__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.MultiStepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iters", "iters", 719353031, null), new cljs.core.Symbol(null, "nexts", "nexts", -1683579407, null)], null);
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function cljs$core$multi_stepper() {
  var args7499 = [];
  var len__5181__auto___7502 = arguments.length;
  var i__5182__auto___7503 = 0;
  while (true) {
    if (i__5182__auto___7503 < len__5181__auto___7502) {
      args7499.push(arguments[i__5182__auto___7503]);
      var G__7504 = i__5182__auto___7503 + 1;
      i__5182__auto___7503 = G__7504;
      continue;
    } else {
    }
    break;
  }
  var G__7501 = args7499.length;
  switch(G__7501) {
    case 2:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7499.length)].join(""));;
  }
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = function(xform, iters) {
  return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = function(xform, iters, nexts) {
  var stepfn = function() {
    var cljs$core$stepfn = null;
    var cljs$core$stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return lt;
    };
    var cljs$core$stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepfn__1;
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepfn__2;
    return cljs$core$stepfn;
  }();
  return new cljs.core.MultiStepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iters, nexts);
};
cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "stepper", "stepper", 1159163296, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  cljs.core.with_meta(new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__7506_7510 = cljs.core.seq(colls);
  var chunk__7507_7511 = null;
  var count__7508_7512 = 0;
  var i__7509_7513 = 0;
  while (true) {
    if (i__7509_7513 < count__7508_7512) {
      var coll_7514 = chunk__7507_7511.cljs$core$IIndexed$_nth$arity$2(null, i__7509_7513);
      iters.push(cljs.core.iter(coll_7514));
      var G__7515 = seq__7506_7510;
      var G__7516 = chunk__7507_7511;
      var G__7517 = count__7508_7512;
      var G__7518 = i__7509_7513 + 1;
      seq__7506_7510 = G__7515;
      chunk__7507_7511 = G__7516;
      count__7508_7512 = G__7517;
      i__7509_7513 = G__7518;
      continue;
    } else {
      var temp__4425__auto___7519 = cljs.core.seq(seq__7506_7510);
      if (temp__4425__auto___7519) {
        var seq__7506_7520__$1 = temp__4425__auto___7519;
        if (cljs.core.chunked_seq_QMARK_(seq__7506_7520__$1)) {
          var c__4926__auto___7521 = cljs.core.chunk_first(seq__7506_7520__$1);
          var G__7522 = cljs.core.chunk_rest(seq__7506_7520__$1);
          var G__7523 = c__4926__auto___7521;
          var G__7524 = cljs.core.count(c__4926__auto___7521);
          var G__7525 = 0;
          seq__7506_7510 = G__7522;
          chunk__7507_7511 = G__7523;
          count__7508_7512 = G__7524;
          i__7509_7513 = G__7525;
          continue;
        } else {
          var coll_7526 = cljs.core.first(seq__7506_7520__$1);
          iters.push(cljs.core.iter(coll_7526));
          var G__7527 = cljs.core.next(seq__7506_7520__$1);
          var G__7528 = null;
          var G__7529 = 0;
          var G__7530 = 0;
          seq__7506_7510 = G__7527;
          chunk__7507_7511 = G__7528;
          count__7508_7512 = G__7529;
          i__7509_7513 = G__7530;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function cljs$core$sequence() {
  var args7531 = [];
  var len__5181__auto___7537 = arguments.length;
  var i__5182__auto___7538 = 0;
  while (true) {
    if (i__5182__auto___7538 < len__5181__auto___7537) {
      args7531.push(arguments[i__5182__auto___7538]);
      var G__7539 = i__5182__auto___7538 + 1;
      i__5182__auto___7538 = G__7539;
      continue;
    } else {
    }
    break;
  }
  var G__7536 = args7531.length;
  switch(G__7536) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7531.slice(2), 0);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__4142__auto__ = cljs.core.seq(coll);
    if (or__4142__auto__) {
      return or__4142__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  return cljs.core.LazyTransformer.create(xform, coll);
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
};
cljs.core.sequence.cljs$lang$applyTo = function(seq7532) {
  var G__7533 = cljs.core.first(seq7532);
  var seq7532__$1 = cljs.core.next(seq7532);
  var G__7534 = cljs.core.first(seq7532__$1);
  var seq7532__$2 = cljs.core.next(seq7532__$1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(G__7533, G__7534, seq7532__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__7542 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7542) : pred.call(null, G__7542);
      }())) {
        var G__7543 = pred;
        var G__7544 = cljs.core.next(coll);
        pred = G__7543;
        coll = G__7544;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__4142__auto__ = function() {
        var G__7548 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__7548) : pred.call(null, G__7548);
      }();
      if (cljs.core.truth_(or__4142__auto__)) {
        return or__4142__auto__;
      } else {
        var G__7549 = pred;
        var G__7550 = cljs.core.next(coll);
        pred = G__7549;
        coll = G__7550;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__7551 = null;
    var G__7551__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__7551__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__7551__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__7551__3 = function() {
      var G__7552__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__7552 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__7553__i = 0, G__7553__a = new Array(arguments.length - 2);
          while (G__7553__i < G__7553__a.length) {
            G__7553__a[G__7553__i] = arguments[G__7553__i + 2];
            ++G__7553__i;
          }
          zs = new cljs.core.IndexedSeq(G__7553__a, 0);
        }
        return G__7552__delegate.call(this, x, y, zs);
      };
      G__7552.cljs$lang$maxFixedArity = 2;
      G__7552.cljs$lang$applyTo = function(arglist__7554) {
        var x = cljs.core.first(arglist__7554);
        arglist__7554 = cljs.core.next(arglist__7554);
        var y = cljs.core.first(arglist__7554);
        var zs = cljs.core.rest(arglist__7554);
        return G__7552__delegate(x, y, zs);
      };
      G__7552.cljs$core$IFn$_invoke$arity$variadic = G__7552__delegate;
      return G__7552;
    }();
    G__7551 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__7551__0.call(this);
        case 1:
          return G__7551__1.call(this, x);
        case 2:
          return G__7551__2.call(this, x, y);
        default:
          var G__7555 = null;
          if (arguments.length > 2) {
            var G__7556__i = 0, G__7556__a = new Array(arguments.length - 2);
            while (G__7556__i < G__7556__a.length) {
              G__7556__a[G__7556__i] = arguments[G__7556__i + 2];
              ++G__7556__i;
            }
            G__7555 = new cljs.core.IndexedSeq(G__7556__a, 0);
          }
          return G__7551__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__7555);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7551.cljs$lang$maxFixedArity = 2;
    G__7551.cljs$lang$applyTo = G__7551__3.cljs$lang$applyTo;
    G__7551.cljs$core$IFn$_invoke$arity$0 = G__7551__0;
    G__7551.cljs$core$IFn$_invoke$arity$1 = G__7551__1;
    G__7551.cljs$core$IFn$_invoke$arity$2 = G__7551__2;
    G__7551.cljs$core$IFn$_invoke$arity$variadic = G__7551__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__7551;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__7557__delegate = function(args) {
      return x;
    };
    var G__7557 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__7558__i = 0, G__7558__a = new Array(arguments.length - 0);
        while (G__7558__i < G__7558__a.length) {
          G__7558__a[G__7558__i] = arguments[G__7558__i + 0];
          ++G__7558__i;
        }
        args = new cljs.core.IndexedSeq(G__7558__a, 0);
      }
      return G__7557__delegate.call(this, args);
    };
    G__7557.cljs$lang$maxFixedArity = 0;
    G__7557.cljs$lang$applyTo = function(arglist__7559) {
      var args = cljs.core.seq(arglist__7559);
      return G__7557__delegate(args);
    };
    G__7557.cljs$core$IFn$_invoke$arity$variadic = G__7557__delegate;
    return G__7557;
  }();
};
cljs.core.comp = function cljs$core$comp() {
  var args7560 = [];
  var len__5181__auto___7587 = arguments.length;
  var i__5182__auto___7588 = 0;
  while (true) {
    if (i__5182__auto___7588 < len__5181__auto___7587) {
      args7560.push(arguments[i__5182__auto___7588]);
      var G__7589 = i__5182__auto___7588 + 1;
      i__5182__auto___7588 = G__7589;
      continue;
    } else {
    }
    break;
  }
  var G__7566 = args7560.length;
  switch(G__7566) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7560.slice(3), 0);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5200__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__7591 = null;
    var G__7591__0 = function() {
      var G__7567 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7567) : f.call(null, G__7567);
    };
    var G__7591__1 = function(x) {
      var G__7568 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7568) : f.call(null, G__7568);
    };
    var G__7591__2 = function(x, y) {
      var G__7569 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7569) : f.call(null, G__7569);
    };
    var G__7591__3 = function(x, y, z) {
      var G__7570 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7570) : f.call(null, G__7570);
    };
    var G__7591__4 = function() {
      var G__7592__delegate = function(x, y, z, args) {
        var G__7571 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7571) : f.call(null, G__7571);
      };
      var G__7592 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7593__i = 0, G__7593__a = new Array(arguments.length - 3);
          while (G__7593__i < G__7593__a.length) {
            G__7593__a[G__7593__i] = arguments[G__7593__i + 3];
            ++G__7593__i;
          }
          args = new cljs.core.IndexedSeq(G__7593__a, 0);
        }
        return G__7592__delegate.call(this, x, y, z, args);
      };
      G__7592.cljs$lang$maxFixedArity = 3;
      G__7592.cljs$lang$applyTo = function(arglist__7594) {
        var x = cljs.core.first(arglist__7594);
        arglist__7594 = cljs.core.next(arglist__7594);
        var y = cljs.core.first(arglist__7594);
        arglist__7594 = cljs.core.next(arglist__7594);
        var z = cljs.core.first(arglist__7594);
        var args = cljs.core.rest(arglist__7594);
        return G__7592__delegate(x, y, z, args);
      };
      G__7592.cljs$core$IFn$_invoke$arity$variadic = G__7592__delegate;
      return G__7592;
    }();
    G__7591 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__7591__0.call(this);
        case 1:
          return G__7591__1.call(this, x);
        case 2:
          return G__7591__2.call(this, x, y);
        case 3:
          return G__7591__3.call(this, x, y, z);
        default:
          var G__7595 = null;
          if (arguments.length > 3) {
            var G__7596__i = 0, G__7596__a = new Array(arguments.length - 3);
            while (G__7596__i < G__7596__a.length) {
              G__7596__a[G__7596__i] = arguments[G__7596__i + 3];
              ++G__7596__i;
            }
            G__7595 = new cljs.core.IndexedSeq(G__7596__a, 0);
          }
          return G__7591__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7595);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7591.cljs$lang$maxFixedArity = 3;
    G__7591.cljs$lang$applyTo = G__7591__4.cljs$lang$applyTo;
    G__7591.cljs$core$IFn$_invoke$arity$0 = G__7591__0;
    G__7591.cljs$core$IFn$_invoke$arity$1 = G__7591__1;
    G__7591.cljs$core$IFn$_invoke$arity$2 = G__7591__2;
    G__7591.cljs$core$IFn$_invoke$arity$3 = G__7591__3;
    G__7591.cljs$core$IFn$_invoke$arity$variadic = G__7591__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7591;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__7597 = null;
    var G__7597__0 = function() {
      var G__7573 = function() {
        var G__7574 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7574) : g.call(null, G__7574);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7573) : f.call(null, G__7573);
    };
    var G__7597__1 = function(x) {
      var G__7576 = function() {
        var G__7577 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7577) : g.call(null, G__7577);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7576) : f.call(null, G__7576);
    };
    var G__7597__2 = function(x, y) {
      var G__7579 = function() {
        var G__7580 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7580) : g.call(null, G__7580);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7579) : f.call(null, G__7579);
    };
    var G__7597__3 = function(x, y, z) {
      var G__7582 = function() {
        var G__7583 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7583) : g.call(null, G__7583);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7582) : f.call(null, G__7582);
    };
    var G__7597__4 = function() {
      var G__7598__delegate = function(x, y, z, args) {
        var G__7585 = function() {
          var G__7586 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__7586) : g.call(null, G__7586);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7585) : f.call(null, G__7585);
      };
      var G__7598 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7599__i = 0, G__7599__a = new Array(arguments.length - 3);
          while (G__7599__i < G__7599__a.length) {
            G__7599__a[G__7599__i] = arguments[G__7599__i + 3];
            ++G__7599__i;
          }
          args = new cljs.core.IndexedSeq(G__7599__a, 0);
        }
        return G__7598__delegate.call(this, x, y, z, args);
      };
      G__7598.cljs$lang$maxFixedArity = 3;
      G__7598.cljs$lang$applyTo = function(arglist__7600) {
        var x = cljs.core.first(arglist__7600);
        arglist__7600 = cljs.core.next(arglist__7600);
        var y = cljs.core.first(arglist__7600);
        arglist__7600 = cljs.core.next(arglist__7600);
        var z = cljs.core.first(arglist__7600);
        var args = cljs.core.rest(arglist__7600);
        return G__7598__delegate(x, y, z, args);
      };
      G__7598.cljs$core$IFn$_invoke$arity$variadic = G__7598__delegate;
      return G__7598;
    }();
    G__7597 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__7597__0.call(this);
        case 1:
          return G__7597__1.call(this, x);
        case 2:
          return G__7597__2.call(this, x, y);
        case 3:
          return G__7597__3.call(this, x, y, z);
        default:
          var G__7601 = null;
          if (arguments.length > 3) {
            var G__7602__i = 0, G__7602__a = new Array(arguments.length - 3);
            while (G__7602__i < G__7602__a.length) {
              G__7602__a[G__7602__i] = arguments[G__7602__i + 3];
              ++G__7602__i;
            }
            G__7601 = new cljs.core.IndexedSeq(G__7602__a, 0);
          }
          return G__7597__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7601);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7597.cljs$lang$maxFixedArity = 3;
    G__7597.cljs$lang$applyTo = G__7597__4.cljs$lang$applyTo;
    G__7597.cljs$core$IFn$_invoke$arity$0 = G__7597__0;
    G__7597.cljs$core$IFn$_invoke$arity$1 = G__7597__1;
    G__7597.cljs$core$IFn$_invoke$arity$2 = G__7597__2;
    G__7597.cljs$core$IFn$_invoke$arity$3 = G__7597__3;
    G__7597.cljs$core$IFn$_invoke$arity$variadic = G__7597__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7597;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__7603__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__7604 = cljs.core.first(fs__$2).call(null, ret);
            var G__7605 = cljs.core.next(fs__$2);
            ret = G__7604;
            fs__$2 = G__7605;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__7603 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__7606__i = 0, G__7606__a = new Array(arguments.length - 0);
          while (G__7606__i < G__7606__a.length) {
            G__7606__a[G__7606__i] = arguments[G__7606__i + 0];
            ++G__7606__i;
          }
          args = new cljs.core.IndexedSeq(G__7606__a, 0);
        }
        return G__7603__delegate.call(this, args);
      };
      G__7603.cljs$lang$maxFixedArity = 0;
      G__7603.cljs$lang$applyTo = function(arglist__7607) {
        var args = cljs.core.seq(arglist__7607);
        return G__7603__delegate(args);
      };
      G__7603.cljs$core$IFn$_invoke$arity$variadic = G__7603__delegate;
      return G__7603;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq7561) {
  var G__7562 = cljs.core.first(seq7561);
  var seq7561__$1 = cljs.core.next(seq7561);
  var G__7563 = cljs.core.first(seq7561__$1);
  var seq7561__$2 = cljs.core.next(seq7561__$1);
  var G__7564 = cljs.core.first(seq7561__$2);
  var seq7561__$3 = cljs.core.next(seq7561__$2);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(G__7562, G__7563, G__7564, seq7561__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial() {
  var args7608 = [];
  var len__5181__auto___7616 = arguments.length;
  var i__5182__auto___7617 = 0;
  while (true) {
    if (i__5182__auto___7617 < len__5181__auto___7616) {
      args7608.push(arguments[i__5182__auto___7617]);
      var G__7618 = i__5182__auto___7617 + 1;
      i__5182__auto___7617 = G__7618;
      continue;
    } else {
    }
    break;
  }
  var G__7615 = args7608.length;
  switch(G__7615) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7608.slice(4), 0);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5200__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__7620 = null;
    var G__7620__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__7620__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__7620__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__7620__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__7620__4 = function() {
      var G__7621__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
      };
      var G__7621 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7622__i = 0, G__7622__a = new Array(arguments.length - 3);
          while (G__7622__i < G__7622__a.length) {
            G__7622__a[G__7622__i] = arguments[G__7622__i + 3];
            ++G__7622__i;
          }
          args = new cljs.core.IndexedSeq(G__7622__a, 0);
        }
        return G__7621__delegate.call(this, x, y, z, args);
      };
      G__7621.cljs$lang$maxFixedArity = 3;
      G__7621.cljs$lang$applyTo = function(arglist__7623) {
        var x = cljs.core.first(arglist__7623);
        arglist__7623 = cljs.core.next(arglist__7623);
        var y = cljs.core.first(arglist__7623);
        arglist__7623 = cljs.core.next(arglist__7623);
        var z = cljs.core.first(arglist__7623);
        var args = cljs.core.rest(arglist__7623);
        return G__7621__delegate(x, y, z, args);
      };
      G__7621.cljs$core$IFn$_invoke$arity$variadic = G__7621__delegate;
      return G__7621;
    }();
    G__7620 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__7620__0.call(this);
        case 1:
          return G__7620__1.call(this, x);
        case 2:
          return G__7620__2.call(this, x, y);
        case 3:
          return G__7620__3.call(this, x, y, z);
        default:
          var G__7624 = null;
          if (arguments.length > 3) {
            var G__7625__i = 0, G__7625__a = new Array(arguments.length - 3);
            while (G__7625__i < G__7625__a.length) {
              G__7625__a[G__7625__i] = arguments[G__7625__i + 3];
              ++G__7625__i;
            }
            G__7624 = new cljs.core.IndexedSeq(G__7625__a, 0);
          }
          return G__7620__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7624);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7620.cljs$lang$maxFixedArity = 3;
    G__7620.cljs$lang$applyTo = G__7620__4.cljs$lang$applyTo;
    G__7620.cljs$core$IFn$_invoke$arity$0 = G__7620__0;
    G__7620.cljs$core$IFn$_invoke$arity$1 = G__7620__1;
    G__7620.cljs$core$IFn$_invoke$arity$2 = G__7620__2;
    G__7620.cljs$core$IFn$_invoke$arity$3 = G__7620__3;
    G__7620.cljs$core$IFn$_invoke$arity$variadic = G__7620__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7620;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__7626 = null;
    var G__7626__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__7626__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__7626__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__7626__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__7626__4 = function() {
      var G__7627__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
      };
      var G__7627 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7628__i = 0, G__7628__a = new Array(arguments.length - 3);
          while (G__7628__i < G__7628__a.length) {
            G__7628__a[G__7628__i] = arguments[G__7628__i + 3];
            ++G__7628__i;
          }
          args = new cljs.core.IndexedSeq(G__7628__a, 0);
        }
        return G__7627__delegate.call(this, x, y, z, args);
      };
      G__7627.cljs$lang$maxFixedArity = 3;
      G__7627.cljs$lang$applyTo = function(arglist__7629) {
        var x = cljs.core.first(arglist__7629);
        arglist__7629 = cljs.core.next(arglist__7629);
        var y = cljs.core.first(arglist__7629);
        arglist__7629 = cljs.core.next(arglist__7629);
        var z = cljs.core.first(arglist__7629);
        var args = cljs.core.rest(arglist__7629);
        return G__7627__delegate(x, y, z, args);
      };
      G__7627.cljs$core$IFn$_invoke$arity$variadic = G__7627__delegate;
      return G__7627;
    }();
    G__7626 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__7626__0.call(this);
        case 1:
          return G__7626__1.call(this, x);
        case 2:
          return G__7626__2.call(this, x, y);
        case 3:
          return G__7626__3.call(this, x, y, z);
        default:
          var G__7630 = null;
          if (arguments.length > 3) {
            var G__7631__i = 0, G__7631__a = new Array(arguments.length - 3);
            while (G__7631__i < G__7631__a.length) {
              G__7631__a[G__7631__i] = arguments[G__7631__i + 3];
              ++G__7631__i;
            }
            G__7630 = new cljs.core.IndexedSeq(G__7631__a, 0);
          }
          return G__7626__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7630);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7626.cljs$lang$maxFixedArity = 3;
    G__7626.cljs$lang$applyTo = G__7626__4.cljs$lang$applyTo;
    G__7626.cljs$core$IFn$_invoke$arity$0 = G__7626__0;
    G__7626.cljs$core$IFn$_invoke$arity$1 = G__7626__1;
    G__7626.cljs$core$IFn$_invoke$arity$2 = G__7626__2;
    G__7626.cljs$core$IFn$_invoke$arity$3 = G__7626__3;
    G__7626.cljs$core$IFn$_invoke$arity$variadic = G__7626__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7626;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__7632 = null;
    var G__7632__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__7632__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__7632__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__7632__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__7632__4 = function() {
      var G__7633__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
      };
      var G__7633 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7634__i = 0, G__7634__a = new Array(arguments.length - 3);
          while (G__7634__i < G__7634__a.length) {
            G__7634__a[G__7634__i] = arguments[G__7634__i + 3];
            ++G__7634__i;
          }
          args = new cljs.core.IndexedSeq(G__7634__a, 0);
        }
        return G__7633__delegate.call(this, x, y, z, args);
      };
      G__7633.cljs$lang$maxFixedArity = 3;
      G__7633.cljs$lang$applyTo = function(arglist__7635) {
        var x = cljs.core.first(arglist__7635);
        arglist__7635 = cljs.core.next(arglist__7635);
        var y = cljs.core.first(arglist__7635);
        arglist__7635 = cljs.core.next(arglist__7635);
        var z = cljs.core.first(arglist__7635);
        var args = cljs.core.rest(arglist__7635);
        return G__7633__delegate(x, y, z, args);
      };
      G__7633.cljs$core$IFn$_invoke$arity$variadic = G__7633__delegate;
      return G__7633;
    }();
    G__7632 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__7632__0.call(this);
        case 1:
          return G__7632__1.call(this, x);
        case 2:
          return G__7632__2.call(this, x, y);
        case 3:
          return G__7632__3.call(this, x, y, z);
        default:
          var G__7636 = null;
          if (arguments.length > 3) {
            var G__7637__i = 0, G__7637__a = new Array(arguments.length - 3);
            while (G__7637__i < G__7637__a.length) {
              G__7637__a[G__7637__i] = arguments[G__7637__i + 3];
              ++G__7637__i;
            }
            G__7636 = new cljs.core.IndexedSeq(G__7637__a, 0);
          }
          return G__7632__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7636);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7632.cljs$lang$maxFixedArity = 3;
    G__7632.cljs$lang$applyTo = G__7632__4.cljs$lang$applyTo;
    G__7632.cljs$core$IFn$_invoke$arity$0 = G__7632__0;
    G__7632.cljs$core$IFn$_invoke$arity$1 = G__7632__1;
    G__7632.cljs$core$IFn$_invoke$arity$2 = G__7632__2;
    G__7632.cljs$core$IFn$_invoke$arity$3 = G__7632__3;
    G__7632.cljs$core$IFn$_invoke$arity$variadic = G__7632__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7632;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__7638__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__7638 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__7639__i = 0, G__7639__a = new Array(arguments.length - 0);
        while (G__7639__i < G__7639__a.length) {
          G__7639__a[G__7639__i] = arguments[G__7639__i + 0];
          ++G__7639__i;
        }
        args = new cljs.core.IndexedSeq(G__7639__a, 0);
      }
      return G__7638__delegate.call(this, args);
    };
    G__7638.cljs$lang$maxFixedArity = 0;
    G__7638.cljs$lang$applyTo = function(arglist__7640) {
      var args = cljs.core.seq(arglist__7640);
      return G__7638__delegate(args);
    };
    G__7638.cljs$core$IFn$_invoke$arity$variadic = G__7638__delegate;
    return G__7638;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq7609) {
  var G__7610 = cljs.core.first(seq7609);
  var seq7609__$1 = cljs.core.next(seq7609);
  var G__7611 = cljs.core.first(seq7609__$1);
  var seq7609__$2 = cljs.core.next(seq7609__$1);
  var G__7612 = cljs.core.first(seq7609__$2);
  var seq7609__$3 = cljs.core.next(seq7609__$2);
  var G__7613 = cljs.core.first(seq7609__$3);
  var seq7609__$4 = cljs.core.next(seq7609__$3);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(G__7610, G__7611, G__7612, G__7613, seq7609__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil() {
  var args7641 = [];
  var len__5181__auto___7660 = arguments.length;
  var i__5182__auto___7661 = 0;
  while (true) {
    if (i__5182__auto___7661 < len__5181__auto___7660) {
      args7641.push(arguments[i__5182__auto___7661]);
      var G__7662 = i__5182__auto___7661 + 1;
      i__5182__auto___7661 = G__7662;
      continue;
    } else {
    }
    break;
  }
  var G__7643 = args7641.length;
  switch(G__7643) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7641.length)].join(""));;
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__7664 = null;
    var G__7664__1 = function(a) {
      var G__7644 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7644) : f.call(null, G__7644);
    };
    var G__7664__2 = function(a, b) {
      var G__7645 = a == null ? x : a;
      var G__7646 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7645, G__7646) : f.call(null, G__7645, G__7646);
    };
    var G__7664__3 = function(a, b, c) {
      var G__7647 = a == null ? x : a;
      var G__7648 = b;
      var G__7649 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7647, G__7648, G__7649) : f.call(null, G__7647, G__7648, G__7649);
    };
    var G__7664__4 = function() {
      var G__7665__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__7665 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__7666__i = 0, G__7666__a = new Array(arguments.length - 3);
          while (G__7666__i < G__7666__a.length) {
            G__7666__a[G__7666__i] = arguments[G__7666__i + 3];
            ++G__7666__i;
          }
          ds = new cljs.core.IndexedSeq(G__7666__a, 0);
        }
        return G__7665__delegate.call(this, a, b, c, ds);
      };
      G__7665.cljs$lang$maxFixedArity = 3;
      G__7665.cljs$lang$applyTo = function(arglist__7667) {
        var a = cljs.core.first(arglist__7667);
        arglist__7667 = cljs.core.next(arglist__7667);
        var b = cljs.core.first(arglist__7667);
        arglist__7667 = cljs.core.next(arglist__7667);
        var c = cljs.core.first(arglist__7667);
        var ds = cljs.core.rest(arglist__7667);
        return G__7665__delegate(a, b, c, ds);
      };
      G__7665.cljs$core$IFn$_invoke$arity$variadic = G__7665__delegate;
      return G__7665;
    }();
    G__7664 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__7664__1.call(this, a);
        case 2:
          return G__7664__2.call(this, a, b);
        case 3:
          return G__7664__3.call(this, a, b, c);
        default:
          var G__7668 = null;
          if (arguments.length > 3) {
            var G__7669__i = 0, G__7669__a = new Array(arguments.length - 3);
            while (G__7669__i < G__7669__a.length) {
              G__7669__a[G__7669__i] = arguments[G__7669__i + 3];
              ++G__7669__i;
            }
            G__7668 = new cljs.core.IndexedSeq(G__7669__a, 0);
          }
          return G__7664__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__7668);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7664.cljs$lang$maxFixedArity = 3;
    G__7664.cljs$lang$applyTo = G__7664__4.cljs$lang$applyTo;
    G__7664.cljs$core$IFn$_invoke$arity$1 = G__7664__1;
    G__7664.cljs$core$IFn$_invoke$arity$2 = G__7664__2;
    G__7664.cljs$core$IFn$_invoke$arity$3 = G__7664__3;
    G__7664.cljs$core$IFn$_invoke$arity$variadic = G__7664__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7664;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__7670 = null;
    var G__7670__2 = function(a, b) {
      var G__7650 = a == null ? x : a;
      var G__7651 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7650, G__7651) : f.call(null, G__7650, G__7651);
    };
    var G__7670__3 = function(a, b, c) {
      var G__7652 = a == null ? x : a;
      var G__7653 = b == null ? y : b;
      var G__7654 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7652, G__7653, G__7654) : f.call(null, G__7652, G__7653, G__7654);
    };
    var G__7670__4 = function() {
      var G__7671__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__7671 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__7672__i = 0, G__7672__a = new Array(arguments.length - 3);
          while (G__7672__i < G__7672__a.length) {
            G__7672__a[G__7672__i] = arguments[G__7672__i + 3];
            ++G__7672__i;
          }
          ds = new cljs.core.IndexedSeq(G__7672__a, 0);
        }
        return G__7671__delegate.call(this, a, b, c, ds);
      };
      G__7671.cljs$lang$maxFixedArity = 3;
      G__7671.cljs$lang$applyTo = function(arglist__7673) {
        var a = cljs.core.first(arglist__7673);
        arglist__7673 = cljs.core.next(arglist__7673);
        var b = cljs.core.first(arglist__7673);
        arglist__7673 = cljs.core.next(arglist__7673);
        var c = cljs.core.first(arglist__7673);
        var ds = cljs.core.rest(arglist__7673);
        return G__7671__delegate(a, b, c, ds);
      };
      G__7671.cljs$core$IFn$_invoke$arity$variadic = G__7671__delegate;
      return G__7671;
    }();
    G__7670 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__7670__2.call(this, a, b);
        case 3:
          return G__7670__3.call(this, a, b, c);
        default:
          var G__7674 = null;
          if (arguments.length > 3) {
            var G__7675__i = 0, G__7675__a = new Array(arguments.length - 3);
            while (G__7675__i < G__7675__a.length) {
              G__7675__a[G__7675__i] = arguments[G__7675__i + 3];
              ++G__7675__i;
            }
            G__7674 = new cljs.core.IndexedSeq(G__7675__a, 0);
          }
          return G__7670__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__7674);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7670.cljs$lang$maxFixedArity = 3;
    G__7670.cljs$lang$applyTo = G__7670__4.cljs$lang$applyTo;
    G__7670.cljs$core$IFn$_invoke$arity$2 = G__7670__2;
    G__7670.cljs$core$IFn$_invoke$arity$3 = G__7670__3;
    G__7670.cljs$core$IFn$_invoke$arity$variadic = G__7670__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7670;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__7676 = null;
    var G__7676__2 = function(a, b) {
      var G__7655 = a == null ? x : a;
      var G__7656 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7655, G__7656) : f.call(null, G__7655, G__7656);
    };
    var G__7676__3 = function(a, b, c) {
      var G__7657 = a == null ? x : a;
      var G__7658 = b == null ? y : b;
      var G__7659 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7657, G__7658, G__7659) : f.call(null, G__7657, G__7658, G__7659);
    };
    var G__7676__4 = function() {
      var G__7677__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__7677 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__7678__i = 0, G__7678__a = new Array(arguments.length - 3);
          while (G__7678__i < G__7678__a.length) {
            G__7678__a[G__7678__i] = arguments[G__7678__i + 3];
            ++G__7678__i;
          }
          ds = new cljs.core.IndexedSeq(G__7678__a, 0);
        }
        return G__7677__delegate.call(this, a, b, c, ds);
      };
      G__7677.cljs$lang$maxFixedArity = 3;
      G__7677.cljs$lang$applyTo = function(arglist__7679) {
        var a = cljs.core.first(arglist__7679);
        arglist__7679 = cljs.core.next(arglist__7679);
        var b = cljs.core.first(arglist__7679);
        arglist__7679 = cljs.core.next(arglist__7679);
        var c = cljs.core.first(arglist__7679);
        var ds = cljs.core.rest(arglist__7679);
        return G__7677__delegate(a, b, c, ds);
      };
      G__7677.cljs$core$IFn$_invoke$arity$variadic = G__7677__delegate;
      return G__7677;
    }();
    G__7676 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__7676__2.call(this, a, b);
        case 3:
          return G__7676__3.call(this, a, b, c);
        default:
          var G__7680 = null;
          if (arguments.length > 3) {
            var G__7681__i = 0, G__7681__a = new Array(arguments.length - 3);
            while (G__7681__i < G__7681__a.length) {
              G__7681__a[G__7681__i] = arguments[G__7681__i + 3];
              ++G__7681__i;
            }
            G__7680 = new cljs.core.IndexedSeq(G__7681__a, 0);
          }
          return G__7676__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__7680);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7676.cljs$lang$maxFixedArity = 3;
    G__7676.cljs$lang$applyTo = G__7676__4.cljs$lang$applyTo;
    G__7676.cljs$core$IFn$_invoke$arity$2 = G__7676__2;
    G__7676.cljs$core$IFn$_invoke$arity$3 = G__7676__3;
    G__7676.cljs$core$IFn$_invoke$arity$variadic = G__7676__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__7676;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed() {
  var args7682 = [];
  var len__5181__auto___7715 = arguments.length;
  var i__5182__auto___7716 = 0;
  while (true) {
    if (i__5182__auto___7716 < len__5181__auto___7715) {
      args7682.push(arguments[i__5182__auto___7716]);
      var G__7717 = i__5182__auto___7716 + 1;
      i__5182__auto___7716 = G__7717;
      continue;
    } else {
    }
    break;
  }
  var G__7684 = args7682.length;
  switch(G__7684) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7682.length)].join(""));;
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(-1) : cljs.core.volatile_BANG_.call(null, -1);
    return function(i) {
      return function() {
        var G__7719 = null;
        var G__7719__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__7719__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__7719__2 = function(result, input) {
          var G__7687 = result;
          var G__7688 = function() {
            var G__7689 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
            var G__7690 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7689, G__7690) : f.call(null, G__7689, G__7690);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7687, G__7688) : rf.call(null, G__7687, G__7688);
        };
        G__7719 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__7719__0.call(this);
            case 1:
              return G__7719__1.call(this, result);
            case 2:
              return G__7719__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__7719.cljs$core$IFn$_invoke$arity$0 = G__7719__0;
        G__7719.cljs$core$IFn$_invoke$arity$1 = G__7719__1;
        G__7719.cljs$core$IFn$_invoke$arity$2 = G__7719__2;
        return G__7719;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5026__auto___7720 = size;
          var i_7721 = 0;
          while (true) {
            if (i_7721 < n__5026__auto___7720) {
              cljs.core.chunk_append(b, function() {
                var G__7711 = idx + i_7721;
                var G__7712 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7721);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7711, G__7712) : f.call(null, G__7711, G__7712);
              }());
              var G__7722 = i_7721 + 1;
              i_7721 = G__7722;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__7713 = idx;
            var G__7714 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7713, G__7714) : f.call(null, G__7713, G__7714);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep() {
  var args7723 = [];
  var len__5181__auto___7728 = arguments.length;
  var i__5182__auto___7729 = 0;
  while (true) {
    if (i__5182__auto___7729 < len__5181__auto___7728) {
      args7723.push(arguments[i__5182__auto___7729]);
      var G__7730 = i__5182__auto___7729 + 1;
      i__5182__auto___7729 = G__7730;
      continue;
    } else {
    }
    break;
  }
  var G__7725 = args7723.length;
  switch(G__7725) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7723.length)].join(""));;
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__7732 = null;
      var G__7732__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__7732__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__7732__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__7732 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__7732__0.call(this);
          case 1:
            return G__7732__1.call(this, result);
          case 2:
            return G__7732__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7732.cljs$core$IFn$_invoke$arity$0 = G__7732__0;
      G__7732.cljs$core$IFn$_invoke$arity$1 = G__7732__1;
      G__7732.cljs$core$IFn$_invoke$arity$2 = G__7732__2;
      return G__7732;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5026__auto___7733 = size;
        var i_7734 = 0;
        while (true) {
          if (i_7734 < n__5026__auto___7733) {
            var x_7735 = function() {
              var G__7726 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7734);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7726) : f.call(null, G__7726);
            }();
            if (x_7735 == null) {
            } else {
              cljs.core.chunk_append(b, x_7735);
            }
            var G__7736 = i_7734 + 1;
            i_7734 = G__7736;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__7727 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7727) : f.call(null, G__7727);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__7737 = cljs.core.seq(self__.watches);
  var chunk__7738 = null;
  var count__7739 = 0;
  var i__7740 = 0;
  while (true) {
    if (i__7740 < count__7739) {
      var vec__7741 = chunk__7738.cljs$core$IIndexed$_nth$arity$2(null, i__7740);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7741, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7741, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__7743 = seq__7737;
      var G__7744 = chunk__7738;
      var G__7745 = count__7739;
      var G__7746 = i__7740 + 1;
      seq__7737 = G__7743;
      chunk__7738 = G__7744;
      count__7739 = G__7745;
      i__7740 = G__7746;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__7737);
      if (temp__4425__auto__) {
        var seq__7737__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__7737__$1)) {
          var c__4926__auto__ = cljs.core.chunk_first(seq__7737__$1);
          var G__7747 = cljs.core.chunk_rest(seq__7737__$1);
          var G__7748 = c__4926__auto__;
          var G__7749 = cljs.core.count(c__4926__auto__);
          var G__7750 = 0;
          seq__7737 = G__7747;
          chunk__7738 = G__7748;
          count__7739 = G__7749;
          i__7740 = G__7750;
          continue;
        } else {
          var vec__7742 = cljs.core.first(seq__7737__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7742, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7742, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__7751 = cljs.core.next(seq__7737__$1);
          var G__7752 = null;
          var G__7753 = 0;
          var G__7754 = 0;
          seq__7737 = G__7751;
          chunk__7738 = G__7752;
          count__7739 = G__7753;
          i__7740 = G__7754;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom() {
  var args7755 = [];
  var len__5181__auto___7763 = arguments.length;
  var i__5182__auto___7764 = 0;
  while (true) {
    if (i__5182__auto___7764 < len__5181__auto___7763) {
      args7755.push(arguments[i__5182__auto___7764]);
      var G__7765 = i__5182__auto___7764 + 1;
      i__5182__auto___7764 = G__7765;
      continue;
    } else {
    }
    break;
  }
  var G__7759 = args7755.length;
  switch(G__7759) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7755.slice(1), 0);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5200__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__7760) {
  var map__7761 = p__7760;
  var map__7761__$1 = (!(map__7761 == null) ? map__7761.cljs$lang$protocol_mask$partition0$ & 64 || map__7761.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__7761) : map__7761;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7761__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7761__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq7756) {
  var G__7757 = cljs.core.first(seq7756);
  var seq7756__$1 = cljs.core.next(seq7756);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(G__7757, seq7756__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__7768 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__7768) : cljs.core.pr_str.call(null, G__7768);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_() {
  var args7769 = [];
  var len__5181__auto___7783 = arguments.length;
  var i__5182__auto___7784 = 0;
  while (true) {
    if (i__5182__auto___7784 < len__5181__auto___7783) {
      args7769.push(arguments[i__5182__auto___7784]);
      var G__7785 = i__5182__auto___7784 + 1;
      i__5182__auto___7784 = G__7785;
      continue;
    } else {
    }
    break;
  }
  var G__7776 = args7769.length;
  switch(G__7776) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7769.slice(4), 0);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5200__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__7777 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7777) : f.call(null, G__7777);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__7778 = a.state;
      var G__7779 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7778, G__7779) : f.call(null, G__7778, G__7779);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__7780 = a.state;
      var G__7781 = x;
      var G__7782 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7780, G__7781, G__7782) : f.call(null, G__7780, G__7781, G__7782);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq7770) {
  var G__7771 = cljs.core.first(seq7770);
  var seq7770__$1 = cljs.core.next(seq7770);
  var G__7772 = cljs.core.first(seq7770__$1);
  var seq7770__$2 = cljs.core.next(seq7770__$1);
  var G__7773 = cljs.core.first(seq7770__$2);
  var seq7770__$3 = cljs.core.next(seq7770__$2);
  var G__7774 = cljs.core.first(seq7770__$3);
  var seq7770__$4 = cljs.core.next(seq7770__$3);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__7771, G__7772, G__7773, G__7774, seq7770__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed() {
  var args7787 = [];
  var len__5181__auto___7818 = arguments.length;
  var i__5182__auto___7819 = 0;
  while (true) {
    if (i__5182__auto___7819 < len__5181__auto___7818) {
      args7787.push(arguments[i__5182__auto___7819]);
      var G__7820 = i__5182__auto___7819 + 1;
      i__5182__auto___7819 = G__7820;
      continue;
    } else {
    }
    break;
  }
  var G__7789 = args7787.length;
  switch(G__7789) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7787.length)].join(""));;
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__7822 = null;
        var G__7822__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__7822__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__7822__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
          if (v == null) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          }
        };
        G__7822 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__7822__0.call(this);
            case 1:
              return G__7822__1.call(this, result);
            case 2:
              return G__7822__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__7822.cljs$core$IFn$_invoke$arity$0 = G__7822__0;
        G__7822.cljs$core$IFn$_invoke$arity$1 = G__7822__1;
        G__7822.cljs$core$IFn$_invoke$arity$2 = G__7822__2;
        return G__7822;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5026__auto___7823 = size;
          var i_7824 = 0;
          while (true) {
            if (i_7824 < n__5026__auto___7823) {
              var x_7825 = function() {
                var G__7814 = idx + i_7824;
                var G__7815 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7824);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7814, G__7815) : f.call(null, G__7814, G__7815);
              }();
              if (x_7825 == null) {
              } else {
                cljs.core.chunk_append(b, x_7825);
              }
              var G__7826 = i_7824 + 1;
              i_7824 = G__7826;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__7816 = idx;
            var G__7817 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7816, G__7817) : f.call(null, G__7816, G__7817);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred() {
  var args7833 = [];
  var len__5181__auto___7840 = arguments.length;
  var i__5182__auto___7841 = 0;
  while (true) {
    if (i__5182__auto___7841 < len__5181__auto___7840) {
      args7833.push(arguments[i__5182__auto___7841]);
      var G__7842 = i__5182__auto___7841 + 1;
      i__5182__auto___7841 = G__7842;
      continue;
    } else {
    }
    break;
  }
  var G__7839 = args7833.length;
  switch(G__7839) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7833.slice(3), 0);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5200__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4130__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4130__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__4130__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4130__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4130__auto__)) {
          var and__4130__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__4130__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__4130__auto____$1;
          }
        } else {
          return and__4130__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__7844__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4130__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4130__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__4130__auto__;
          }
        }());
      };
      var G__7844 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7845__i = 0, G__7845__a = new Array(arguments.length - 3);
          while (G__7845__i < G__7845__a.length) {
            G__7845__a[G__7845__i] = arguments[G__7845__i + 3];
            ++G__7845__i;
          }
          args = new cljs.core.IndexedSeq(G__7845__a, 0);
        }
        return G__7844__delegate.call(this, x, y, z, args);
      };
      G__7844.cljs$lang$maxFixedArity = 3;
      G__7844.cljs$lang$applyTo = function(arglist__7846) {
        var x = cljs.core.first(arglist__7846);
        arglist__7846 = cljs.core.next(arglist__7846);
        var y = cljs.core.first(arglist__7846);
        arglist__7846 = cljs.core.next(arglist__7846);
        var z = cljs.core.first(arglist__7846);
        var args = cljs.core.rest(arglist__7846);
        return G__7844__delegate(x, y, z, args);
      };
      G__7844.cljs$core$IFn$_invoke$arity$variadic = G__7844__delegate;
      return G__7844;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__7847 = null;
          if (arguments.length > 3) {
            var G__7848__i = 0, G__7848__a = new Array(arguments.length - 3);
            while (G__7848__i < G__7848__a.length) {
              G__7848__a[G__7848__i] = arguments[G__7848__i + 3];
              ++G__7848__i;
            }
            G__7847 = new cljs.core.IndexedSeq(G__7848__a, 0);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7847);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4130__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4130__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__4130__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4130__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4130__auto__)) {
          var and__4130__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4130__auto____$1)) {
            var and__4130__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__4130__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__4130__auto____$2;
            }
          } else {
            return and__4130__auto____$1;
          }
        } else {
          return and__4130__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4130__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4130__auto__)) {
          var and__4130__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4130__auto____$1)) {
            var and__4130__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__4130__auto____$2)) {
              var and__4130__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__4130__auto____$3)) {
                var and__4130__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4130__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__4130__auto____$4;
                }
              } else {
                return and__4130__auto____$3;
              }
            } else {
              return and__4130__auto____$2;
            }
          } else {
            return and__4130__auto____$1;
          }
        } else {
          return and__4130__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__7849__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4130__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4130__auto__)) {
            return cljs.core.every_QMARK_(function(and__4130__auto__) {
              return function(p1__7827_SHARP_) {
                var and__4130__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__7827_SHARP_) : p1.call(null, p1__7827_SHARP_);
                if (cljs.core.truth_(and__4130__auto____$1)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__7827_SHARP_) : p2.call(null, p1__7827_SHARP_);
                } else {
                  return and__4130__auto____$1;
                }
              };
            }(and__4130__auto__), args);
          } else {
            return and__4130__auto__;
          }
        }());
      };
      var G__7849 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7850__i = 0, G__7850__a = new Array(arguments.length - 3);
          while (G__7850__i < G__7850__a.length) {
            G__7850__a[G__7850__i] = arguments[G__7850__i + 3];
            ++G__7850__i;
          }
          args = new cljs.core.IndexedSeq(G__7850__a, 0);
        }
        return G__7849__delegate.call(this, x, y, z, args);
      };
      G__7849.cljs$lang$maxFixedArity = 3;
      G__7849.cljs$lang$applyTo = function(arglist__7851) {
        var x = cljs.core.first(arglist__7851);
        arglist__7851 = cljs.core.next(arglist__7851);
        var y = cljs.core.first(arglist__7851);
        arglist__7851 = cljs.core.next(arglist__7851);
        var z = cljs.core.first(arglist__7851);
        var args = cljs.core.rest(arglist__7851);
        return G__7849__delegate(x, y, z, args);
      };
      G__7849.cljs$core$IFn$_invoke$arity$variadic = G__7849__delegate;
      return G__7849;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__7852 = null;
          if (arguments.length > 3) {
            var G__7853__i = 0, G__7853__a = new Array(arguments.length - 3);
            while (G__7853__i < G__7853__a.length) {
              G__7853__a[G__7853__i] = arguments[G__7853__i + 3];
              ++G__7853__i;
            }
            G__7852 = new cljs.core.IndexedSeq(G__7853__a, 0);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7852);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4130__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4130__auto__)) {
          var and__4130__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4130__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__4130__auto____$1;
          }
        } else {
          return and__4130__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4130__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4130__auto__)) {
          var and__4130__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4130__auto____$1)) {
            var and__4130__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4130__auto____$2)) {
              var and__4130__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4130__auto____$3)) {
                var and__4130__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4130__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__4130__auto____$4;
                }
              } else {
                return and__4130__auto____$3;
              }
            } else {
              return and__4130__auto____$2;
            }
          } else {
            return and__4130__auto____$1;
          }
        } else {
          return and__4130__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4130__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4130__auto__)) {
          var and__4130__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4130__auto____$1)) {
            var and__4130__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4130__auto____$2)) {
              var and__4130__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4130__auto____$3)) {
                var and__4130__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4130__auto____$4)) {
                  var and__4130__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__4130__auto____$5)) {
                    var and__4130__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__4130__auto____$6)) {
                      var and__4130__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__4130__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__4130__auto____$7;
                      }
                    } else {
                      return and__4130__auto____$6;
                    }
                  } else {
                    return and__4130__auto____$5;
                  }
                } else {
                  return and__4130__auto____$4;
                }
              } else {
                return and__4130__auto____$3;
              }
            } else {
              return and__4130__auto____$2;
            }
          } else {
            return and__4130__auto____$1;
          }
        } else {
          return and__4130__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__7854__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4130__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4130__auto__)) {
            return cljs.core.every_QMARK_(function(and__4130__auto__) {
              return function(p1__7828_SHARP_) {
                var and__4130__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__7828_SHARP_) : p1.call(null, p1__7828_SHARP_);
                if (cljs.core.truth_(and__4130__auto____$1)) {
                  var and__4130__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__7828_SHARP_) : p2.call(null, p1__7828_SHARP_);
                  if (cljs.core.truth_(and__4130__auto____$2)) {
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__7828_SHARP_) : p3.call(null, p1__7828_SHARP_);
                  } else {
                    return and__4130__auto____$2;
                  }
                } else {
                  return and__4130__auto____$1;
                }
              };
            }(and__4130__auto__), args);
          } else {
            return and__4130__auto__;
          }
        }());
      };
      var G__7854 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7855__i = 0, G__7855__a = new Array(arguments.length - 3);
          while (G__7855__i < G__7855__a.length) {
            G__7855__a[G__7855__i] = arguments[G__7855__i + 3];
            ++G__7855__i;
          }
          args = new cljs.core.IndexedSeq(G__7855__a, 0);
        }
        return G__7854__delegate.call(this, x, y, z, args);
      };
      G__7854.cljs$lang$maxFixedArity = 3;
      G__7854.cljs$lang$applyTo = function(arglist__7856) {
        var x = cljs.core.first(arglist__7856);
        arglist__7856 = cljs.core.next(arglist__7856);
        var y = cljs.core.first(arglist__7856);
        arglist__7856 = cljs.core.next(arglist__7856);
        var z = cljs.core.first(arglist__7856);
        var args = cljs.core.rest(arglist__7856);
        return G__7854__delegate(x, y, z, args);
      };
      G__7854.cljs$core$IFn$_invoke$arity$variadic = G__7854__delegate;
      return G__7854;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__7857 = null;
          if (arguments.length > 3) {
            var G__7858__i = 0, G__7858__a = new Array(arguments.length - 3);
            while (G__7858__i < G__7858__a.length) {
              G__7858__a[G__7858__i] = arguments[G__7858__i + 3];
              ++G__7858__i;
            }
            G__7857 = new cljs.core.IndexedSeq(G__7858__a, 0);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7857);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__7829_SHARP_) {
            return p1__7829_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7829_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__7829_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__7830_SHARP_) {
            var and__4130__auto__ = p1__7830_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7830_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__7830_SHARP_.call(null, x);
            if (cljs.core.truth_(and__4130__auto__)) {
              return p1__7830_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7830_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__7830_SHARP_.call(null, y);
            } else {
              return and__4130__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__7831_SHARP_) {
            var and__4130__auto__ = p1__7831_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7831_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__7831_SHARP_.call(null, x);
            if (cljs.core.truth_(and__4130__auto__)) {
              var and__4130__auto____$1 = p1__7831_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7831_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__7831_SHARP_.call(null, y);
              if (cljs.core.truth_(and__4130__auto____$1)) {
                return p1__7831_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7831_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__7831_SHARP_.call(null, z);
              } else {
                return and__4130__auto____$1;
              }
            } else {
              return and__4130__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__7859__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__4130__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__4130__auto__)) {
              return cljs.core.every_QMARK_(function(and__4130__auto__, ps__$1) {
                return function(p1__7832_SHARP_) {
                  return cljs.core.every_QMARK_(p1__7832_SHARP_, args);
                };
              }(and__4130__auto__, ps__$1), ps__$1);
            } else {
              return and__4130__auto__;
            }
          }());
        };
        var G__7859 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7860__i = 0, G__7860__a = new Array(arguments.length - 3);
            while (G__7860__i < G__7860__a.length) {
              G__7860__a[G__7860__i] = arguments[G__7860__i + 3];
              ++G__7860__i;
            }
            args = new cljs.core.IndexedSeq(G__7860__a, 0);
          }
          return G__7859__delegate.call(this, x, y, z, args);
        };
        G__7859.cljs$lang$maxFixedArity = 3;
        G__7859.cljs$lang$applyTo = function(arglist__7861) {
          var x = cljs.core.first(arglist__7861);
          arglist__7861 = cljs.core.next(arglist__7861);
          var y = cljs.core.first(arglist__7861);
          arglist__7861 = cljs.core.next(arglist__7861);
          var z = cljs.core.first(arglist__7861);
          var args = cljs.core.rest(arglist__7861);
          return G__7859__delegate(x, y, z, args);
        };
        G__7859.cljs$core$IFn$_invoke$arity$variadic = G__7859__delegate;
        return G__7859;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__7862 = null;
            if (arguments.length > 3) {
              var G__7863__i = 0, G__7863__a = new Array(arguments.length - 3);
              while (G__7863__i < G__7863__a.length) {
                G__7863__a[G__7863__i] = arguments[G__7863__i + 3];
                ++G__7863__i;
              }
              G__7862 = new cljs.core.IndexedSeq(G__7863__a, 0);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7862);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq7834) {
  var G__7835 = cljs.core.first(seq7834);
  var seq7834__$1 = cljs.core.next(seq7834);
  var G__7836 = cljs.core.first(seq7834__$1);
  var seq7834__$2 = cljs.core.next(seq7834__$1);
  var G__7837 = cljs.core.first(seq7834__$2);
  var seq7834__$3 = cljs.core.next(seq7834__$2);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(G__7835, G__7836, G__7837, seq7834__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn() {
  var args7870 = [];
  var len__5181__auto___7877 = arguments.length;
  var i__5182__auto___7878 = 0;
  while (true) {
    if (i__5182__auto___7878 < len__5181__auto___7877) {
      args7870.push(arguments[i__5182__auto___7878]);
      var G__7879 = i__5182__auto___7878 + 1;
      i__5182__auto___7878 = G__7879;
      continue;
    } else {
    }
    break;
  }
  var G__7876 = args7870.length;
  switch(G__7876) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7870.slice(3), 0);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5200__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__4142__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4142__auto__)) {
        return or__4142__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__4142__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4142__auto__)) {
        return or__4142__auto__;
      } else {
        var or__4142__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__4142__auto____$1)) {
          return or__4142__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__7881__delegate = function(x, y, z, args) {
        var or__4142__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4142__auto__)) {
          return or__4142__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__7881 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7882__i = 0, G__7882__a = new Array(arguments.length - 3);
          while (G__7882__i < G__7882__a.length) {
            G__7882__a[G__7882__i] = arguments[G__7882__i + 3];
            ++G__7882__i;
          }
          args = new cljs.core.IndexedSeq(G__7882__a, 0);
        }
        return G__7881__delegate.call(this, x, y, z, args);
      };
      G__7881.cljs$lang$maxFixedArity = 3;
      G__7881.cljs$lang$applyTo = function(arglist__7883) {
        var x = cljs.core.first(arglist__7883);
        arglist__7883 = cljs.core.next(arglist__7883);
        var y = cljs.core.first(arglist__7883);
        arglist__7883 = cljs.core.next(arglist__7883);
        var z = cljs.core.first(arglist__7883);
        var args = cljs.core.rest(arglist__7883);
        return G__7881__delegate(x, y, z, args);
      };
      G__7881.cljs$core$IFn$_invoke$arity$variadic = G__7881__delegate;
      return G__7881;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__7884 = null;
          if (arguments.length > 3) {
            var G__7885__i = 0, G__7885__a = new Array(arguments.length - 3);
            while (G__7885__i < G__7885__a.length) {
              G__7885__a[G__7885__i] = arguments[G__7885__i + 3];
              ++G__7885__i;
            }
            G__7884 = new cljs.core.IndexedSeq(G__7885__a, 0);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7884);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__4142__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4142__auto__)) {
        return or__4142__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__4142__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4142__auto__)) {
        return or__4142__auto__;
      } else {
        var or__4142__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4142__auto____$1)) {
          return or__4142__auto____$1;
        } else {
          var or__4142__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__4142__auto____$2)) {
            return or__4142__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__4142__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4142__auto__)) {
        return or__4142__auto__;
      } else {
        var or__4142__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4142__auto____$1)) {
          return or__4142__auto____$1;
        } else {
          var or__4142__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__4142__auto____$2)) {
            return or__4142__auto____$2;
          } else {
            var or__4142__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__4142__auto____$3)) {
              return or__4142__auto____$3;
            } else {
              var or__4142__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4142__auto____$4)) {
                return or__4142__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__7886__delegate = function(x, y, z, args) {
        var or__4142__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4142__auto__)) {
          return or__4142__auto__;
        } else {
          return cljs.core.some(function(or__4142__auto__) {
            return function(p1__7864_SHARP_) {
              var or__4142__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__7864_SHARP_) : p1.call(null, p1__7864_SHARP_);
              if (cljs.core.truth_(or__4142__auto____$1)) {
                return or__4142__auto____$1;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__7864_SHARP_) : p2.call(null, p1__7864_SHARP_);
              }
            };
          }(or__4142__auto__), args);
        }
      };
      var G__7886 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7887__i = 0, G__7887__a = new Array(arguments.length - 3);
          while (G__7887__i < G__7887__a.length) {
            G__7887__a[G__7887__i] = arguments[G__7887__i + 3];
            ++G__7887__i;
          }
          args = new cljs.core.IndexedSeq(G__7887__a, 0);
        }
        return G__7886__delegate.call(this, x, y, z, args);
      };
      G__7886.cljs$lang$maxFixedArity = 3;
      G__7886.cljs$lang$applyTo = function(arglist__7888) {
        var x = cljs.core.first(arglist__7888);
        arglist__7888 = cljs.core.next(arglist__7888);
        var y = cljs.core.first(arglist__7888);
        arglist__7888 = cljs.core.next(arglist__7888);
        var z = cljs.core.first(arglist__7888);
        var args = cljs.core.rest(arglist__7888);
        return G__7886__delegate(x, y, z, args);
      };
      G__7886.cljs$core$IFn$_invoke$arity$variadic = G__7886__delegate;
      return G__7886;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__7889 = null;
          if (arguments.length > 3) {
            var G__7890__i = 0, G__7890__a = new Array(arguments.length - 3);
            while (G__7890__i < G__7890__a.length) {
              G__7890__a[G__7890__i] = arguments[G__7890__i + 3];
              ++G__7890__i;
            }
            G__7889 = new cljs.core.IndexedSeq(G__7890__a, 0);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7889);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__4142__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4142__auto__)) {
        return or__4142__auto__;
      } else {
        var or__4142__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4142__auto____$1)) {
          return or__4142__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__4142__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4142__auto__)) {
        return or__4142__auto__;
      } else {
        var or__4142__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4142__auto____$1)) {
          return or__4142__auto____$1;
        } else {
          var or__4142__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4142__auto____$2)) {
            return or__4142__auto____$2;
          } else {
            var or__4142__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4142__auto____$3)) {
              return or__4142__auto____$3;
            } else {
              var or__4142__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4142__auto____$4)) {
                return or__4142__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__4142__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4142__auto__)) {
        return or__4142__auto__;
      } else {
        var or__4142__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4142__auto____$1)) {
          return or__4142__auto____$1;
        } else {
          var or__4142__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4142__auto____$2)) {
            return or__4142__auto____$2;
          } else {
            var or__4142__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4142__auto____$3)) {
              return or__4142__auto____$3;
            } else {
              var or__4142__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4142__auto____$4)) {
                return or__4142__auto____$4;
              } else {
                var or__4142__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__4142__auto____$5)) {
                  return or__4142__auto____$5;
                } else {
                  var or__4142__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__4142__auto____$6)) {
                    return or__4142__auto____$6;
                  } else {
                    var or__4142__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__4142__auto____$7)) {
                      return or__4142__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__7891__delegate = function(x, y, z, args) {
        var or__4142__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4142__auto__)) {
          return or__4142__auto__;
        } else {
          return cljs.core.some(function(or__4142__auto__) {
            return function(p1__7865_SHARP_) {
              var or__4142__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__7865_SHARP_) : p1.call(null, p1__7865_SHARP_);
              if (cljs.core.truth_(or__4142__auto____$1)) {
                return or__4142__auto____$1;
              } else {
                var or__4142__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__7865_SHARP_) : p2.call(null, p1__7865_SHARP_);
                if (cljs.core.truth_(or__4142__auto____$2)) {
                  return or__4142__auto____$2;
                } else {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__7865_SHARP_) : p3.call(null, p1__7865_SHARP_);
                }
              }
            };
          }(or__4142__auto__), args);
        }
      };
      var G__7891 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__7892__i = 0, G__7892__a = new Array(arguments.length - 3);
          while (G__7892__i < G__7892__a.length) {
            G__7892__a[G__7892__i] = arguments[G__7892__i + 3];
            ++G__7892__i;
          }
          args = new cljs.core.IndexedSeq(G__7892__a, 0);
        }
        return G__7891__delegate.call(this, x, y, z, args);
      };
      G__7891.cljs$lang$maxFixedArity = 3;
      G__7891.cljs$lang$applyTo = function(arglist__7893) {
        var x = cljs.core.first(arglist__7893);
        arglist__7893 = cljs.core.next(arglist__7893);
        var y = cljs.core.first(arglist__7893);
        arglist__7893 = cljs.core.next(arglist__7893);
        var z = cljs.core.first(arglist__7893);
        var args = cljs.core.rest(arglist__7893);
        return G__7891__delegate(x, y, z, args);
      };
      G__7891.cljs$core$IFn$_invoke$arity$variadic = G__7891__delegate;
      return G__7891;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__7894 = null;
          if (arguments.length > 3) {
            var G__7895__i = 0, G__7895__a = new Array(arguments.length - 3);
            while (G__7895__i < G__7895__a.length) {
              G__7895__a[G__7895__i] = arguments[G__7895__i + 3];
              ++G__7895__i;
            }
            G__7894 = new cljs.core.IndexedSeq(G__7895__a, 0);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7894);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__7866_SHARP_) {
            return p1__7866_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7866_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__7866_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__7867_SHARP_) {
            var or__4142__auto__ = p1__7867_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7867_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__7867_SHARP_.call(null, x);
            if (cljs.core.truth_(or__4142__auto__)) {
              return or__4142__auto__;
            } else {
              return p1__7867_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7867_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__7867_SHARP_.call(null, y);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__7868_SHARP_) {
            var or__4142__auto__ = p1__7868_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7868_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__7868_SHARP_.call(null, x);
            if (cljs.core.truth_(or__4142__auto__)) {
              return or__4142__auto__;
            } else {
              var or__4142__auto____$1 = p1__7868_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7868_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__7868_SHARP_.call(null, y);
              if (cljs.core.truth_(or__4142__auto____$1)) {
                return or__4142__auto____$1;
              } else {
                return p1__7868_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__7868_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__7868_SHARP_.call(null, z);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__7896__delegate = function(x, y, z, args) {
          var or__4142__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4142__auto__)) {
            return or__4142__auto__;
          } else {
            return cljs.core.some(function(or__4142__auto__, ps__$1) {
              return function(p1__7869_SHARP_) {
                return cljs.core.some(p1__7869_SHARP_, args);
              };
            }(or__4142__auto__, ps__$1), ps__$1);
          }
        };
        var G__7896 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__7897__i = 0, G__7897__a = new Array(arguments.length - 3);
            while (G__7897__i < G__7897__a.length) {
              G__7897__a[G__7897__i] = arguments[G__7897__i + 3];
              ++G__7897__i;
            }
            args = new cljs.core.IndexedSeq(G__7897__a, 0);
          }
          return G__7896__delegate.call(this, x, y, z, args);
        };
        G__7896.cljs$lang$maxFixedArity = 3;
        G__7896.cljs$lang$applyTo = function(arglist__7898) {
          var x = cljs.core.first(arglist__7898);
          arglist__7898 = cljs.core.next(arglist__7898);
          var y = cljs.core.first(arglist__7898);
          arglist__7898 = cljs.core.next(arglist__7898);
          var z = cljs.core.first(arglist__7898);
          var args = cljs.core.rest(arglist__7898);
          return G__7896__delegate(x, y, z, args);
        };
        G__7896.cljs$core$IFn$_invoke$arity$variadic = G__7896__delegate;
        return G__7896;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__7899 = null;
            if (arguments.length > 3) {
              var G__7900__i = 0, G__7900__a = new Array(arguments.length - 3);
              while (G__7900__i < G__7900__a.length) {
                G__7900__a[G__7900__i] = arguments[G__7900__i + 3];
                ++G__7900__i;
              }
              G__7899 = new cljs.core.IndexedSeq(G__7900__a, 0);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__7899);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq7871) {
  var G__7872 = cljs.core.first(seq7871);
  var seq7871__$1 = cljs.core.next(seq7871);
  var G__7873 = cljs.core.first(seq7871__$1);
  var seq7871__$2 = cljs.core.next(seq7871__$1);
  var G__7874 = cljs.core.first(seq7871__$2);
  var seq7871__$3 = cljs.core.next(seq7871__$2);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(G__7872, G__7873, G__7874, seq7871__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map() {
  var args7902 = [];
  var len__5181__auto___7922 = arguments.length;
  var i__5182__auto___7923 = 0;
  while (true) {
    if (i__5182__auto___7923 < len__5181__auto___7922) {
      args7902.push(arguments[i__5182__auto___7923]);
      var G__7924 = i__5182__auto___7923 + 1;
      i__5182__auto___7923 = G__7924;
      continue;
    } else {
    }
    break;
  }
  var G__7909 = args7902.length;
  switch(G__7909) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7902.slice(4), 0);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5200__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__7926 = null;
      var G__7926__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__7926__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__7926__2 = function(result, input) {
        var G__7910 = result;
        var G__7911 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7910, G__7911) : rf.call(null, G__7910, G__7911);
      };
      var G__7926__3 = function() {
        var G__7927__delegate = function(result, input, inputs) {
          var G__7912 = result;
          var G__7913 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__7912, G__7913) : rf.call(null, G__7912, G__7913);
        };
        var G__7927 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__7928__i = 0, G__7928__a = new Array(arguments.length - 2);
            while (G__7928__i < G__7928__a.length) {
              G__7928__a[G__7928__i] = arguments[G__7928__i + 2];
              ++G__7928__i;
            }
            inputs = new cljs.core.IndexedSeq(G__7928__a, 0);
          }
          return G__7927__delegate.call(this, result, input, inputs);
        };
        G__7927.cljs$lang$maxFixedArity = 2;
        G__7927.cljs$lang$applyTo = function(arglist__7929) {
          var result = cljs.core.first(arglist__7929);
          arglist__7929 = cljs.core.next(arglist__7929);
          var input = cljs.core.first(arglist__7929);
          var inputs = cljs.core.rest(arglist__7929);
          return G__7927__delegate(result, input, inputs);
        };
        G__7927.cljs$core$IFn$_invoke$arity$variadic = G__7927__delegate;
        return G__7927;
      }();
      G__7926 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__7926__0.call(this);
          case 1:
            return G__7926__1.call(this, result);
          case 2:
            return G__7926__2.call(this, result, input);
          default:
            var G__7930 = null;
            if (arguments.length > 2) {
              var G__7931__i = 0, G__7931__a = new Array(arguments.length - 2);
              while (G__7931__i < G__7931__a.length) {
                G__7931__a[G__7931__i] = arguments[G__7931__i + 2];
                ++G__7931__i;
              }
              G__7930 = new cljs.core.IndexedSeq(G__7931__a, 0);
            }
            return G__7926__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__7930);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__7926.cljs$lang$maxFixedArity = 2;
      G__7926.cljs$lang$applyTo = G__7926__3.cljs$lang$applyTo;
      G__7926.cljs$core$IFn$_invoke$arity$0 = G__7926__0;
      G__7926.cljs$core$IFn$_invoke$arity$1 = G__7926__1;
      G__7926.cljs$core$IFn$_invoke$arity$2 = G__7926__2;
      G__7926.cljs$core$IFn$_invoke$arity$variadic = G__7926__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__7926;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5026__auto___7932 = size;
        var i_7933 = 0;
        while (true) {
          if (i_7933 < n__5026__auto___7932) {
            cljs.core.chunk_append(b, function() {
              var G__7914 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_7933);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7914) : f.call(null, G__7914);
            }());
            var G__7934 = i_7933 + 1;
            i_7933 = G__7934;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__7915 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7915) : f.call(null, G__7915);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__7916 = cljs.core.first(s1);
        var G__7917 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7916, G__7917) : f.call(null, G__7916, G__7917);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__7918 = cljs.core.first(s1);
        var G__7919 = cljs.core.first(s2);
        var G__7920 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__7918, G__7919, G__7920) : f.call(null, G__7918, G__7919, G__7920);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__7901_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__7901_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq7903) {
  var G__7904 = cljs.core.first(seq7903);
  var seq7903__$1 = cljs.core.next(seq7903);
  var G__7905 = cljs.core.first(seq7903__$1);
  var seq7903__$2 = cljs.core.next(seq7903__$1);
  var G__7906 = cljs.core.first(seq7903__$2);
  var seq7903__$3 = cljs.core.next(seq7903__$2);
  var G__7907 = cljs.core.first(seq7903__$3);
  var seq7903__$4 = cljs.core.next(seq7903__$3);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(G__7904, G__7905, G__7906, G__7907, seq7903__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take() {
  var args7935 = [];
  var len__5181__auto___7940 = arguments.length;
  var i__5182__auto___7941 = 0;
  while (true) {
    if (i__5182__auto___7941 < len__5181__auto___7940) {
      args7935.push(arguments[i__5182__auto___7941]);
      var G__7942 = i__5182__auto___7941 + 1;
      i__5182__auto___7941 = G__7942;
      continue;
    } else {
    }
    break;
  }
  var G__7937 = args7935.length;
  switch(G__7937) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7935.length)].join(""));;
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__7938 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__7938) : cljs.core.pr_str.call(null, G__7938);
    }())].join(""));
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__7944 = null;
        var G__7944__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__7944__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__7944__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__7944 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__7944__0.call(this);
            case 1:
              return G__7944__1.call(this, result);
            case 2:
              return G__7944__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__7944.cljs$core$IFn$_invoke$arity$0 = G__7944__0;
        G__7944.cljs$core$IFn$_invoke$arity$1 = G__7944__1;
        G__7944.cljs$core$IFn$_invoke$arity$2 = G__7944__2;
        return G__7944;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__7939 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__7939) : cljs.core.pr_str.call(null, G__7939);
    }())].join(""));
  }
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4425__auto__ = cljs.core.seq(coll);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop() {
  var args7945 = [];
  var len__5181__auto___7950 = arguments.length;
  var i__5182__auto___7951 = 0;
  while (true) {
    if (i__5182__auto___7951 < len__5181__auto___7950) {
      args7945.push(arguments[i__5182__auto___7951]);
      var G__7952 = i__5182__auto___7951 + 1;
      i__5182__auto___7951 = G__7952;
      continue;
    } else {
    }
    break;
  }
  var G__7947 = args7945.length;
  switch(G__7947) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7945.length)].join(""));;
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__7948 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__7948) : cljs.core.pr_str.call(null, G__7948);
    }())].join(""));
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__7954 = null;
        var G__7954__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__7954__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__7954__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__7954 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__7954__0.call(this);
            case 1:
              return G__7954__1.call(this, result);
            case 2:
              return G__7954__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__7954.cljs$core$IFn$_invoke$arity$0 = G__7954__0;
        G__7954.cljs$core$IFn$_invoke$arity$1 = G__7954__1;
        G__7954.cljs$core$IFn$_invoke$arity$2 = G__7954__2;
        return G__7954;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__7949 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__7949) : cljs.core.pr_str.call(null, G__7949);
    }())].join(""));
  }
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__7955 = n__$1 - 1;
        var G__7956 = cljs.core.rest(s);
        n__$1 = G__7955;
        coll__$1 = G__7956;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last() {
  var args7957 = [];
  var len__5181__auto___7960 = arguments.length;
  var i__5182__auto___7961 = 0;
  while (true) {
    if (i__5182__auto___7961 < len__5181__auto___7960) {
      args7957.push(arguments[i__5182__auto___7961]);
      var G__7962 = i__5182__auto___7961 + 1;
      i__5182__auto___7961 = G__7962;
      continue;
    } else {
    }
    break;
  }
  var G__7959 = args7957.length;
  switch(G__7959) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7957.length)].join(""));;
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__7964 = cljs.core.next(s);
      var G__7965 = cljs.core.next(lead);
      s = G__7964;
      lead = G__7965;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while() {
  var args7966 = [];
  var len__5181__auto___7971 = arguments.length;
  var i__5182__auto___7972 = 0;
  while (true) {
    if (i__5182__auto___7972 < len__5181__auto___7971) {
      args7966.push(arguments[i__5182__auto___7972]);
      var G__7973 = i__5182__auto___7972 + 1;
      i__5182__auto___7972 = G__7973;
      continue;
    } else {
    }
    break;
  }
  var G__7968 = args7966.length;
  switch(G__7968) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7966.length)].join(""));;
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__7975 = null;
        var G__7975__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__7975__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__7975__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__4130__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__4130__auto__)) {
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
            } else {
              return and__4130__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__7975 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__7975__0.call(this);
            case 1:
              return G__7975__1.call(this, result);
            case 2:
              return G__7975__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__7975.cljs$core$IFn$_invoke$arity$0 = G__7975__0;
        G__7975.cljs$core$IFn$_invoke$arity$1 = G__7975__1;
        G__7975.cljs$core$IFn$_invoke$arity$2 = G__7975__2;
        return G__7975;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__4130__auto__ = s;
        if (and__4130__auto__) {
          var G__7970 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__7970) : pred__$1.call(null, G__7970);
        } else {
          return and__4130__auto__;
        }
      }())) {
        var G__7976 = pred__$1;
        var G__7977 = cljs.core.rest(s);
        pred__$1 = G__7976;
        coll__$1 = G__7977;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function cljs$core$repeat() {
  var args7978 = [];
  var len__5181__auto___7981 = arguments.length;
  var i__5182__auto___7982 = 0;
  while (true) {
    if (i__5182__auto___7982 < len__5181__auto___7981) {
      args7978.push(arguments[i__5182__auto___7982]);
      var G__7983 = i__5182__auto___7982 + 1;
      i__5182__auto___7982 = G__7983;
      continue;
    } else {
    }
    break;
  }
  var G__7980 = args7978.length;
  switch(G__7980) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7978.length)].join(""));;
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(x, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly() {
  var args7985 = [];
  var len__5181__auto___7988 = arguments.length;
  var i__5182__auto___7989 = 0;
  while (true) {
    if (i__5182__auto___7989 < len__5181__auto___7988) {
      args7985.push(arguments[i__5182__auto___7989]);
      var G__7990 = i__5182__auto___7989 + 1;
      i__5182__auto___7989 = G__7990;
      continue;
    } else {
    }
    break;
  }
  var G__7987 = args7985.length;
  switch(G__7987) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7985.length)].join(""));;
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function cljs$core$interleave() {
  var args7994 = [];
  var len__5181__auto___8000 = arguments.length;
  var i__5182__auto___8001 = 0;
  while (true) {
    if (i__5182__auto___8001 < len__5181__auto___8000) {
      args7994.push(arguments[i__5182__auto___8001]);
      var G__8002 = i__5182__auto___8001 + 1;
      i__5182__auto___8001 = G__8002;
      continue;
    } else {
    }
    break;
  }
  var G__7999 = args7994.length;
  switch(G__7999) {
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args7994.slice(2), 0);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5200__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq7995) {
  var G__7996 = cljs.core.first(seq7995);
  var seq7995__$1 = cljs.core.next(seq7995);
  var G__7997 = cljs.core.first(seq7995__$1);
  var seq7995__$2 = cljs.core.next(seq7995__$1);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(G__7996, G__7997, seq7995__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose() {
  var args8004 = [];
  var len__5181__auto___8007 = arguments.length;
  var i__5182__auto___8008 = 0;
  while (true) {
    if (i__5182__auto___8008 < len__5181__auto___8007) {
      args8004.push(arguments[i__5182__auto___8008]);
      var G__8009 = i__5182__auto___8008 + 1;
      i__5182__auto___8008 = G__8009;
      continue;
    } else {
    }
    break;
  }
  var G__8006 = args8004.length;
  switch(G__8006) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8004.length)].join(""));;
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__8011 = null;
        var G__8011__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__8011__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__8011__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__8011 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__8011__0.call(this);
            case 1:
              return G__8011__1.call(this, result);
            case 2:
              return G__8011__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__8011.cljs$core$IFn$_invoke$arity$0 = G__8011__0;
        G__8011.cljs$core$IFn$_invoke$arity$1 = G__8011__1;
        G__8011.cljs$core$IFn$_invoke$arity$2 = G__8011__2;
        return G__8011;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4423__auto__ = cljs.core.seq(coll);
      if (temp__4423__auto__) {
        var coll__$1 = temp__4423__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat() {
  var args8020 = [];
  var len__5181__auto___8025 = arguments.length;
  var i__5182__auto___8026 = 0;
  while (true) {
    if (i__5182__auto___8026 < len__5181__auto___8025) {
      args8020.push(arguments[i__5182__auto___8026]);
      var G__8027 = i__5182__auto___8026 + 1;
      i__5182__auto___8026 = G__8027;
      continue;
    } else {
    }
    break;
  }
  var G__8024 = args8020.length;
  switch(G__8024) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args8020.slice(1), 0);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5200__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq8021) {
  var G__8022 = cljs.core.first(seq8021);
  var seq8021__$1 = cljs.core.next(seq8021);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(G__8022, seq8021__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter() {
  var args8029 = [];
  var len__5181__auto___8033 = arguments.length;
  var i__5182__auto___8034 = 0;
  while (true) {
    if (i__5182__auto___8034 < len__5181__auto___8033) {
      args8029.push(arguments[i__5182__auto___8034]);
      var G__8035 = i__5182__auto___8034 + 1;
      i__5182__auto___8034 = G__8035;
      continue;
    } else {
    }
    break;
  }
  var G__8031 = args8029.length;
  switch(G__8031) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8029.length)].join(""));;
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__8037 = null;
      var G__8037__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__8037__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__8037__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__8037 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__8037__0.call(this);
          case 1:
            return G__8037__1.call(this, result);
          case 2:
            return G__8037__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__8037.cljs$core$IFn$_invoke$arity$0 = G__8037__0;
      G__8037.cljs$core$IFn$_invoke$arity$1 = G__8037__1;
      G__8037.cljs$core$IFn$_invoke$arity$2 = G__8037__2;
      return G__8037;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5026__auto___8038 = size;
        var i_8039 = 0;
        while (true) {
          if (i_8039 < n__5026__auto___8038) {
            if (cljs.core.truth_(function() {
              var G__8032 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_8039);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8032) : pred.call(null, G__8032);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_8039));
            } else {
            }
            var G__8040 = i_8039 + 1;
            i_8039 = G__8040;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove() {
  var args8041 = [];
  var len__5181__auto___8044 = arguments.length;
  var i__5182__auto___8045 = 0;
  while (true) {
    if (i__5182__auto___8045 < len__5181__auto___8044) {
      args8041.push(arguments[i__5182__auto___8045]);
      var G__8046 = i__5182__auto___8045 + 1;
      i__5182__auto___8045 = G__8046;
      continue;
    } else {
    }
    break;
  }
  var G__8043 = args8041.length;
  switch(G__8043) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8041.length)].join(""));;
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__8048_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__8048_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into() {
  var args8049 = [];
  var len__5181__auto___8054 = arguments.length;
  var i__5182__auto___8055 = 0;
  while (true) {
    if (i__5182__auto___8055 < len__5181__auto___8054) {
      args8049.push(arguments[i__5182__auto___8055]);
      var G__8056 = i__5182__auto___8055 + 1;
      i__5182__auto___8055 = G__8056;
      continue;
    } else {
    }
    break;
  }
  var G__8051 = args8049.length;
  switch(G__8051) {
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8049.length)].join(""));;
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv() {
  var args8058 = [];
  var len__5181__auto___8066 = arguments.length;
  var i__5182__auto___8067 = 0;
  while (true) {
    if (i__5182__auto___8067 < len__5181__auto___8066) {
      args8058.push(arguments[i__5182__auto___8067]);
      var G__8068 = i__5182__auto___8067 + 1;
      i__5182__auto___8067 = G__8068;
      continue;
    } else {
    }
    break;
  }
  var G__8065 = args8058.length;
  switch(G__8065) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args8058.slice(4), 0);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5200__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq8059) {
  var G__8060 = cljs.core.first(seq8059);
  var seq8059__$1 = cljs.core.next(seq8059);
  var G__8061 = cljs.core.first(seq8059__$1);
  var seq8059__$2 = cljs.core.next(seq8059__$1);
  var G__8062 = cljs.core.first(seq8059__$2);
  var seq8059__$3 = cljs.core.next(seq8059__$2);
  var G__8063 = cljs.core.first(seq8059__$3);
  var seq8059__$4 = cljs.core.next(seq8059__$3);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(G__8060, G__8061, G__8062, G__8063, seq8059__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition() {
  var args8070 = [];
  var len__5181__auto___8073 = arguments.length;
  var i__5182__auto___8074 = 0;
  while (true) {
    if (i__5182__auto___8074 < len__5181__auto___8073) {
      args8070.push(arguments[i__5182__auto___8074]);
      var G__8075 = i__5182__auto___8074 + 1;
      i__5182__auto___8074 = G__8075;
      continue;
    } else {
    }
    break;
  }
  var G__8072 = args8070.length;
  switch(G__8072) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8070.length)].join(""));;
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in() {
  var args8077 = [];
  var len__5181__auto___8081 = arguments.length;
  var i__5182__auto___8082 = 0;
  while (true) {
    if (i__5182__auto___8082 < len__5181__auto___8081) {
      args8077.push(arguments[i__5182__auto___8082]);
      var G__8083 = i__5182__auto___8082 + 1;
      i__5182__auto___8082 = G__8083;
      continue;
    } else {
    }
    break;
  }
  var G__8079 = args8077.length;
  switch(G__8079) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8077.length)].join(""));;
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (ks__$1) {
      if (!(!(m__$1 == null) ? m__$1.cljs$lang$protocol_mask$partition0$ & 256 || m__$1.cljs$core$ILookup$ ? true : !m__$1.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1))) {
        return not_found;
      } else {
        var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
        if (sentinel === m__$2) {
          return not_found;
        } else {
          var G__8085 = sentinel;
          var G__8086 = m__$2;
          var G__8087 = cljs.core.next(ks__$1);
          sentinel = G__8085;
          m__$1 = G__8086;
          ks__$1 = G__8087;
          continue;
        }
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__8088, v) {
  var vec__8093 = p__8088;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8093, 0, null);
  var ks = cljs.core.nthnext(vec__8093, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in() {
  var args8094 = [];
  var len__5181__auto___8124 = arguments.length;
  var i__5182__auto___8125 = 0;
  while (true) {
    if (i__5182__auto___8125 < len__5181__auto___8124) {
      args8094.push(arguments[i__5182__auto___8125]);
      var G__8126 = i__5182__auto___8125 + 1;
      i__5182__auto___8125 = G__8126;
      continue;
    } else {
    }
    break;
  }
  var G__8103 = args8094.length;
  switch(G__8103) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args8094.slice(6), 0);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5200__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__8104, f) {
  var vec__8105 = p__8104;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8105, 0, null);
  var ks = cljs.core.nthnext(vec__8105, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__8106 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8106) : f.call(null, G__8106);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__8107, f, a) {
  var vec__8108 = p__8107;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8108, 0, null);
  var ks = cljs.core.nthnext(vec__8108, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__8109 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__8110 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8109, G__8110) : f.call(null, G__8109, G__8110);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__8111, f, a, b) {
  var vec__8112 = p__8111;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8112, 0, null);
  var ks = cljs.core.nthnext(vec__8112, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__8113 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__8114 = a;
      var G__8115 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8113, G__8114, G__8115) : f.call(null, G__8113, G__8114, G__8115);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__8116, f, a, b, c) {
  var vec__8117 = p__8116;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8117, 0, null);
  var ks = cljs.core.nthnext(vec__8117, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__8118 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__8119 = a;
      var G__8120 = b;
      var G__8121 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8118, G__8119, G__8120, G__8121) : f.call(null, G__8118, G__8119, G__8120, G__8121);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__8122, f, a, b, c, args) {
  var vec__8123 = p__8122;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8123, 0, null);
  var ks = cljs.core.nthnext(vec__8123, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq8095) {
  var G__8096 = cljs.core.first(seq8095);
  var seq8095__$1 = cljs.core.next(seq8095);
  var G__8097 = cljs.core.first(seq8095__$1);
  var seq8095__$2 = cljs.core.next(seq8095__$1);
  var G__8098 = cljs.core.first(seq8095__$2);
  var seq8095__$3 = cljs.core.next(seq8095__$2);
  var G__8099 = cljs.core.first(seq8095__$3);
  var seq8095__$4 = cljs.core.next(seq8095__$3);
  var G__8100 = cljs.core.first(seq8095__$4);
  var seq8095__$5 = cljs.core.next(seq8095__$4);
  var G__8101 = cljs.core.first(seq8095__$5);
  var seq8095__$6 = cljs.core.next(seq8095__$5);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(G__8096, G__8097, G__8098, G__8099, G__8100, G__8101, seq8095__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update() {
  var args8128 = [];
  var len__5181__auto___8148 = arguments.length;
  var i__5182__auto___8149 = 0;
  while (true) {
    if (i__5182__auto___8149 < len__5181__auto___8148) {
      args8128.push(arguments[i__5182__auto___8149]);
      var G__8150 = i__5182__auto___8149 + 1;
      i__5182__auto___8149 = G__8150;
      continue;
    } else {
    }
    break;
  }
  var G__8137 = args8128.length;
  switch(G__8137) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args8128.slice(6), 0);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5200__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__8138 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8138) : f.call(null, G__8138);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__8139 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__8140 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8139, G__8140) : f.call(null, G__8139, G__8140);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__8141 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__8142 = x;
    var G__8143 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8141, G__8142, G__8143) : f.call(null, G__8141, G__8142, G__8143);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__8144 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__8145 = x;
    var G__8146 = y;
    var G__8147 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8144, G__8145, G__8146, G__8147) : f.call(null, G__8144, G__8145, G__8146, G__8147);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq8129) {
  var G__8130 = cljs.core.first(seq8129);
  var seq8129__$1 = cljs.core.next(seq8129);
  var G__8131 = cljs.core.first(seq8129__$1);
  var seq8129__$2 = cljs.core.next(seq8129__$1);
  var G__8132 = cljs.core.first(seq8129__$2);
  var seq8129__$3 = cljs.core.next(seq8129__$2);
  var G__8133 = cljs.core.first(seq8129__$3);
  var seq8129__$4 = cljs.core.next(seq8129__$3);
  var G__8134 = cljs.core.first(seq8129__$4);
  var seq8129__$5 = cljs.core.next(seq8129__$4);
  var G__8135 = cljs.core.first(seq8129__$5);
  var seq8129__$6 = cljs.core.next(seq8129__$5);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(G__8130, G__8131, G__8132, G__8133, G__8134, G__8135, seq8129__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__8152 = ll - 5;
      var G__8153 = r;
      ll = G__8152;
      ret = G__8153;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__8158 = cljs.core.pv_aget(node, 0);
      var G__8159 = level - 5;
      node = G__8158;
      level = G__8159;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__8160 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__8161 = level - 5;
        node = G__8160;
        level = G__8161;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__8171 = init__$2;
              var G__8172 = j + i;
              var G__8173 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8171, G__8172, G__8173) : f.call(null, G__8171, G__8172, G__8173);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__8180 = j + 1;
              var G__8181 = init__$3;
              j = G__8180;
              init__$2 = G__8181;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__8182 = i + len;
        var G__8183 = init__$2;
        i = G__8182;
        init__$1 = G__8183;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4558__auto__ = self__.__hash;
  if (!(h__4558__auto__ == null)) {
    return h__4558__auto__;
  } else {
    var h__4558__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4558__auto____$1;
    return h__4558__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(self__.root) : cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(self__.tail) : cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__8174 = init__$2;
              var G__8175 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8174, G__8175) : f.call(null, G__8174, G__8175);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__8184 = j + 1;
              var G__8185 = init__$3;
              j = G__8184;
              init__$2 = G__8185;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__8186 = i + len;
        var G__8187 = init__$2;
        i = G__8186;
        init__$1 = G__8187;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__8176 = coll__$1;
      var G__8177 = cljs.core.first_array_for_longvec(coll__$1);
      var G__8178 = 0;
      var G__8179 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8176, G__8177, G__8178, G__8179) : cljs.core.chunked_seq.call(null, G__8176, G__8177, G__8178, G__8179);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__5026__auto___8188 = len;
    var i_8189 = 0;
    while (true) {
      if (i_8189 < n__5026__auto___8188) {
        new_tail[i_8189] = self__.tail[i_8189];
        var G__8190 = i_8189 + 1;
        i_8189 = G__8190;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__8191 = null;
  var G__8191__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__8191__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__8191 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8191__2.call(this, self__, k);
      case 3:
        return G__8191__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8191.cljs$core$IFn$_invoke$arity$2 = G__8191__2;
  G__8191.cljs$core$IFn$_invoke$arity$3 = G__8191__3;
  return G__8191;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args8170) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8170)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__8192 = i + 1;
        var G__8193 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__8192;
        out = G__8193;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function cljs$core$vector() {
  var args__5188__auto__ = [];
  var len__5181__auto___8195 = arguments.length;
  var i__5182__auto___8196 = 0;
  while (true) {
    if (i__5182__auto___8196 < len__5181__auto___8195) {
      args__5188__auto__.push(arguments[i__5182__auto___8196]);
      var G__8197 = i__5182__auto___8196 + 1;
      i__5182__auto___8196 = G__8197;
      continue;
    } else {
    }
    break;
  }
  var argseq__5189__auto__ = 0 < args__5188__auto__.length ? new cljs.core.IndexedSeq(args__5188__auto__.slice(0), 0) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__5189__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq8194) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8194));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__8198 = self__.vec;
      var G__8199 = self__.node;
      var G__8200 = self__.i;
      var G__8201 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8198, G__8199, G__8200, G__8201) : cljs.core.chunked_seq.call(null, G__8198, G__8199, G__8200, G__8201);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4558__auto__ = self__.__hash;
  if (!(h__4558__auto__ == null)) {
    return h__4558__auto__;
  } else {
    var h__4558__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4558__auto____$1;
    return h__4558__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__8202 = self__.vec;
    var G__8203 = self__.i + self__.off;
    var G__8204 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__8202, G__8203, G__8204) : cljs.core.subvec.call(null, G__8202, G__8203, G__8204);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__8205 = self__.vec;
    var G__8206 = self__.i + self__.off;
    var G__8207 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__8205, G__8206, G__8207) : cljs.core.subvec.call(null, G__8205, G__8206, G__8207);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__8208 = self__.vec;
      var G__8209 = self__.node;
      var G__8210 = self__.i;
      var G__8211 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8208, G__8209, G__8210, G__8211) : cljs.core.chunked_seq.call(null, G__8208, G__8209, G__8210, G__8211);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__8212 = self__.vec;
    var G__8213 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__8214 = end;
    var G__8215 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8212, G__8213, G__8214, G__8215) : cljs.core.chunked_seq.call(null, G__8212, G__8213, G__8214, G__8215);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, m) : cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__8216 = self__.vec;
    var G__8217 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__8218 = end;
    var G__8219 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__8216, G__8217, G__8218, G__8219) : cljs.core.chunked_seq.call(null, G__8216, G__8217, G__8218, G__8219);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.chunked_seq = function cljs$core$chunked_seq() {
  var args8220 = [];
  var len__5181__auto___8223 = arguments.length;
  var i__5182__auto___8224 = 0;
  while (true) {
    if (i__5182__auto___8224 < len__5181__auto___8223) {
      args8220.push(arguments[i__5182__auto___8224]);
      var G__8225 = i__5182__auto___8224 + 1;
      i__5182__auto___8224 = G__8225;
      continue;
    } else {
    }
    break;
  }
  var G__8222 = args8220.length;
  switch(G__8222) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8220.length)].join(""));;
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__8228 = init__$1;
        var G__8229 = j;
        var G__8230 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8228, G__8229, G__8230) : f.call(null, G__8228, G__8229, G__8230);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__8247 = i + 1;
        var G__8248 = j + 1;
        var G__8249 = init__$2;
        i = G__8247;
        j = G__8248;
        init__$1 = G__8249;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__8231 = self__.meta;
  var G__8232 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__8233 = self__.start;
  var G__8234 = function() {
    var x__4454__auto__ = self__.end;
    var y__4455__auto__ = v_pos + 1;
    return x__4454__auto__ > y__4455__auto__ ? x__4454__auto__ : y__4455__auto__;
  }();
  var G__8235 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__8231, G__8232, G__8233, G__8234, G__8235) : cljs.core.build_subvec.call(null, G__8231, G__8232, G__8233, G__8234, G__8235);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__8236 = self__.meta;
    var G__8237 = self__.v;
    var G__8238 = self__.start;
    var G__8239 = self__.end - 1;
    var G__8240 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__8236, G__8237, G__8238, G__8239, G__8240) : cljs.core.build_subvec.call(null, G__8236, G__8237, G__8238, G__8239, G__8240);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4558__auto__ = self__.__hash;
  if (!(h__4558__auto__ == null)) {
    return h__4558__auto__;
  } else {
    var h__4558__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4558__auto____$1;
    return h__4558__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(meta__$1, self__.v, self__.start, self__.end, self__.__hash) : cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__8242 = self__.meta;
  var G__8243 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__8244 = self__.start;
  var G__8245 = self__.end + 1;
  var G__8246 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__8242, G__8243, G__8244, G__8245, G__8246) : cljs.core.build_subvec.call(null, G__8242, G__8243, G__8244, G__8245, G__8246);
};
cljs.core.Subvec.prototype.call = function() {
  var G__8250 = null;
  var G__8250__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__8250__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__8250 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8250__2.call(this, self__, k);
      case 3:
        return G__8250__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8250.cljs$core$IFn$_invoke$arity$2 = G__8250__2;
  G__8250.cljs$core$IFn$_invoke$arity$3 = G__8250__3;
  return G__8250;
}();
cljs.core.Subvec.prototype.apply = function(self__, args8227) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8227)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__8251 = meta;
      var G__8252 = v.v;
      var G__8253 = v.start + start;
      var G__8254 = v.start + end;
      var G__8255 = __hash;
      meta = G__8251;
      v = G__8252;
      start = G__8253;
      end = G__8254;
      __hash = G__8255;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec() {
  var args8256 = [];
  var len__5181__auto___8259 = arguments.length;
  var i__5182__auto___8260 = 0;
  while (true) {
    if (i__5182__auto___8260 < len__5181__auto___8259) {
      args8256.push(arguments[i__5182__auto___8260]);
      var G__8261 = i__5182__auto___8260 + 1;
      i__5182__auto___8260 = G__8261;
      continue;
    } else {
    }
    break;
  }
  var G__8258 = args8256.length;
  switch(G__8258) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8256.length)].join(""));;
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return cljs.core.build_subvec(null, v, start, end, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__8274 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__8275 = level - 5;
        node = G__8274;
        level = G__8275;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__8279 = null;
  var G__8279__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8279__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8279 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8279__2.call(this, self__, k);
      case 3:
        return G__8279__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8279.cljs$core$IFn$_invoke$arity$2 = G__8279__2;
  G__8279.cljs$core$IFn$_invoke$arity$3 = G__8279__3;
  return G__8279;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args8276) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8276)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4142__auto__ = cljs.core.some_QMARK_(self__.fseq) && cljs.core.seq(self__.fseq);
  if (or__4142__auto__) {
    return or__4142__auto__;
  } else {
    var and__4130__auto__ = cljs.core.some_QMARK_(self__.riter);
    if (and__4130__auto__) {
      return self__.riter.hasNext();
    } else {
      return and__4130__auto__;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (cljs.core.some_QMARK_(self__.fseq)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.riter) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4558__auto__ = self__.__hash;
  if (!(h__4558__auto__ == null)) {
    return h__4558__auto__;
  } else {
    var h__4558__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4558__auto____$1;
    return h__4558__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4423__auto__ = cljs.core.next(self__.front);
  if (temp__4423__auto__) {
    var f1 = temp__4423__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4423__auto__ = cljs.core.next(self__.front);
    if (temp__4423__auto__) {
      var f1 = temp__4423__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4558__auto__ = self__.__hash;
  if (!(h__4558__auto__ == null)) {
    return h__4558__auto__;
  } else {
    var h__4558__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4558__auto____$1;
    return h__4558__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__4142__auto__ = self__.front;
    if (cljs.core.truth_(or__4142__auto__)) {
      return or__4142__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__4142__auto__ = self__.rear;
      if (cljs.core.truth_(or__4142__auto__)) {
        return or__4142__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__8280 = i + incr;
        i = G__8280;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__8281 = i + 1;
      var G__8282 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__8281;
      out = G__8282;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_8287 = 0;
  while (true) {
    if (i_8287 < l) {
      var k_8288 = ks[i_8287];
      new_obj[k_8288] = obj[k_8288];
      var G__8289 = i_8287 + 1;
      i_8287 = G__8289;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__8292 = init__$1;
        var G__8293 = k;
        var G__8294 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8292, G__8293, G__8294) : f.call(null, G__8292, G__8293, G__8294);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__8295 = cljs.core.rest(keys__$1);
        var G__8296 = init__$2;
        keys__$1 = G__8295;
        init__$1 = G__8296;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4558__auto__ = self__.__hash;
  if (!(h__4558__auto__ == null)) {
    return h__4558__auto__;
  } else {
    var h__4558__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4558__auto____$1;
    return h__4558__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__8290_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__8290_SHARP_, self__.strobj[p1__8290_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__8297 = null;
  var G__8297__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8297__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8297 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8297__2.call(this, self__, k);
      case 3:
        return G__8297__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8297.cljs$core$IFn$_invoke$arity$2 = G__8297__2;
  G__8297.cljs$core$IFn$_invoke$arity$3 = G__8297__3;
  return G__8297;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args8291) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8291)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4142__auto__ = self__.i < self__.base_count;
  if (or__4142__auto__) {
    return or__4142__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record, k)], null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__8300 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8300, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8300, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__8301 = i + 2;
        i = G__8301;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__8302 = i + 2;
        i = G__8302;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__8303 = i + 2;
        i = G__8303;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__8304 = i + 2;
        i = G__8304;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__8305 = i + 2;
        i = G__8305;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_8306 = 0;
  while (true) {
    if (i_8306 < l) {
      narr[i_8306] = arr[i_8306];
      var G__8307 = i_8306 + 1;
      i_8306 = G__8307;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__8309 = cljs.core.seq(coll);
  var chunk__8310 = null;
  var count__8311 = 0;
  var i__8312 = 0;
  while (true) {
    if (i__8312 < count__8311) {
      var vec__8313 = chunk__8310.cljs$core$IIndexed$_nth$arity$2(null, i__8312);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8313, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8313, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__8322 = seq__8309;
      var G__8323 = chunk__8310;
      var G__8324 = count__8311;
      var G__8325 = i__8312 + 1;
      seq__8309 = G__8322;
      chunk__8310 = G__8323;
      count__8311 = G__8324;
      i__8312 = G__8325;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__8309);
      if (temp__4425__auto__) {
        var seq__8309__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8309__$1)) {
          var c__4926__auto__ = cljs.core.chunk_first(seq__8309__$1);
          var G__8326 = cljs.core.chunk_rest(seq__8309__$1);
          var G__8327 = c__4926__auto__;
          var G__8328 = cljs.core.count(c__4926__auto__);
          var G__8329 = 0;
          seq__8309 = G__8326;
          chunk__8310 = G__8327;
          count__8311 = G__8328;
          i__8312 = G__8329;
          continue;
        } else {
          var vec__8314 = cljs.core.first(seq__8309__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8314, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8314, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__8330 = cljs.core.next(seq__8309__$1);
          var G__8331 = null;
          var G__8332 = 0;
          var G__8333 = 0;
          seq__8309 = G__8330;
          chunk__8310 = G__8331;
          count__8311 = G__8332;
          i__8312 = G__8333;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__8315 = init__$1;
        var G__8316 = self__.arr[i];
        var G__8317 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8315, G__8316, G__8317) : f.call(null, G__8315, G__8316, G__8317);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__8334 = i + 2;
        var G__8335 = init__$2;
        i = G__8334;
        init__$1 = G__8335;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4558__auto__ = self__.__hash;
  if (!(h__4558__auto__ == null)) {
    return h__4558__auto__;
  } else {
    var h__4558__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4558__auto____$1;
    return h__4558__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (!(other == null) ? other.cljs$lang$protocol_mask$partition0$ & 1024 || other.cljs$core$IMap$ ? true : false : false) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__8336 = i + 2;
              i = G__8336;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__8337 = s + 2;
            var G__8338 = d;
            s = G__8337;
            d = G__8338;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__8339 = s + 2;
            var G__8340 = d + 2;
            s = G__8339;
            d = G__8340;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__8321 = cljs.core.aclone(self__.arr);
        G__8321[idx + 1] = v;
        return G__8321;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__8341 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__8342 = cljs.core.next(es);
          ret = G__8341;
          es = G__8342;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__8343 = null;
  var G__8343__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8343__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8343 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8343__2.call(this, self__, k);
      case 3:
        return G__8343__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8343.cljs$core$IFn$_invoke$arity$2 = G__8343__2;
  G__8343.cljs$core$IFn$_invoke$arity$3 = G__8343__3;
  return G__8343;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args8308) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8308)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_8344 = 0;
    while (true) {
      if (i_8344 < arr__$1.length) {
        var k_8345 = arr__$1[i_8344];
        var v_8346 = arr__$1[i_8344 + 1];
        var idx_8347 = cljs.core.array_index_of(ret, k_8345);
        if (idx_8347 === -1) {
          ret.push(k_8345);
          ret.push(v_8346);
        } else {
        }
        var G__8348 = i_8344 + 2;
        i_8344 = G__8348;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var arr__$3 = function() {
    var cnt = arr__$2.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
  }();
  return arr__$3;
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return cljs.core._assoc_BANG_(tcoll__$1, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__8351 = cljs.core.next(es);
          var G__8352 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__8351;
          tcoll__$2 = G__8352;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(self__.len, self__.arr) : cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__8350_8353 = self__.arr;
      G__8350_8353.pop();
      G__8350_8353.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__8354 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__8355 = i + 2;
      out = G__8354;
      i = G__8355;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set() {
  var args8356 = [];
  var len__5181__auto___8361 = arguments.length;
  var i__5182__auto___8362 = 0;
  while (true) {
    if (i__5182__auto___8362 < len__5181__auto___8361) {
      args8356.push(arguments[i__5182__auto___8362]);
      var G__8363 = i__5182__auto___8362 + 1;
      i__5182__auto___8362 = G__8363;
      continue;
    } else {
    }
    break;
  }
  var G__8358 = args8356.length;
  switch(G__8358) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8356.length)].join(""));;
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__8359 = cljs.core.aclone(arr);
  G__8359[i] = a;
  return G__8359;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__8360 = cljs.core.aclone(arr);
  G__8360[i] = a;
  G__8360[j] = b;
  return G__8360;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set() {
  var args8365 = [];
  var len__5181__auto___8368 = arguments.length;
  var i__5182__auto___8369 = 0;
  while (true) {
    if (i__5182__auto___8369 < len__5181__auto___8368) {
      args8365.push(arguments[i__5182__auto___8369]);
      var G__8370 = i__5182__auto___8369 + 1;
      i__5182__auto___8369 = G__8370;
      continue;
    } else {
    }
    break;
  }
  var G__8367 = args8365.length;
  switch(G__8367) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8365.length)].join(""));;
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__8375 = init__$1;
          var G__8376 = k;
          var G__8377 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8375, G__8376, G__8377) : f.call(null, G__8375, G__8376, G__8377);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__8378 = i + 2;
        var G__8379 = init__$2;
        i = G__8378;
        init__$1 = G__8379;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = cljs.core.some_QMARK_(key) ? self__.next_entry = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, node_or_val], null) : cljs.core.some_QMARK_(node_or_val) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__4142__auto__ = cljs.core.some_QMARK_(self__.next_entry);
  if (or__4142__auto__) {
    return or__4142__auto__;
  } else {
    var or__4142__auto____$1 = cljs.core.some_QMARK_(self__.next_iter);
    if (or__4142__auto____$1) {
      return or__4142__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.some_QMARK_(self__.next_entry)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.next_iter)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_8393 = 0;
        var j_8394 = 0;
        while (true) {
          if (i_8393 < 32) {
            if ((self__.bitmap >>> i_8393 & 1) === 0) {
              var G__8395 = i_8393 + 1;
              var G__8396 = j_8394;
              i_8393 = G__8395;
              j_8394 = G__8396;
              continue;
            } else {
              nodes[i_8393] = !(self__.arr[j_8394] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_8394]), self__.arr[j_8394], self__.arr[j_8394 + 1], added_leaf_QMARK_) : self__.arr[j_8394 + 1];
              var G__8397 = i_8393 + 1;
              var G__8398 = j_8394 + 2;
              i_8393 = G__8397;
              j_8394 = G__8398;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__8380 = edit__$1;
          var G__8381 = shift + 5;
          var G__8382 = key_or_nil;
          var G__8383 = val_or_node;
          var G__8384 = hash;
          var G__8385 = key;
          var G__8386 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__8380, G__8381, G__8382, G__8383, G__8384, G__8385, G__8386) : cljs.core.create_node.call(null, G__8380, G__8381, G__8382, G__8383, G__8384, G__8385, G__8386);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_8399 = 0;
      var j_8400 = 0;
      while (true) {
        if (i_8399 < 32) {
          if ((self__.bitmap >>> i_8399 & 1) === 0) {
            var G__8401 = i_8399 + 1;
            var G__8402 = j_8400;
            i_8399 = G__8401;
            j_8400 = G__8402;
            continue;
          } else {
            nodes[i_8399] = !(self__.arr[j_8400] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_8400]), self__.arr[j_8400], self__.arr[j_8400 + 1], added_leaf_QMARK_) : self__.arr[j_8400 + 1];
            var G__8403 = i_8399 + 1;
            var G__8404 = j_8400 + 2;
            i_8399 = G__8403;
            j_8400 = G__8404;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__8387 = shift + 5;
          var G__8388 = key_or_nil;
          var G__8389 = val_or_node;
          var G__8390 = hash;
          var G__8391 = key;
          var G__8392 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__8387, G__8388, G__8389, G__8390, G__8391, G__8392) : cljs.core.create_node.call(null, G__8387, G__8388, G__8389, G__8390, G__8391, G__8392);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$ = true;
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__8405 = i + 1;
        var G__8406 = j + 2;
        var G__8407 = bitmap | 1 << i;
        i = G__8405;
        j = G__8406;
        bitmap = G__8407;
        continue;
      } else {
        var G__8408 = i + 1;
        var G__8409 = j;
        var G__8410 = bitmap;
        i = G__8408;
        j = G__8409;
        bitmap = G__8410;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(cljs.core.some_QMARK_(self__.next_iter) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (cljs.core.some_QMARK_(node)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
        } else {
          var G__8411 = i + 1;
          var G__8412 = init__$2;
          i = G__8411;
          init__$1 = G__8412;
          continue;
        }
      } else {
        var G__8413 = i + 1;
        var G__8414 = init__$1;
        i = G__8413;
        init__$1 = G__8414;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$ = true;
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__8415 = i + 2;
        i = G__8415;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$ = true;
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node() {
  var args8416 = [];
  var len__5181__auto___8419 = arguments.length;
  var i__5182__auto___8420 = 0;
  while (true) {
    if (i__5182__auto___8420 < len__5181__auto___8419) {
      args8416.push(arguments[i__5182__auto___8420]);
      var G__8421 = i__5182__auto___8420 + 1;
      i__5182__auto___8420 = G__8421;
      continue;
    } else {
    }
    break;
  }
  var G__8418 = args8416.length;
  switch(G__8418) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8416.length)].join(""));;
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4558__auto__ = self__.__hash;
  if (!(h__4558__auto__ == null)) {
    return h__4558__auto__;
  } else {
    var h__4558__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4558__auto____$1;
    return h__4558__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__8423 = self__.nodes;
    var G__8424 = self__.i + 2;
    var G__8425 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__8423, G__8424, G__8425) : cljs.core.create_inode_seq.call(null, G__8423, G__8424, G__8425);
  } else {
    var G__8426 = self__.nodes;
    var G__8427 = self__.i;
    var G__8428 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__8426, G__8427, G__8428) : cljs.core.create_inode_seq.call(null, G__8426, G__8427, G__8428);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.create_inode_seq = function cljs$core$create_inode_seq() {
  var args8429 = [];
  var len__5181__auto___8432 = arguments.length;
  var i__5182__auto___8433 = 0;
  while (true) {
    if (i__5182__auto___8433 < len__5181__auto___8432) {
      args8429.push(arguments[i__5182__auto___8433]);
      var G__8434 = i__5182__auto___8433 + 1;
      i__5182__auto___8433 = G__8434;
      continue;
    } else {
    }
    break;
  }
  var G__8431 = args8429.length;
  switch(G__8431) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8429.length)].join(""));;
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4423__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4423__auto__)) {
            var node = temp__4423__auto__;
            var temp__4423__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4423__auto____$1)) {
              var node_seq = temp__4423__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__8436 = j + 2;
              j = G__8436;
              continue;
            }
          } else {
            var G__8437 = j + 2;
            j = G__8437;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4558__auto__ = self__.__hash;
  if (!(h__4558__auto__ == null)) {
    return h__4558__auto__;
  } else {
    var h__4558__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4558__auto____$1;
    return h__4558__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__8438 = null;
  var G__8439 = self__.nodes;
  var G__8440 = self__.i;
  var G__8441 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__8438, G__8439, G__8440, G__8441) : cljs.core.create_array_node_seq.call(null, G__8438, G__8439, G__8440, G__8441);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq() {
  var args8442 = [];
  var len__5181__auto___8445 = arguments.length;
  var i__5182__auto___8446 = 0;
  while (true) {
    if (i__5182__auto___8446 < len__5181__auto___8445) {
      args8442.push(arguments[i__5182__auto___8446]);
      var G__8447 = i__5182__auto___8446 + 1;
      i__5182__auto___8446 = G__8447;
      continue;
    } else {
    }
    break;
  }
  var G__8444 = args8442.length;
  switch(G__8444) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8442.length)].join(""));;
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4423__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4423__auto__)) {
          var nj = temp__4423__auto__;
          var temp__4423__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4423__auto____$1)) {
            var ns = temp__4423__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__8449 = j + 1;
            j = G__8449;
            continue;
          }
        } else {
          var G__8450 = j + 1;
          j = G__8450;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.seen && self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return self__.nil_val;
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__8452 = cljs.core.seq(coll);
  var chunk__8453 = null;
  var count__8454 = 0;
  var i__8455 = 0;
  while (true) {
    if (i__8455 < count__8454) {
      var vec__8456 = chunk__8453.cljs$core$IIndexed$_nth$arity$2(null, i__8455);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8456, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8456, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__8460 = seq__8452;
      var G__8461 = chunk__8453;
      var G__8462 = count__8454;
      var G__8463 = i__8455 + 1;
      seq__8452 = G__8460;
      chunk__8453 = G__8461;
      count__8454 = G__8462;
      i__8455 = G__8463;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__8452);
      if (temp__4425__auto__) {
        var seq__8452__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8452__$1)) {
          var c__4926__auto__ = cljs.core.chunk_first(seq__8452__$1);
          var G__8464 = cljs.core.chunk_rest(seq__8452__$1);
          var G__8465 = c__4926__auto__;
          var G__8466 = cljs.core.count(c__4926__auto__);
          var G__8467 = 0;
          seq__8452 = G__8464;
          chunk__8453 = G__8465;
          count__8454 = G__8466;
          i__8455 = G__8467;
          continue;
        } else {
          var vec__8457 = cljs.core.first(seq__8452__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8457, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8457, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__8468 = cljs.core.next(seq__8452__$1);
          var G__8469 = null;
          var G__8470 = 0;
          var G__8471 = 0;
          seq__8452 = G__8468;
          chunk__8453 = G__8469;
          count__8454 = G__8470;
          i__8455 = G__8471;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter;
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4558__auto__ = self__.__hash;
  if (!(h__4558__auto__ == null)) {
    return h__4558__auto__;
  } else {
    var h__4558__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4558__auto____$1;
    return h__4558__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__8472 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__8473 = cljs.core.next(es);
          ret = G__8472;
          es = G__8473;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__8474 = null;
  var G__8474__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8474__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8474 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8474__2.call(this, self__, k);
      case 3:
        return G__8474__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8474.cljs$core$IFn$_invoke$arity$2 = G__8474__2;
  G__8474.cljs$core$IFn$_invoke$arity$3 = G__8474__3;
  return G__8474;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args8451) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8451)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__8475 = i + 2;
      var G__8476 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__8475;
      ret = G__8476;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__8477 = i + 1;
      var G__8478 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__8477;
      out = G__8478;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return tcoll.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__8480 = cljs.core.next(es);
          var G__8481 = tcoll__$1.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__8480;
          tcoll__$1 = G__8481;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__8482 = ascending_QMARK_ ? t.left : t.right;
      var G__8483 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__8482;
      stack__$1 = G__8483;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4558__auto__ = self__.__hash;
  if (!(h__4558__auto__ == null)) {
    return h__4558__auto__;
  } else {
    var h__4558__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4558__auto____$1;
    return h__4558__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = function() {
      var G__8493 = init__$1;
      var G__8494 = node.key;
      var G__8495 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8493, G__8494, G__8495) : f.call(null, G__8493, G__8494, G__8495);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$3) : cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4558__auto__ = self__.__hash;
  if (!(h__4558__auto__ == null)) {
    return h__4558__auto__;
  } else {
    var h__4558__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4558__auto____$1;
    return h__4558__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__8497 = null;
  var G__8497__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8497__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8497 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8497__2.call(this, self__, k);
      case 3:
        return G__8497__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8497.cljs$core$IFn$_invoke$arity$2 = G__8497__2;
  G__8497.cljs$core$IFn$_invoke$arity$3 = G__8497__3;
  return G__8497;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args8496) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8496)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4558__auto__ = self__.__hash;
  if (!(h__4558__auto__ == null)) {
    return h__4558__auto__;
  } else {
    var h__4558__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4558__auto____$1;
    return h__4558__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__8499 = null;
  var G__8499__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8499__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8499 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8499__2.call(this, self__, k);
      case 3:
        return G__8499__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8499.cljs$core$IFn$_invoke$arity$2 = G__8499__2;
  G__8499.cljs$core$IFn$_invoke$arity$3 = G__8499__3;
  return G__8499;
}();
cljs.core.RedNode.prototype.apply = function(self__, args8498) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8498)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__8512 = k;
      var G__8513 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__8512, G__8513) : comp.call(null, G__8512, G__8513);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__8532 = k;
      var G__8533 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__8532, G__8533) : comp.call(null, G__8532, G__8533);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__8543 = cljs.core.seq(coll);
  var chunk__8544 = null;
  var count__8545 = 0;
  var i__8546 = 0;
  while (true) {
    if (i__8546 < count__8545) {
      var vec__8547 = chunk__8544.cljs$core$IIndexed$_nth$arity$2(null, i__8546);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8547, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8547, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__8553 = seq__8543;
      var G__8554 = chunk__8544;
      var G__8555 = count__8545;
      var G__8556 = i__8546 + 1;
      seq__8543 = G__8553;
      chunk__8544 = G__8554;
      count__8545 = G__8555;
      i__8546 = G__8556;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__8543);
      if (temp__4425__auto__) {
        var seq__8543__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8543__$1)) {
          var c__4926__auto__ = cljs.core.chunk_first(seq__8543__$1);
          var G__8557 = cljs.core.chunk_rest(seq__8543__$1);
          var G__8558 = c__4926__auto__;
          var G__8559 = cljs.core.count(c__4926__auto__);
          var G__8560 = 0;
          seq__8543 = G__8557;
          chunk__8544 = G__8558;
          count__8545 = G__8559;
          i__8546 = G__8560;
          continue;
        } else {
          var vec__8548 = cljs.core.first(seq__8543__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8548, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8548, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__8561 = cljs.core.next(seq__8543__$1);
          var G__8562 = null;
          var G__8563 = 0;
          var G__8564 = 0;
          seq__8543 = G__8561;
          chunk__8544 = G__8562;
          count__8545 = G__8563;
          i__8546 = G__8564;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__8549 = k;
        var G__8550 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__8549, G__8550) : self__.comp.call(null, G__8549, G__8550);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__8565 = t.left;
          t = G__8565;
          continue;
        } else {
          var G__8566 = t.right;
          t = G__8566;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4558__auto__ = self__.__hash;
  if (!(h__4558__auto__ == null)) {
    return h__4558__auto__;
  } else {
    var h__4558__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4558__auto____$1;
    return h__4558__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__8567 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__8568 = cljs.core.next(es);
          ret = G__8567;
          es = G__8568;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__8569 = null;
  var G__8569__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8569__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8569 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8569__2.call(this, self__, k);
      case 3:
        return G__8569__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8569.cljs$core$IFn$_invoke$arity$2 = G__8569__2;
  G__8569.cljs$core$IFn$_invoke$arity$3 = G__8569__3;
  return G__8569;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args8542) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8542)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__8551 = k;
          var G__8552 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__8551, G__8552) : self__.comp.call(null, G__8551, G__8552);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__8570 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__8571 = t.left;
              stack = G__8570;
              t = G__8571;
              continue;
            } else {
              var G__8572 = stack;
              var G__8573 = t.right;
              stack = G__8572;
              t = G__8573;
              continue;
            }
          } else {
            if (c > 0) {
              var G__8574 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__8575 = t.right;
              stack = G__8574;
              t = G__8575;
              continue;
            } else {
              var G__8576 = stack;
              var G__8577 = t.left;
              stack = G__8576;
              t = G__8577;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(entry) : cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.hash_map = function cljs$core$hash_map() {
  var args__5188__auto__ = [];
  var len__5181__auto___8579 = arguments.length;
  var i__5182__auto___8580 = 0;
  while (true) {
    if (i__5182__auto___8580 < len__5181__auto___8579) {
      args__5188__auto__.push(arguments[i__5182__auto___8580]);
      var G__8581 = i__5182__auto___8580 + 1;
      i__5182__auto___8580 = G__8581;
      continue;
    } else {
    }
    break;
  }
  var argseq__5189__auto__ = 0 < args__5188__auto__.length ? new cljs.core.IndexedSeq(args__5188__auto__.slice(0), 0) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5189__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__8582 = cljs.core.nnext(in$);
      var G__8583 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__8582;
      out = G__8583;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq8578) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8578));
};
cljs.core.array_map = function cljs$core$array_map() {
  var args__5188__auto__ = [];
  var len__5181__auto___8585 = arguments.length;
  var i__5182__auto___8586 = 0;
  while (true) {
    if (i__5182__auto___8586 < len__5181__auto___8585) {
      args__5188__auto__.push(arguments[i__5182__auto___8586]);
      var G__8587 = i__5182__auto___8586 + 1;
      i__5182__auto___8586 = G__8587;
      continue;
    } else {
    }
    break;
  }
  var argseq__5189__auto__ = 0 < args__5188__auto__.length ? new cljs.core.IndexedSeq(args__5188__auto__.slice(0), 0) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5189__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.fromArray(arr, true, false);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq8584) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8584));
};
cljs.core.obj_map = function cljs$core$obj_map() {
  var args__5188__auto__ = [];
  var len__5181__auto___8591 = arguments.length;
  var i__5182__auto___8592 = 0;
  while (true) {
    if (i__5182__auto___8592 < len__5181__auto___8591) {
      args__5188__auto__.push(arguments[i__5182__auto___8592]);
      var G__8593 = i__5182__auto___8592 + 1;
      i__5182__auto___8592 = G__8593;
      continue;
    } else {
    }
    break;
  }
  var argseq__5189__auto__ = 0 < args__5188__auto__.length ? new cljs.core.IndexedSeq(args__5188__auto__.slice(0), 0) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5189__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
      var G__8594 = cljs.core.nnext(kvs);
      kvs = G__8594;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq8588) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8588));
};
cljs.core.sorted_map = function cljs$core$sorted_map() {
  var args__5188__auto__ = [];
  var len__5181__auto___8596 = arguments.length;
  var i__5182__auto___8597 = 0;
  while (true) {
    if (i__5182__auto___8597 < len__5181__auto___8596) {
      args__5188__auto__.push(arguments[i__5182__auto___8597]);
      var G__8598 = i__5182__auto___8597 + 1;
      i__5182__auto___8597 = G__8598;
      continue;
    } else {
    }
    break;
  }
  var argseq__5189__auto__ = 0 < args__5188__auto__.length ? new cljs.core.IndexedSeq(args__5188__auto__.slice(0), 0) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5189__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__8599 = cljs.core.nnext(in$);
      var G__8600 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__8599;
      out = G__8600;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq8595) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8595));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by() {
  var args__5188__auto__ = [];
  var len__5181__auto___8603 = arguments.length;
  var i__5182__auto___8604 = 0;
  while (true) {
    if (i__5182__auto___8604 < len__5181__auto___8603) {
      args__5188__auto__.push(arguments[i__5182__auto___8604]);
      var G__8605 = i__5182__auto___8604 + 1;
      i__5182__auto___8604 = G__8605;
      continue;
    } else {
    }
    break;
  }
  var argseq__5189__auto__ = 1 < args__5188__auto__.length ? new cljs.core.IndexedSeq(args__5188__auto__.slice(1), 0) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5189__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__8606 = cljs.core.nnext(in$);
      var G__8607 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__8606;
      out = G__8607;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq8601) {
  var G__8602 = cljs.core.first(seq8601);
  var seq8601__$1 = cljs.core.next(seq8601);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(G__8602, seq8601__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge() {
  var args__5188__auto__ = [];
  var len__5181__auto___8615 = arguments.length;
  var i__5182__auto___8616 = 0;
  while (true) {
    if (i__5182__auto___8616 < len__5181__auto___8615) {
      args__5188__auto__.push(arguments[i__5182__auto___8616]);
      var G__8617 = i__5182__auto___8616 + 1;
      i__5182__auto___8616 = G__8617;
      continue;
    } else {
    }
    break;
  }
  var argseq__5189__auto__ = 0 < args__5188__auto__.length ? new cljs.core.IndexedSeq(args__5188__auto__.slice(0), 0) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__5189__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__8612_SHARP_, p2__8613_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__4142__auto__ = p1__8612_SHARP_;
        if (cljs.core.truth_(or__4142__auto__)) {
          return or__4142__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__8613_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq8614) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8614));
};
cljs.core.merge_with = function cljs$core$merge_with() {
  var args__5188__auto__ = [];
  var len__5181__auto___8622 = arguments.length;
  var i__5182__auto___8623 = 0;
  while (true) {
    if (i__5182__auto___8623 < len__5181__auto___8622) {
      args__5188__auto__.push(arguments[i__5182__auto___8623]);
      var G__8624 = i__5182__auto___8623 + 1;
      i__5182__auto___8623 = G__8624;
      continue;
    } else {
    }
    break;
  }
  var argseq__5189__auto__ = 1 < args__5188__auto__.length ? new cljs.core.IndexedSeq(args__5188__auto__.slice(1), 0) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5189__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.first(e);
      var v = cljs.core.second(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__8620 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__8621 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8620, G__8621) : f.call(null, G__8620, G__8621);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__4142__auto__ = m1;
          if (cljs.core.truth_(or__4142__auto__)) {
            return or__4142__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq8618) {
  var G__8619 = cljs.core.first(seq8618);
  var seq8618__$1 = cljs.core.next(seq8618);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__8619, seq8618__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__8625 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__8626 = cljs.core.next(keys);
      ret = G__8625;
      keys = G__8626;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().tail[0];
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__8629 = cljs.core.seq(coll);
  var chunk__8630 = null;
  var count__8631 = 0;
  var i__8632 = 0;
  while (true) {
    if (i__8632 < count__8631) {
      var vec__8633 = chunk__8630.cljs$core$IIndexed$_nth$arity$2(null, i__8632);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8633, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8633, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__8635 = seq__8629;
      var G__8636 = chunk__8630;
      var G__8637 = count__8631;
      var G__8638 = i__8632 + 1;
      seq__8629 = G__8635;
      chunk__8630 = G__8636;
      count__8631 = G__8637;
      i__8632 = G__8638;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__8629);
      if (temp__4425__auto__) {
        var seq__8629__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8629__$1)) {
          var c__4926__auto__ = cljs.core.chunk_first(seq__8629__$1);
          var G__8639 = cljs.core.chunk_rest(seq__8629__$1);
          var G__8640 = c__4926__auto__;
          var G__8641 = cljs.core.count(c__4926__auto__);
          var G__8642 = 0;
          seq__8629 = G__8639;
          chunk__8630 = G__8640;
          count__8631 = G__8641;
          i__8632 = G__8642;
          continue;
        } else {
          var vec__8634 = cljs.core.first(seq__8629__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8634, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8634, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__8643 = cljs.core.next(seq__8629__$1);
          var G__8644 = null;
          var G__8645 = 0;
          var G__8646 = 0;
          seq__8629 = G__8643;
          chunk__8630 = G__8644;
          count__8631 = G__8645;
          i__8632 = G__8646;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4558__auto__ = self__.__hash;
  if (!(h__4558__auto__ == null)) {
    return h__4558__auto__;
  } else {
    var h__4558__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4558__auto____$1;
    return h__4558__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__8627_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__8627_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__8647 = null;
  var G__8647__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8647__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8647 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8647__2.call(this, self__, k);
      case 3:
        return G__8647__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8647.cljs$core$IFn$_invoke$arity$2 = G__8647__2;
  G__8647.cljs$core$IFn$_invoke$arity$3 = G__8647__3;
  return G__8647;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args8628) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8628)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__8648 = i + 1;
        var G__8649 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__8648;
        out = G__8649;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__8650 = i + 1;
        var G__8651 = cljs.core._conj_BANG_(out, items[i]);
        i = G__8650;
        out = G__8651;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__8653 = null;
  var G__8653__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__8653__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__8653 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8653__2.call(this, self__, k);
      case 3:
        return G__8653__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8653.cljs$core$IFn$_invoke$arity$2 = G__8653__2;
  G__8653.cljs$core$IFn$_invoke$arity$3 = G__8653__3;
  return G__8653;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args8652) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8652)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__8656 = cljs.core.seq(coll);
  var chunk__8657 = null;
  var count__8658 = 0;
  var i__8659 = 0;
  while (true) {
    if (i__8659 < count__8658) {
      var vec__8660 = chunk__8657.cljs$core$IIndexed$_nth$arity$2(null, i__8659);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8660, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8660, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__8662 = seq__8656;
      var G__8663 = chunk__8657;
      var G__8664 = count__8658;
      var G__8665 = i__8659 + 1;
      seq__8656 = G__8662;
      chunk__8657 = G__8663;
      count__8658 = G__8664;
      i__8659 = G__8665;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__8656);
      if (temp__4425__auto__) {
        var seq__8656__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8656__$1)) {
          var c__4926__auto__ = cljs.core.chunk_first(seq__8656__$1);
          var G__8666 = cljs.core.chunk_rest(seq__8656__$1);
          var G__8667 = c__4926__auto__;
          var G__8668 = cljs.core.count(c__4926__auto__);
          var G__8669 = 0;
          seq__8656 = G__8666;
          chunk__8657 = G__8667;
          count__8658 = G__8668;
          i__8659 = G__8669;
          continue;
        } else {
          var vec__8661 = cljs.core.first(seq__8656__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8661, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8661, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__8670 = cljs.core.next(seq__8656__$1);
          var G__8671 = null;
          var G__8672 = 0;
          var G__8673 = 0;
          seq__8656 = G__8670;
          chunk__8657 = G__8671;
          count__8658 = G__8672;
          i__8659 = G__8673;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4558__auto__ = self__.__hash;
  if (!(h__4558__auto__ == null)) {
    return h__4558__auto__;
  } else {
    var h__4558__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4558__auto____$1;
    return h__4558__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__8654_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__8654_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__8674 = null;
  var G__8674__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__8674__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__8674 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8674__2.call(this, self__, k);
      case 3:
        return G__8674__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__8674.cljs$core$IFn$_invoke$arity$2 = G__8674__2;
  G__8674.cljs$core$IFn$_invoke$arity$3 = G__8674__3;
  return G__8674;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args8655) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args8655)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__5020__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__5020__auto__.length) {
        var G__8675 = i + 1;
        var G__8676 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__8675;
        res = G__8676;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__8677 = cljs.core.next(in$__$1);
          var G__8678 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__8677;
          out = G__8678;
          continue;
        } else {
          return cljs.core.persistent_BANG_(out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set() {
  var args8679 = [];
  var len__5181__auto___8683 = arguments.length;
  var i__5182__auto___8684 = 0;
  while (true) {
    if (i__5182__auto___8684 < len__5181__auto___8683) {
      args8679.push(arguments[i__5182__auto___8684]);
      var G__8685 = i__5182__auto___8684 + 1;
      i__5182__auto___8684 = G__8685;
      continue;
    } else {
    }
    break;
  }
  var G__8682 = args8679.length;
  switch(G__8682) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args8679.slice(0), 0);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5200__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq8680) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8680));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set() {
  var args__5188__auto__ = [];
  var len__5181__auto___8688 = arguments.length;
  var i__5182__auto___8689 = 0;
  while (true) {
    if (i__5182__auto___8689 < len__5181__auto___8688) {
      args__5188__auto__.push(arguments[i__5182__auto___8689]);
      var G__8690 = i__5182__auto___8689 + 1;
      i__5182__auto___8689 = G__8690;
      continue;
    } else {
    }
    break;
  }
  var argseq__5189__auto__ = 0 < args__5188__auto__.length ? new cljs.core.IndexedSeq(args__5188__auto__.slice(0), 0) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5189__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq8687) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq8687));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by() {
  var args__5188__auto__ = [];
  var len__5181__auto___8693 = arguments.length;
  var i__5182__auto___8694 = 0;
  while (true) {
    if (i__5182__auto___8694 < len__5181__auto___8693) {
      args__5188__auto__.push(arguments[i__5182__auto___8694]);
      var G__8695 = i__5182__auto___8694 + 1;
      i__5182__auto___8694 = G__8695;
      continue;
    } else {
    }
    break;
  }
  var argseq__5189__auto__ = 1 < args__5188__auto__.length ? new cljs.core.IndexedSeq(args__5188__auto__.slice(1), 0) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5189__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq8691) {
  var G__8692 = cljs.core.first(seq8691);
  var seq8691__$1 = cljs.core.next(seq8691);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(G__8692, seq8691__$1);
};
cljs.core.replace = function cljs$core$replace() {
  var args8698 = [];
  var len__5181__auto___8701 = arguments.length;
  var i__5182__auto___8702 = 0;
  while (true) {
    if (i__5182__auto___8702 < len__5181__auto___8701) {
      args8698.push(arguments[i__5182__auto___8702]);
      var G__8703 = i__5182__auto___8702 + 1;
      i__5182__auto___8702 = G__8703;
      continue;
    } else {
    }
    break;
  }
  var G__8700 = args8698.length;
  switch(G__8700) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8698.length)].join(""));;
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__8696_SHARP_) {
    var temp__4423__auto__ = cljs.core.find(smap, p1__8696_SHARP_);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var e = temp__4423__auto__;
      return cljs.core.val(e);
    } else {
      return p1__8696_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__4423__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__8697_SHARP_) {
      var temp__4423__auto__ = cljs.core.find(smap, p1__8697_SHARP_);
      if (cljs.core.truth_(temp__4423__auto__)) {
        var e = temp__4423__auto__;
        return cljs.core.second(e);
      } else {
        return p1__8697_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct() {
  var args8705 = [];
  var len__5181__auto___8714 = arguments.length;
  var i__5182__auto___8715 = 0;
  while (true) {
    if (i__5182__auto___8715 < len__5181__auto___8714) {
      args8705.push(arguments[i__5182__auto___8715]);
      var G__8716 = i__5182__auto___8715 + 1;
      i__5182__auto___8715 = G__8716;
      continue;
    } else {
    }
    break;
  }
  var G__8707 = args8705.length;
  switch(G__8707) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8705.length)].join(""));;
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__8718 = null;
        var G__8718__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__8718__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__8718__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(seen) : cljs.core.deref.call(null, seen), input)) {
            return result;
          } else {
            cljs.core._vreset_BANG_(seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen), input));
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__8718 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__8718__0.call(this);
            case 1:
              return G__8718__1.call(this, result);
            case 2:
              return G__8718__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__8718.cljs$core$IFn$_invoke$arity$0 = G__8718__0;
        G__8718.cljs$core$IFn$_invoke$arity$1 = G__8718__1;
        G__8718.cljs$core$IFn$_invoke$arity$2 = G__8718__2;
        return G__8718;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__8712, seen__$1) {
        while (true) {
          var vec__8713 = p__8712;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8713, 0, null);
          var xs__$1 = vec__8713;
          var temp__4425__auto__ = cljs.core.seq(xs__$1);
          if (temp__4425__auto__) {
            var s = temp__4425__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__8719 = cljs.core.rest(s);
              var G__8720 = seen__$1;
              p__8712 = G__8719;
              seen__$1 = G__8720;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__8721 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__8722 = cljs.core.next(s__$1);
      ret = G__8721;
      s__$1 = G__8722;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__8725 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__8726 = cljs.core.next(ks);
      var G__8727 = cljs.core.next(vs);
      map = G__8725;
      ks = G__8726;
      vs = G__8727;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key() {
  var args8730 = [];
  var len__5181__auto___8737 = arguments.length;
  var i__5182__auto___8738 = 0;
  while (true) {
    if (i__5182__auto___8738 < len__5181__auto___8737) {
      args8730.push(arguments[i__5182__auto___8738]);
      var G__8739 = i__5182__auto___8738 + 1;
      i__5182__auto___8738 = G__8739;
      continue;
    } else {
    }
    break;
  }
  var G__8736 = args8730.length;
  switch(G__8736) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args8730.slice(3), 0);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5200__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__8728_SHARP_, p2__8729_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__8728_SHARP_, p2__8729_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq8731) {
  var G__8732 = cljs.core.first(seq8731);
  var seq8731__$1 = cljs.core.next(seq8731);
  var G__8733 = cljs.core.first(seq8731__$1);
  var seq8731__$2 = cljs.core.next(seq8731__$1);
  var G__8734 = cljs.core.first(seq8731__$2);
  var seq8731__$3 = cljs.core.next(seq8731__$2);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(G__8732, G__8733, G__8734, seq8731__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key() {
  var args8743 = [];
  var len__5181__auto___8750 = arguments.length;
  var i__5182__auto___8751 = 0;
  while (true) {
    if (i__5182__auto___8751 < len__5181__auto___8750) {
      args8743.push(arguments[i__5182__auto___8751]);
      var G__8752 = i__5182__auto___8751 + 1;
      i__5182__auto___8751 = G__8752;
      continue;
    } else {
    }
    break;
  }
  var G__8749 = args8743.length;
  switch(G__8749) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args8743.slice(3), 0);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5200__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__8741_SHARP_, p2__8742_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__8741_SHARP_, p2__8742_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq8744) {
  var G__8745 = cljs.core.first(seq8744);
  var seq8744__$1 = cljs.core.next(seq8744);
  var G__8746 = cljs.core.first(seq8744__$1);
  var seq8744__$2 = cljs.core.next(seq8744__$1);
  var G__8747 = cljs.core.first(seq8744__$2);
  var seq8744__$3 = cljs.core.next(seq8744__$2);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(G__8745, G__8746, G__8747, seq8744__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all() {
  var args8754 = [];
  var len__5181__auto___8757 = arguments.length;
  var i__5182__auto___8758 = 0;
  while (true) {
    if (i__5182__auto___8758 < len__5181__auto___8757) {
      args8754.push(arguments[i__5182__auto___8758]);
      var G__8759 = i__5182__auto___8758 + 1;
      i__5182__auto___8758 = G__8759;
      continue;
    } else {
    }
    break;
  }
  var G__8756 = args8754.length;
  switch(G__8756) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8754.length)].join(""));;
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__8761 = null;
        var G__8761__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__8761__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__8761__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          } else {
            return result;
          }
        };
        G__8761 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__8761__0.call(this);
            case 1:
              return G__8761__1.call(this, result);
            case 2:
              return G__8761__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__8761.cljs$core$IFn$_invoke$arity$0 = G__8761__0;
        G__8761.cljs$core$IFn$_invoke$arity$1 = G__8761__1;
        G__8761.cljs$core$IFn$_invoke$arity$2 = G__8761__2;
        return G__8761;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while() {
  var args8762 = [];
  var len__5181__auto___8766 = arguments.length;
  var i__5182__auto___8767 = 0;
  while (true) {
    if (i__5182__auto___8767 < len__5181__auto___8766) {
      args8762.push(arguments[i__5182__auto___8767]);
      var G__8768 = i__5182__auto___8767 + 1;
      i__5182__auto___8767 = G__8768;
      continue;
    } else {
    }
    break;
  }
  var G__8764 = args8762.length;
  switch(G__8764) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8762.length)].join(""));;
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__8770 = null;
      var G__8770__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__8770__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__8770__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__8770 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__8770__0.call(this);
          case 1:
            return G__8770__1.call(this, result);
          case 2:
            return G__8770__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__8770.cljs$core$IFn$_invoke$arity$0 = G__8770__0;
      G__8770.cljs$core$IFn$_invoke$arity$1 = G__8770__1;
      G__8770.cljs$core$IFn$_invoke$arity$2 = G__8770__2;
      return G__8770;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.truth_(function() {
        var G__8765 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8765) : pred.call(null, G__8765);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__8779 = function() {
      var G__8781 = cljs.core._entry_key(sc, e);
      var G__8782 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__8781, G__8782) : comp.call(null, G__8781, G__8782);
    }();
    var G__8780 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__8779, G__8780) : test.call(null, G__8779, G__8780);
  };
};
cljs.core.subseq = function cljs$core$subseq() {
  var args8783 = [];
  var len__5181__auto___8788 = arguments.length;
  var i__5182__auto___8789 = 0;
  while (true) {
    if (i__5182__auto___8789 < len__5181__auto___8788) {
      args8783.push(arguments[i__5182__auto___8789]);
      var G__8790 = i__5182__auto___8789 + 1;
      i__5182__auto___8789 = G__8790;
      continue;
    } else {
    }
    break;
  }
  var G__8785 = args8783.length;
  switch(G__8785) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8783.length)].join(""));;
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__8786 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8786, 0, null);
      var s = vec__8786;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__8787 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8787, 0, null);
    var s = vec__8787;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq() {
  var args8792 = [];
  var len__5181__auto___8797 = arguments.length;
  var i__5182__auto___8798 = 0;
  while (true) {
    if (i__5182__auto___8798 < len__5181__auto___8797) {
      args8792.push(arguments[i__5182__auto___8798]);
      var G__8799 = i__5182__auto___8798 + 1;
      i__5182__auto___8798 = G__8799;
      continue;
    } else {
    }
    break;
  }
  var G__8794 = args8792.length;
  switch(G__8794) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8792.length)].join(""));;
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__8795 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8795, 0, null);
      var s = vec__8795;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__8796 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8796, 0, null);
    var s = vec__8796;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__8801 = (self__.end - self__.start) / self__.step;
    return Math.ceil(G__8801);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4558__auto__ = self__.__hash;
  if (!(h__4558__auto__ == null)) {
    return h__4558__auto__;
  } else {
    var h__4558__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4558__auto____$1;
    return h__4558__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(ret__$1) : cljs.core.deref.call(null, ret__$1);
      } else {
        var G__8802 = i + self__.step;
        var G__8803 = ret__$1;
        i = G__8802;
        ret = G__8803;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.range = function cljs$core$range() {
  var args8804 = [];
  var len__5181__auto___8807 = arguments.length;
  var i__5182__auto___8808 = 0;
  while (true) {
    if (i__5182__auto___8808 < len__5181__auto___8807) {
      args8804.push(arguments[i__5182__auto___8808]);
      var G__8809 = i__5182__auto___8808 + 1;
      i__5182__auto___8808 = G__8809;
      continue;
    } else {
    }
    break;
  }
  var G__8806 = args8804.length;
  switch(G__8806) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8804.length)].join(""));;
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth() {
  var args8811 = [];
  var len__5181__auto___8816 = arguments.length;
  var i__5182__auto___8817 = 0;
  while (true) {
    if (i__5182__auto___8817 < len__5181__auto___8816) {
      args8811.push(arguments[i__5182__auto___8817]);
      var G__8818 = i__5182__auto___8817 + 1;
      i__5182__auto___8817 = G__8818;
      continue;
    } else {
    }
    break;
  }
  var G__8813 = args8811.length;
  switch(G__8813) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8811.length)].join(""));;
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__8814 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__8814) : cljs.core.pr_str.call(null, G__8814);
    }())].join(""));
  }
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__8820 = null;
        var G__8820__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__8820__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__8820__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          if (cljs.core.rem(i, n) === 0) {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__8820 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__8820__0.call(this);
            case 1:
              return G__8820__1.call(this, result);
            case 2:
              return G__8820__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__8820.cljs$core$IFn$_invoke$arity$0 = G__8820__0;
        G__8820.cljs$core$IFn$_invoke$arity$1 = G__8820__1;
        G__8820.cljs$core$IFn$_invoke$arity$2 = G__8820__2;
        return G__8820;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__8815 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__8815) : cljs.core.pr_str.call(null, G__8815);
    }())].join(""));
  }
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by() {
  var args8822 = [];
  var len__5181__auto___8825 = arguments.length;
  var i__5182__auto___8826 = 0;
  while (true) {
    if (i__5182__auto___8826 < len__5181__auto___8825) {
      args8822.push(arguments[i__5182__auto___8826]);
      var G__8827 = i__5182__auto___8826 + 1;
      i__5182__auto___8826 = G__8827;
      continue;
    } else {
    }
    break;
  }
  var G__8824 = args8822.length;
  switch(G__8824) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8822.length)].join(""));;
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__8829 = null;
        var G__8829__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__8829__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__8829__2 = function(result, input) {
          var pval = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__8829 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__8829__0.call(this);
            case 1:
              return G__8829__1.call(this, result);
            case 2:
              return G__8829__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__8829.cljs$core$IFn$_invoke$arity$0 = G__8829__0;
        G__8829.cljs$core$IFn$_invoke$arity$1 = G__8829__1;
        G__8829.cljs$core$IFn$_invoke$arity$2 = G__8829__2;
        return G__8829;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4425__auto__) {
        return function(p1__8821_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__8821_SHARP_) : f.call(null, p1__8821_SHARP_));
        };
      }(fst, fv, s, temp__4425__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions() {
  var args8830 = [];
  var len__5181__auto___8835 = arguments.length;
  var i__5182__auto___8836 = 0;
  while (true) {
    if (i__5182__auto___8836 < len__5181__auto___8835) {
      args8830.push(arguments[i__5182__auto___8836]);
      var G__8837 = i__5182__auto___8836 + 1;
      i__5182__auto___8836 = G__8837;
      continue;
    } else {
    }
    break;
  }
  var G__8832 = args8830.length;
  switch(G__8832) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8830.length)].join(""));;
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4423__auto__ = cljs.core.seq(coll);
    if (temp__4423__auto__) {
      var s = temp__4423__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
        var G__8833 = init;
        var G__8834 = cljs.core.first(s);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8833, G__8834) : f.call(null, G__8833, G__8834);
      }(), cljs.core.rest(s));
    } else {
      return null;
    }
  }, null, null));
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt() {
  var args8849 = [];
  var len__5181__auto___8856 = arguments.length;
  var i__5182__auto___8857 = 0;
  while (true) {
    if (i__5182__auto___8857 < len__5181__auto___8856) {
      args8849.push(arguments[i__5182__auto___8857]);
      var G__8858 = i__5182__auto___8857 + 1;
      i__5182__auto___8857 = G__8858;
      continue;
    } else {
    }
    break;
  }
  var G__8855 = args8849.length;
  switch(G__8855) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args8849.slice(3), 0);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5200__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__8860 = null;
    var G__8860__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__8860__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__8860__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__8860__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__8860__4 = function() {
      var G__8861__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__8861 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__8862__i = 0, G__8862__a = new Array(arguments.length - 3);
          while (G__8862__i < G__8862__a.length) {
            G__8862__a[G__8862__i] = arguments[G__8862__i + 3];
            ++G__8862__i;
          }
          args = new cljs.core.IndexedSeq(G__8862__a, 0);
        }
        return G__8861__delegate.call(this, x, y, z, args);
      };
      G__8861.cljs$lang$maxFixedArity = 3;
      G__8861.cljs$lang$applyTo = function(arglist__8863) {
        var x = cljs.core.first(arglist__8863);
        arglist__8863 = cljs.core.next(arglist__8863);
        var y = cljs.core.first(arglist__8863);
        arglist__8863 = cljs.core.next(arglist__8863);
        var z = cljs.core.first(arglist__8863);
        var args = cljs.core.rest(arglist__8863);
        return G__8861__delegate(x, y, z, args);
      };
      G__8861.cljs$core$IFn$_invoke$arity$variadic = G__8861__delegate;
      return G__8861;
    }();
    G__8860 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__8860__0.call(this);
        case 1:
          return G__8860__1.call(this, x);
        case 2:
          return G__8860__2.call(this, x, y);
        case 3:
          return G__8860__3.call(this, x, y, z);
        default:
          var G__8864 = null;
          if (arguments.length > 3) {
            var G__8865__i = 0, G__8865__a = new Array(arguments.length - 3);
            while (G__8865__i < G__8865__a.length) {
              G__8865__a[G__8865__i] = arguments[G__8865__i + 3];
              ++G__8865__i;
            }
            G__8864 = new cljs.core.IndexedSeq(G__8865__a, 0);
          }
          return G__8860__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8864);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8860.cljs$lang$maxFixedArity = 3;
    G__8860.cljs$lang$applyTo = G__8860__4.cljs$lang$applyTo;
    G__8860.cljs$core$IFn$_invoke$arity$0 = G__8860__0;
    G__8860.cljs$core$IFn$_invoke$arity$1 = G__8860__1;
    G__8860.cljs$core$IFn$_invoke$arity$2 = G__8860__2;
    G__8860.cljs$core$IFn$_invoke$arity$3 = G__8860__3;
    G__8860.cljs$core$IFn$_invoke$arity$variadic = G__8860__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8860;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__8866 = null;
    var G__8866__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__8866__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__8866__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__8866__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__8866__4 = function() {
      var G__8867__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__8867 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__8868__i = 0, G__8868__a = new Array(arguments.length - 3);
          while (G__8868__i < G__8868__a.length) {
            G__8868__a[G__8868__i] = arguments[G__8868__i + 3];
            ++G__8868__i;
          }
          args = new cljs.core.IndexedSeq(G__8868__a, 0);
        }
        return G__8867__delegate.call(this, x, y, z, args);
      };
      G__8867.cljs$lang$maxFixedArity = 3;
      G__8867.cljs$lang$applyTo = function(arglist__8869) {
        var x = cljs.core.first(arglist__8869);
        arglist__8869 = cljs.core.next(arglist__8869);
        var y = cljs.core.first(arglist__8869);
        arglist__8869 = cljs.core.next(arglist__8869);
        var z = cljs.core.first(arglist__8869);
        var args = cljs.core.rest(arglist__8869);
        return G__8867__delegate(x, y, z, args);
      };
      G__8867.cljs$core$IFn$_invoke$arity$variadic = G__8867__delegate;
      return G__8867;
    }();
    G__8866 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__8866__0.call(this);
        case 1:
          return G__8866__1.call(this, x);
        case 2:
          return G__8866__2.call(this, x, y);
        case 3:
          return G__8866__3.call(this, x, y, z);
        default:
          var G__8870 = null;
          if (arguments.length > 3) {
            var G__8871__i = 0, G__8871__a = new Array(arguments.length - 3);
            while (G__8871__i < G__8871__a.length) {
              G__8871__a[G__8871__i] = arguments[G__8871__i + 3];
              ++G__8871__i;
            }
            G__8870 = new cljs.core.IndexedSeq(G__8871__a, 0);
          }
          return G__8866__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8870);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8866.cljs$lang$maxFixedArity = 3;
    G__8866.cljs$lang$applyTo = G__8866__4.cljs$lang$applyTo;
    G__8866.cljs$core$IFn$_invoke$arity$0 = G__8866__0;
    G__8866.cljs$core$IFn$_invoke$arity$1 = G__8866__1;
    G__8866.cljs$core$IFn$_invoke$arity$2 = G__8866__2;
    G__8866.cljs$core$IFn$_invoke$arity$3 = G__8866__3;
    G__8866.cljs$core$IFn$_invoke$arity$variadic = G__8866__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8866;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__8872 = null;
    var G__8872__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__8872__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__8872__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__8872__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__8872__4 = function() {
      var G__8873__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__8873 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__8874__i = 0, G__8874__a = new Array(arguments.length - 3);
          while (G__8874__i < G__8874__a.length) {
            G__8874__a[G__8874__i] = arguments[G__8874__i + 3];
            ++G__8874__i;
          }
          args = new cljs.core.IndexedSeq(G__8874__a, 0);
        }
        return G__8873__delegate.call(this, x, y, z, args);
      };
      G__8873.cljs$lang$maxFixedArity = 3;
      G__8873.cljs$lang$applyTo = function(arglist__8875) {
        var x = cljs.core.first(arglist__8875);
        arglist__8875 = cljs.core.next(arglist__8875);
        var y = cljs.core.first(arglist__8875);
        arglist__8875 = cljs.core.next(arglist__8875);
        var z = cljs.core.first(arglist__8875);
        var args = cljs.core.rest(arglist__8875);
        return G__8873__delegate(x, y, z, args);
      };
      G__8873.cljs$core$IFn$_invoke$arity$variadic = G__8873__delegate;
      return G__8873;
    }();
    G__8872 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__8872__0.call(this);
        case 1:
          return G__8872__1.call(this, x);
        case 2:
          return G__8872__2.call(this, x, y);
        case 3:
          return G__8872__3.call(this, x, y, z);
        default:
          var G__8876 = null;
          if (arguments.length > 3) {
            var G__8877__i = 0, G__8877__a = new Array(arguments.length - 3);
            while (G__8877__i < G__8877__a.length) {
              G__8877__a[G__8877__i] = arguments[G__8877__i + 3];
              ++G__8877__i;
            }
            G__8876 = new cljs.core.IndexedSeq(G__8877__a, 0);
          }
          return G__8872__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8876);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8872.cljs$lang$maxFixedArity = 3;
    G__8872.cljs$lang$applyTo = G__8872__4.cljs$lang$applyTo;
    G__8872.cljs$core$IFn$_invoke$arity$0 = G__8872__0;
    G__8872.cljs$core$IFn$_invoke$arity$1 = G__8872__1;
    G__8872.cljs$core$IFn$_invoke$arity$2 = G__8872__2;
    G__8872.cljs$core$IFn$_invoke$arity$3 = G__8872__3;
    G__8872.cljs$core$IFn$_invoke$arity$variadic = G__8872__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8872;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__8878 = null;
      var G__8878__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__8839_SHARP_, p2__8840_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__8839_SHARP_, p2__8840_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__8840_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__8840_SHARP_.call(null));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__8878__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__8841_SHARP_, p2__8842_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__8841_SHARP_, p2__8842_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__8842_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__8842_SHARP_.call(null, x));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__8878__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__8843_SHARP_, p2__8844_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__8843_SHARP_, p2__8844_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__8844_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__8844_SHARP_.call(null, x, y));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__8878__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__8845_SHARP_, p2__8846_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__8845_SHARP_, p2__8846_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__8846_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__8846_SHARP_.call(null, x, y, z));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__8878__4 = function() {
        var G__8879__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__8847_SHARP_, p2__8848_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__8847_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__8848_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__8879 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__8880__i = 0, G__8880__a = new Array(arguments.length - 3);
            while (G__8880__i < G__8880__a.length) {
              G__8880__a[G__8880__i] = arguments[G__8880__i + 3];
              ++G__8880__i;
            }
            args = new cljs.core.IndexedSeq(G__8880__a, 0);
          }
          return G__8879__delegate.call(this, x, y, z, args);
        };
        G__8879.cljs$lang$maxFixedArity = 3;
        G__8879.cljs$lang$applyTo = function(arglist__8881) {
          var x = cljs.core.first(arglist__8881);
          arglist__8881 = cljs.core.next(arglist__8881);
          var y = cljs.core.first(arglist__8881);
          arglist__8881 = cljs.core.next(arglist__8881);
          var z = cljs.core.first(arglist__8881);
          var args = cljs.core.rest(arglist__8881);
          return G__8879__delegate(x, y, z, args);
        };
        G__8879.cljs$core$IFn$_invoke$arity$variadic = G__8879__delegate;
        return G__8879;
      }();
      G__8878 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__8878__0.call(this);
          case 1:
            return G__8878__1.call(this, x);
          case 2:
            return G__8878__2.call(this, x, y);
          case 3:
            return G__8878__3.call(this, x, y, z);
          default:
            var G__8882 = null;
            if (arguments.length > 3) {
              var G__8883__i = 0, G__8883__a = new Array(arguments.length - 3);
              while (G__8883__i < G__8883__a.length) {
                G__8883__a[G__8883__i] = arguments[G__8883__i + 3];
                ++G__8883__i;
              }
              G__8882 = new cljs.core.IndexedSeq(G__8883__a, 0);
            }
            return G__8878__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8882);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__8878.cljs$lang$maxFixedArity = 3;
      G__8878.cljs$lang$applyTo = G__8878__4.cljs$lang$applyTo;
      G__8878.cljs$core$IFn$_invoke$arity$0 = G__8878__0;
      G__8878.cljs$core$IFn$_invoke$arity$1 = G__8878__1;
      G__8878.cljs$core$IFn$_invoke$arity$2 = G__8878__2;
      G__8878.cljs$core$IFn$_invoke$arity$3 = G__8878__3;
      G__8878.cljs$core$IFn$_invoke$arity$variadic = G__8878__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__8878;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq8850) {
  var G__8851 = cljs.core.first(seq8850);
  var seq8850__$1 = cljs.core.next(seq8850);
  var G__8852 = cljs.core.first(seq8850__$1);
  var seq8850__$2 = cljs.core.next(seq8850__$1);
  var G__8853 = cljs.core.first(seq8850__$2);
  var seq8850__$3 = cljs.core.next(seq8850__$2);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(G__8851, G__8852, G__8853, seq8850__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun() {
  var args8884 = [];
  var len__5181__auto___8887 = arguments.length;
  var i__5182__auto___8888 = 0;
  while (true) {
    if (i__5182__auto___8888 < len__5181__auto___8887) {
      args8884.push(arguments[i__5182__auto___8888]);
      var G__8889 = i__5182__auto___8888 + 1;
      i__5182__auto___8888 = G__8889;
      continue;
    } else {
    }
    break;
  }
  var G__8886 = args8884.length;
  switch(G__8886) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8884.length)].join(""));;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var G__8891 = cljs.core.next(coll);
      coll = G__8891;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__8892 = n - 1;
      var G__8893 = cljs.core.next(coll);
      n = G__8892;
      coll = G__8893;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall() {
  var args8894 = [];
  var len__5181__auto___8897 = arguments.length;
  var i__5182__auto___8898 = 0;
  while (true) {
    if (i__5182__auto___8898 < len__5181__auto___8897) {
      args8894.push(arguments[i__5182__auto___8898]);
      var G__8899 = i__5182__auto___8898 + 1;
      i__5182__auto___8898 = G__8899;
      continue;
    } else {
    }
    break;
  }
  var G__8896 = args8894.length;
  switch(G__8896) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8894.length)].join(""));;
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__8902 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8902, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8902, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__4142__auto__ = flags;
      if (cljs.core.truth_(or__4142__auto__)) {
        return or__4142__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_8910 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__4142__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__4142__auto__)) {
              return or__4142__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__8911_8917 = cljs.core.first(coll);
          var G__8912_8918 = writer;
          var G__8913_8919 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__8911_8917, G__8912_8918, G__8913_8919) : print_one.call(null, G__8911_8917, G__8912_8918, G__8913_8919);
        } else {
        }
        var coll_8920__$1 = cljs.core.next(coll);
        var n_8921 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_8920__$1 && (n_8921 == null || !(n_8921 === 0))) {
            cljs.core._write(writer, sep);
            var G__8914_8922 = cljs.core.first(coll_8920__$1);
            var G__8915_8923 = writer;
            var G__8916_8924 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__8914_8922, G__8915_8923, G__8916_8924) : print_one.call(null, G__8914_8922, G__8915_8923, G__8916_8924);
            var G__8925 = cljs.core.next(coll_8920__$1);
            var G__8926 = n_8921 - 1;
            coll_8920__$1 = G__8925;
            n_8921 = G__8926;
            continue;
          } else {
            if (cljs.core.seq(coll_8920__$1) && n_8921 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__4142__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__4142__auto__)) {
                  return or__4142__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_8910;
  }
};
cljs.core.write_all = function cljs$core$write_all() {
  var args__5188__auto__ = [];
  var len__5181__auto___8933 = arguments.length;
  var i__5182__auto___8934 = 0;
  while (true) {
    if (i__5182__auto___8934 < len__5181__auto___8933) {
      args__5188__auto__.push(arguments[i__5182__auto___8934]);
      var G__8935 = i__5182__auto___8934 + 1;
      i__5182__auto___8934 = G__8935;
      continue;
    } else {
    }
    break;
  }
  var argseq__5189__auto__ = 1 < args__5188__auto__.length ? new cljs.core.IndexedSeq(args__5188__auto__.slice(1), 0) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5189__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__8929 = cljs.core.seq(ss);
  var chunk__8930 = null;
  var count__8931 = 0;
  var i__8932 = 0;
  while (true) {
    if (i__8932 < count__8931) {
      var s = chunk__8930.cljs$core$IIndexed$_nth$arity$2(null, i__8932);
      cljs.core._write(writer, s);
      var G__8936 = seq__8929;
      var G__8937 = chunk__8930;
      var G__8938 = count__8931;
      var G__8939 = i__8932 + 1;
      seq__8929 = G__8936;
      chunk__8930 = G__8937;
      count__8931 = G__8938;
      i__8932 = G__8939;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__8929);
      if (temp__4425__auto__) {
        var seq__8929__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8929__$1)) {
          var c__4926__auto__ = cljs.core.chunk_first(seq__8929__$1);
          var G__8940 = cljs.core.chunk_rest(seq__8929__$1);
          var G__8941 = c__4926__auto__;
          var G__8942 = cljs.core.count(c__4926__auto__);
          var G__8943 = 0;
          seq__8929 = G__8940;
          chunk__8930 = G__8941;
          count__8931 = G__8942;
          i__8932 = G__8943;
          continue;
        } else {
          var s = cljs.core.first(seq__8929__$1);
          cljs.core._write(writer, s);
          var G__8944 = cljs.core.next(seq__8929__$1);
          var G__8945 = null;
          var G__8946 = 0;
          var G__8947 = 0;
          seq__8929 = G__8944;
          chunk__8930 = G__8945;
          count__8931 = G__8946;
          i__8932 = G__8947;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq8927) {
  var G__8928 = cljs.core.first(seq8927);
  var seq8927__$1 = cljs.core.next(seq8927);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(G__8928, seq8927__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj8949 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj8949;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return [cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  var and__4130__auto__ = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964)));
  if (and__4130__auto__) {
    var and__4130__auto____$1 = !(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || obj.cljs$core$IMeta$ ? true : false : false;
    if (and__4130__auto____$1) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return and__4130__auto____$1;
    }
  } else {
    return and__4130__auto__;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      var G__8965_8974 = cljs.core.meta(obj);
      var G__8966_8975 = writer;
      var G__8967_8976 = opts;
      cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__8965_8974, G__8966_8975, G__8967_8976) : cljs.core.pr_writer.call(null, G__8965_8974, G__8966_8975, G__8967_8976);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
        return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
      } else {
        if (obj === true || obj === false || typeof obj === "number") {
          return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
        } else {
          if (cljs.core.object_QMARK_(obj)) {
            cljs.core._write(writer, "#js ");
            var G__8969 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
            }, cljs.core.js_keys(obj));
            var G__8970 = cljs.core.pr_writer;
            var G__8971 = writer;
            var G__8972 = opts;
            return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__8969, G__8970, G__8971, G__8972) : cljs.core.print_map.call(null, G__8969, G__8970, G__8971, G__8972);
          } else {
            if (cljs.core.array_QMARK_(obj)) {
              return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
            } else {
              if (goog.isString(obj)) {
                if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                  return cljs.core._write(writer, cljs.core.quote_string(obj));
                } else {
                  return cljs.core._write(writer, obj);
                }
              } else {
                if (goog.isFunction(obj)) {
                  var name = obj.name;
                  var name__$1 = cljs.core.truth_(function() {
                    var or__4142__auto__ = name == null;
                    if (or__4142__auto__) {
                      return or__4142__auto__;
                    } else {
                      return goog.string.isEmpty(name);
                    }
                  }()) ? "Function" : name;
                  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, ' "', [cljs.core.str(obj)].join(""), '"]'], 0));
                } else {
                  if (obj instanceof Date) {
                    var normalize = function(n, len) {
                      var ns = [cljs.core.str(n)].join("");
                      while (true) {
                        if (cljs.core.count(ns) < len) {
                          var G__8977 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                          ns = G__8977;
                          continue;
                        } else {
                          return ns;
                        }
                        break;
                      }
                    };
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                  } else {
                    if (cljs.core.regexp_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                    } else {
                      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
                        return cljs.core._pr_writer(obj, writer, opts);
                      } else {
                        if (cljs.core.truth_(obj.constructor.cljs$lang$ctorStr)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                        } else {
                          var name = obj.constructor.name;
                          var name__$1 = cljs.core.truth_(function() {
                            var or__4142__auto__ = name == null;
                            if (or__4142__auto__) {
                              return or__4142__auto__;
                            } else {
                              return goog.string.isEmpty(name);
                            }
                          }()) ? "Object" : name;
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, " ", [cljs.core.str(obj)].join(""), "]"], 0));
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var alt_impl = temp__4423__auto__;
    var G__8981 = obj;
    var G__8982 = writer;
    var G__8983 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__8981, G__8982, G__8983) : alt_impl.call(null, G__8981, G__8982, G__8983);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__8988 = cljs.core.seq(cljs.core.next(objs));
  var chunk__8989 = null;
  var count__8990 = 0;
  var i__8991 = 0;
  while (true) {
    if (i__8991 < count__8990) {
      var obj = chunk__8989.cljs$core$IIndexed$_nth$arity$2(null, i__8991);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__8992 = seq__8988;
      var G__8993 = chunk__8989;
      var G__8994 = count__8990;
      var G__8995 = i__8991 + 1;
      seq__8988 = G__8992;
      chunk__8989 = G__8993;
      count__8990 = G__8994;
      i__8991 = G__8995;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__8988);
      if (temp__4425__auto__) {
        var seq__8988__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8988__$1)) {
          var c__4926__auto__ = cljs.core.chunk_first(seq__8988__$1);
          var G__8996 = cljs.core.chunk_rest(seq__8988__$1);
          var G__8997 = c__4926__auto__;
          var G__8998 = cljs.core.count(c__4926__auto__);
          var G__8999 = 0;
          seq__8988 = G__8996;
          chunk__8989 = G__8997;
          count__8990 = G__8998;
          i__8991 = G__8999;
          continue;
        } else {
          var obj = cljs.core.first(seq__8988__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__9000 = cljs.core.next(seq__8988__$1);
          var G__9001 = null;
          var G__9002 = 0;
          var G__9003 = 0;
          seq__8988 = G__9000;
          chunk__8989 = G__9001;
          count__8990 = G__9002;
          i__8991 = G__9003;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return [cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return [cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline() {
  var args9004 = [];
  var len__5181__auto___9007 = arguments.length;
  var i__5182__auto___9008 = 0;
  while (true) {
    if (i__5182__auto___9008 < len__5181__auto___9007) {
      args9004.push(arguments[i__5182__auto___9008]);
      var G__9009 = i__5182__auto___9008 + 1;
      i__5182__auto___9008 = G__9009;
      continue;
    } else {
    }
    break;
  }
  var G__9006 = args9004.length;
  switch(G__9006) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9004.length)].join(""));;
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str() {
  var args__5188__auto__ = [];
  var len__5181__auto___9012 = arguments.length;
  var i__5182__auto___9013 = 0;
  while (true) {
    if (i__5182__auto___9013 < len__5181__auto___9012) {
      args__5188__auto__.push(arguments[i__5182__auto___9013]);
      var G__9014 = i__5182__auto___9013 + 1;
      i__5182__auto___9013 = G__9014;
      continue;
    } else {
    }
    break;
  }
  var argseq__5189__auto__ = 0 < args__5188__auto__.length ? new cljs.core.IndexedSeq(args__5188__auto__.slice(0), 0) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5189__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq9011) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq9011));
};
cljs.core.prn_str = function cljs$core$prn_str() {
  var args__5188__auto__ = [];
  var len__5181__auto___9016 = arguments.length;
  var i__5182__auto___9017 = 0;
  while (true) {
    if (i__5182__auto___9017 < len__5181__auto___9016) {
      args__5188__auto__.push(arguments[i__5182__auto___9017]);
      var G__9018 = i__5182__auto___9017 + 1;
      i__5182__auto___9017 = G__9018;
      continue;
    } else {
    }
    break;
  }
  var argseq__5189__auto__ = 0 < args__5188__auto__.length ? new cljs.core.IndexedSeq(args__5188__auto__.slice(0), 0) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5189__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq9015) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq9015));
};
cljs.core.pr = function cljs$core$pr() {
  var args__5188__auto__ = [];
  var len__5181__auto___9020 = arguments.length;
  var i__5182__auto___9021 = 0;
  while (true) {
    if (i__5182__auto___9021 < len__5181__auto___9020) {
      args__5188__auto__.push(arguments[i__5182__auto___9021]);
      var G__9022 = i__5182__auto___9021 + 1;
      i__5182__auto___9021 = G__9022;
      continue;
    } else {
    }
    break;
  }
  var argseq__5189__auto__ = 0 < args__5188__auto__.length ? new cljs.core.IndexedSeq(args__5188__auto__.slice(0), 0) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__5189__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq9019) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq9019));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__9023__i = 0, G__9023__a = new Array(arguments.length - 0);
      while (G__9023__i < G__9023__a.length) {
        G__9023__a[G__9023__i] = arguments[G__9023__i + 0];
        ++G__9023__i;
      }
      objs = new cljs.core.IndexedSeq(G__9023__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__9024) {
    var objs = cljs.core.seq(arglist__9024);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str() {
  var args__5188__auto__ = [];
  var len__5181__auto___9026 = arguments.length;
  var i__5182__auto___9027 = 0;
  while (true) {
    if (i__5182__auto___9027 < len__5181__auto___9026) {
      args__5188__auto__.push(arguments[i__5182__auto___9027]);
      var G__9028 = i__5182__auto___9027 + 1;
      i__5182__auto___9027 = G__9028;
      continue;
    } else {
    }
    break;
  }
  var argseq__5189__auto__ = 0 < args__5188__auto__.length ? new cljs.core.IndexedSeq(args__5188__auto__.slice(0), 0) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5189__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq9025) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq9025));
};
cljs.core.println = function cljs$core$println() {
  var args__5188__auto__ = [];
  var len__5181__auto___9030 = arguments.length;
  var i__5182__auto___9031 = 0;
  while (true) {
    if (i__5182__auto___9031 < len__5181__auto___9030) {
      args__5188__auto__.push(arguments[i__5182__auto___9031]);
      var G__9032 = i__5182__auto___9031 + 1;
      i__5182__auto___9031 = G__9032;
      continue;
    } else {
    }
    break;
  }
  var argseq__5189__auto__ = 0 < args__5188__auto__.length ? new cljs.core.IndexedSeq(args__5188__auto__.slice(0), 0) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__5189__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq9029) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq9029));
};
cljs.core.println_str = function cljs$core$println_str() {
  var args__5188__auto__ = [];
  var len__5181__auto___9034 = arguments.length;
  var i__5182__auto___9035 = 0;
  while (true) {
    if (i__5182__auto___9035 < len__5181__auto___9034) {
      args__5188__auto__.push(arguments[i__5182__auto___9035]);
      var G__9036 = i__5182__auto___9035 + 1;
      i__5182__auto___9035 = G__9036;
      continue;
    } else {
    }
    break;
  }
  var argseq__5189__auto__ = 0 < args__5188__auto__.length ? new cljs.core.IndexedSeq(args__5188__auto__.slice(0), 0) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5189__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq9033) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq9033));
};
cljs.core.prn = function cljs$core$prn() {
  var args__5188__auto__ = [];
  var len__5181__auto___9038 = arguments.length;
  var i__5182__auto___9039 = 0;
  while (true) {
    if (i__5182__auto___9039 < len__5181__auto___9038) {
      args__5188__auto__.push(arguments[i__5182__auto___9039]);
      var G__9040 = i__5182__auto___9039 + 1;
      i__5182__auto___9039 = G__9040;
      continue;
    } else {
    }
    break;
  }
  var argseq__5189__auto__ = 0 < args__5188__auto__.length ? new cljs.core.IndexedSeq(args__5188__auto__.slice(0), 0) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__5189__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq9037) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq9037));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__9047_9053 = cljs.core.key(e);
    var G__9048_9054 = w;
    var G__9049_9055 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__9047_9053, G__9048_9054, G__9049_9055) : print_one.call(null, G__9047_9053, G__9048_9054, G__9049_9055);
    cljs.core._write(w, " ");
    var G__9050 = cljs.core.val(e);
    var G__9051 = w;
    var G__9052 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__9050, G__9051, G__9052) : print_one.call(null, G__9050, G__9051, G__9052);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_() {
  var args__5188__auto__ = [];
  var len__5181__auto___9059 = arguments.length;
  var i__5182__auto___9060 = 0;
  while (true) {
    if (i__5182__auto___9060 < len__5181__auto___9059) {
      args__5188__auto__.push(arguments[i__5182__auto___9060]);
      var G__9061 = i__5182__auto___9060 + 1;
      i__5182__auto___9060 = G__9061;
      continue;
    } else {
    }
    break;
  }
  var argseq__5189__auto__ = 2 < args__5188__auto__.length ? new cljs.core.IndexedSeq(args__5188__auto__.slice(2), 0) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5189__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq9056) {
  var G__9057 = cljs.core.first(seq9056);
  var seq9056__$1 = cljs.core.next(seq9056);
  var G__9058 = cljs.core.first(seq9056__$1);
  var seq9056__$2 = cljs.core.next(seq9056__$1);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__9057, G__9058, seq9056__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym() {
  var args9062 = [];
  var len__5181__auto___9065 = arguments.length;
  var i__5182__auto___9066 = 0;
  while (true) {
    if (i__5182__auto___9066 < len__5181__auto___9065) {
      args9062.push(arguments[i__5182__auto___9066]);
      var G__9067 = i__5182__auto___9066 + 1;
      i__5182__auto___9066 = G__9067;
      continue;
    } else {
    }
    break;
  }
  var G__9064 = args9062.length;
  switch(G__9064) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9062.length)].join(""));;
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0) : cljs.core.atom.call(null, 0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__9069_SHARP_, p2__9070_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__9069_SHARP_, p2__9070_SHARP_) : rf.call(null, p1__9069_SHARP_, p2__9070_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__9071 = null;
      var G__9071__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__9071__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__9071__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__9071 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__9071__0.call(this);
          case 1:
            return G__9071__1.call(this, result);
          case 2:
            return G__9071__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9071.cljs$core$IFn$_invoke$arity$0 = G__9071__0;
      G__9071.cljs$core$IFn$_invoke$arity$1 = G__9071__1;
      G__9071.cljs$core$IFn$_invoke$arity$2 = G__9071__2;
      return G__9071;
    }();
  }(rf1);
};
cljs.core.dedupe = function cljs$core$dedupe() {
  var args9072 = [];
  var len__5181__auto___9075 = arguments.length;
  var i__5182__auto___9076 = 0;
  while (true) {
    if (i__5182__auto___9076 < len__5181__auto___9075) {
      args9072.push(arguments[i__5182__auto___9076]);
      var G__9077 = i__5182__auto___9076 + 1;
      i__5182__auto___9076 = G__9077;
      continue;
    } else {
    }
    break;
  }
  var G__9074 = args9072.length;
  switch(G__9074) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9072.length)].join(""));;
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__9079 = null;
        var G__9079__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__9079__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__9079__2 = function(result, input) {
          var prior = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__9079 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__9079__0.call(this);
            case 1:
              return G__9079__1.call(this, result);
            case 2:
              return G__9079__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__9079.cljs$core$IFn$_invoke$arity$0 = G__9079__0;
        G__9079.cljs$core$IFn$_invoke$arity$1 = G__9079__1;
        G__9079.cljs$core$IFn$_invoke$arity$2 = G__9079__2;
        return G__9079;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample() {
  var args9080 = [];
  var len__5181__auto___9083 = arguments.length;
  var i__5182__auto___9084 = 0;
  while (true) {
    if (i__5182__auto___9084 < len__5181__auto___9083) {
      args9080.push(arguments[i__5182__auto___9084]);
      var G__9085 = i__5182__auto___9084 + 1;
      i__5182__auto___9084 = G__9085;
      continue;
    } else {
    }
    break;
  }
  var G__9082 = args9080.length;
  switch(G__9082) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9080.length)].join(""));;
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5117__auto__ = this;
  return cljs.core.es6_iterator(this__5117__auto__);
};
cljs.core.eduction = function cljs$core$eduction() {
  var args__5188__auto__ = [];
  var len__5181__auto___9088 = arguments.length;
  var i__5182__auto___9089 = 0;
  while (true) {
    if (i__5182__auto___9089 < len__5181__auto___9088) {
      args__5188__auto__.push(arguments[i__5182__auto___9089]);
      var G__9090 = i__5182__auto___9089 + 1;
      i__5182__auto___9089 = G__9090;
      continue;
    } else {
    }
    break;
  }
  var argseq__5189__auto__ = 0 < args__5188__auto__.length ? new cljs.core.IndexedSeq(args__5188__auto__.slice(0), 0) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__5189__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq9087) {
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq9087));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__9092_SHARP_, p2__9091_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__9091_SHARP_) : proc.call(null, p2__9091_SHARP_);
  }, null, coll);
};
cljs.core.IEncodeJS = {};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4778__auto__ = x == null ? null : x;
    var m__4779__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4779__auto__.call(null, x);
    } else {
      var m__4779__auto____$1 = cljs.core._clj__GT_js["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__4779__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-clj->js", x);
      }
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4778__auto__ = x == null ? null : x;
    var m__4779__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4779__auto__.call(null, x);
    } else {
      var m__4779__auto____$1 = cljs.core._key__GT_js["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__4779__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-key->js", x);
      }
    }
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (!(k == null) ? false || k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(k) : cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (!(x == null) ? false || x.cljs$core$IEncodeJS$ ? true : !x.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x)) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return [cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = {};
            var seq__9113_9123 = cljs.core.seq(x);
            var chunk__9114_9124 = null;
            var count__9115_9125 = 0;
            var i__9116_9126 = 0;
            while (true) {
              if (i__9116_9126 < count__9115_9125) {
                var vec__9117_9127 = chunk__9114_9124.cljs$core$IIndexed$_nth$arity$2(null, i__9116_9126);
                var k_9128 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9117_9127, 0, null);
                var v_9129 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9117_9127, 1, null);
                m[cljs.core.key__GT_js(k_9128)] = cljs$core$clj__GT_js(v_9129);
                var G__9130 = seq__9113_9123;
                var G__9131 = chunk__9114_9124;
                var G__9132 = count__9115_9125;
                var G__9133 = i__9116_9126 + 1;
                seq__9113_9123 = G__9130;
                chunk__9114_9124 = G__9131;
                count__9115_9125 = G__9132;
                i__9116_9126 = G__9133;
                continue;
              } else {
                var temp__4425__auto___9134 = cljs.core.seq(seq__9113_9123);
                if (temp__4425__auto___9134) {
                  var seq__9113_9135__$1 = temp__4425__auto___9134;
                  if (cljs.core.chunked_seq_QMARK_(seq__9113_9135__$1)) {
                    var c__4926__auto___9136 = cljs.core.chunk_first(seq__9113_9135__$1);
                    var G__9137 = cljs.core.chunk_rest(seq__9113_9135__$1);
                    var G__9138 = c__4926__auto___9136;
                    var G__9139 = cljs.core.count(c__4926__auto___9136);
                    var G__9140 = 0;
                    seq__9113_9123 = G__9137;
                    chunk__9114_9124 = G__9138;
                    count__9115_9125 = G__9139;
                    i__9116_9126 = G__9140;
                    continue;
                  } else {
                    var vec__9118_9141 = cljs.core.first(seq__9113_9135__$1);
                    var k_9142 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9118_9141, 0, null);
                    var v_9143 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9118_9141, 1, null);
                    m[cljs.core.key__GT_js(k_9142)] = cljs$core$clj__GT_js(v_9143);
                    var G__9144 = cljs.core.next(seq__9113_9135__$1);
                    var G__9145 = null;
                    var G__9146 = 0;
                    var G__9147 = 0;
                    seq__9113_9123 = G__9144;
                    chunk__9114_9124 = G__9145;
                    count__9115_9125 = G__9146;
                    i__9116_9126 = G__9147;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__9119_9148 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__9120_9149 = null;
              var count__9121_9150 = 0;
              var i__9122_9151 = 0;
              while (true) {
                if (i__9122_9151 < count__9121_9150) {
                  var x_9152__$1 = chunk__9120_9149.cljs$core$IIndexed$_nth$arity$2(null, i__9122_9151);
                  arr.push(x_9152__$1);
                  var G__9153 = seq__9119_9148;
                  var G__9154 = chunk__9120_9149;
                  var G__9155 = count__9121_9150;
                  var G__9156 = i__9122_9151 + 1;
                  seq__9119_9148 = G__9153;
                  chunk__9120_9149 = G__9154;
                  count__9121_9150 = G__9155;
                  i__9122_9151 = G__9156;
                  continue;
                } else {
                  var temp__4425__auto___9157 = cljs.core.seq(seq__9119_9148);
                  if (temp__4425__auto___9157) {
                    var seq__9119_9158__$1 = temp__4425__auto___9157;
                    if (cljs.core.chunked_seq_QMARK_(seq__9119_9158__$1)) {
                      var c__4926__auto___9159 = cljs.core.chunk_first(seq__9119_9158__$1);
                      var G__9160 = cljs.core.chunk_rest(seq__9119_9158__$1);
                      var G__9161 = c__4926__auto___9159;
                      var G__9162 = cljs.core.count(c__4926__auto___9159);
                      var G__9163 = 0;
                      seq__9119_9148 = G__9160;
                      chunk__9120_9149 = G__9161;
                      count__9121_9150 = G__9162;
                      i__9122_9151 = G__9163;
                      continue;
                    } else {
                      var x_9164__$1 = cljs.core.first(seq__9119_9158__$1);
                      arr.push(x_9164__$1);
                      var G__9165 = cljs.core.next(seq__9119_9158__$1);
                      var G__9166 = null;
                      var G__9167 = 0;
                      var G__9168 = 0;
                      seq__9119_9148 = G__9165;
                      chunk__9120_9149 = G__9166;
                      count__9121_9150 = G__9167;
                      i__9122_9151 = G__9168;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = {};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4778__auto__ = x == null ? null : x;
    var m__4779__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__4779__auto__.call(null, x, options);
    } else {
      var m__4779__auto____$1 = cljs.core._js__GT_clj["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2(x, options) : m__4779__auto____$1.call(null, x, options);
      } else {
        throw cljs.core.missing_protocol("IEncodeClojure.-js->clj", x);
      }
    }
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj() {
  var args9171 = [];
  var len__5181__auto___9196 = arguments.length;
  var i__5182__auto___9197 = 0;
  while (true) {
    if (i__5182__auto___9197 < len__5181__auto___9196) {
      args9171.push(arguments[i__5182__auto___9197]);
      var G__9198 = i__5182__auto___9197 + 1;
      i__5182__auto___9197 = G__9198;
      continue;
    } else {
    }
    break;
  }
  var G__9175 = args9171.length;
  switch(G__9175) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args9171.slice(1), 0);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5200__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__9176 = opts;
  var map__9176__$1 = (!(map__9176 == null) ? map__9176.cljs$lang$protocol_mask$partition0$ & 64 || map__9176.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__9176) : map__9176;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9176__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__9176, map__9176__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (!(x__$1 == null) ? false || x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__4895__auto__ = function(map__9176, map__9176__$1, keywordize_keys, keyfn) {
                    return function cljs$core$thisfn_$_iter__9190(s__9191) {
                      return new cljs.core.LazySeq(null, function(map__9176, map__9176__$1, keywordize_keys, keyfn) {
                        return function() {
                          var s__9191__$1 = s__9191;
                          while (true) {
                            var temp__4425__auto__ = cljs.core.seq(s__9191__$1);
                            if (temp__4425__auto__) {
                              var s__9191__$2 = temp__4425__auto__;
                              if (cljs.core.chunked_seq_QMARK_(s__9191__$2)) {
                                var c__4893__auto__ = cljs.core.chunk_first(s__9191__$2);
                                var size__4894__auto__ = cljs.core.count(c__4893__auto__);
                                var b__9193 = cljs.core.chunk_buffer(size__4894__auto__);
                                if (function() {
                                  var i__9192 = 0;
                                  while (true) {
                                    if (i__9192 < size__4894__auto__) {
                                      var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4893__auto__, i__9192);
                                      cljs.core.chunk_append(b__9193, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null));
                                      var G__9200 = i__9192 + 1;
                                      i__9192 = G__9200;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__9193), cljs$core$thisfn_$_iter__9190(cljs.core.chunk_rest(s__9191__$2)));
                                } else {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__9193), null);
                                }
                              } else {
                                var k = cljs.core.first(s__9191__$2);
                                return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null), cljs$core$thisfn_$_iter__9190(cljs.core.rest(s__9191__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(map__9176, map__9176__$1, keywordize_keys, keyfn), null, null);
                    };
                  }(map__9176, map__9176__$1, keywordize_keys, keyfn);
                  return iter__4895__auto__(cljs.core.js_keys(x__$1));
                }());
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    };
  }(map__9176, map__9176__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq9172) {
  var G__9173 = cljs.core.first(seq9172);
  var seq9172__$1 = cljs.core.next(seq9172);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(G__9173, seq9172__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__9202 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9202) : cljs.core.atom.call(null, G__9202);
  }();
  return function(mem) {
    return function() {
      var G__9203__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(mem) : cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__9203 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__9204__i = 0, G__9204__a = new Array(arguments.length - 0);
          while (G__9204__i < G__9204__a.length) {
            G__9204__a[G__9204__i] = arguments[G__9204__i + 0];
            ++G__9204__i;
          }
          args = new cljs.core.IndexedSeq(G__9204__a, 0);
        }
        return G__9203__delegate.call(this, args);
      };
      G__9203.cljs$lang$maxFixedArity = 0;
      G__9203.cljs$lang$applyTo = function(arglist__9205) {
        var args = cljs.core.seq(arglist__9205);
        return G__9203__delegate(args);
      };
      G__9203.cljs$core$IFn$_invoke$arity$variadic = G__9203__delegate;
      return G__9203;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline() {
  var args9206 = [];
  var len__5181__auto___9211 = arguments.length;
  var i__5182__auto___9212 = 0;
  while (true) {
    if (i__5182__auto___9212 < len__5181__auto___9211) {
      args9206.push(arguments[i__5182__auto___9212]);
      var G__9213 = i__5182__auto___9212 + 1;
      i__5182__auto___9212 = G__9213;
      continue;
    } else {
    }
    break;
  }
  var G__9210 = args9206.length;
  switch(G__9210) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5200__auto__ = new cljs.core.IndexedSeq(args9206.slice(1), 0);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5200__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__9215 = ret;
      f = G__9215;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq9207) {
  var G__9208 = cljs.core.first(seq9207);
  var seq9207__$1 = cljs.core.next(seq9207);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(G__9208, seq9207__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand() {
  var args9216 = [];
  var len__5181__auto___9219 = arguments.length;
  var i__5182__auto___9220 = 0;
  while (true) {
    if (i__5182__auto___9220 < len__5181__auto___9219) {
      args9216.push(arguments[i__5182__auto___9220]);
      var G__9221 = i__5182__auto___9220 + 1;
      i__5182__auto___9220 = G__9221;
      continue;
    } else {
    }
    break;
  }
  var G__9218 = args9216.length;
  switch(G__9218) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9216.length)].join(""));;
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__9224 = Math.random() * n;
  return Math.floor(G__9224);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__9226 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9226) : cljs.core.atom.call(null, G__9226);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_() {
  var args__5188__auto__ = [];
  var len__5181__auto___9229 = arguments.length;
  var i__5182__auto___9230 = 0;
  while (true) {
    if (i__5182__auto___9230 < len__5181__auto___9229) {
      args__5188__auto__.push(arguments[i__5182__auto___9230]);
      var G__9231 = i__5182__auto___9230 + 1;
      i__5182__auto___9230 = G__9231;
      continue;
    } else {
    }
    break;
  }
  var argseq__5189__auto__ = 1 < args__5188__auto__.length ? new cljs.core.IndexedSeq(args__5188__auto__.slice(1), 0) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5189__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq9227) {
  var G__9228 = cljs.core.first(seq9227);
  var seq9227__$1 = cljs.core.next(seq9227);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__9228, seq9227__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_() {
  var args9232 = [];
  var len__5181__auto___9236 = arguments.length;
  var i__5182__auto___9237 = 0;
  while (true) {
    if (i__5182__auto___9237 < len__5181__auto___9236) {
      args9232.push(arguments[i__5182__auto___9237]);
      var G__9238 = i__5182__auto___9237 + 1;
      i__5182__auto___9237 = G__9238;
      continue;
    } else {
    }
    break;
  }
  var G__9234 = args9232.length;
  switch(G__9234) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9232.length)].join(""));;
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
    var G__9235 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9235) : cljs.core.deref.call(null, G__9235);
  }(), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__4142__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__4142__auto__) {
    return or__4142__auto__;
  } else {
    var or__4142__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
    if (or__4142__auto____$1) {
      return or__4142__auto____$1;
    } else {
      var and__4130__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__4130__auto__) {
        var and__4130__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__4130__auto____$1) {
          var and__4130__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__4130__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__9240 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__9241 = i + 1;
                ret = G__9240;
                i = G__9241;
                continue;
              }
              break;
            }
          } else {
            return and__4130__auto____$2;
          }
        } else {
          return and__4130__auto____$1;
        }
      } else {
        return and__4130__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents() {
  var args9242 = [];
  var len__5181__auto___9246 = arguments.length;
  var i__5182__auto___9247 = 0;
  while (true) {
    if (i__5182__auto___9247 < len__5181__auto___9246) {
      args9242.push(arguments[i__5182__auto___9247]);
      var G__9248 = i__5182__auto___9247 + 1;
      i__5182__auto___9247 = G__9248;
      continue;
    } else {
    }
    break;
  }
  var G__9244 = args9242.length;
  switch(G__9244) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9242.length)].join(""));;
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(function() {
    var G__9245 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9245) : cljs.core.deref.call(null, G__9245);
  }(), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors() {
  var args9250 = [];
  var len__5181__auto___9254 = arguments.length;
  var i__5182__auto___9255 = 0;
  while (true) {
    if (i__5182__auto___9255 < len__5181__auto___9254) {
      args9250.push(arguments[i__5182__auto___9255]);
      var G__9256 = i__5182__auto___9255 + 1;
      i__5182__auto___9255 = G__9256;
      continue;
    } else {
    }
    break;
  }
  var G__9252 = args9250.length;
  switch(G__9252) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9250.length)].join(""));;
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(function() {
    var G__9253 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9253) : cljs.core.deref.call(null, G__9253);
  }(), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants() {
  var args9258 = [];
  var len__5181__auto___9262 = arguments.length;
  var i__5182__auto___9263 = 0;
  while (true) {
    if (i__5182__auto___9263 < len__5181__auto___9262) {
      args9258.push(arguments[i__5182__auto___9263]);
      var G__9264 = i__5182__auto___9263 + 1;
      i__5182__auto___9263 = G__9264;
      continue;
    } else {
    }
    break;
  }
  var G__9260 = args9258.length;
  switch(G__9260) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9258.length)].join(""));;
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(function() {
    var G__9261 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9261) : cljs.core.deref.call(null, G__9261);
  }(), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive() {
  var args9266 = [];
  var len__5181__auto___9269 = arguments.length;
  var i__5182__auto___9270 = 0;
  while (true) {
    if (i__5182__auto___9270 < len__5181__auto___9269) {
      args9266.push(arguments[i__5182__auto___9270]);
      var G__9271 = i__5182__auto___9270 + 1;
      i__5182__auto___9270 = G__9271;
      continue;
    } else {
    }
    break;
  }
  var G__9268 = args9266.length;
  switch(G__9268) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9266.length)].join(""));;
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not=", "not=", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
        };
      }(tp, td, ta), m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
    };
  }(tp, td, ta);
  var or__4142__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__4142__auto__)) {
    return or__4142__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive() {
  var args9276 = [];
  var len__5181__auto___9279 = arguments.length;
  var i__5182__auto___9280 = 0;
  while (true) {
    if (i__5182__auto___9280 < len__5181__auto___9279) {
      args9276.push(arguments[i__5182__auto___9280]);
      var G__9281 = i__5182__auto___9280 + 1;
      i__5182__auto___9280 = G__9281;
      continue;
    } else {
    }
    break;
  }
  var G__9278 = args9276.length;
  switch(G__9278) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9276.length)].join(""));;
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__9273_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__9273_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__9273_SHARP_), cljs.core.second(p1__9273_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__9274_SHARP_, p2__9275_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__9274_SHARP_, p2__9275_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(prefer_table) : cljs.core.deref.call(null, prefer_table)).call(null, x);
  var or__4142__auto__ = cljs.core.truth_(function() {
    var and__4130__auto__ = xprefs;
    if (cljs.core.truth_(and__4130__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__4130__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__4142__auto__)) {
    return or__4142__auto__;
  } else {
    var or__4142__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__9295 = cljs.core.rest(ps);
          ps = G__9295;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__4142__auto____$1)) {
      return or__4142__auto____$1;
    } else {
      var or__4142__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__9296 = cljs.core.rest(ps);
            ps = G__9296;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__4142__auto____$2)) {
        return or__4142__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__4142__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__4142__auto__)) {
    return or__4142__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__9299) {
    var vec__9300 = p__9299;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9300, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9300, 1, null);
    var e = vec__9300;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__4142__auto__ = be == null;
        if (or__4142__auto__) {
          return or__4142__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cached_hierarchy) : cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4778__auto__ = mf == null ? null : mf;
    var m__4779__auto__ = cljs.core._reset[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4779__auto__.call(null, mf);
    } else {
      var m__4779__auto____$1 = cljs.core._reset["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4779__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
      }
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4778__auto__ = mf == null ? null : mf;
    var m__4779__auto__ = cljs.core._add_method[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__4779__auto__.call(null, mf, dispatch_val, method);
    } else {
      var m__4779__auto____$1 = cljs.core._add_method["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__4779__auto____$1.call(null, mf, dispatch_val, method);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
      }
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4778__auto__ = mf == null ? null : mf;
    var m__4779__auto__ = cljs.core._remove_method[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4779__auto__.call(null, mf, dispatch_val);
    } else {
      var m__4779__auto____$1 = cljs.core._remove_method["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4779__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
      }
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4778__auto__ = mf == null ? null : mf;
    var m__4779__auto__ = cljs.core._prefer_method[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__4779__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      var m__4779__auto____$1 = cljs.core._prefer_method["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__4779__auto____$1.call(null, mf, dispatch_val, dispatch_val_y);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
      }
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4778__auto__ = mf == null ? null : mf;
    var m__4779__auto__ = cljs.core._get_method[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4779__auto__.call(null, mf, dispatch_val);
    } else {
      var m__4779__auto____$1 = cljs.core._get_method["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4779__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
      }
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4778__auto__ = mf == null ? null : mf;
    var m__4779__auto__ = cljs.core._methods[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4779__auto__.call(null, mf);
    } else {
      var m__4779__auto____$1 = cljs.core._methods["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4779__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
      }
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4778__auto__ = mf == null ? null : mf;
    var m__4779__auto__ = cljs.core._prefers[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4779__auto__.call(null, mf);
    } else {
      var m__4779__auto____$1 = cljs.core._prefers["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4779__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
      }
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__4778__auto__ = mf == null ? null : mf;
    var m__4779__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4779__auto__.call(null, mf);
    } else {
      var m__4779__auto____$1 = cljs.core._default_dispatch_val["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4779__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
      }
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__4778__auto__ = mf == null ? null : mf;
    var m__4779__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__4778__auto__)];
    if (!(m__4779__auto__ == null)) {
      return m__4779__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4779__auto__.call(null, mf);
    } else {
      var m__4779__auto____$1 = cljs.core._dispatch_fn["_"];
      if (!(m__4779__auto____$1 == null)) {
        return m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4779__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4779__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
      }
    }
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__9304 = null;
  var G__9304__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__9304__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
  };
  var G__9304__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
  };
  var G__9304__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
  };
  var G__9304__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
  };
  var G__9304__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
  };
  var G__9304__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
  };
  var G__9304__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__9304__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__9304__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__9304__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__9304__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__9304__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__9304__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__9304__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__9304__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__9304__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__9304__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__9304__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__9304__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__9304__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__9304__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__9304 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__9304__1.call(this, self__);
      case 2:
        return G__9304__2.call(this, self__, a);
      case 3:
        return G__9304__3.call(this, self__, a, b);
      case 4:
        return G__9304__4.call(this, self__, a, b, c);
      case 5:
        return G__9304__5.call(this, self__, a, b, c, d);
      case 6:
        return G__9304__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__9304__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__9304__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__9304__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__9304__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__9304__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__9304__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__9304__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__9304__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__9304__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__9304__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__9304__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__9304__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__9304__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__9304__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__9304__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__9304__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9304.cljs$core$IFn$_invoke$arity$1 = G__9304__1;
  G__9304.cljs$core$IFn$_invoke$arity$2 = G__9304__2;
  G__9304.cljs$core$IFn$_invoke$arity$3 = G__9304__3;
  G__9304.cljs$core$IFn$_invoke$arity$4 = G__9304__4;
  G__9304.cljs$core$IFn$_invoke$arity$5 = G__9304__5;
  G__9304.cljs$core$IFn$_invoke$arity$6 = G__9304__6;
  G__9304.cljs$core$IFn$_invoke$arity$7 = G__9304__7;
  G__9304.cljs$core$IFn$_invoke$arity$8 = G__9304__8;
  G__9304.cljs$core$IFn$_invoke$arity$9 = G__9304__9;
  G__9304.cljs$core$IFn$_invoke$arity$10 = G__9304__10;
  G__9304.cljs$core$IFn$_invoke$arity$11 = G__9304__11;
  G__9304.cljs$core$IFn$_invoke$arity$12 = G__9304__12;
  G__9304.cljs$core$IFn$_invoke$arity$13 = G__9304__13;
  G__9304.cljs$core$IFn$_invoke$arity$14 = G__9304__14;
  G__9304.cljs$core$IFn$_invoke$arity$15 = G__9304__15;
  G__9304.cljs$core$IFn$_invoke$arity$16 = G__9304__16;
  G__9304.cljs$core$IFn$_invoke$arity$17 = G__9304__17;
  G__9304.cljs$core$IFn$_invoke$arity$18 = G__9304__18;
  G__9304.cljs$core$IFn$_invoke$arity$19 = G__9304__19;
  G__9304.cljs$core$IFn$_invoke$arity$20 = G__9304__20;
  G__9304.cljs$core$IFn$_invoke$arity$21 = G__9304__21;
  G__9304.cljs$core$IFn$_invoke$arity$22 = G__9304__22;
  return G__9304;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args9303) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9303)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.prefer_table) : cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.cached_hierarchy) : cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.hierarchy) : cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4423__auto__ = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_cache) : cljs.core.deref.call(null, self__.method_cache)).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var target_fn = temp__4423__auto__;
    return target_fn;
  } else {
    var temp__4423__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4423__auto____$1)) {
      var target_fn = temp__4423__auto____$1;
      return target_fn;
    } else {
      return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table)).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = goog.string.hashCode(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__9305 = self__.uuid;
  var G__9306 = other.uuid;
  return goog.array.defaultCompare(G__9305, G__9306);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  return new cljs.core.UUID(s, null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(15).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(14)).toString(16);
  return cljs.core.uuid([cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str("4"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(rhex), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), 
  cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex())].join(""));
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info() {
  var args9307 = [];
  var len__5181__auto___9310 = arguments.length;
  var i__5182__auto___9311 = 0;
  while (true) {
    if (i__5182__auto___9311 < len__5181__auto___9310) {
      args9307.push(arguments[i__5182__auto___9311]);
      var G__9312 = i__5182__auto___9311 + 1;
      i__5182__auto___9311 = G__9312;
      continue;
    } else {
    }
    break;
  }
  var G__9309 = args9307.length;
  switch(G__9309) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9307.length)].join(""));;
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "&", "&", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 
  -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), null, new cljs.core.Symbol(null, 
  "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this$__$1, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__9314 = v instanceof cljs.core.Keyword ? v.fqn : null;
  switch(G__9314) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, [cljs.core.str("#"), cljs.core.str(self__.tag), cljs.core.str(" ")].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null))], 0)))].join(""));
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["abstract", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", "throw", "throws", 
"transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__9316_SHARP_, p2__9317_SHARP_) {
      goog.object.set(p1__9316_SHARP_, p2__9317_SHARP_, true);
      return p1__9316_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return goog.object.containsKey(cljs.core.js_reserved, x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__9320 = cljs.core.next(ks__$1);
          var G__9321 = [cljs.core.str(function() {
            var G__9319 = ret;
            var G__9319__$1 = !(ret === "") ? [cljs.core.str(G__9319), cljs.core.str("|")].join("") : G__9319;
            return G__9319__$1;
          }()), cljs.core.str(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__9320;
          ret = G__9321;
          continue;
        } else {
          return [cljs.core.str(ret), cljs.core.str("|\\$")].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer;
  var i_9322 = 0;
  while (true) {
    if (i_9322 < name.length) {
      var c_9323 = name.charAt(i_9322);
      var sub_9324 = goog.object.get(cljs.core.CHAR_MAP, c_9323);
      if (!(sub_9324 == null)) {
        sb.append(sub_9324);
      } else {
        sb.append(c_9323);
      }
      var G__9325 = i_9322 + 1;
      i_9322 = G__9325;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str([cljs.core.str(name)].join(""));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [cljs.core.str(name_SINGLEQUOTE_), cljs.core.str("$")].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return [cljs.core.str(name_SINGLEQUOTE___$1)].join("");
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = cljs.core.truth_(goog.string.endsWith(munged_name, "$")) ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__4423__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var match = temp__4423__auto__;
      var vec__9327 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9327, 0, null);
      var G__9328 = [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str(x === "$" ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__9329 = r.lastIndex;
      ret = G__9328;
      last_match_end = G__9329;
      continue;
    } else {
      return [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  return (name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str).call(null, function() {
    var name_SINGLEQUOTE_ = [cljs.core.str(name)].join("");
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str([cljs.core.str(name)].join(""));
    }
  }());
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return goog.object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge([cljs.core.str(sym)].join(""));
  if (goog.object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(self__.name)].join(""), [cljs.core.str(sym)].join(""));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(self__.name)].join("");
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__4721__auto__, writer__4722__auto__, opt__4723__auto__) {
  return cljs.core._write(writer__4722__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__9334 = function() {
          var G__9332 = ctxt;
          var G__9333 = cljs.core.first(xs);
          return goog.object.get(G__9332, G__9333);
        }();
        var G__9335 = cljs.core.next(xs);
        ctxt = G__9334;
        xs = G__9335;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge([cljs.core.str(ns)].join(""));
  var segs = munged_ns.split(".");
  var G__9337 = cljs.core._STAR_target_STAR_;
  switch(G__9337) {
    case "nodejs":
      if (COMPILED) {
        return eval(munged_ns);
      } else {
        return cljs.core.find_ns_obj_STAR_(global, segs);
      }
      break;
    case "default":
      return cljs.core.find_ns_obj_STAR_(window, segs);
      break;
    default:
      throw new Error([cljs.core.str("find-ns-obj not supported for target "), cljs.core.str(cljs.core._STAR_target_STAR_)].join(""));;
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function(ns_obj, ns) {
    return function cljs$core$ns_interns_STAR__$_step(ret, k) {
      var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function(var_sym, ns_obj, ns) {
        return function() {
          return goog.object.get(ns_obj, k);
        };
      }(var_sym, ns_obj, ns), cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(sym)].join(""), [cljs.core.str(var_sym)].join("")), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns], null)));
    };
  }(ns_obj, ns);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns() {
  var args9339 = [];
  var len__5181__auto___9342 = arguments.length;
  var i__5182__auto___9343 = 0;
  while (true) {
    if (i__5182__auto___9343 < len__5181__auto___9342) {
      args9339.push(arguments[i__5182__auto___9343]);
      var G__9344 = i__5182__auto___9343 + 1;
      i__5182__auto___9343 = G__9344;
      continue;
    } else {
    }
    break;
  }
  var G__9341 = args9339.length;
  switch(G__9341) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9339.length)].join(""));;
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__9347 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9347) : cljs.core.atom.call(null, G__9347);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__9349 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9349) : cljs.core.atom.call(null, G__9349);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_str = [cljs.core.str(ns)].join("");
    var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(ns_str), cljs.core.str("$macros")].join("")) : ns;
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
cljs.core.cst$sym$cljs$core$macros_SLASH_or = new cljs.core.Symbol("cljs.core$macros", "or", "cljs.core$macros/or", 1346243648, null);
cljs.core.cst$sym$cljs$core_SLASH__EQ__EQ_ = new cljs.core.Symbol("cljs.core", "==", "cljs.core/==", -632471488, null);
cljs.core.cst$sym$form = new cljs.core.Symbol(null, "form", "form", 16469056, null);
cljs.core.cst$sym$tag = new cljs.core.Symbol(null, "tag", "tag", 350170304, null);
cljs.core.cst$sym$cljs$core_SLASH__DASH_rest = new cljs.core.Symbol("cljs.core", "-rest", "cljs.core/-rest", -1829241664, null);
cljs.core.cst$sym$idx = new cljs.core.Symbol(null, "idx", "idx", -1600747296, null);
cljs.core.cst$sym$bound_DASH_vars = new cljs.core.Symbol(null, "bound-vars", "bound-vars", 1684649184, null);
cljs.core.cst$kw$args = new cljs.core.Keyword(null, "args", "args", 1315556576);
cljs.core.cst$kw$invoke_DASH_ctor = new cljs.core.Keyword(null, "invoke-ctor", "invoke-ctor", -756052704);
cljs.core.cst$sym$ITransientAssociative = new cljs.core.Symbol(null, "ITransientAssociative", "ITransientAssociative", -1612754624, null);
cljs.core.cst$sym$$_DASH_cljs$lang$ctorPrWriter = new cljs.core.Symbol(null, ".-cljs$lang$ctorPrWriter", ".-cljs$lang$ctorPrWriter", 255834464, null);
cljs.core.cst$sym$core_SLASH__EQ_ = new cljs.core.Symbol("core", "=", "core/=", -1498278496, null);
cljs.core.cst$sym$_AMPERSAND_ = new cljs.core.Symbol(null, "&", "&", -2144855648, null);
cljs.core.cst$sym$stepper = new cljs.core.Symbol(null, "stepper", "stepper", 1159163296, null);
cljs.core.cst$kw$load = new cljs.core.Keyword(null, "load", "load", -1318641184);
cljs.core.cst$sym$uuid = new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null);
cljs.core.cst$sym$seq = new cljs.core.Symbol(null, "seq", "seq", -177272256, null);
cljs.core.cst$kw$path = new cljs.core.Keyword(null, "path", "path", -188191168);
cljs.core.cst$kw$features = new cljs.core.Keyword(null, "features", "features", -1146962336);
cljs.core.cst$sym$self__ = new cljs.core.Symbol(null, "self__", "self__", -153190816, null);
cljs.core.cst$sym$core_SLASH_first = new cljs.core.Symbol("core", "first", "core/first", 982850208, null);
cljs.core.cst$sym$console = new cljs.core.Symbol(null, "console", "console", -1426363712, null);
cljs.core.cst$sym$contains_QMARK_ = new cljs.core.Symbol(null, "contains?", "contains?", -1676812576, null);
cljs.core.cst$sym$t = new cljs.core.Symbol(null, "t", "t", 242699008, null);
cljs.core.cst$sym$case_STAR_ = new cljs.core.Symbol(null, "case*", "case*", -1938255072, null);
cljs.core.cst$sym$every_QMARK_ = new cljs.core.Symbol(null, "every?", "every?", 2083724064, null);
cljs.core.cst$sym$method_DASH_cache__11226__auto__ = new cljs.core.Symbol(null, "method-cache__11226__auto__", "method-cache__11226__auto__", 879304480, null);
cljs.core.cst$kw$extending_DASH_base_DASH_js_DASH_type = new cljs.core.Keyword(null, "extending-base-js-type", "extending-base-js-type", 432787264);
cljs.core.cst$sym$x = new cljs.core.Symbol(null, "x", "x", -555367584, null);
cljs.core.cst$sym$cljs$core$macros_SLASH__DASH_ = new cljs.core.Symbol("cljs.core$macros", "-", "cljs.core$macros/-", 13526976, null);
cljs.core.cst$sym$clauses = new cljs.core.Symbol(null, "clauses", "clauses", -1199594528, null);
cljs.core.cst$sym$cljs$core_SLASH_rest = new cljs.core.Symbol("cljs.core", "rest", "cljs.core/rest", -285075455, null);
cljs.core.cst$sym$temp__10286__auto__ = new cljs.core.Symbol(null, "temp__10286__auto__", "temp__10286__auto__", 210741281, null);
cljs.core.cst$sym$end = new cljs.core.Symbol(null, "end", "end", 1372345569, null);
cljs.core.cst$sym$_DASH_with_DASH_meta = new cljs.core.Symbol(null, "-with-meta", "-with-meta", -1610713823, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces = new cljs.core.Keyword("cljs.analyzer", "namespaces", "cljs.analyzer/namespaces", -260788927);
cljs.core.cst$kw$output_DASH_dir = new cljs.core.Keyword(null, "output-dir", "output-dir", -290956991);
cljs.core.cst$kw$unsupported_DASH_preprocess_DASH_value = new cljs.core.Keyword(null, "unsupported-preprocess-value", "unsupported-preprocess-value", 1635147105);
cljs.core.cst$kw$gline = new cljs.core.Keyword(null, "gline", "gline", -1086242431);
cljs.core.cst$sym$defrecord_STAR_ = new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null);
cljs.core.cst$sym$base = new cljs.core.Symbol(null, "base", "base", 1825810849, null);
cljs.core.cst$kw$argc = new cljs.core.Keyword(null, "argc", "argc", -1452839519);
cljs.core.cst$sym$obj = new cljs.core.Symbol(null, "obj", "obj", -1672671807, null);
cljs.core.cst$kw$finally = new cljs.core.Keyword(null, "finally", "finally", 1589088705);
cljs.core.cst$kw$statement = new cljs.core.Keyword(null, "statement", "statement", -32780863);
cljs.core.cst$sym$_DASH_prototype = new cljs.core.Symbol(null, "-prototype", "-prototype", -450831903, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_zero_QMARK_ = new cljs.core.Symbol("cljs.core$macros", "zero?", "cljs.core$macros/zero?", -65998367, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_assert_DASH_args = new cljs.core.Symbol("cljs.core$macros", "assert-args", "cljs.core$macros/assert-args", -1297839583, null);
cljs.core.cst$sym$js_SLASH_Function = new cljs.core.Symbol("js", "Function", "js/Function", -749892063, null);
cljs.core.cst$sym$fqn = new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null);
cljs.core.cst$sym$_DASH_iterator = new cljs.core.Symbol(null, "-iterator", "-iterator", 310937281, null);
cljs.core.cst$sym$first = new cljs.core.Symbol(null, "first", "first", 996428481, null);
cljs.core.cst$kw$suffix = new cljs.core.Keyword(null, "suffix", "suffix", 367373057);
cljs.core.cst$sym$cljs$core_SLASH_str = new cljs.core.Symbol("cljs.core", "str", "cljs.core/str", -1971828991, null);
cljs.core.cst$sym$cljs$core_SLASH__LT_ = new cljs.core.Symbol("cljs.core", "<", "cljs.core/<", 1677496129, null);
cljs.core.cst$sym$this__10918__auto__ = new cljs.core.Symbol(null, "this__10918__auto__", "this__10918__auto__", -696778943, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_extend_DASH_type = new cljs.core.Symbol("cljs.core$macros", "extend-type", "cljs.core$macros/extend-type", 1713295201, null);
cljs.core.cst$sym$cljs$core_SLASH_PersistentHashMap = new cljs.core.Symbol("cljs.core", "PersistentHashMap", "cljs.core/PersistentHashMap", -454120575, null);
cljs.core.cst$sym$try = new cljs.core.Symbol(null, "try", "try", -1273693247, null);
cljs.core.cst$sym$has_DASH_nil_QMARK_ = new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null);
cljs.core.cst$kw$fns = new cljs.core.Keyword(null, "fns", "fns", 1185138786);
cljs.core.cst$sym$Object = new cljs.core.Symbol(null, "Object", "Object", 61210754, null);
cljs.core.cst$sym$ILookup = new cljs.core.Symbol(null, "ILookup", "ILookup", 784647298, null);
cljs.core.cst$sym$cljs$core_SLASH_MultiFn = new cljs.core.Symbol("cljs.core", "MultiFn", "cljs.core/MultiFn", 1487419554, null);
cljs.core.cst$kw$ret = new cljs.core.Keyword(null, "ret", "ret", -468222814);
cljs.core.cst$kw$redef = new cljs.core.Keyword(null, "redef", "redef", 1032704258);
cljs.core.cst$sym$cljs$core$macros_SLASH_nil_QMARK_ = new cljs.core.Symbol("cljs.core$macros", "nil?", "cljs.core$macros/nil?", 83624258, null);
cljs.core.cst$kw$fexpr = new cljs.core.Keyword(null, "fexpr", "fexpr", -122857150);
cljs.core.cst$sym$fn_QMARK_ = new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null);
cljs.core.cst$sym$_DASH_assoc = new cljs.core.Symbol(null, "-assoc", "-assoc", -416089758, null);
cljs.core.cst$kw$children = new cljs.core.Keyword(null, "children", "children", -940561982);
cljs.core.cst$kw$var_DASH_special = new cljs.core.Keyword(null, "var-special", "var-special", 1131576802);
cljs.core.cst$sym$doc = new cljs.core.Symbol(null, "doc", "doc", -741138878, null);
cljs.core.cst$sym$and__10447__auto__ = new cljs.core.Symbol(null, "and__10447__auto__", "and__10447__auto__", 1284755042, null);
cljs.core.cst$sym$cljs$core_SLASH__GT_ = new cljs.core.Symbol("cljs.core", ">", "cljs.core/>", 2020535938, null);
cljs.core.cst$sym$js_SLASH_goog = new cljs.core.Symbol("js", "goog", "js/goog", -70605150, null);
cljs.core.cst$kw$exclude = new cljs.core.Keyword(null, "exclude", "exclude", -1230250334);
cljs.core.cst$sym$rear = new cljs.core.Symbol(null, "rear", "rear", -900164830, null);
cljs.core.cst$sym$cljs$core_SLASH_when = new cljs.core.Symbol("cljs.core", "when", "cljs.core/when", 120293186, null);
cljs.core.cst$kw$_STAR_reload_DASH_macros_STAR_ = new cljs.core.Keyword(null, "*reload-macros*", "*reload-macros*", -820635806);
cljs.core.cst$sym$IKVReduce = new cljs.core.Symbol(null, "IKVReduce", "IKVReduce", -870856862, null);
cljs.core.cst$kw$ctor = new cljs.core.Keyword(null, "ctor", "ctor", 1750864802);
cljs.core.cst$sym$hierarchy = new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null);
cljs.core.cst$sym$iter = new cljs.core.Symbol(null, "iter", "iter", -1346195486, null);
cljs.core.cst$kw$recurs = new cljs.core.Keyword(null, "recurs", "recurs", -1959309309);
cljs.core.cst$sym$clojure$core_SLASH_list = new cljs.core.Symbol("clojure.core", "list", "clojure.core/list", -1119203325, null);
cljs.core.cst$sym$meta5789 = new cljs.core.Symbol(null, "meta5789", "meta5789", 190933059, null);
cljs.core.cst$sym$namespace = new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null);
cljs.core.cst$sym$argseq__11322__auto__ = new cljs.core.Symbol(null, "argseq__11322__auto__", "argseq__11322__auto__", -677839741, null);
cljs.core.cst$kw$js = new cljs.core.Keyword(null, "js", "js", 1768080579);
cljs.core.cst$sym$$_DASH_fqn = new cljs.core.Symbol(null, ".-fqn", ".-fqn", 1246113027, null);
cljs.core.cst$sym$_DASH_conj = new cljs.core.Symbol(null, "-conj", "-conj", 1373798691, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_defonce = new cljs.core.Symbol("cljs.core$macros", "defonce", "cljs.core$macros/defonce", -1096231613, null);
cljs.core.cst$sym$_EQ_ = new cljs.core.Symbol(null, "=", "=", -1501502141, null);
cljs.core.cst$sym$ITransientMap = new cljs.core.Symbol(null, "ITransientMap", "ITransientMap", 298423651, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_identical_QMARK_ = new cljs.core.Symbol("cljs.core$macros", "identical?", "cljs.core$macros/identical?", 815580547, null);
cljs.core.cst$sym$step = new cljs.core.Symbol(null, "step", "step", -1365547645, null);
cljs.core.cst$kw$fname = new cljs.core.Keyword(null, "fname", "fname", 1500291491);
cljs.core.cst$sym$cljs$core$macros_SLASH_instance_QMARK_ = new cljs.core.Symbol("cljs.core$macros", "instance?", "cljs.core$macros/instance?", 1829750179, null);
cljs.core.cst$sym$vector_QMARK_ = new cljs.core.Symbol(null, "vector?", "vector?", -61367869, null);
cljs.core.cst$sym$this__10924__auto__ = new cljs.core.Symbol(null, "this__10924__auto__", "this__10924__auto__", 402898403, null);
cljs.core.cst$sym$clj = new cljs.core.Symbol(null, "clj", "clj", 980036099, null);
cljs.core.cst$sym$_STAR_cljs_DASH_dep_DASH_set_STAR_ = new cljs.core.Symbol(null, "*cljs-dep-set*", "*cljs-dep-set*", 1566566915, null);
cljs.core.cst$sym$boolean = new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null);
cljs.core.cst$sym$update_DASH_count = new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null);
cljs.core.cst$sym$cljs$core$_STAR_loaded_DASH_libs_STAR_ = new cljs.core.Symbol(null, "cljs.core.*loaded-libs*", "cljs.core.*loaded-libs*", -1847086525, null);
cljs.core.cst$sym$this__10932__auto__ = new cljs.core.Symbol(null, "this__10932__auto__", "this__10932__auto__", -587718045, null);
cljs.core.cst$sym$cljs$core_SLASH_IVector = new cljs.core.Symbol("cljs.core", "IVector", "cljs.core/IVector", 1711112835, null);
cljs.core.cst$sym$method_DASH_table = new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null);
cljs.core.cst$sym$a__11208__auto__ = new cljs.core.Symbol(null, "a__11208__auto__", "a__11208__auto__", 1485257379, null);
cljs.core.cst$sym$cljs$core_SLASH_PersistentHashSet$ = new cljs.core.Symbol("cljs.core", "PersistentHashSet.", "cljs.core/PersistentHashSet.", 300313251, null);
cljs.core.cst$sym$cljs$core_SLASH_specify_BANG_ = new cljs.core.Symbol("cljs.core", "specify!", "cljs.core/specify!", -585401629, null);
cljs.core.cst$sym$cljs$core_SLASH_pr_DASH_sequential_DASH_writer = new cljs.core.Symbol("cljs.core", "pr-sequential-writer", "cljs.core/pr-sequential-writer", -1101677821, null);
cljs.core.cst$sym$chunk = new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null);
cljs.core.cst$sym$location = new cljs.core.Symbol(null, "location", "location", -838836381, null);
cljs.core.cst$kw$let = new cljs.core.Keyword(null, "let", "let", -1282412701);
cljs.core.cst$sym$cljs$core$macros_SLASH_dotimes = new cljs.core.Symbol("cljs.core$macros", "dotimes", "cljs.core$macros/dotimes", -1407597661, null);
cljs.core.cst$kw$v = new cljs.core.Keyword(null, "v", "v", 21465059);
cljs.core.cst$kw$protocol_DASH_inline = new cljs.core.Keyword(null, "protocol-inline", "protocol-inline", 1550487556);
cljs.core.cst$kw$fn = new cljs.core.Keyword(null, "fn", "fn", -1175266204);
cljs.core.cst$kw$short = new cljs.core.Keyword(null, "short", "short", 1928760516);
cljs.core.cst$sym$opts__10936__auto__ = new cljs.core.Symbol(null, "opts__10936__auto__", "opts__10936__auto__", -1854815036, null);
cljs.core.cst$kw$unsupported_DASH_js_DASH_module_DASH_type = new cljs.core.Keyword(null, "unsupported-js-module-type", "unsupported-js-module-type", 1806206180);
cljs.core.cst$sym$object = new cljs.core.Symbol(null, "object", "object", -1179821820, null);
cljs.core.cst$kw$closure_DASH_defines = new cljs.core.Keyword(null, "closure-defines", "closure-defines", -1213856476);
cljs.core.cst$kw$goog = new cljs.core.Keyword(null, "goog", "goog", -1711135452);
cljs.core.cst$sym$cljs$core_SLASH_vector_QMARK_ = new cljs.core.Symbol("cljs.core", "vector?", "cljs.core/vector?", -1550392028, null);
cljs.core.cst$kw$only = new cljs.core.Keyword(null, "only", "only", 1907811652);
cljs.core.cst$sym$i = new cljs.core.Symbol(null, "i", "i", 253690212, null);
cljs.core.cst$sym$rest = new cljs.core.Symbol(null, "rest", "rest", 398835108, null);
cljs.core.cst$sym$cljs$core_SLASH_PersistentArrayMap = new cljs.core.Symbol("cljs.core", "PersistentArrayMap", "cljs.core/PersistentArrayMap", 1025194468, null);
cljs.core.cst$kw$cljs$core$macros_SLASH_not_DASH_found = new cljs.core.Keyword("cljs.core$macros", "not-found", "cljs.core$macros/not-found", -1226326556);
cljs.core.cst$sym$entry__10926__auto__ = new cljs.core.Symbol(null, "entry__10926__auto__", "entry__10926__auto__", -901180924, null);
cljs.core.cst$sym$meta8367 = new cljs.core.Symbol(null, "meta8367", "meta8367", -476944892, null);
cljs.core.cst$kw$invalid_DASH_protocol_DASH_symbol = new cljs.core.Keyword(null, "invalid-protocol-symbol", "invalid-protocol-symbol", 86246948);
cljs.core.cst$kw$done = new cljs.core.Keyword(null, "done", "done", -889844188);
cljs.core.cst$kw$group = new cljs.core.Keyword(null, "group", "group", 582596132);
cljs.core.cst$kw$meta = new cljs.core.Keyword(null, "meta", "meta", 1499536964);
cljs.core.cst$sym$this_DASH_as = new cljs.core.Symbol(null, "this-as", "this-as", -848995740, null);
cljs.core.cst$sym$cljs$core_SLASH__EQ_ = new cljs.core.Symbol("cljs.core", "=", "cljs.core/=", -1891498332, null);
cljs.core.cst$kw$ev = new cljs.core.Keyword(null, "ev", "ev", -406827324);
cljs.core.cst$sym$$$ = new cljs.core.Symbol(null, "..", "..", -300507420, null);
cljs.core.cst$sym$_DASH_clone = new cljs.core.Symbol(null, "-clone", "-clone", 227130084, null);
cljs.core.cst$kw$static_DASH_fns = new cljs.core.Keyword(null, "static-fns", "static-fns", -501950748);
cljs.core.cst$sym$cljs$core$PersistentQueue$EMPTY = new cljs.core.Symbol(null, "cljs.core.PersistentQueue.EMPTY", "cljs.core.PersistentQueue.EMPTY", 399917828, null);
cljs.core.cst$sym$atom_QMARK_ = new cljs.core.Symbol(null, "atom?", "atom?", -1007535292, null);
cljs.core.cst$sym$cljs$core$macros = new cljs.core.Symbol(null, "cljs.core$macros", "cljs.core$macros", -2057787548, null);
cljs.core.cst$kw$frame = new cljs.core.Keyword(null, "frame", "frame", -1711082588);
cljs.core.cst$sym$s_DASH_pos = new cljs.core.Symbol(null, "s-pos", "s-pos", -540562492, null);
cljs.core.cst$sym$char_QMARK_ = new cljs.core.Symbol(null, "char?", "char?", -1072221244, null);
cljs.core.cst$sym$cljs$core_SLASH_IList = new cljs.core.Symbol("cljs.core", "IList", "cljs.core/IList", 1015168964, null);
cljs.core.cst$sym$cljs$core_SLASH_dec = new cljs.core.Symbol("cljs.core", "dec", "cljs.core/dec", -443230268, null);
cljs.core.cst$sym$_DASH_count = new cljs.core.Symbol(null, "-count", "-count", 416049189, null);
cljs.core.cst$sym$cljs$core_SLASH_MultiFn$ = new cljs.core.Symbol("cljs.core", "MultiFn.", "cljs.core/MultiFn.", 1073941573, null);
cljs.core.cst$sym$rep_DASH_fn = new cljs.core.Symbol(null, "rep-fn", "rep-fn", -1724891035, null);
cljs.core.cst$sym$cljs$core$macros_SLASH__SLASH_ = new cljs.core.Symbol("cljs.core$macros", "/", "cljs.core$macros//", -893374331, null);
cljs.core.cst$sym$o__10474__auto__ = new cljs.core.Symbol(null, "o__10474__auto__", "o__10474__auto__", -2026519419, null);
cljs.core.cst$kw$fn_DASH_scope = new cljs.core.Keyword(null, "fn-scope", "fn-scope", -865664859);
cljs.core.cst$sym$meta8966 = new cljs.core.Symbol(null, "meta8966", "meta8966", -97103643, null);
cljs.core.cst$kw$dup = new cljs.core.Keyword(null, "dup", "dup", 556298533);
cljs.core.cst$kw$do = new cljs.core.Keyword(null, "do", "do", 46310725);
cljs.core.cst$sym$cljs$core_SLASH__DASH_assoc = new cljs.core.Symbol("cljs.core", "-assoc", "cljs.core/-assoc", -814539323, null);
cljs.core.cst$kw$pre = new cljs.core.Keyword(null, "pre", "pre", 2118456869);
cljs.core.cst$sym$this__10915__auto__ = new cljs.core.Symbol(null, "this__10915__auto__", "this__10915__auto__", -1545408987, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_bit_DASH_or = new cljs.core.Symbol("cljs.core$macros", "bit-or", "cljs.core$macros/bit-or", 1463236165, null);
cljs.core.cst$sym$var_args = new cljs.core.Symbol(null, "var_args", "var_args", 1214280389, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_array = new cljs.core.Symbol("cljs.core$macros", "array", "cljs.core$macros/array", 49650437, null);
cljs.core.cst$kw$macros_DASH_ns = new cljs.core.Keyword(null, "macros-ns", "macros-ns", 1626844933);
cljs.core.cst$sym$cljs$core_SLASH__DASH_write = new cljs.core.Symbol("cljs.core", "-write", "cljs.core/-write", 527220517, null);
cljs.core.cst$sym$comp = new cljs.core.Symbol(null, "comp", "comp", -1462482139, null);
cljs.core.cst$sym$cljs$core_SLASH_array_DASH_map = new cljs.core.Symbol("cljs.core", "array-map", "cljs.core/array-map", -1519210683, null);
cljs.core.cst$sym$dispatch_DASH_fn = new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null);
cljs.core.cst$sym$$_DASH_constructor = new cljs.core.Symbol(null, ".-constructor", ".-constructor", 279801701, null);
cljs.core.cst$sym$meta5786 = new cljs.core.Symbol(null, "meta5786", "meta5786", -1303447675, null);
cljs.core.cst$kw$analyze_DASH_deps = new cljs.core.Keyword(null, "analyze-deps", "analyze-deps", 1000677285);
cljs.core.cst$sym$buffer = new cljs.core.Symbol(null, "buffer", "buffer", -2037140571, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_assert = new cljs.core.Symbol("cljs.core$macros", "assert", "cljs.core$macros/assert", 1333198789, null);
cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_and_DASH_not = new cljs.core.Symbol("cljs.core", "bit-and-not", "cljs.core/bit-and-not", -929778682, null);
cljs.core.cst$kw$instance = new cljs.core.Keyword(null, "instance", "instance", -2121349050);
cljs.core.cst$kw$pmasks = new cljs.core.Keyword(null, "pmasks", "pmasks", -871416698);
cljs.core.cst$kw$init = new cljs.core.Keyword(null, "init", "init", -1875481434);
cljs.core.cst$kw$cljs$analyzer_SLASH_property = new cljs.core.Keyword("cljs.analyzer", "property", "cljs.analyzer/property", 1113330886);
cljs.core.cst$sym$cljs$core_SLASH_IndexedSeq = new cljs.core.Symbol("cljs.core", "IndexedSeq", "cljs.core/IndexedSeq", -228688698, null);
cljs.core.cst$sym$prev_DASH_column = new cljs.core.Symbol(null, "prev-column", "prev-column", 324083974, null);
cljs.core.cst$kw$numeric = new cljs.core.Keyword(null, "numeric", "numeric", -1495594714);
cljs.core.cst$kw$reader_DASH_exception = new cljs.core.Keyword(null, "reader-exception", "reader-exception", -1938323098);
cljs.core.cst$sym$IIndexed = new cljs.core.Symbol(null, "IIndexed", "IIndexed", -574812826, null);
cljs.core.cst$sym$cljs$core_SLASH__DASH_deref = new cljs.core.Symbol("cljs.core", "-deref", "cljs.core/-deref", -1260480154, null);
cljs.core.cst$kw$private = new cljs.core.Keyword(null, "private", "private", -558947994);
cljs.core.cst$kw$exprs = new cljs.core.Keyword(null, "exprs", "exprs", 1795829094);
cljs.core.cst$kw$lib_DASH_base_DASH_path = new cljs.core.Keyword(null, "lib-base-path", "lib-base-path", 1648955782);
cljs.core.cst$kw$extend = new cljs.core.Keyword(null, "extend", "extend", 1836484006);
cljs.core.cst$sym$IPrintWithWriter = new cljs.core.Symbol(null, "IPrintWithWriter", "IPrintWithWriter", -1205316154, null);
cljs.core.cst$kw$else = new cljs.core.Keyword(null, "else", "else", -1508377146);
cljs.core.cst$sym$cljs$core_SLASH_pr_DASH_writer = new cljs.core.Symbol("cljs.core", "pr-writer", "cljs.core/pr-writer", 133956070, null);
cljs.core.cst$kw$when = new cljs.core.Keyword(null, "when", "when", -576417306);
cljs.core.cst$sym$IVector = new cljs.core.Symbol(null, "IVector", "IVector", -1120721434, null);
cljs.core.cst$sym$IIterable = new cljs.core.Symbol(null, "IIterable", "IIterable", 577191430, null);
cljs.core.cst$kw$optimize_DASH_constants = new cljs.core.Keyword(null, "optimize-constants", "optimize-constants", 232704518);
cljs.core.cst$sym$cljs$core$macros_SLASH_loop = new cljs.core.Symbol("cljs.core$macros", "loop", "cljs.core$macros/loop", 1731108390, null);
cljs.core.cst$sym$_STAR_2 = new cljs.core.Symbol(null, "*2", "*2", 1728229926, null);
cljs.core.cst$sym$cljs$core_SLASH__DASH_iterator = new cljs.core.Symbol("cljs.core", "-iterator", "cljs.core/-iterator", 1833427494, null);
cljs.core.cst$kw$protocol_DASH_duped_DASH_method = new cljs.core.Keyword(null, "protocol-duped-method", "protocol-duped-method", 15128166);
cljs.core.cst$sym$deps = new cljs.core.Symbol(null, "deps", "deps", -771075450, null);
cljs.core.cst$kw$protocol_DASH_symbol = new cljs.core.Keyword(null, "protocol-symbol", "protocol-symbol", 1279552198);
cljs.core.cst$sym$x__10662__auto__ = new cljs.core.Symbol(null, "x__10662__auto__", "x__10662__auto__", -1548059962, null);
cljs.core.cst$kw$cblocks = new cljs.core.Keyword(null, "cblocks", "cblocks", -1769978138);
cljs.core.cst$sym$any = new cljs.core.Symbol(null, "any", "any", -948528346, null);
cljs.core.cst$sym$this__10929__auto__ = new cljs.core.Symbol(null, "this__10929__auto__", "this__10929__auto__", -1037314202, null);
cljs.core.cst$kw$protocol = new cljs.core.Keyword(null, "protocol", "protocol", 652470118);
cljs.core.cst$sym$$apply = new cljs.core.Symbol(null, ".apply", ".apply", -1176201338, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_symbol = new cljs.core.Keyword("cljs.analyzer", "symbol", "cljs.analyzer/symbol", 933248902);
cljs.core.cst$sym$left = new cljs.core.Symbol(null, "left", "left", 1241415590, null);
cljs.core.cst$sym$this__10901__auto__ = new cljs.core.Symbol(null, "this__10901__auto__", "this__10901__auto__", -1045047322, null);
cljs.core.cst$sym$cljs$core_SLASH_count = new cljs.core.Symbol("cljs.core", "count", "cljs.core/count", -921270233, null);
cljs.core.cst$sym$nodeGlobalRequire = new cljs.core.Symbol(null, "nodeGlobalRequire", "nodeGlobalRequire", 167018599, null);
cljs.core.cst$kw$offset = new cljs.core.Keyword(null, "offset", "offset", 296498311);
cljs.core.cst$kw$cljs$core_SLASH_none = new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439);
cljs.core.cst$sym$shift = new cljs.core.Symbol(null, "shift", "shift", -1657295705, null);
cljs.core.cst$sym$cljs$core_SLASH_hash_DASH_map = new cljs.core.Symbol("cljs.core", "hash-map", "cljs.core/hash-map", 303385767, null);
cljs.core.cst$sym$goog_SLASH_typeOf = new cljs.core.Symbol("goog", "typeOf", "goog/typeOf", 539097255, null);
cljs.core.cst$kw$if = new cljs.core.Keyword(null, "if", "if", -458814265);
cljs.core.cst$sym$iters = new cljs.core.Symbol(null, "iters", "iters", 719353031, null);
cljs.core.cst$sym$escape = new cljs.core.Symbol(null, "escape", "escape", 648929575, null);
cljs.core.cst$sym$cljs$core_SLASH_reduce = new cljs.core.Symbol("cljs.core", "reduce", "cljs.core/reduce", 2025430439, null);
cljs.core.cst$sym$cljs$core_SLASH_seq = new cljs.core.Symbol("cljs.core", "seq", "cljs.core/seq", -1649497689, null);
cljs.core.cst$sym$js_SLASH_Date$ = new cljs.core.Symbol("js", "Date.", "js/Date.", 384205255, null);
cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_first = new cljs.core.Symbol("cljs.core", "chunk-first", "cljs.core/chunk-first", -1157877305, null);
cljs.core.cst$sym$y__10663__auto__ = new cljs.core.Symbol(null, "y__10663__auto__", "y__10663__auto__", -1799363097, null);
cljs.core.cst$sym$new_DASH_value = new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null);
cljs.core.cst$kw$use_DASH_macros = new cljs.core.Keyword(null, "use-macros", "use-macros", -905638393);
cljs.core.cst$sym$start__11246__auto__ = new cljs.core.Symbol(null, "start__11246__auto__", "start__11246__auto__", -563151321, null);
cljs.core.cst$sym$size__11053__auto__ = new cljs.core.Symbol(null, "size__11053__auto__", "size__11053__auto__", -387860921, null);
cljs.core.cst$sym$cljs$core_SLASH_IFn = new cljs.core.Symbol("cljs.core", "IFn", "cljs.core/IFn", -920223129, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_cond = new cljs.core.Symbol("cljs.core$macros", "cond", "cljs.core$macros/cond", 1626318471, null);
cljs.core.cst$sym$cljs$core_SLASH_get_DASH_global_DASH_hierarchy = new cljs.core.Symbol("cljs.core", "get-global-hierarchy", "cljs.core/get-global-hierarchy", 48052871, null);
cljs.core.cst$kw$excludes = new cljs.core.Keyword(null, "excludes", "excludes", -1791725945);
cljs.core.cst$sym$cljs$core_SLASH_apply = new cljs.core.Symbol("cljs.core", "apply", "cljs.core/apply", 1757277831, null);
cljs.core.cst$kw$macros = new cljs.core.Keyword(null, "macros", "macros", 811339431);
cljs.core.cst$kw$extended = new cljs.core.Keyword(null, "extended", "extended", -1515212057);
cljs.core.cst$sym$string$StringBuffer$ = new cljs.core.Symbol(null, "string.StringBuffer.", "string.StringBuffer.", 1913246471, null);
cljs.core.cst$sym$args = new cljs.core.Symbol(null, "args", "args", -1338879193, null);
cljs.core.cst$kw$locals = new cljs.core.Keyword(null, "locals", "locals", 535295783);
cljs.core.cst$kw$tests = new cljs.core.Keyword(null, "tests", "tests", -1041085625);
cljs.core.cst$kw$js_DASH_globals = new cljs.core.Keyword(null, "js-globals", "js-globals", 1670394727);
cljs.core.cst$sym$xform = new cljs.core.Symbol(null, "xform", "xform", -85179481, null);
cljs.core.cst$kw$validator = new cljs.core.Keyword(null, "validator", "validator", -1966190681);
cljs.core.cst$kw$return = new cljs.core.Keyword(null, "return", "return", -1891502105);
cljs.core.cst$sym$cljs$core$macros_SLASH_condp = new cljs.core.Symbol("cljs.core$macros", "condp", "cljs.core$macros/condp", 431619047, null);
cljs.core.cst$sym$finally = new cljs.core.Symbol(null, "finally", "finally", -1065347064, null);
cljs.core.cst$sym$cljs$core_SLASH_Keyword = new cljs.core.Symbol("cljs.core", "Keyword", "cljs.core/Keyword", -451434488, null);
cljs.core.cst$sym$this__10914__auto__ = new cljs.core.Symbol(null, "this__10914__auto__", "this__10914__auto__", -1038529528, null);
cljs.core.cst$kw$method = new cljs.core.Keyword(null, "method", "method", 55703592);
cljs.core.cst$sym$cljs$core_SLASH_prn = new cljs.core.Symbol("cljs.core", "prn", "cljs.core/prn", 1725204552, null);
cljs.core.cst$sym$p1__9820_SHARP_ = new cljs.core.Symbol(null, "p1__9820#", "p1__9820#", -545659768, null);
cljs.core.cst$sym$quote0 = new cljs.core.Symbol(null, "quote0", "quote0", 1319130280, null);
cljs.core.cst$kw$use = new cljs.core.Keyword(null, "use", "use", -1846382424);
cljs.core.cst$kw$segs = new cljs.core.Keyword(null, "segs", "segs", -1940299576);
cljs.core.cst$sym$IMeta = new cljs.core.Symbol(null, "IMeta", "IMeta", 1095313672, null);
cljs.core.cst$kw$default = new cljs.core.Keyword(null, "default", "default", -1987822328);
cljs.core.cst$sym$clojure$core_SLASH_symbol_QMARK_ = new cljs.core.Symbol("clojure.core", "symbol?", "clojure.core/symbol?", 1587987784, null);
cljs.core.cst$sym$apply_DASH_to = new cljs.core.Symbol(null, "apply-to", "apply-to", -1858571928, null);
cljs.core.cst$sym$_DASH_lookup = new cljs.core.Symbol(null, "-lookup", "-lookup", -1438393944, null);
cljs.core.cst$sym$cached_DASH_hierarchy__11227__auto__ = new cljs.core.Symbol(null, "cached-hierarchy__11227__auto__", "cached-hierarchy__11227__auto__", 287931848, null);
cljs.core.cst$sym$ICloneable = new cljs.core.Symbol(null, "ICloneable", "ICloneable", 1882653160, null);
cljs.core.cst$kw$num_DASH_fields = new cljs.core.Keyword(null, "num-fields", "num-fields", 1529154024);
cljs.core.cst$sym$goog$string = new cljs.core.Symbol(null, "goog.string", "goog.string", -2055533048, null);
cljs.core.cst$sym$cljs$core_SLASH_aclone = new cljs.core.Symbol("cljs.core", "aclone", "cljs.core/aclone", -758078968, null);
cljs.core.cst$sym$prefer_DASH_table = new cljs.core.Symbol(null, "prefer-table", "prefer-table", 462168584, null);
cljs.core.cst$sym$cb = new cljs.core.Symbol(null, "cb", "cb", -2064487928, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_call = new cljs.core.Keyword("cljs.analyzer", "call", "cljs.analyzer/call", 964149800);
cljs.core.cst$kw$new = new cljs.core.Keyword(null, "new", "new", -2085437848);
cljs.core.cst$sym$loop_STAR_ = new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null);
cljs.core.cst$kw$protocols = new cljs.core.Keyword(null, "protocols", "protocols", -5615896);
cljs.core.cst$sym$watches = new cljs.core.Symbol(null, "watches", "watches", 1367433992, null);
cljs.core.cst$kw$ns = new cljs.core.Keyword(null, "ns", "ns", 441598760);
cljs.core.cst$kw$bindings = new cljs.core.Keyword(null, "bindings", "bindings", 1271397192);
cljs.core.cst$kw$elide_DASH_asserts = new cljs.core.Keyword(null, "elide-asserts", "elide-asserts", 537063272);
cljs.core.cst$sym$_DASH_pr_DASH_writer = new cljs.core.Symbol(null, "-pr-writer", "-pr-writer", -445354136, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_binding = new cljs.core.Symbol("cljs.core$macros", "binding", "cljs.core$macros/binding", 1855847304, null);
cljs.core.cst$sym$cljs$core_SLASH_chunk = new cljs.core.Symbol("cljs.core", "chunk", "cljs.core/chunk", 847936424, null);
cljs.core.cst$sym$argc = new cljs.core.Symbol(null, "argc", "argc", 187692008, null);
cljs.core.cst$kw$def_DASH_emits_DASH_var = new cljs.core.Keyword(null, "def-emits-var", "def-emits-var", -1551927320);
cljs.core.cst$sym$INext = new cljs.core.Symbol(null, "INext", "INext", 562211849, null);
cljs.core.cst$kw$name = new cljs.core.Keyword(null, "name", "name", 1843675177);
cljs.core.cst$sym$ICounted = new cljs.core.Symbol(null, "ICounted", "ICounted", -1705786327, null);
cljs.core.cst$sym$IMapEntry = new cljs.core.Symbol(null, "IMapEntry", "IMapEntry", -943754199, null);
cljs.core.cst$kw$munged_DASH_namespace = new cljs.core.Keyword(null, "munged-namespace", "munged-namespace", -101986199);
cljs.core.cst$kw$binding_DASH_form_QMARK_ = new cljs.core.Keyword(null, "binding-form?", "binding-form?", 1728940169);
cljs.core.cst$kw$as = new cljs.core.Keyword(null, "as", "as", 1148689641);
cljs.core.cst$sym$cljs$core_SLASH_es6_DASH_iterator = new cljs.core.Symbol("cljs.core", "es6-iterator", "cljs.core/es6-iterator", 856007913, null);
cljs.core.cst$sym$_AMPERSAND_form = new cljs.core.Symbol(null, "&form", "&form", 1482799337, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_with_DASH_redefs = new cljs.core.Symbol("cljs.core$macros", "with-redefs", "cljs.core$macros/with-redefs", 1489217801, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_inc = new cljs.core.Symbol("cljs.core$macros", "inc", "cljs.core$macros/inc", 876629257, null);
cljs.core.cst$sym$cljs$core_SLASH_dissoc = new cljs.core.Symbol("cljs.core", "dissoc", "cljs.core/dissoc", -432349815, null);
cljs.core.cst$sym$IStack = new cljs.core.Symbol(null, "IStack", "IStack", 1136769449, null);
cljs.core.cst$sym$rdr = new cljs.core.Symbol(null, "rdr", "rdr", 190007785, null);
cljs.core.cst$kw$variadic = new cljs.core.Keyword(null, "variadic", "variadic", 882626057);
cljs.core.cst$sym$cljs$core_SLASH_keyword_DASH_identical_QMARK_ = new cljs.core.Symbol("cljs.core", "keyword-identical?", "cljs.core/keyword-identical?", 1598491177, null);
cljs.core.cst$sym$cljs$core_SLASH__STAR_print_DASH_newline_STAR_ = new cljs.core.Symbol("cljs.core", "*print-newline*", "cljs.core/*print-newline*", 6231625, null);
cljs.core.cst$sym$bitmap = new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null);
cljs.core.cst$sym$_seq = new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null);
cljs.core.cst$sym$cljs$core_SLASH_Delay = new cljs.core.Symbol("cljs.core", "Delay", "cljs.core/Delay", -21574999, null);
cljs.core.cst$sym$cljs$core_SLASH_LazySeq = new cljs.core.Symbol("cljs.core", "LazySeq", "cljs.core/LazySeq", 1986389673, null);
cljs.core.cst$kw$flag = new cljs.core.Keyword(null, "flag", "flag", 1088647881);
cljs.core.cst$sym$ret = new cljs.core.Symbol(null, "ret", "ret", 1172308713, null);
cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_rest = new cljs.core.Symbol("cljs.core", "chunk-rest", "cljs.core/chunk-rest", -398161143, null);
cljs.core.cst$sym$nil_DASH_val = new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null);
cljs.core.cst$kw$constant = new cljs.core.Keyword(null, "constant", "constant", -379609303);
cljs.core.cst$sym$cljs$core_SLASH_atom = new cljs.core.Symbol("cljs.core", "atom", "cljs.core/atom", 1943839529, null);
cljs.core.cst$kw$loop_DASH_lets = new cljs.core.Keyword(null, "loop-lets", "loop-lets", 2036794185);
cljs.core.cst$sym$IReversible = new cljs.core.Symbol(null, "IReversible", "IReversible", -723048599, null);
cljs.core.cst$kw$value = new cljs.core.Keyword(null, "value", "value", 305978217);
cljs.core.cst$kw$or = new cljs.core.Keyword(null, "or", "or", 235744169);
cljs.core.cst$sym$c__11120__auto__ = new cljs.core.Symbol(null, "c__11120__auto__", "c__11120__auto__", -78007383, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_coercive_DASH__EQ_ = new cljs.core.Symbol("cljs.core$macros", "coercive-=", "cljs.core$macros/coercive-=", -1655776086, null);
cljs.core.cst$kw$unchecked = new cljs.core.Keyword(null, "unchecked", "unchecked", 924418378);
cljs.core.cst$kw$special_DASH_form = new cljs.core.Keyword(null, "special-form", "special-form", -1326536374);
cljs.core.cst$sym$cljs$core$macros_SLASH_str = new cljs.core.Symbol("cljs.core$macros", "str", "cljs.core$macros/str", -2019499702, null);
cljs.core.cst$sym$cljs$core = new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_if_DASH_let = new cljs.core.Symbol("cljs.core$macros", "if-let", "cljs.core$macros/if-let", 1291543946, null);
cljs.core.cst$sym$t__10473__auto__ = new cljs.core.Symbol(null, "t__10473__auto__", "t__10473__auto__", -536346166, null);
cljs.core.cst$kw$file = new cljs.core.Keyword(null, "file", "file", -1269645878);
cljs.core.cst$sym$cljs$core_SLASH_concat = new cljs.core.Symbol("cljs.core", "concat", "cljs.core/concat", -1133584918, null);
cljs.core.cst$sym$prefer_DASH_table__11225__auto__ = new cljs.core.Symbol(null, "prefer-table__11225__auto__", "prefer-table__11225__auto__", -2016167414, null);
cljs.core.cst$kw$macro_DASH_ns = new cljs.core.Keyword(null, "macro-ns", "macro-ns", -507154934);
cljs.core.cst$sym$v = new cljs.core.Symbol(null, "v", "v", 1661996586, null);
cljs.core.cst$sym$map_QMARK_ = new cljs.core.Symbol(null, "map?", "map?", -1780568534, null);
cljs.core.cst$kw$fields = new cljs.core.Keyword(null, "fields", "fields", -1932066230);
cljs.core.cst$sym$_DASH__GT_ = new cljs.core.Symbol(null, "->", "->", -2139605430, null);
cljs.core.cst$sym$cljs$core$macros_SLASH__PLUS_ = new cljs.core.Symbol("cljs.core$macros", "+", "cljs.core$macros/+", -18260342, null);
cljs.core.cst$sym$js = new cljs.core.Symbol(null, "js", "js", -886355190, null);
cljs.core.cst$sym$cljs$core_SLASH_pr_DASH_str = new cljs.core.Symbol("cljs.core", "pr-str", "cljs.core/pr-str", -552799478, null);
cljs.core.cst$sym$temp__10362__auto__ = new cljs.core.Symbol(null, "temp__10362__auto__", "temp__10362__auto__", 31924042, null);
cljs.core.cst$sym$cljs$core_SLASH_ISet = new cljs.core.Symbol("cljs.core", "ISet", "cljs.core/ISet", 2003412810, null);
cljs.core.cst$sym$p1__9324_SHARP_ = new cljs.core.Symbol(null, "p1__9324#", "p1__9324#", -1142618262, null);
cljs.core.cst$sym$long = new cljs.core.Symbol(null, "long", "long", 1469079434, null);
cljs.core.cst$kw$optimizations = new cljs.core.Keyword(null, "optimizations", "optimizations", -2047476854);
cljs.core.cst$sym$double = new cljs.core.Symbol(null, "double", "double", -1769548886, null);
cljs.core.cst$kw$end_DASH_column = new cljs.core.Keyword(null, "end-column", "end-column", 1425389514);
cljs.core.cst$sym$cljs$core$macros_SLASH_aset = new cljs.core.Symbol("cljs.core$macros", "aset", "cljs.core$macros/aset", -693176374, null);
cljs.core.cst$sym$riter = new cljs.core.Symbol(null, "riter", "riter", -237834262, null);
cljs.core.cst$kw$single_DASH_segment_DASH_namespace = new cljs.core.Keyword(null, "single-segment-namespace", "single-segment-namespace", -491924469);
cljs.core.cst$sym$__hash = new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null);
cljs.core.cst$kw$_STAR_data_DASH_readers_STAR_ = new cljs.core.Keyword(null, "*data-readers*", "*data-readers*", -371480469);
cljs.core.cst$sym$meta = new cljs.core.Symbol(null, "meta", "meta", -1154898805, null);
cljs.core.cst$sym$_meta = new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null);
cljs.core.cst$sym$IHash = new cljs.core.Symbol(null, "IHash", "IHash", -1495374645, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_exists_QMARK_ = new cljs.core.Symbol("cljs.core$macros", "exists?", "cljs.core$macros/exists?", -1828590389, null);
cljs.core.cst$kw$start = new cljs.core.Keyword(null, "start", "start", -355208981);
cljs.core.cst$sym$screen = new cljs.core.Symbol(null, "screen", "screen", -664376021, null);
cljs.core.cst$kw$fn_DASH_arity = new cljs.core.Keyword(null, "fn-arity", "fn-arity", -403576501);
cljs.core.cst$kw$lines = new cljs.core.Keyword(null, "lines", "lines", -700165781);
cljs.core.cst$kw$top_DASH_fn = new cljs.core.Keyword(null, "top-fn", "top-fn", -2056129173);
cljs.core.cst$sym$afn = new cljs.core.Symbol(null, "afn", "afn", 216963467, null);
cljs.core.cst$sym$___11248__auto__ = new cljs.core.Symbol(null, "___11248__auto__", "___11248__auto__", 1233598859, null);
cljs.core.cst$sym$cljs$core$macros_SLASH__EQ__EQ_ = new cljs.core.Symbol("cljs.core$macros", "==", "cljs.core$macros/==", -818551413, null);
cljs.core.cst$kw$require = new cljs.core.Keyword(null, "require", "require", -468001333);
cljs.core.cst$kw$params = new cljs.core.Keyword(null, "params", "params", 710516235);
cljs.core.cst$sym$IEquiv = new cljs.core.Symbol(null, "IEquiv", "IEquiv", -1912850869, null);
cljs.core.cst$sym$tree = new cljs.core.Symbol(null, "tree", "tree", 1444219499, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_case = new cljs.core.Symbol("cljs.core$macros", "case", "cljs.core$macros/case", -2131866965, null);
cljs.core.cst$sym$fn = new cljs.core.Symbol(null, "fn", "fn", 465265323, null);
cljs.core.cst$sym$front = new cljs.core.Symbol(null, "front", "front", 117022539, null);
cljs.core.cst$sym$buf = new cljs.core.Symbol(null, "buf", "buf", 1426618187, null);
cljs.core.cst$sym$goog = new cljs.core.Symbol(null, "goog", "goog", -70603925, null);
cljs.core.cst$kw$js_DASH_value = new cljs.core.Keyword(null, "js-value", "js-value", -758336661);
cljs.core.cst$kw$dblock = new cljs.core.Keyword(null, "dblock", "dblock", -1325623381);
cljs.core.cst$kw$js_DASH_module_DASH_index = new cljs.core.Keyword(null, "js-module-index", "js-module-index", 2072061931);
cljs.core.cst$kw$fn_DASH_self_DASH_name = new cljs.core.Keyword(null, "fn-self-name", "fn-self-name", 1461143531);
cljs.core.cst$kw$deftype_STAR_ = new cljs.core.Keyword(null, "deftype*", "deftype*", -677871637);
cljs.core.cst$sym$cljs$core$macros_SLASH_copy_DASH_arguments = new cljs.core.Symbol("cljs.core$macros", "copy-arguments", "cljs.core$macros/copy-arguments", -1675962356, null);
cljs.core.cst$sym$next_DASH_entry = new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null);
cljs.core.cst$kw$read_DASH_cond = new cljs.core.Keyword(null, "read-cond", "read-cond", 1056899244);
cljs.core.cst$sym$js_SLASH_Boolean = new cljs.core.Symbol("js", "Boolean", "js/Boolean", 1661145260, null);
cljs.core.cst$kw$val = new cljs.core.Keyword(null, "val", "val", 128701612);
cljs.core.cst$sym$ITransientVector = new cljs.core.Symbol(null, "ITransientVector", "ITransientVector", 1978793164, null);
cljs.core.cst$sym$key = new cljs.core.Symbol(null, "key", "key", 124488940, null);
cljs.core.cst$sym$not_EQ_ = new cljs.core.Symbol(null, "not=", "not=", 1466536204, null);
cljs.core.cst$sym$_next = new cljs.core.Symbol(null, "_next", "_next", 101877036, null);
cljs.core.cst$sym$string_QMARK_ = new cljs.core.Symbol(null, "string?", "string?", -1129175764, null);
cljs.core.cst$sym$inst = new cljs.core.Symbol(null, "inst", "inst", -2008473268, null);
cljs.core.cst$kw$recur = new cljs.core.Keyword(null, "recur", "recur", -437573268);
cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_xor = new cljs.core.Symbol("cljs.core", "bit-xor", "cljs.core/bit-xor", 1480189292, null);
cljs.core.cst$kw$field = new cljs.core.Keyword(null, "field", "field", -1302436500);
cljs.core.cst$kw$type = new cljs.core.Keyword(null, "type", "type", 1174270348);
cljs.core.cst$sym$$_DASH_cljs$lang$test = new cljs.core.Symbol(null, ".-cljs$lang$test", ".-cljs$lang$test", 718963148, null);
cljs.core.cst$sym$RecordIter$ = new cljs.core.Symbol(null, "RecordIter.", "RecordIter.", -265283060, null);
cljs.core.cst$sym$cljs$core_SLASH_native_DASH_satisfies_QMARK_ = new cljs.core.Symbol("cljs.core", "native-satisfies?", "cljs.core/native-satisfies?", 1482305036, null);
cljs.core.cst$sym$parent = new cljs.core.Symbol(null, "parent", "parent", 761652748, null);
cljs.core.cst$sym$x__10951__auto__ = new cljs.core.Symbol(null, "x__10951__auto__", "x__10951__auto__", 558390860, null);
cljs.core.cst$sym$goog$object = new cljs.core.Symbol(null, "goog.object", "goog.object", 678593132, null);
cljs.core.cst$kw$verbose = new cljs.core.Keyword(null, "verbose", "verbose", 1694226060);
cljs.core.cst$sym$root_DASH_iter = new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null);
cljs.core.cst$sym$validate = new cljs.core.Symbol(null, "validate", "validate", 1439230700, null);
cljs.core.cst$sym$$append = new cljs.core.Symbol(null, ".append", ".append", 1595439852, null);
cljs.core.cst$sym$$concat = new cljs.core.Symbol(null, ".concat", ".concat", 1180408684, null);
cljs.core.cst$sym$js_SLASH_String = new cljs.core.Symbol("js", "String", "js/String", -2070054036, null);
cljs.core.cst$sym$do = new cljs.core.Symbol(null, "do", "do", 1686842252, null);
cljs.core.cst$sym$__meta = new cljs.core.Symbol(null, "__meta", "__meta", -946752628, null);
cljs.core.cst$sym$_STAR_1 = new cljs.core.Symbol(null, "*1", "*1", 2110258092, null);
cljs.core.cst$sym$vec = new cljs.core.Symbol(null, "vec", "vec", 982683596, null);
cljs.core.cst$sym$meta7488 = new cljs.core.Symbol(null, "meta7488", "meta7488", -1681077300, null);
cljs.core.cst$kw$state = new cljs.core.Keyword(null, "state", "state", -1988618099);
cljs.core.cst$kw$method_DASH_params = new cljs.core.Keyword(null, "method-params", "method-params", -980792179);
cljs.core.cst$sym$call = new cljs.core.Symbol(null, "call", "call", 1120531661, null);
cljs.core.cst$sym$number = new cljs.core.Symbol(null, "number", "number", -1084057331, null);
cljs.core.cst$sym$xs__10277__auto__ = new cljs.core.Symbol(null, "xs__10277__auto__", "xs__10277__auto__", -1400593139, null);
cljs.core.cst$sym$IEditableCollection = new cljs.core.Symbol(null, "IEditableCollection", "IEditableCollection", -906687187, null);
cljs.core.cst$kw$vals = new cljs.core.Keyword(null, "vals", "vals", 768058733);
cljs.core.cst$sym$cljs$core_SLASH__DASH_ = new cljs.core.Symbol("cljs.core", "-", "cljs.core/-", 187040141, null);
cljs.core.cst$kw$js_DASH_dependency_DASH_index = new cljs.core.Keyword(null, "js-dependency-index", "js-dependency-index", -1887042131);
cljs.core.cst$kw$preserve = new cljs.core.Keyword(null, "preserve", "preserve", 1276846509);
cljs.core.cst$kw$fallback_DASH_impl = new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995);
cljs.core.cst$kw$repl_DASH_special_DASH_function = new cljs.core.Keyword(null, "repl-special-function", "repl-special-function", 1262603725);
cljs.core.cst$kw$ns_DASH_name = new cljs.core.Keyword(null, "ns-name", "ns-name", -2077346323);
cljs.core.cst$kw$protocol_DASH_impl = new cljs.core.Keyword(null, "protocol-impl", "protocol-impl", 2101328365);
cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_ = new cljs.core.Symbol("cljs.core", "contains?", "cljs.core/contains?", -976526835, null);
cljs.core.cst$kw$op = new cljs.core.Keyword(null, "op", "op", -1882987955);
cljs.core.cst$kw$current_DASH_symbol = new cljs.core.Keyword(null, "current-symbol", "current-symbol", -932381075);
cljs.core.cst$sym$cljs$core_SLASH_into = new cljs.core.Symbol("cljs.core", "into", "cljs.core/into", 1879938733, null);
cljs.core.cst$kw$source = new cljs.core.Keyword(null, "source", "source", -433931539);
cljs.core.cst$kw$cache_DASH_source = new cljs.core.Keyword(null, "cache-source", "cache-source", -190922003);
cljs.core.cst$sym$this__10922__auto__ = new cljs.core.Symbol(null, "this__10922__auto__", "this__10922__auto__", 205059853, null);
cljs.core.cst$kw$handlers = new cljs.core.Keyword(null, "handlers", "handlers", 79528781);
cljs.core.cst$kw$_GT__GT_ = new cljs.core.Keyword(null, ">>", ">>", -277509267);
cljs.core.cst$kw$js_DASH_provide = new cljs.core.Keyword(null, "js-provide", "js-provide", 1052912493);
cljs.core.cst$kw$flush_DASH_on_DASH_newline = new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939);
cljs.core.cst$kw$env = new cljs.core.Keyword(null, "env", "env", -1815813235);
cljs.core.cst$sym$default_DASH_dispatch_DASH_val = new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null);
cljs.core.cst$sym$ret__11247__auto__ = new cljs.core.Symbol(null, "ret__11247__auto__", "ret__11247__auto__", 1302620174, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_type = new cljs.core.Keyword("cljs.analyzer", "type", "cljs.analyzer/type", 478749742);
cljs.core.cst$kw$letfn = new cljs.core.Keyword(null, "letfn", "letfn", -2121022354);
cljs.core.cst$kw$syms = new cljs.core.Keyword(null, "syms", "syms", -1575891762);
cljs.core.cst$kw$no_DASH_test = new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
cljs.core.cst$sym$even_QMARK_ = new cljs.core.Symbol(null, "even?", "even?", -1827825394, null);
cljs.core.cst$sym$queue = new cljs.core.Symbol(null, "queue", "queue", -1198599890, null);
cljs.core.cst$sym$tests = new cljs.core.Symbol(null, "tests", "tests", 599445902, null);
cljs.core.cst$kw$vector = new cljs.core.Keyword(null, "vector", "vector", 1902966158);
cljs.core.cst$sym$in_DASH_ns = new cljs.core.Symbol(null, "in-ns", "in-ns", -2089468466, null);
cljs.core.cst$sym$validator = new cljs.core.Symbol(null, "validator", "validator", -325659154, null);
cljs.core.cst$kw$variadic_DASH_max_DASH_arity = new cljs.core.Keyword(null, "variadic-max-arity", "variadic-max-arity", -14288402);
cljs.core.cst$kw$illegal_DASH_argument = new cljs.core.Keyword(null, "illegal-argument", "illegal-argument", -1845493170);
cljs.core.cst$sym$cljs$core_SLASH__DASH_conj = new cljs.core.Symbol("cljs.core", "-conj", "cljs.core/-conj", 2040622670, null);
cljs.core.cst$sym$letfn_STAR_ = new cljs.core.Symbol(null, "letfn*", "letfn*", -110097810, null);
cljs.core.cst$kw$export = new cljs.core.Keyword(null, "export", "export", 214356590);
cljs.core.cst$kw$cljs$analyzer_SLASH_analyzed = new cljs.core.Keyword("cljs.analyzer", "analyzed", "cljs.analyzer/analyzed", -735094162);
cljs.core.cst$sym$start__11244__auto__ = new cljs.core.Symbol(null, "start__11244__auto__", "start__11244__auto__", 1284117134, null);
cljs.core.cst$sym$temp__10234__auto__ = new cljs.core.Symbol(null, "temp__10234__auto__", "temp__10234__auto__", 1979638510, null);
cljs.core.cst$sym$if = new cljs.core.Symbol(null, "if", "if", 1181717262, null);
cljs.core.cst$sym$readable = new cljs.core.Symbol(null, "readable", "readable", 2113054478, null);
cljs.core.cst$sym$cljs$core_SLASH_with_DASH_meta = new cljs.core.Symbol("cljs.core", "with-meta", "cljs.core/with-meta", 749126446, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_unchecked_DASH_inc = new cljs.core.Symbol("cljs.core$macros", "unchecked-inc", "cljs.core$macros/unchecked-inc", -1615365330, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_and = new cljs.core.Symbol("cljs.core$macros", "and", "cljs.core$macros/and", 48320334, null);
cljs.core.cst$kw$js_DASH_type = new cljs.core.Keyword(null, "js-type", "js-type", 539386702);
cljs.core.cst$sym$IReset = new cljs.core.Symbol(null, "IReset", "IReset", -1893729426, null);
cljs.core.cst$kw$arglists_DASH_meta = new cljs.core.Keyword(null, "arglists-meta", "arglists-meta", 1944829838);
cljs.core.cst$kw$array = new cljs.core.Keyword(null, "array", "array", -2080713842);
cljs.core.cst$sym$IEmptyableCollection = new cljs.core.Symbol(null, "IEmptyableCollection", "IEmptyableCollection", 1477271438, null);
cljs.core.cst$kw$imports = new cljs.core.Keyword(null, "imports", "imports", -1249933394);
cljs.core.cst$kw$_STAR_load_DASH_macros_STAR_ = new cljs.core.Keyword(null, "*load-macros*", "*load-macros*", 640729006);
cljs.core.cst$kw$cljs$analyzer_SLASH_protocol_DASH_inline = new cljs.core.Keyword("cljs.analyzer", "protocol-inline", "cljs.analyzer/protocol-inline", -1611519026);
cljs.core.cst$sym$global = new cljs.core.Symbol(null, "global", "global", 1734126574, null);
cljs.core.cst$sym$_PERCENT_ = new cljs.core.Symbol(null, "%", "%", -950237169, null);
cljs.core.cst$kw$passes = new cljs.core.Keyword(null, "passes", "passes", -2141861841);
cljs.core.cst$sym$IRecord = new cljs.core.Symbol(null, "IRecord", "IRecord", -903221169, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_constant_DASH_table = new cljs.core.Keyword("cljs.analyzer", "constant-table", "cljs.analyzer/constant-table", -114131889);
cljs.core.cst$sym$arr = new cljs.core.Symbol(null, "arr", "arr", 2115492975, null);
cljs.core.cst$sym$concat = new cljs.core.Symbol(null, "concat", "concat", -467652465, null);
cljs.core.cst$sym$new = new cljs.core.Symbol(null, "new", "new", -444906321, null);
cljs.core.cst$kw$fn_DASH_deprecated = new cljs.core.Keyword(null, "fn-deprecated", "fn-deprecated", 626877647);
cljs.core.cst$sym$IDerefWithTimeout = new cljs.core.Symbol(null, "IDerefWithTimeout", "IDerefWithTimeout", 2140974319, null);
cljs.core.cst$kw$descendants = new cljs.core.Keyword(null, "descendants", "descendants", 1824886031);
cljs.core.cst$kw$merge = new cljs.core.Keyword(null, "merge", "merge", -1804319409);
cljs.core.cst$kw$allow = new cljs.core.Keyword(null, "allow", "allow", -1857325745);
cljs.core.cst$sym$ns = new cljs.core.Symbol(null, "ns", "ns", 2082130287, null);
cljs.core.cst$sym$args__11321__auto__ = new cljs.core.Symbol(null, "args__11321__auto__", "args__11321__auto__", 1339794895, null);
cljs.core.cst$sym$cljs$core_SLASH_js_DASH_obj = new cljs.core.Symbol("cljs.core", "js-obj", "cljs.core/js-obj", 1009370607, null);
cljs.core.cst$sym$startslice = new cljs.core.Symbol(null, "startslice", "startslice", 1404029423, null);
cljs.core.cst$kw$invalid_DASH_constant_DASH_type = new cljs.core.Keyword(null, "invalid-constant-type", "invalid-constant-type", 1294847471);
cljs.core.cst$kw$sym = new cljs.core.Keyword(null, "sym", "sym", -1444860305);
cljs.core.cst$kw$anonymous = new cljs.core.Keyword(null, "anonymous", "anonymous", 447897231);
cljs.core.cst$sym$ISet = new cljs.core.Symbol(null, "ISet", "ISet", -1398072657, null);
cljs.core.cst$kw$no_DASH_op = new cljs.core.Keyword(null, "no-op", "no-op", -93046065);
cljs.core.cst$sym$IPending = new cljs.core.Symbol(null, "IPending", "IPending", 1229113039, null);
cljs.core.cst$kw$catches = new cljs.core.Keyword(null, "catches", "catches", -1478797617);
cljs.core.cst$kw$prefix = new cljs.core.Keyword(null, "prefix", "prefix", -265908465);
cljs.core.cst$kw$source_DASH_maps = new cljs.core.Keyword(null, "source-maps", "source-maps", -552851697);
cljs.core.cst$kw$column = new cljs.core.Keyword(null, "column", "column", 2078222095);
cljs.core.cst$sym$cljs$core_SLASH_not_DASH_native = new cljs.core.Symbol("cljs.core", "not-native", "cljs.core/not-native", -1716909265, null);
cljs.core.cst$sym$unquote = new cljs.core.Symbol(null, "unquote", "unquote", -1004694737, null);
cljs.core.cst$kw$types = new cljs.core.Keyword(null, "types", "types", 590030639);
cljs.core.cst$sym$$getTime = new cljs.core.Symbol(null, ".getTime", ".getTime", -1048557777, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_protocol_DASH_impl = new cljs.core.Keyword("cljs.analyzer", "protocol-impl", "cljs.analyzer/protocol-impl", -1523935409);
cljs.core.cst$sym$default = new cljs.core.Symbol(null, "default", "default", -347290801, null);
cljs.core.cst$sym$$fromArray = new cljs.core.Symbol(null, ".fromArray", ".fromArray", 1053499311, null);
cljs.core.cst$sym$cljs$core$macros_SLASH__DASH__GT__GT_ = new cljs.core.Symbol("cljs.core$macros", "->>", "cljs.core$macros/->>", -1353108561, null);
cljs.core.cst$kw$loop = new cljs.core.Keyword(null, "loop", "loop", -395552849);
cljs.core.cst$sym$argseq__11330__auto__ = new cljs.core.Symbol(null, "argseq__11330__auto__", "argseq__11330__auto__", 353170351, null);
cljs.core.cst$kw$dot_DASH_action = new cljs.core.Keyword(null, "dot-action", "dot-action", -1460119601);
cljs.core.cst$sym$cljs$core_SLASH__DASH_first = new cljs.core.Symbol("cljs.core", "-first", "cljs.core/-first", 545297391, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_when_DASH_first = new cljs.core.Symbol("cljs.core$macros", "when-first", "cljs.core$macros/when-first", -840670160, null);
cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_or = new cljs.core.Symbol("cljs.core", "bit-or", "cljs.core/bit-or", 1134521392, null);
cljs.core.cst$kw$undeclared_DASH_var = new cljs.core.Keyword(null, "undeclared-var", "undeclared-var", -1624364944);
cljs.core.cst$kw$ancestors = new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424);
cljs.core.cst$sym$valid_DASH_opts_QMARK_ = new cljs.core.Symbol(null, "valid-opts?", "valid-opts?", 1000038576, null);
cljs.core.cst$sym$cljs$core_SLASH_PersistentVector = new cljs.core.Symbol("cljs.core", "PersistentVector", "cljs.core/PersistentVector", -1211028272, null);
cljs.core.cst$sym$p1__9830_SHARP_ = new cljs.core.Symbol(null, "p1__9830#", "p1__9830#", 521337040, null);
cljs.core.cst$sym$_DASH_equiv = new cljs.core.Symbol(null, "-equiv", "-equiv", 320124272, null);
cljs.core.cst$sym$cljs$core_SLASH__SLASH_ = new cljs.core.Symbol("cljs.core", "/", "cljs.core//", -696756880, null);
cljs.core.cst$sym$value = new cljs.core.Symbol(null, "value", "value", 1946509744, null);
cljs.core.cst$kw$internal_DASH_ctor = new cljs.core.Keyword(null, "internal-ctor", "internal-ctor", 937392560);
cljs.core.cst$sym$or = new cljs.core.Symbol(null, "or", "or", 1876275696, null);
cljs.core.cst$kw$module_DASH_type = new cljs.core.Keyword(null, "module-type", "module-type", 1392760304);
cljs.core.cst$sym$meta7491 = new cljs.core.Symbol(null, "meta7491", "meta7491", -2106124784, null);
cljs.core.cst$sym$k__10928__auto__ = new cljs.core.Symbol(null, "k__10928__auto__", "k__10928__auto__", -1396770288, null);
cljs.core.cst$kw$lang = new cljs.core.Keyword(null, "lang", "lang", -1819677104);
cljs.core.cst$sym$name = new cljs.core.Symbol(null, "name", "name", -810760592, null);
cljs.core.cst$sym$cljs$core_SLASH_ISeq = new cljs.core.Symbol("cljs.core", "ISeq", "cljs.core/ISeq", 230133392, null);
cljs.core.cst$sym$c__11052__auto__ = new cljs.core.Symbol(null, "c__11052__auto__", "c__11052__auto__", -1608401264, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_unsafe_DASH_bit_DASH_and = new cljs.core.Symbol("cljs.core$macros", "unsafe-bit-and", "cljs.core$macros/unsafe-bit-and", 1803731600, null);
cljs.core.cst$sym$len__11319__auto__ = new cljs.core.Symbol(null, "len__11319__auto__", "len__11319__auto__", -497461616, null);
cljs.core.cst$sym$$_DASH_prototype = new cljs.core.Symbol(null, ".-prototype", ".-prototype", -1562038608, null);
cljs.core.cst$sym$n = new cljs.core.Symbol(null, "n", "n", -2092305744, null);
cljs.core.cst$sym$cljs$core_SLASH_List = new cljs.core.Symbol("cljs.core", "List", "cljs.core/List", 1708954352, null);
cljs.core.cst$sym$this__10916__auto__ = new cljs.core.Symbol(null, "this__10916__auto__", "this__10916__auto__", -1836433680, null);
cljs.core.cst$sym$frames = new cljs.core.Symbol(null, "frames", "frames", -888748272, null);
cljs.core.cst$kw$readably = new cljs.core.Keyword(null, "readably", "readably", 1129599760);
cljs.core.cst$sym$iter__11054__auto__ = new cljs.core.Symbol(null, "iter__11054__auto__", "iter__11054__auto__", -489395376, null);
cljs.core.cst$kw$preamble_DASH_line_DASH_count = new cljs.core.Keyword(null, "preamble-line-count", "preamble-line-count", -659949744);
cljs.core.cst$sym$$push = new cljs.core.Symbol(null, ".push", ".push", -1497267248, null);
cljs.core.cst$kw$more_DASH_marker = new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935);
cljs.core.cst$sym$cljs$core_SLASH_let = new cljs.core.Symbol("cljs.core", "let", "cljs.core/let", -308701135, null);
cljs.core.cst$kw$source_DASH_map_DASH_timestamp = new cljs.core.Keyword(null, "source-map-timestamp", "source-map-timestamp", 1973015633);
cljs.core.cst$sym$fields = new cljs.core.Symbol(null, "fields", "fields", -291534703, null);
cljs.core.cst$sym$cljs$core_SLASH__DASH_add_DASH_method = new cljs.core.Symbol("cljs.core", "-add-method", "cljs.core/-add-method", 571092113, null);
cljs.core.cst$sym$process = new cljs.core.Symbol(null, "process", "process", -1011242831, null);
cljs.core.cst$sym$i__11320__auto__ = new cljs.core.Symbol(null, "i__11320__auto__", "i__11320__auto__", 368927921, null);
cljs.core.cst$sym$println = new cljs.core.Symbol(null, "println", "println", -733595439, null);
cljs.core.cst$sym$method_DASH_cache = new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_expr = new cljs.core.Keyword("cljs.analyzer", "expr", "cljs.analyzer/expr", 1708655889);
cljs.core.cst$sym$cljs$core_SLASH_nthnext = new cljs.core.Symbol("cljs.core", "nthnext", "cljs.core/nthnext", -1690777327, null);
cljs.core.cst$kw$include_DASH_macros = new cljs.core.Keyword(null, "include-macros", "include-macros", 1228110289);
cljs.core.cst$sym$nexts = new cljs.core.Symbol(null, "nexts", "nexts", -1683579407, null);
cljs.core.cst$kw$asset_DASH_path = new cljs.core.Keyword(null, "asset-path", "asset-path", 1500889617);
cljs.core.cst$sym$ISwap = new cljs.core.Symbol(null, "ISwap", "ISwap", 484378193, null);
cljs.core.cst$kw$requires = new cljs.core.Keyword(null, "requires", "requires", -1201390927);
cljs.core.cst$kw$preamble_DASH_missing = new cljs.core.Keyword(null, "preamble-missing", "preamble-missing", 220974801);
cljs.core.cst$sym$dep = new cljs.core.Symbol(null, "dep", "dep", -142776527, null);
cljs.core.cst$sym$$_DASH_cljs$lang$ctorStr = new cljs.core.Symbol(null, ".-cljs$lang$ctorStr", ".-cljs$lang$ctorStr", -1820706991, null);
cljs.core.cst$sym$cljs$core_SLASH_get = new cljs.core.Symbol("cljs.core", "get", "cljs.core/get", -296075407, null);
cljs.core.cst$sym$$fromArrays = new cljs.core.Symbol(null, ".fromArrays", ".fromArrays", 1110244209, null);
cljs.core.cst$sym$edit = new cljs.core.Symbol(null, "edit", "edit", -1302639, null);
cljs.core.cst$kw$positional = new cljs.core.Keyword(null, "positional", "positional", -203580463);
cljs.core.cst$sym$require = new cljs.core.Symbol(null, "require", "require", 1172530194, null);
cljs.core.cst$sym$hash_DASH_imap = new cljs.core.Symbol(null, "hash-imap", "hash-imap", -1047446478, null);
cljs.core.cst$sym$cljs$core_SLASH_cond = new cljs.core.Symbol("cljs.core", "cond", "cljs.core/cond", 2005388338, null);
cljs.core.cst$sym$k__10930__auto__ = new cljs.core.Symbol(null, "k__10930__auto__", "k__10930__auto__", 659123250, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_set_DASH_unchecked_DASH_if = new cljs.core.Keyword("cljs.analyzer", "set-unchecked-if", "cljs.analyzer/set-unchecked-if", 1413639250);
cljs.core.cst$sym$editable_QMARK_ = new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null);
cljs.core.cst$kw$unsynchronized_DASH_mutable = new cljs.core.Keyword(null, "unsynchronized-mutable", "unsynchronized-mutable", -164143950);
cljs.core.cst$sym$base_DASH_count = new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null);
cljs.core.cst$kw$factory = new cljs.core.Keyword(null, "factory", "factory", 63933746);
cljs.core.cst$sym$verbose_DASH_handler_DASH_fn = new cljs.core.Symbol(null, "verbose-handler-fn", "verbose-handler-fn", 547340594, null);
cljs.core.cst$kw$illegal_DASH_state = new cljs.core.Keyword(null, "illegal-state", "illegal-state", -1519851182);
cljs.core.cst$kw$const = new cljs.core.Keyword(null, "const", "const", 1709929842);
cljs.core.cst$sym$clojure$core_SLASH_unquote_DASH_splicing = new cljs.core.Symbol("clojure.core", "unquote-splicing", "clojure.core/unquote-splicing", -552003150, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_access = new cljs.core.Keyword("cljs.analyzer", "access", "cljs.analyzer/access", -1639036494);
cljs.core.cst$sym$collision_DASH_hash = new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null);
cljs.core.cst$sym$INamed = new cljs.core.Symbol(null, "INamed", "INamed", 357992946, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_aget = new cljs.core.Symbol("cljs.core$macros", "aget", "cljs.core$macros/aget", 1976136178, null);
cljs.core.cst$kw$keys = new cljs.core.Keyword(null, "keys", "keys", 1068423698);
cljs.core.cst$sym$deftype_STAR_ = new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null);
cljs.core.cst$sym$IReduce = new cljs.core.Symbol(null, "IReduce", "IReduce", -440384974, null);
cljs.core.cst$sym$let_STAR_ = new cljs.core.Symbol(null, "let*", "let*", 1920721458, null);
cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_append = new cljs.core.Symbol("cljs.core", "chunk-append", "cljs.core/chunk-append", -243671470, null);
cljs.core.cst$sym$js_SLASH_Array = new cljs.core.Symbol("js", "Array", "js/Array", -423508366, null);
cljs.core.cst$sym$ITransientCollection = new cljs.core.Symbol(null, "ITransientCollection", "ITransientCollection", 252832402, null);
cljs.core.cst$kw$cache = new cljs.core.Keyword(null, "cache", "cache", -1237023054);
cljs.core.cst$kw$thens = new cljs.core.Keyword(null, "thens", "thens", 226631442);
cljs.core.cst$sym$nil_QMARK_ = new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null);
cljs.core.cst$sym$cljs$core_SLASH__DASH_nth = new cljs.core.Symbol("cljs.core", "-nth", "cljs.core/-nth", 504234802, null);
cljs.core.cst$sym$start = new cljs.core.Symbol(null, "start", "start", 1285322546, null);
cljs.core.cst$kw$set_BANG_ = new cljs.core.Keyword(null, "set!", "set!", -1389817006);
cljs.core.cst$kw$splicing_QMARK_ = new cljs.core.Keyword(null, "splicing?", "splicing?", -428596366);
cljs.core.cst$kw$methods = new cljs.core.Keyword(null, "methods", "methods", 453930866);
cljs.core.cst$sym$coll = new cljs.core.Symbol(null, "coll", "coll", -1006698606, null);
cljs.core.cst$sym$_STAR_e = new cljs.core.Symbol(null, "*e", "*e", 329170866, null);
cljs.core.cst$sym$not_DASH_native = new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null);
cljs.core.cst$sym$js_STAR_ = new cljs.core.Symbol(null, "js*", "js*", -1134233646, null);
cljs.core.cst$kw$undeclared_DASH_protocol_DASH_symbol = new cljs.core.Keyword(null, "undeclared-protocol-symbol", "undeclared-protocol-symbol", 462882867);
cljs.core.cst$sym$alert = new cljs.core.Symbol(null, "alert", "alert", 1068580947, null);
cljs.core.cst$kw$undeclared = new cljs.core.Keyword(null, "undeclared", "undeclared", 1446667347);
cljs.core.cst$sym$cljs$core_SLASH_IMeta = new cljs.core.Symbol("cljs.core", "IMeta", "cljs.core/IMeta", -1459057517, null);
cljs.core.cst$sym$strobj = new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_coercive_DASH_not = new cljs.core.Symbol("cljs.core$macros", "coercive-not", "cljs.core$macros/coercive-not", 115999987, null);
cljs.core.cst$kw$seen = new cljs.core.Keyword(null, "seen", "seen", -518999789);
cljs.core.cst$sym$this__10919__auto__ = new cljs.core.Symbol(null, "this__10919__auto__", "this__10919__auto__", 58700083, null);
cljs.core.cst$kw$_STAR_sm_DASH_data_STAR_ = new cljs.core.Keyword(null, "*sm-data*", "*sm-data*", 1341435219);
cljs.core.cst$kw$dynamic = new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571);
cljs.core.cst$kw$line = new cljs.core.Keyword(null, "line", "line", 212345235);
cljs.core.cst$sym$hash_DASH_key = new cljs.core.Symbol(null, "hash-key", "hash-key", 1649875379, null);
cljs.core.cst$sym$cljs$core_SLASH_not_DASH_empty = new cljs.core.Symbol("cljs.core", "not-empty", "cljs.core/not-empty", 540057011, null);
cljs.core.cst$kw$expr = new cljs.core.Keyword(null, "expr", "expr", 745722291);
cljs.core.cst$sym$_rest = new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null);
cljs.core.cst$kw$list = new cljs.core.Keyword(null, "list", "list", 765357683);
cljs.core.cst$kw$var = new cljs.core.Keyword(null, "var", "var", -769682797);
cljs.core.cst$sym$history = new cljs.core.Symbol(null, "history", "history", 1393136307, null);
cljs.core.cst$sym$cljs$core_SLASH_PersistentArrayMap$ = new cljs.core.Symbol("cljs.core", "PersistentArrayMap.", "cljs.core/PersistentArrayMap.", -471979341, null);
cljs.core.cst$sym$fn_STAR_ = new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null);
cljs.core.cst$kw$cljs_SLASH_analysis_DASH_error = new cljs.core.Keyword("cljs", "analysis-error", "cljs/analysis-error", -420526349);
cljs.core.cst$sym$val = new cljs.core.Symbol(null, "val", "val", 1769233139, null);
cljs.core.cst$kw$protocol_DASH_info = new cljs.core.Keyword(null, "protocol-info", "protocol-info", 1471745843);
cljs.core.cst$sym$_DASH_cljs$lang$applyTo = new cljs.core.Symbol(null, "-cljs$lang$applyTo", "-cljs$lang$applyTo", -225535181, null);
cljs.core.cst$sym$ascending_QMARK_ = new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null);
cljs.core.cst$sym$end__11249__auto__ = new cljs.core.Symbol(null, "end__11249__auto__", "end__11249__auto__", 576391027, null);
cljs.core.cst$sym$not = new cljs.core.Symbol(null, "not", "not", 1044554643, null);
cljs.core.cst$sym$m__10952__auto__ = new cljs.core.Symbol(null, "m__10952__auto__", "m__10952__auto__", 984991635, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_caching_DASH_hash = new cljs.core.Symbol("cljs.core$macros", "caching-hash", "cljs.core$macros/caching-hash", -1892393069, null);
cljs.core.cst$kw$load_DASH_macros = new cljs.core.Keyword(null, "load-macros", "load-macros", 459797395);
cljs.core.cst$sym$recur = new cljs.core.Symbol(null, "recur", "recur", 1202958259, null);
cljs.core.cst$sym$ci = new cljs.core.Symbol(null, "ci", "ci", 2049808339, null);
cljs.core.cst$sym$cljs$core_SLASH__LT__EQ_ = new cljs.core.Symbol("cljs.core", "<=", "cljs.core/<=", 1677001748, null);
cljs.core.cst$sym$cljs$core_SLASH__DASH_vreset_BANG_ = new cljs.core.Symbol("cljs.core", "-vreset!", "cljs.core/-vreset!", -1186516972, null);
cljs.core.cst$sym$p__11015__auto__ = new cljs.core.Symbol(null, "p__11015__auto__", "p__11015__auto__", 979202132, null);
cljs.core.cst$kw$macro = new cljs.core.Keyword(null, "macro", "macro", -867863404);
cljs.core.cst$sym$cljs$core$macros_SLASH_this_DASH_as = new cljs.core.Symbol("cljs.core$macros", "this-as", "cljs.core$macros/this-as", -799075148, null);
cljs.core.cst$sym$cljs$core_SLASH_symbol = new cljs.core.Symbol("cljs.core", "symbol", "cljs.core/symbol", 195265748, null);
cljs.core.cst$kw$unprovided = new cljs.core.Keyword(null, "unprovided", "unprovided", -652330764);
cljs.core.cst$kw$deprecation_DASH_nowarn = new cljs.core.Keyword(null, "deprecation-nowarn", "deprecation-nowarn", -1762828044);
cljs.core.cst$kw$print_DASH_length = new cljs.core.Keyword(null, "print-length", "print-length", 1931866356);
cljs.core.cst$sym$cljs$core$macros_SLASH__LT_ = new cljs.core.Symbol("cljs.core$macros", "<", "cljs.core$macros/<", 371512596, null);
cljs.core.cst$sym$source = new cljs.core.Symbol(null, "source", "source", 1206599988, null);
cljs.core.cst$sym$cljs$core_SLASH_mod = new cljs.core.Symbol("cljs.core", "mod", "cljs.core/mod", 1925370196, null);
cljs.core.cst$sym$h__10750__auto__ = new cljs.core.Symbol(null, "h__10750__auto__", "h__10750__auto__", -1093994156, null);
cljs.core.cst$sym$x__10676__auto__ = new cljs.core.Symbol(null, "x__10676__auto__", "x__10676__auto__", 780233076, null);
cljs.core.cst$sym$Math = new cljs.core.Symbol(null, "Math", "Math", 2033287572, null);
cljs.core.cst$sym$js_SLASH_Error$ = new cljs.core.Symbol("js", "Error.", "js/Error.", 750655924, null);
cljs.core.cst$kw$ns_DASH_var_DASH_clash = new cljs.core.Keyword(null, "ns-var-clash", "ns-var-clash", -280494668);
cljs.core.cst$sym$env = new cljs.core.Symbol(null, "env", "env", -175281708, null);
cljs.core.cst$sym$$_DASH_getBasis = new cljs.core.Symbol(null, ".-getBasis", ".-getBasis", -1306451468, null);
cljs.core.cst$kw$col = new cljs.core.Keyword(null, "col", "col", -1959363084);
cljs.core.cst$kw$deprecated = new cljs.core.Keyword(null, "deprecated", "deprecated", 1498275348);
cljs.core.cst$sym$clj_DASH_or_DASH_nil = new cljs.core.Symbol(null, "clj-or-nil", "clj-or-nil", -2008798668, null);
cljs.core.cst$kw$uses = new cljs.core.Keyword(null, "uses", "uses", 232664692);
cljs.core.cst$sym$$_DASH_cljs$lang$type = new cljs.core.Symbol(null, ".-cljs$lang$type", ".-cljs$lang$type", -1029307724, null);
cljs.core.cst$kw$undeclared_DASH_ns = new cljs.core.Keyword(null, "undeclared-ns", "undeclared-ns", -1589012812);
cljs.core.cst$sym$cljs$core_SLASH__STAR_ = new cljs.core.Symbol("cljs.core", "*", "cljs.core/*", -857794892, null);
cljs.core.cst$sym$state = new cljs.core.Symbol(null, "state", "state", -348086572, null);
cljs.core.cst$sym$cljs$core_SLASH_min = new cljs.core.Symbol("cljs.core", "min", "cljs.core/min", 1166879476, null);
cljs.core.cst$sym$cljs$core_SLASH_missing_DASH_protocol = new cljs.core.Symbol("cljs.core", "missing-protocol", "cljs.core/missing-protocol", 531539732, null);
cljs.core.cst$kw$ok = new cljs.core.Keyword(null, "ok", "ok", 967785236);
cljs.core.cst$sym$_DASH_meta = new cljs.core.Symbol(null, "-meta", "-meta", 494863156, null);
cljs.core.cst$kw$_STAR_env_STAR_ = new cljs.core.Keyword(null, "*env*", "*env*", 1860548436);
cljs.core.cst$kw$preprocess = new cljs.core.Keyword(null, "preprocess", "preprocess", 1208285012);
cljs.core.cst$kw$catch = new cljs.core.Keyword(null, "catch", "catch", 1038065524);
cljs.core.cst$kw$recur_DASH_frames = new cljs.core.Keyword(null, "recur-frames", "recur-frames", -307205196);
cljs.core.cst$sym$clojure$core_SLASH_deref = new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null);
cljs.core.cst$sym$IMap = new cljs.core.Symbol(null, "IMap", "IMap", 992876629, null);
cljs.core.cst$sym$method_DASH_table__11224__auto__ = new cljs.core.Symbol(null, "method-table__11224__auto__", "method-table__11224__auto__", 666360949, null);
cljs.core.cst$sym$window = new cljs.core.Symbol(null, "window", "window", -1929916235, null);
cljs.core.cst$sym$cached_DASH_hierarchy = new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null);
cljs.core.cst$kw$record = new cljs.core.Keyword(null, "record", "record", -779106859);
cljs.core.cst$sym$array = new cljs.core.Symbol(null, "array", "array", -440182315, null);
cljs.core.cst$sym$s = new cljs.core.Symbol(null, "s", "s", -948495851, null);
cljs.core.cst$kw$defs = new cljs.core.Keyword(null, "defs", "defs", 1398449717);
cljs.core.cst$sym$ISeq = new cljs.core.Symbol(null, "ISeq", "ISeq", 1517365813, null);
cljs.core.cst$kw$parents = new cljs.core.Keyword(null, "parents", "parents", -2027538891);
cljs.core.cst$sym$cljs$core_SLASH__DASH_lookup = new cljs.core.Symbol("cljs.core", "-lookup", "cljs.core/-lookup", -1845674443, null);
cljs.core.cst$sym$cnt = new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null);
cljs.core.cst$sym$_SLASH_ = new cljs.core.Symbol(null, "/", "/", -1371932971, null);
cljs.core.cst$sym$cljs$core_SLASH_nil_QMARK_ = new cljs.core.Symbol("cljs.core", "nil?", "cljs.core/nil?", 945071861, null);
cljs.core.cst$sym$_AMPERSAND_env = new cljs.core.Symbol(null, "&env", "&env", -919163083, null);
cljs.core.cst$sym$string = new cljs.core.Symbol(null, "string", "string", -349010059, null);
cljs.core.cst$sym$else__10923__auto__ = new cljs.core.Symbol(null, "else__10923__auto__", "else__10923__auto__", -1412686987, null);
cljs.core.cst$sym$node = new cljs.core.Symbol(null, "node", "node", -2073234571, null);
cljs.core.cst$kw$quoted_QMARK_ = new cljs.core.Keyword(null, "quoted?", "quoted?", 1464649621);
cljs.core.cst$kw$declared = new cljs.core.Keyword(null, "declared", "declared", 92336021);
cljs.core.cst$sym$writer__10902__auto__ = new cljs.core.Symbol(null, "writer__10902__auto__", "writer__10902__auto__", 39755701, null);
cljs.core.cst$kw$_STAR_analyze_DASH_deps_STAR_ = new cljs.core.Keyword(null, "*analyze-deps*", "*analyze-deps*", -29540427);
cljs.core.cst$sym$cljs$core_SLASH_nth = new cljs.core.Symbol("cljs.core", "nth", "cljs.core/nth", 1961052085, null);
cljs.core.cst$sym$hierarchy__11228__auto__ = new cljs.core.Symbol(null, "hierarchy__11228__auto__", "hierarchy__11228__auto__", 726210614, null);
cljs.core.cst$sym$_GT__EQ_ = new cljs.core.Symbol(null, ">=", ">=", 1016916022, null);
cljs.core.cst$sym$cljs$core_SLASH_PersistentHashSet = new cljs.core.Symbol("cljs.core", "PersistentHashSet", "cljs.core/PersistentHashSet", -967232330, null);
cljs.core.cst$sym$sym = new cljs.core.Symbol(null, "sym", "sym", 195671222, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_not_DASH_found = new cljs.core.Keyword("cljs.analyzer", "not-found", "cljs.analyzer/not-found", 427220150);
cljs.core.cst$kw$lib = new cljs.core.Keyword(null, "lib", "lib", 191808726);
cljs.core.cst$sym$cljs$core_SLASH_max = new cljs.core.Symbol("cljs.core", "max", "cljs.core/max", 1303529718, null);
cljs.core.cst$sym$module = new cljs.core.Symbol(null, "module", "module", -1229817578, null);
cljs.core.cst$kw$info = new cljs.core.Keyword(null, "info", "info", -317069002);
cljs.core.cst$sym$column = new cljs.core.Symbol(null, "column", "column", -576213674, null);
cljs.core.cst$sym$IMultiFn = new cljs.core.Symbol(null, "IMultiFn", "IMultiFn", -1848282794, null);
cljs.core.cst$kw$url = new cljs.core.Keyword(null, "url", "url", 276297046);
cljs.core.cst$sym$$slice = new cljs.core.Symbol(null, ".slice", ".slice", 1874048374, null);
cljs.core.cst$sym$goog_SLASH_define = new cljs.core.Symbol("goog", "define", "goog/define", -352722538, null);
cljs.core.cst$kw$code = new cljs.core.Keyword(null, "code", "code", 1586293142);
cljs.core.cst$kw$ret_DASH_tag = new cljs.core.Keyword(null, "ret-tag", "ret-tag", 1705919990);
cljs.core.cst$sym$sb = new cljs.core.Symbol(null, "sb", "sb", -1249746442, null);
cljs.core.cst$sym$ret__11245__auto__ = new cljs.core.Symbol(null, "ret__11245__auto__", "ret__11245__auto__", 2121885174, null);
cljs.core.cst$sym$opt__10903__auto__ = new cljs.core.Symbol(null, "opt__10903__auto__", "opt__10903__auto__", -221175210, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_error = new cljs.core.Keyword("cljs.analyzer", "error", "cljs.analyzer/error", -65289642);
cljs.core.cst$sym$sb__11271__auto__ = new cljs.core.Symbol(null, "sb__11271__auto__", "sb__11271__auto__", 327911030, null);
cljs.core.cst$sym$IAssociative = new cljs.core.Symbol(null, "IAssociative", "IAssociative", -1306431882, null);
cljs.core.cst$sym$function = new cljs.core.Symbol(null, "function", "function", -486723946, null);
cljs.core.cst$sym$clojure$core_SLASH_unquote = new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null);
cljs.core.cst$sym$cljs$core$IFn$_invoke$arity$variadic = new cljs.core.Symbol(null, "cljs$core$IFn$_invoke$arity$variadic", "cljs$core$IFn$_invoke$arity$variadic", -378825034, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_implements_QMARK_ = new cljs.core.Symbol("cljs.core$macros", "implements?", "cljs.core$macros/implements?", -94762250, null);
cljs.core.cst$kw$then = new cljs.core.Keyword(null, "then", "then", 460598070);
cljs.core.cst$sym$ignore = new cljs.core.Symbol(null, "ignore", "ignore", 8989494, null);
cljs.core.cst$sym$ISeqable = new cljs.core.Symbol(null, "ISeqable", "ISeqable", 1349682102, null);
cljs.core.cst$sym$n__11210__auto__ = new cljs.core.Symbol(null, "n__11210__auto__", "n__11210__auto__", -106270794, null);
cljs.core.cst$sym$ana_SLASH_ast_QMARK_ = new cljs.core.Symbol("ana", "ast?", "ana/ast?", 1470128118, null);
cljs.core.cst$kw$def_DASH_var = new cljs.core.Keyword(null, "def-var", "def-var", -698214377);
cljs.core.cst$kw$source_DASH_map = new cljs.core.Keyword(null, "source-map", "source-map", 1706252311);
cljs.core.cst$sym$integer_QMARK_ = new cljs.core.Symbol(null, "integer?", "integer?", 1303791671, null);
cljs.core.cst$kw$end_DASH_line = new cljs.core.Keyword(null, "end-line", "end-line", 1837326455);
cljs.core.cst$sym$cljs$core$macros_SLASH_alength = new cljs.core.Symbol("cljs.core$macros", "alength", "cljs.core$macros/alength", -683052937, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_no_DASH_resolve = new cljs.core.Keyword("cljs.analyzer", "no-resolve", "cljs.analyzer/no-resolve", -1872351017);
cljs.core.cst$sym$keyval__10938__auto__ = new cljs.core.Symbol(null, "keyval__10938__auto__", "keyval__10938__auto__", 461981911, null);
cljs.core.cst$sym$ISequential = new cljs.core.Symbol(null, "ISequential", "ISequential", -1626174217, null);
cljs.core.cst$kw$js_DASH_op = new cljs.core.Keyword(null, "js-op", "js-op", -1046277897);
cljs.core.cst$sym$buf_DASH_pos = new cljs.core.Symbol(null, "buf-pos", "buf-pos", -807229033, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_if_DASH_not = new cljs.core.Symbol("cljs.core$macros", "if-not", "cljs.core$macros/if-not", -1825285737, null);
cljs.core.cst$sym$exports = new cljs.core.Symbol(null, "exports", "exports", 895523255, null);
cljs.core.cst$kw$var_DASH_ast = new cljs.core.Keyword(null, "var-ast", "var-ast", 1200379319);
cljs.core.cst$kw$context = new cljs.core.Keyword(null, "context", "context", -830191113);
cljs.core.cst$sym$other__10917__auto__ = new cljs.core.Symbol(null, "other__10917__auto__", "other__10917__auto__", -1611601417, null);
cljs.core.cst$kw$invoke = new cljs.core.Keyword(null, "invoke", "invoke", 1145927159);
cljs.core.cst$kw$print_DASH_fn = new cljs.core.Keyword(null, "print-fn", "print-fn", -1720960489);
cljs.core.cst$sym$IChunkedSeq = new cljs.core.Symbol(null, "IChunkedSeq", "IChunkedSeq", -1299765705, null);
cljs.core.cst$kw$throw = new cljs.core.Keyword(null, "throw", "throw", -1044625833);
cljs.core.cst$sym$cljs$core_SLASH_next = new cljs.core.Symbol("cljs.core", "next", "cljs.core/next", -1291438473, null);
cljs.core.cst$sym$cljs$core_SLASH_vec = new cljs.core.Symbol("cljs.core", "vec", "cljs.core/vec", 307622519, null);
cljs.core.cst$kw$post = new cljs.core.Keyword(null, "post", "post", 269697687);
cljs.core.cst$kw$gcol = new cljs.core.Keyword(null, "gcol", "gcol", 309250807);
cljs.core.cst$kw$reload = new cljs.core.Keyword(null, "reload", "reload", 863702807);
cljs.core.cst$kw$_STAR_compiler_STAR_ = new cljs.core.Keyword(null, "*compiler*", "*compiler*", -168190089);
cljs.core.cst$kw$undeclared_DASH_ns_DASH_form = new cljs.core.Keyword(null, "undeclared-ns-form", "undeclared-ns-form", -248024137);
cljs.core.cst$sym$_DASH_dissoc = new cljs.core.Symbol(null, "-dissoc", "-dissoc", 1638079447, null);
cljs.core.cst$kw$_STAR_cljs_DASH_ns_STAR_ = new cljs.core.Keyword(null, "*cljs-ns*", "*cljs-ns*", 565777432);
cljs.core.cst$sym$IAtom = new cljs.core.Symbol(null, "IAtom", "IAtom", -1411134312, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_when_DASH_let = new cljs.core.Symbol("cljs.core$macros", "when-let", "cljs.core$macros/when-let", -2004472648, null);
cljs.core.cst$sym$str_DASH_rep_DASH_fn = new cljs.core.Symbol(null, "str-rep-fn", "str-rep-fn", -1179615016, null);
cljs.core.cst$sym$map_DASH__GT_ = new cljs.core.Symbol(null, "map->", "map->", -999714600, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_mask = new cljs.core.Symbol("cljs.core$macros", "mask", "cljs.core$macros/mask", 1575319768, null);
cljs.core.cst$sym$_hash = new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null);
cljs.core.cst$kw$order = new cljs.core.Keyword(null, "order", "order", -1254677256);
cljs.core.cst$kw$f = new cljs.core.Keyword(null, "f", "f", -1597136552);
cljs.core.cst$sym$IWatchable = new cljs.core.Symbol(null, "IWatchable", "IWatchable", -1929659016, null);
cljs.core.cst$kw$no_DASH_such_DASH_method = new cljs.core.Keyword(null, "no-such-method", "no-such-method", 1087422840);
cljs.core.cst$kw$refer_DASH_clojure = new cljs.core.Keyword(null, "refer-clojure", "refer-clojure", 813784440);
cljs.core.cst$sym$cljs$core$macros_SLASH_coercive_DASH_boolean = new cljs.core.Symbol("cljs.core$macros", "coercive-boolean", "cljs.core$macros/coercive-boolean", -450758280, null);
cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_cons = new cljs.core.Symbol("cljs.core", "chunk-cons", "cljs.core/chunk-cons", -250075688, null);
cljs.core.cst$sym$cljs$core_SLASH__STAR_print_DASH_fn_STAR_ = new cljs.core.Symbol("cljs.core", "*print-fn*", "cljs.core/*print-fn*", 1342365176, null);
cljs.core.cst$sym$cljs$core_SLASH_sequence = new cljs.core.Symbol("cljs.core", "sequence", "cljs.core/sequence", 1908459032, null);
cljs.core.cst$kw$error = new cljs.core.Keyword(null, "error", "error", -978969032);
cljs.core.cst$sym$cljs$core$macros_SLASH_deftype = new cljs.core.Symbol("cljs.core$macros", "deftype", "cljs.core$macros/deftype", 1799045688, null);
cljs.core.cst$sym$this__10941__auto__ = new cljs.core.Symbol(null, "this__10941__auto__", "this__10941__auto__", 1785652920, null);
cljs.core.cst$sym$document = new cljs.core.Symbol(null, "document", "document", 311342840, null);
cljs.core.cst$sym$ITransientSet = new cljs.core.Symbol(null, "ITransientSet", "ITransientSet", -575559912, null);
cljs.core.cst$sym$cljs$core_SLASH_not = new cljs.core.Symbol("cljs.core", "not", "cljs.core/not", 100665144, null);
cljs.core.cst$sym$writer__10942__auto__ = new cljs.core.Symbol(null, "writer__10942__auto__", "writer__10942__auto__", 393727800, null);
cljs.core.cst$kw$def = new cljs.core.Keyword(null, "def", "def", -1043430536);
cljs.core.cst$kw$reload_DASH_all = new cljs.core.Keyword(null, "reload-all", "reload-all", 761570200);
cljs.core.cst$kw$require_DASH_macros = new cljs.core.Keyword(null, "require-macros", "require-macros", 707947416);
cljs.core.cst$sym$valid_DASH_name_QMARK_ = new cljs.core.Symbol(null, "valid-name?", "valid-name?", 1312075736, null);
cljs.core.cst$kw$_STAR_eval_DASH_fn_STAR_ = new cljs.core.Keyword(null, "*eval-fn*", "*eval-fn*", -217221128);
cljs.core.cst$sym$fs__11051__auto__ = new cljs.core.Symbol(null, "fs__11051__auto__", "fs__11051__auto__", 1437446201, null);
cljs.core.cst$sym$keys = new cljs.core.Symbol(null, "keys", "keys", -1586012071, null);
cljs.core.cst$kw$max_DASH_fixed_DASH_arity = new cljs.core.Keyword(null, "max-fixed-arity", "max-fixed-arity", -690205543);
cljs.core.cst$kw$t = new cljs.core.Keyword(null, "t", "t", -1397832519);
cljs.core.cst$kw$case_STAR_ = new cljs.core.Keyword(null, "case*", "case*", 716180697);
cljs.core.cst$kw$options = new cljs.core.Keyword(null, "options", "options", 99638489);
cljs.core.cst$sym$this__11286__auto__ = new cljs.core.Symbol(null, "this__11286__auto__", "this__11286__auto__", -360714919, null);
cljs.core.cst$sym$set_BANG_ = new cljs.core.Symbol(null, "set!", "set!", 250714521, null);
cljs.core.cst$sym$k__10921__auto__ = new cljs.core.Symbol(null, "k__10921__auto__", "k__10921__auto__", -724099687, null);
cljs.core.cst$kw$unsupported_DASH_operation = new cljs.core.Keyword(null, "unsupported-operation", "unsupported-operation", 1890540953);
cljs.core.cst$sym$splicing_QMARK_ = new cljs.core.Symbol(null, "splicing?", "splicing?", 1211935161, null);
cljs.core.cst$kw$form = new cljs.core.Keyword(null, "form", "form", -1624062471);
cljs.core.cst$kw$missing = new cljs.core.Keyword(null, "missing", "missing", 362507769);
cljs.core.cst$sym$cljs$core_SLASH_cons = new cljs.core.Symbol("cljs.core", "cons", "cljs.core/cons", 96507417, null);
cljs.core.cst$sym$_STAR_3 = new cljs.core.Symbol(null, "*3", "*3", 105062009, null);
cljs.core.cst$kw$tag = new cljs.core.Keyword(null, "tag", "tag", -1290361223);
cljs.core.cst$kw$invalid_DASH_arithmetic = new cljs.core.Keyword(null, "invalid-arithmetic", "invalid-arithmetic", 1917075065);
cljs.core.cst$sym$tree_DASH_map = new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null);
cljs.core.cst$sym$cljs$core_SLASH_assoc = new cljs.core.Symbol("cljs.core", "assoc", "cljs.core/assoc", 322326297, null);
cljs.core.cst$kw$cljc = new cljs.core.Keyword(null, "cljc", "cljc", -1728400583);
cljs.core.cst$sym$_DASH_cljs$lang$maxFixedArity = new cljs.core.Symbol(null, "-cljs$lang$maxFixedArity", "-cljs$lang$maxFixedArity", -1481434279, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_if_DASH_some = new cljs.core.Symbol("cljs.core$macros", "if-some", "cljs.core$macros/if-some", 1405341529, null);
cljs.core.cst$kw$dot = new cljs.core.Keyword(null, "dot", "dot", 1442709401);
cljs.core.cst$kw$protocol_DASH_deprecated = new cljs.core.Keyword(null, "protocol-deprecated", "protocol-deprecated", 103233497);
cljs.core.cst$kw$target = new cljs.core.Keyword(null, "target", "target", 253001721);
cljs.core.cst$sym$cljs$core$macros_SLASH__DASH__GT_ = new cljs.core.Symbol("cljs.core$macros", "->", "cljs.core$macros/->", -1519455206, null);
cljs.core.cst$sym$cljs$repl = new cljs.core.Symbol(null, "cljs.repl", "cljs.repl", 1767065658, null);
cljs.core.cst$sym$iterys__11050__auto__ = new cljs.core.Symbol(null, "iterys__11050__auto__", "iterys__11050__auto__", -1473616838, null);
cljs.core.cst$sym$$ = new cljs.core.Symbol(null, ".", ".", 1975675962, null);
cljs.core.cst$sym$IWithMeta = new cljs.core.Symbol(null, "IWithMeta", "IWithMeta", -509493158, null);
cljs.core.cst$sym$var = new cljs.core.Symbol(null, "var", "var", 870848730, null);
cljs.core.cst$kw$mutable = new cljs.core.Keyword(null, "mutable", "mutable", 875778266);
cljs.core.cst$kw$reloads = new cljs.core.Keyword(null, "reloads", "reloads", 610698522);
cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_buffer = new cljs.core.Symbol("cljs.core", "chunk-buffer", "cljs.core/chunk-buffer", 14093626, null);
cljs.core.cst$kw$json = new cljs.core.Keyword(null, "json", "json", 1279968570);
cljs.core.cst$sym$tag_DASH_fn = new cljs.core.Symbol(null, "tag-fn", "tag-fn", 242055482, null);
cljs.core.cst$sym$quote = new cljs.core.Symbol(null, "quote", "quote", 1377916282, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_constants = new cljs.core.Keyword("cljs.analyzer", "constants", "cljs.analyzer/constants", 1697083770);
cljs.core.cst$kw$try = new cljs.core.Keyword(null, "try", "try", 1380742522);
cljs.core.cst$sym$cljs$core_SLASH_Symbol = new cljs.core.Symbol("cljs.core", "Symbol", "cljs.core/Symbol", 292989338, null);
cljs.core.cst$kw$set = new cljs.core.Keyword(null, "set", "set", 304602554);
cljs.core.cst$sym$line_DASH_start_QMARK_ = new cljs.core.Symbol(null, "line-start?", "line-start?", 1357012474, null);
cljs.core.cst$kw$items = new cljs.core.Keyword(null, "items", "items", 1031954938);
cljs.core.cst$sym$root = new cljs.core.Symbol(null, "root", "root", 1191874074, null);
cljs.core.cst$sym$ICollection = new cljs.core.Symbol(null, "ICollection", "ICollection", -686709190, null);
cljs.core.cst$sym$str = new cljs.core.Symbol(null, "str", "str", -1564826950, null);
cljs.core.cst$kw$while = new cljs.core.Keyword(null, "while", "while", 963117786);
cljs.core.cst$sym$ASeq = new cljs.core.Symbol(null, "ASeq", "ASeq", 266390234, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_lazy_DASH_seq = new cljs.core.Symbol("cljs.core$macros", "lazy-seq", "cljs.core$macros/lazy-seq", 806482650, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_js_DASH_delete = new cljs.core.Symbol("cljs.core$macros", "js-delete", "cljs.core$macros/js-delete", 387769082, null);
cljs.core.cst$sym$IFn = new cljs.core.Symbol(null, "IFn", "IFn", -244881638, null);
cljs.core.cst$kw$fn_DASH_var = new cljs.core.Keyword(null, "fn-var", "fn-var", 1086204730);
cljs.core.cst$kw$defrecord_STAR_ = new cljs.core.Keyword(null, "defrecord*", "defrecord*", 718069562);
cljs.core.cst$sym$nodes = new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null);
cljs.core.cst$sym$seen = new cljs.core.Symbol(null, "seen", "seen", 1121531738, null);
cljs.core.cst$sym$hash_DASH_map = new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null);
cljs.core.cst$kw$arglists = new cljs.core.Keyword(null, "arglists", "arglists", 1661989754);
cljs.core.cst$sym$line = new cljs.core.Symbol(null, "line", "line", 1852876762, null);
cljs.core.cst$kw$skip_DASH_protocol_DASH_flag = new cljs.core.Keyword(null, "skip-protocol-flag", "skip-protocol-flag", -1426798630);
cljs.core.cst$kw$_STAR_load_DASH_fn_STAR_ = new cljs.core.Keyword(null, "*load-fn*", "*load-fn*", 2055642106);
cljs.core.cst$sym$cljs$core$macros_SLASH_let = new cljs.core.Symbol("cljs.core$macros", "let", "cljs.core$macros/let", -160286726, null);
cljs.core.cst$kw$volatile_DASH_mutable = new cljs.core.Keyword(null, "volatile-mutable", "volatile-mutable", 1731728411);
cljs.core.cst$kw$import = new cljs.core.Keyword(null, "import", "import", -1399500709);
cljs.core.cst$sym$nil_DASH_iter = new cljs.core.Symbol(null, "nil-iter", "nil-iter", 1101030523, null);
cljs.core.cst$kw$eof = new cljs.core.Keyword(null, "eof", "eof", -489063237);
cljs.core.cst$sym$some_DASH_fn = new cljs.core.Symbol(null, "some-fn", "some-fn", -490044165, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_fn = new cljs.core.Symbol("cljs.core$macros", "fn", "cljs.core$macros/fn", -187522821, null);
cljs.core.cst$kw$impls = new cljs.core.Keyword(null, "impls", "impls", -1314014853);
cljs.core.cst$kw$hierarchy = new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341);
cljs.core.cst$sym$catch = new cljs.core.Symbol(null, "catch", "catch", -1616370245, null);
cljs.core.cst$kw$shadow = new cljs.core.Keyword(null, "shadow", "shadow", 873231803);
cljs.core.cst$sym$resource = new cljs.core.Symbol(null, "resource", "resource", 1892430363, null);
cljs.core.cst$sym$js_SLASH_Object = new cljs.core.Symbol("js", "Object", "js/Object", 61215323, null);
cljs.core.cst$kw$body = new cljs.core.Keyword(null, "body", "body", -2049205669);
cljs.core.cst$sym$this__10927__auto__ = new cljs.core.Symbol(null, "this__10927__auto__", "this__10927__auto__", -2067362085, null);
cljs.core.cst$sym$s_DASH_len = new cljs.core.Symbol(null, "s-len", "s-len", 1869978331, null);
cljs.core.cst$kw$alt_DASH_impl = new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595);
cljs.core.cst$kw$ns_DASH_sym = new cljs.core.Keyword(null, "ns-sym", "ns-sym", -1696101605);
cljs.core.cst$sym$ext_DASH_map_DASH_iter = new cljs.core.Symbol(null, "ext-map-iter", "ext-map-iter", -1215982757, null);
cljs.core.cst$sym$js_SLASH_Array$ = new cljs.core.Symbol("js", "Array.", "js/Array.", 1235645307, null);
cljs.core.cst$sym$tail = new cljs.core.Symbol(null, "tail", "tail", 494507963, null);
cljs.core.cst$sym$IComparable = new cljs.core.Symbol(null, "IComparable", "IComparable", 1834481627, null);
cljs.core.cst$kw$doc = new cljs.core.Keyword(null, "doc", "doc", 1913296891);
cljs.core.cst$sym$file_DASH_name = new cljs.core.Symbol(null, "file-name", "file-name", -13685732, null);
cljs.core.cst$sym$record = new cljs.core.Symbol(null, "record", "record", 861424668, null);
cljs.core.cst$sym$_DASH_cljs$lang$macro = new cljs.core.Symbol(null, "-cljs$lang$macro", "-cljs$lang$macro", 443600924, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_when_DASH_not = new cljs.core.Symbol("cljs.core$macros", "when-not", "cljs.core$macros/when-not", -764302244, null);
cljs.core.cst$sym$temp__10348__auto__ = new cljs.core.Symbol(null, "temp__10348__auto__", "temp__10348__auto__", -1243771748, null);
cljs.core.cst$kw$overload_DASH_arity = new cljs.core.Keyword(null, "overload-arity", "overload-arity", 823206044);
cljs.core.cst$sym$mseq = new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null);
cljs.core.cst$sym$cljs$core_SLASH_PersistentVector$ = new cljs.core.Symbol("cljs.core", "PersistentVector.", "cljs.core/PersistentVector.", -1074647876, null);
cljs.core.cst$sym$count = new cljs.core.Symbol(null, "count", "count", -514511684, null);
cljs.core.cst$kw$local = new cljs.core.Keyword(null, "local", "local", -1497766724);
cljs.core.cst$sym$cljs$core_SLASH_clone = new cljs.core.Symbol("cljs.core", "clone", "cljs.core/clone", 1417120092, null);
cljs.core.cst$sym$or__10461__auto__ = new cljs.core.Symbol(null, "or__10461__auto__", "or__10461__auto__", 1989245372, null);
cljs.core.cst$kw$closure_DASH_lib = new cljs.core.Keyword(null, "closure-lib", "closure-lib", 2105917916);
cljs.core.cst$sym$pr_DASH_pair__10937__auto__ = new cljs.core.Symbol(null, "pr-pair__10937__auto__", "pr-pair__10937__auto__", 1093906940, null);
cljs.core.cst$sym$apply = new cljs.core.Symbol(null, "apply", "apply", -1334050276, null);
cljs.core.cst$sym$this__10925__auto__ = new cljs.core.Symbol(null, "this__10925__auto__", "this__10925__auto__", 1646915132, null);
cljs.core.cst$sym$cljs$core_SLASH_first = new cljs.core.Symbol("cljs.core", "first", "cljs.core/first", -752535972, null);
cljs.core.cst$kw$cljs$analyzer_SLASH_numeric = new cljs.core.Keyword("cljs.analyzer", "numeric", "cljs.analyzer/numeric", 1415704188);
cljs.core.cst$sym$goog$array = new cljs.core.Symbol(null, "goog.array", "goog.array", -671977860, null);
cljs.core.cst$kw$protocol_DASH_multiple_DASH_impls = new cljs.core.Keyword(null, "protocol-multiple-impls", "protocol-multiple-impls", 794179260);
cljs.core.cst$sym$opts = new cljs.core.Symbol(null, "opts", "opts", 1795607228, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_js_DASH_this = new cljs.core.Symbol("cljs.core$macros", "js-this", "cljs.core$macros/js-this", 353597180, null);
cljs.core.cst$kw$keywordize_DASH_keys = new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252);
cljs.core.cst$sym$navigator = new cljs.core.Symbol(null, "navigator", "navigator", -604431588, null);
cljs.core.cst$kw$jsdoc = new cljs.core.Keyword(null, "jsdoc", "jsdoc", 1745183516);
cljs.core.cst$sym$IChunkedNext = new cljs.core.Symbol(null, "IChunkedNext", "IChunkedNext", 1193289532, null);
cljs.core.cst$sym$js_SLASH_Number = new cljs.core.Symbol("js", "Number", "js/Number", -508133572, null);
cljs.core.cst$sym$cljs$core_SLASH_equiv_DASH_map = new cljs.core.Symbol("cljs.core", "equiv-map", "cljs.core/equiv-map", -1185609892, null);
cljs.core.cst$sym$off = new cljs.core.Symbol(null, "off", "off", -2047994980, null);
cljs.core.cst$kw$redef_DASH_in_DASH_file = new cljs.core.Keyword(null, "redef-in-file", "redef-in-file", -476530788);
cljs.core.cst$sym$cljs$core$macros_SLASH_js_DASH_arguments = new cljs.core.Symbol("cljs.core$macros", "js-arguments", "cljs.core$macros/js-arguments", 390128540, null);
cljs.core.cst$kw$clj = new cljs.core.Keyword(null, "clj", "clj", -660495428);
cljs.core.cst$kw$_STAR_cljs_DASH_dep_DASH_set_STAR_ = new cljs.core.Keyword(null, "*cljs-dep-set*", "*cljs-dep-set*", -73964612);
cljs.core.cst$sym$deref = new cljs.core.Symbol(null, "deref", "deref", 1494944732, null);
cljs.core.cst$kw$protocol_DASH_invalid_DASH_method = new cljs.core.Keyword(null, "protocol-invalid-method", "protocol-invalid-method", 522647516);
cljs.core.cst$sym$writer__10935__auto__ = new cljs.core.Symbol(null, "writer__10935__auto__", "writer__10935__auto__", -1868892164, null);
cljs.core.cst$kw$invalid_DASH_arity = new cljs.core.Keyword(null, "invalid-arity", "invalid-arity", 1335461949);
cljs.core.cst$sym$stack = new cljs.core.Symbol(null, "stack", "stack", 847125597, null);
cljs.core.cst$kw$cljs = new cljs.core.Keyword(null, "cljs", "cljs", 1492417629);
cljs.core.cst$kw$extend_DASH_type_DASH_invalid_DASH_method_DASH_shape = new cljs.core.Keyword(null, "extend-type-invalid-method-shape", "extend-type-invalid-method-shape", 1424103549);
cljs.core.cst$sym$$_DASH_EMPTY = new cljs.core.Symbol(null, ".-EMPTY", ".-EMPTY", -471586691, null);
cljs.core.cst$sym$cljs$core_SLASH__GT__EQ_ = new cljs.core.Symbol("cljs.core", ">=", "cljs.core/>=", 350096541, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_keyword_QMARK_ = new cljs.core.Symbol("cljs.core$macros", "keyword?", "cljs.core$macros/keyword?", 1362730141, null);
cljs.core.cst$sym$cljs$core_SLASH_IWithMeta = new cljs.core.Symbol("cljs.core", "IWithMeta", "cljs.core/IWithMeta", -1981666051, null);
cljs.core.cst$sym$quote1 = new cljs.core.Symbol(null, "quote1", "quote1", -2140587747, null);
cljs.core.cst$sym$IWriter = new cljs.core.Symbol(null, "IWriter", "IWriter", -1681087107, null);
cljs.core.cst$kw$suggested_DASH_symbol = new cljs.core.Keyword(null, "suggested-symbol", "suggested-symbol", -1329631875);
cljs.core.cst$sym$cljs$core_SLASH_hash_DASH_set = new cljs.core.Symbol("cljs.core", "hash-set", "cljs.core/hash-set", 1130426749, null);
cljs.core.cst$sym$transient_DASH_map = new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null);
cljs.core.cst$kw$map = new cljs.core.Keyword(null, "map", "map", 1371690461);
cljs.core.cst$sym$cljs$core_SLASH_list = new cljs.core.Symbol("cljs.core", "list", "cljs.core/list", -1331406371, null);
cljs.core.cst$kw$eofthrow = new cljs.core.Keyword(null, "eofthrow", "eofthrow", -334166531);
cljs.core.cst$sym$__extmap = new cljs.core.Symbol(null, "__extmap", "__extmap", -1435580931, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_when = new cljs.core.Symbol("cljs.core$macros", "when", "cljs.core$macros/when", 328457725, null);
cljs.core.cst$sym$core_SLASH_str = new cljs.core.Symbol("core", "str", "core/str", -1563921891, null);
cljs.core.cst$kw$gen_DASH_line = new cljs.core.Keyword(null, "gen-line", "gen-line", 589592125);
cljs.core.cst$kw$cljs$analyzer_SLASH_list = new cljs.core.Keyword("cljs.analyzer", "list", "cljs.analyzer/list", -539585923);
cljs.core.cst$kw$strs = new cljs.core.Keyword(null, "strs", "strs", 1175537277);
cljs.core.cst$sym$prev = new cljs.core.Symbol(null, "prev", "prev", 43462301, null);
cljs.core.cst$sym$js_SLASH__DASH_Infinity = new cljs.core.Symbol("js", "-Infinity", "js/-Infinity", 958706333, null);
cljs.core.cst$sym$len = new cljs.core.Symbol(null, "len", "len", -1230778691, null);
cljs.core.cst$kw$object = new cljs.core.Keyword(null, "object", "object", 1474613949);
cljs.core.cst$sym$elapsed__11250__auto__ = new cljs.core.Symbol(null, "elapsed__11250__auto__", "elapsed__11250__auto__", 699054877, null);
cljs.core.cst$kw$test = new cljs.core.Keyword(null, "test", "test", 577538877);
cljs.core.cst$kw$foreign = new cljs.core.Keyword(null, "foreign", "foreign", 990521149);
cljs.core.cst$kw$multiple_DASH_variadic_DASH_overloads = new cljs.core.Keyword(null, "multiple-variadic-overloads", "multiple-variadic-overloads", 1110059837);
cljs.core.cst$sym$cljs$core$macros_SLASH__GT_ = new cljs.core.Symbol("cljs.core$macros", ">", "cljs.core$macros/>", 1703297853, null);
cljs.core.cst$sym$cljs$core_SLASH__PLUS_ = new cljs.core.Symbol("cljs.core", "+", "cljs.core/+", -342754435, null);
cljs.core.cst$sym$IDeref = new cljs.core.Symbol(null, "IDeref", "IDeref", 1738423197, null);
cljs.core.cst$sym$ISorted = new cljs.core.Symbol(null, "ISorted", "ISorted", -253627362, null);
cljs.core.cst$sym$right = new cljs.core.Symbol(null, "right", "right", 1187949694, null);
cljs.core.cst$sym$buf_DASH_len = new cljs.core.Symbol(null, "buf-len", "buf-len", 404510846, null);
cljs.core.cst$kw$runtime_DASH_exception = new cljs.core.Keyword(null, "runtime-exception", "runtime-exception", -1495664514);
cljs.core.cst$sym$_STAR_unchecked_DASH_if_STAR_ = new cljs.core.Symbol(null, "*unchecked-if*", "*unchecked-if*", 1542408350, null);
cljs.core.cst$sym$throw = new cljs.core.Symbol(null, "throw", "throw", 595905694, null);
cljs.core.cst$sym$cljs$core_SLASH_array = new cljs.core.Symbol("cljs.core", "array", "cljs.core/array", 486685886, null);
cljs.core.cst$kw$none = new cljs.core.Keyword(null, "none", "none", 1333468478);
cljs.core.cst$sym$x__10751__auto__ = new cljs.core.Symbol(null, "x__10751__auto__", "x__10751__auto__", -1362910914, null);
cljs.core.cst$kw$buffer = new cljs.core.Keyword(null, "buffer", "buffer", 617295198);
cljs.core.cst$sym$$_DASH_cljs$lang$ctorPrSeq = new cljs.core.Symbol(null, ".-cljs$lang$ctorPrSeq", ".-cljs$lang$ctorPrSeq", 41132414, null);
cljs.core.cst$kw$forms = new cljs.core.Keyword(null, "forms", "forms", 2045992350);
cljs.core.cst$kw$_STAR_passes_STAR_ = new cljs.core.Keyword(null, "*passes*", "*passes*", 1335562782);
cljs.core.cst$kw$fblock = new cljs.core.Keyword(null, "fblock", "fblock", -1236607426);
cljs.core.cst$kw$emit_DASH_constants = new cljs.core.Keyword(null, "emit-constants", "emit-constants", -476585410);
cljs.core.cst$sym$fseq = new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null);
cljs.core.cst$sym$and = new cljs.core.Symbol(null, "and", "and", 668631710, null);
cljs.core.cst$sym$core_SLASH_symbol_QMARK_ = new cljs.core.Symbol("core", "symbol?", "core/symbol?", 1819594398, null);
cljs.core.cst$sym$cljs$core_SLASH_vector = new cljs.core.Symbol("cljs.core", "vector", "cljs.core/vector", 720641726, null);
cljs.core.cst$sym$this__10920__auto__ = new cljs.core.Symbol(null, "this__10920__auto__", "this__10920__auto__", -1940198722, null);
cljs.core.cst$sym$number_QMARK_ = new cljs.core.Symbol(null, "number?", "number?", -1747282210, null);
cljs.core.cst$sym$cljs$core_SLASH_IMap = new cljs.core.Symbol("cljs.core", "IMap", "cljs.core/IMap", 1407777598, null);
cljs.core.cst$kw$dep_DASH_path = new cljs.core.Keyword(null, "dep-path", "dep-path", 723826558);
cljs.core.cst$sym$a__11209__auto__ = new cljs.core.Symbol(null, "a__11209__auto__", "a__11209__auto__", -1836096642, null);
cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_and = new cljs.core.Symbol("cljs.core", "bit-and", "cljs.core/bit-and", -617818210, null);
cljs.core.cst$sym$cljs$core$macros_SLASH_defn = new cljs.core.Symbol("cljs.core$macros", "defn", "cljs.core$macros/defn", -728332354, null);
cljs.core.cst$sym$clj_DASH_nil = new cljs.core.Symbol(null, "clj-nil", "clj-nil", 1321798654, null);
cljs.core.cst$sym$_DASH_hash = new cljs.core.Symbol(null, "-hash", "-hash", -630070274, null);
cljs.core.cst$sym$cljs$core_SLASH_inc = new cljs.core.Symbol("cljs.core", "inc", "cljs.core/inc", -879172610, null);
cljs.core.cst$sym$cljs$core_SLASH_instance_QMARK_ = new cljs.core.Symbol("cljs.core", "instance?", "cljs.core/instance?", 2044751870, null);
cljs.core.cst$sym$x__11272__auto__ = new cljs.core.Symbol(null, "x__11272__auto__", "x__11272__auto__", -1865318337, null);
cljs.core.cst$kw$sources_DASH_content = new cljs.core.Keyword(null, "sources-content", "sources-content", 1729970239);
cljs.core.cst$kw$deps = new cljs.core.Keyword(null, "deps", "deps", 1883360319);
cljs.core.cst$kw$gen_DASH_col = new cljs.core.Keyword(null, "gen-col", "gen-col", 1901918303);
cljs.core.cst$kw$refer = new cljs.core.Keyword(null, "refer", "refer", -964295553);
cljs.core.cst$kw$statements = new cljs.core.Keyword(null, "statements", "statements", 600349855);
cljs.core.cst$sym$quoted = new cljs.core.Symbol(null, "quoted", "quoted", -537090817, null);
cljs.core.cst$sym$symbol_QMARK_ = new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null);
cljs.core.cst$sym$y__10677__auto__ = new cljs.core.Symbol(null, "y__10677__auto__", "y__10677__auto__", -1448203937, null);
cljs.core.cst$sym$$_DASH_EMPTY_DASH_NODE = new cljs.core.Symbol(null, ".-EMPTY-NODE", ".-EMPTY-NODE", -1333332641, null);
cljs.core.cst$kw$cljs$core_SLASH_not_DASH_found = new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185);
cljs.core.cst$sym$more = new cljs.core.Symbol(null, "more", "more", -418290273, null);
cljs.core.cst$sym$def = new cljs.core.Symbol(null, "def", "def", 597100991, null);
cljs.core.cst$sym$require_DASH_macros = new cljs.core.Symbol(null, "require-macros", "require-macros", -1946488353, null);
cljs.core.cst$sym$core_SLASH_and = new cljs.core.Symbol("core", "and", "core/and", 604631615, null);
cljs.core.cst$kw$refer_DASH_macros = new cljs.core.Keyword(null, "refer-macros", "refer-macros", -1906841953);
cljs.core.cst$sym$cljs$core$macros_SLASH_declare = new cljs.core.Symbol("cljs.core$macros", "declare", "cljs.core$macros/declare", 1172642527, null);
cljs.core.cst$sym$cljs$user = new cljs.core.Symbol(null, "cljs.user", "cljs.user", 877795071, null);
cljs.core.cst$sym$cljs$core_SLASH_chunked_DASH_seq_QMARK_ = new cljs.core.Symbol("cljs.core", "chunked-seq?", "cljs.core/chunked-seq?", -712922369, null);
cljs.core.cst$sym$unescape = new cljs.core.Symbol(null, "unescape", "unescape", -2037730561, null);
cljs.core.cst$sym$IList = new cljs.core.Symbol(null, "IList", "IList", 1682281311, null);
cljs.core.cst$sym$f = new cljs.core.Symbol(null, "f", "f", 43394975, null);
cljs.core.cst$sym$this__10934__auto__ = new cljs.core.Symbol(null, "this__10934__auto__", "this__10934__auto__", 993834911, null);
cljs.core.cst$sym$cljs$core_SLASH_ITER_SYMBOL = new cljs.core.Symbol("cljs.core", "ITER_SYMBOL", "cljs.core/ITER_SYMBOL", -2091399233, null);
cljs.core.cst$sym$next_DASH_iter = new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null);
cljs.core.cst$kw$eval = new cljs.core.Keyword(null, "eval", "eval", -1103567905);
cljs.core.cst$sym$$_DASH_call = new cljs.core.Symbol(null, ".-call", ".-call", 1760541695, null);
cljs.core.cst$sym$_DASH_seq = new cljs.core.Symbol(null, "-seq", "-seq", 1019896831, null);
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw [cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join() {
  var args8718 = [];
  var len__5350__auto___8721 = arguments.length;
  var i__5351__auto___8722 = 0;
  while (true) {
    if (i__5351__auto___8722 < len__5350__auto___8721) {
      args8718.push(arguments[i__5351__auto___8722]);
      var G__8723 = i__5351__auto___8722 + 1;
      i__5351__auto___8722 = G__8723;
      continue;
    } else {
    }
    break;
  }
  var G__8720 = args8718.length;
  switch(G__8720) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8718.length)].join(""));;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__8725 = sb.append([cljs.core.str(cljs.core.first(coll__$1))].join(""));
      var G__8726 = cljs.core.next(coll__$1);
      sb = G__8725;
      coll__$1 = G__8726;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      sb.append([cljs.core.str(cljs.core.first(coll__$1))].join(""));
      var coll__$2 = cljs.core.next(coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__8727 = sb;
      var G__8728 = coll__$2;
      sb = G__8727;
      coll__$1 = G__8728;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  if (cljs.core.count(s) < 2) {
    return clojure.string.upper_case(s);
  } else {
    return [cljs.core.str(clojure.string.upper_case(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s, 0, 1))), cljs.core.str(clojure.string.lower_case(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if ("" === cljs.core.peek(v__$1)) {
      var G__8729 = cljs.core.pop(v__$1);
      v__$1 = G__8729;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (0 === limit) {
    return clojure.string.pop_last_while_empty(v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count(s)) {
    return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.cons("", cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.seq(s)))), "");
  } else {
    var pred__8733 = cljs.core._EQ__EQ_;
    var expr__8734 = limit;
    if (cljs.core.truth_(pred__8733.cljs$core$IFn$_invoke$arity$2 ? pred__8733.cljs$core$IFn$_invoke$arity$2(1, expr__8734) : pred__8733.call(null, 1, expr__8734))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__8733.cljs$core$IFn$_invoke$arity$2 ? pred__8733.cljs$core$IFn$_invoke$arity$2(2, expr__8734) : pred__8733.call(null, 2, expr__8734))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.cons("", cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.seq(s))), 0, c))), cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split() {
  var args8736 = [];
  var len__5350__auto___8739 = arguments.length;
  var i__5351__auto___8740 = 0;
  while (true) {
    if (i__5351__auto___8740 < len__5350__auto___8739) {
      args8736.push(arguments[i__5351__auto___8740]);
      var G__8741 = i__5351__auto___8740 + 1;
      i__5351__auto___8740 = G__8741;
      continue;
    } else {
    }
    break;
  }
  var G__8738 = args8736.length;
  switch(G__8738) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8736.length)].join(""));;
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.cljs$core$IFn$_invoke$arity$3(s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed(limit, "/(?:)/" === [cljs.core.str(re)].join("") ? clojure.string.split_with_empty_regex(s, limit) : limit < 1 ? cljs.core.vec([cljs.core.str(s)].join("").split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (1 === limit__$1) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(parts, s__$1);
      } else {
        var m = cljs.core.re_find(re, s__$1);
        if (!(m == null)) {
          var index = s__$1.indexOf(m);
          var G__8743 = s__$1.substring(index + cljs.core.count(m));
          var G__8744 = limit__$1 - 1;
          var G__8745 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(parts, s__$1.substring(0, index));
          s__$1 = G__8743;
          limit__$1 = G__8744;
          parts = G__8745;
          continue;
        } else {
          return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.cljs$core$IFn$_invoke$arity$2(s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(s, index - 1);
      if ("\n" === ch || "\r" === ch) {
        var G__8746 = index - 1;
        index = G__8746;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (length === index) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var replacement = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cmap, ch);
      if (!(replacement == null)) {
        buffer.append([cljs.core.str(replacement)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__8747 = index + 1;
      index = G__8747;
      continue;
    }
    break;
  }
};
goog.provide("cljs.tools.reader.impl.utils");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("goog.string");
cljs.tools.reader.impl.utils.char$ = function cljs$tools$reader$impl$utils$char(x) {
  if (x == null) {
    return null;
  } else {
    return cljs.core.char$(x);
  }
};
cljs.tools.reader.impl.utils.ex_info_QMARK_ = function cljs$tools$reader$impl$utils$ex_info_QMARK_(ex) {
  return ex instanceof cljs.core.ExceptionInfo;
};
cljs.tools.reader.impl.utils.ReaderConditional = function(splicing_QMARK_, form, __meta, __extmap, __hash) {
  this.splicing_QMARK_ = splicing_QMARK_;
  this.form = form;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4906__auto__, k__4907__auto__) {
  var self__ = this;
  var this__4906__auto____$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this__4906__auto____$1, k__4907__auto__, null);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4908__auto__, k8751, else__4909__auto__) {
  var self__ = this;
  var this__4908__auto____$1 = this;
  var G__8753 = k8751 instanceof cljs.core.Keyword ? k8751.fqn : null;
  switch(G__8753) {
    case "splicing?":
      return self__.splicing_QMARK_;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k8751, else__4909__auto__);
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4920__auto__, writer__4921__auto__, opts__4922__auto__) {
  var self__ = this;
  var this__4920__auto____$1 = this;
  var pr_pair__4923__auto__ = function(this__4920__auto____$1) {
    return function(keyval__4924__auto__) {
      return cljs.core.pr_sequential_writer(writer__4921__auto__, cljs.core.pr_writer, "", " ", "", opts__4922__auto__, keyval__4924__auto__);
    };
  }(this__4920__auto____$1);
  return cljs.core.pr_sequential_writer(writer__4921__auto__, pr_pair__4923__auto__, "#cljs.tools.reader.impl.utils.ReaderConditional{", ", ", "}", opts__4922__auto__, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$splicing_QMARK_, self__.splicing_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [cljs.core.cst$kw$form, self__.form], null)], null), self__.__extmap));
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IIterable$ = true;
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__8750) {
  var self__ = this;
  var G__8750__$1 = this;
  return new cljs.core.RecordIter(0, G__8750__$1, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$splicing_QMARK_, cljs.core.cst$kw$form], null), cljs.core._iterator(self__.__extmap));
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4904__auto__) {
  var self__ = this;
  var this__4904__auto____$1 = this;
  return self__.__meta;
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4900__auto__) {
  var self__ = this;
  var this__4900__auto____$1 = this;
  return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, self__.form, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4910__auto__) {
  var self__ = this;
  var this__4910__auto____$1 = this;
  return 2 + cljs.core.count(self__.__extmap);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4901__auto__) {
  var self__ = this;
  var this__4901__auto____$1 = this;
  var h__4727__auto__ = self__.__hash;
  if (!(h__4727__auto__ == null)) {
    return h__4727__auto__;
  } else {
    var h__4727__auto____$1 = cljs.core.hash_imap(this__4901__auto____$1);
    self__.__hash = h__4727__auto____$1;
    return h__4727__auto____$1;
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4902__auto__, other__4903__auto__) {
  var self__ = this;
  var this__4902__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4299__auto__ = other__4903__auto__;
    if (cljs.core.truth_(and__4299__auto__)) {
      var and__4299__auto____$1 = this__4902__auto____$1.constructor === other__4903__auto__.constructor;
      if (and__4299__auto____$1) {
        return cljs.core.equiv_map(this__4902__auto____$1, other__4903__auto__);
      } else {
        return and__4299__auto____$1;
      }
    } else {
      return and__4299__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4915__auto__, k__4916__auto__) {
  var self__ = this;
  var this__4915__auto____$1 = this;
  if (cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$splicing_QMARK_, null, cljs.core.cst$kw$form, null], null), null), k__4916__auto__)) {
    return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, this__4915__auto____$1), self__.__meta), k__4916__auto__);
  } else {
    return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, self__.form, self__.__meta, cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap, k__4916__auto__)), null);
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4913__auto__, k__4914__auto__, G__8750) {
  var self__ = this;
  var this__4913__auto____$1 = this;
  var pred__8754 = cljs.core.keyword_identical_QMARK_;
  var expr__8755 = k__4914__auto__;
  if (cljs.core.truth_(pred__8754.cljs$core$IFn$_invoke$arity$2 ? pred__8754.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$splicing_QMARK_, expr__8755) : pred__8754.call(null, cljs.core.cst$kw$splicing_QMARK_, expr__8755))) {
    return new cljs.tools.reader.impl.utils.ReaderConditional(G__8750, self__.form, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__8754.cljs$core$IFn$_invoke$arity$2 ? pred__8754.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$form, expr__8755) : pred__8754.call(null, cljs.core.cst$kw$form, expr__8755))) {
      return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, G__8750, self__.__meta, self__.__extmap, null);
    } else {
      return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, self__.form, self__.__meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap, k__4914__auto__, G__8750), null);
    }
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4918__auto__) {
  var self__ = this;
  var this__4918__auto____$1 = this;
  return cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$splicing_QMARK_, self__.splicing_QMARK_], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$form, self__.form], null)], null), self__.__extmap));
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4905__auto__, G__8750) {
  var self__ = this;
  var this__4905__auto____$1 = this;
  return new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_, self__.form, G__8750, self__.__extmap, self__.__hash);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4911__auto__, entry__4912__auto__) {
  var self__ = this;
  var this__4911__auto____$1 = this;
  if (cljs.core.vector_QMARK_(entry__4912__auto__)) {
    return cljs.core._assoc(this__4911__auto____$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4912__auto__, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4912__auto__, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, this__4911__auto____$1, entry__4912__auto__);
  }
};
cljs.tools.reader.impl.utils.ReaderConditional.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$splicing_QMARK_, cljs.core.cst$sym$form], null);
};
cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$type = true;
cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$ctorPrSeq = function(this__4940__auto__) {
  return cljs.core._conj(cljs.core.List.EMPTY, "cljs.tools.reader.impl.utils/ReaderConditional");
};
cljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$ctorPrWriter = function(this__4940__auto__, writer__4941__auto__) {
  return cljs.core._write(writer__4941__auto__, "cljs.tools.reader.impl.utils/ReaderConditional");
};
cljs.tools.reader.impl.utils.__GT_ReaderConditional = function cljs$tools$reader$impl$utils$__GT_ReaderConditional(splicing_QMARK_, form) {
  return new cljs.tools.reader.impl.utils.ReaderConditional(splicing_QMARK_, form, null, null, null);
};
cljs.tools.reader.impl.utils.map__GT_ReaderConditional = function cljs$tools$reader$impl$utils$map__GT_ReaderConditional(G__8752) {
  return new cljs.tools.reader.impl.utils.ReaderConditional(cljs.core.cst$kw$splicing_QMARK_.cljs$core$IFn$_invoke$arity$1(G__8752), cljs.core.cst$kw$form.cljs$core$IFn$_invoke$arity$1(G__8752), null, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__8752, cljs.core.cst$kw$splicing_QMARK_, cljs.core.array_seq([cljs.core.cst$kw$form], 0)), null);
};
cljs.tools.reader.impl.utils.reader_conditional_QMARK_ = function cljs$tools$reader$impl$utils$reader_conditional_QMARK_(value) {
  return value instanceof cljs.tools.reader.impl.utils.ReaderConditional;
};
cljs.tools.reader.impl.utils.reader_conditional = function cljs$tools$reader$impl$utils$reader_conditional(form, splicing_QMARK_) {
  return new cljs.tools.reader.impl.utils.ReaderConditional(splicing_QMARK_, form, null, null, null);
};
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  cljs.core._write(writer, [cljs.core.str("#?"), cljs.core.str(cljs.core.truth_(cljs.core.cst$kw$splicing_QMARK_.cljs$core$IFn$_invoke$arity$1(coll__$1)) ? "@" : null)].join(""));
  return cljs.core.pr_writer(cljs.core.cst$kw$form.cljs$core$IFn$_invoke$arity$1(coll__$1), writer, opts);
};
cljs.tools.reader.impl.utils.ws_rx = /[\s]/;
cljs.tools.reader.impl.utils.whitespace_QMARK_ = function cljs$tools$reader$impl$utils$whitespace_QMARK_(ch) {
  if (ch == null) {
    return null;
  } else {
    if (ch === ",") {
      return true;
    } else {
      return cljs.tools.reader.impl.utils.ws_rx.test(ch);
    }
  }
};
cljs.tools.reader.impl.utils.numeric_QMARK_ = function cljs$tools$reader$impl$utils$numeric_QMARK_(ch) {
  if (ch == null) {
    return null;
  } else {
    return goog.string.isNumeric(ch);
  }
};
cljs.tools.reader.impl.utils.newline_QMARK_ = function cljs$tools$reader$impl$utils$newline_QMARK_(c) {
  return "\n" === c || "\n" === c || c == null;
};
cljs.tools.reader.impl.utils.desugar_meta = function cljs$tools$reader$impl$utils$desugar_meta(f) {
  if (f instanceof cljs.core.Keyword) {
    return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
  } else {
    if (f instanceof cljs.core.Symbol) {
      return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$tag, f], null);
    } else {
      if (typeof f === "string") {
        return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$tag, f], null);
      } else {
        return f;
      }
    }
  }
};
cljs.tools.reader.impl.utils.last_id = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0) : cljs.core.atom.call(null, 0);
cljs.tools.reader.impl.utils.next_id = function cljs$tools$reader$impl$utils$next_id() {
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.tools.reader.impl.utils.last_id, cljs.core.inc);
};
var patterns_8766 = cljs.core.PersistentHashMap.fromArrays(["]", "'", "=", '"', "!", "*", "%", "|", "~", "/", "-", "?", "&", ":", "<", "{", "}", "[", "#", "^", "\\", "+", "@", ">"], ["_RBRACK_", "_SINGLEQUOTE_", "_EQ_", "_DOUBLEQUOTE_", "_BANG_", "_STAR_", "_PERCENT_", "_BAR_", "_TILDE_", "_SLASH_", "_", "_QMARK_", "_AMPERSAND_", "_COLON_", "_LT_", "_LBRACE_", "_RBRACE_", "_LBRACK_", "_SHARP_", "_CARET_", "_BSLASH_", "_PLUS_", "_CIRCA_", "_GT_"]);
cljs.tools.reader.impl.utils.munge = function(patterns_8766) {
  return function cljs$tools$reader$impl$utils$munge(s) {
    return (s instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str).call(null, function() {
      var G__8763 = [cljs.core.str(s)].join("");
      var vec__8764 = G__8763;
      var c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8764, 0, null);
      var s__$1 = cljs.core.nthnext(vec__8764, 1);
      var ret = "";
      var G__8763__$1 = G__8763;
      var ret__$1 = ret;
      while (true) {
        var vec__8765 = G__8763__$1;
        var c__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8765, 0, null);
        var s__$2 = cljs.core.nthnext(vec__8765, 1);
        var ret__$2 = ret__$1;
        if (cljs.core.truth_(c__$1)) {
          var G__8767 = s__$2;
          var G__8768 = [cljs.core.str(ret__$2), cljs.core.str(patterns_8766.cljs$core$IFn$_invoke$arity$2 ? patterns_8766.cljs$core$IFn$_invoke$arity$2(c__$1, c__$1) : patterns_8766.call(null, c__$1, c__$1))].join("");
          G__8763__$1 = G__8767;
          ret__$1 = G__8768;
          continue;
        } else {
          return ret__$2;
        }
        break;
      }
    }());
  };
}(patterns_8766);
goog.provide("cljs.tools.reader.reader_types");
goog.require("cljs.core");
goog.require("cljs.tools.reader.impl.utils");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.tools.reader.reader_types.Reader = {};
cljs.tools.reader.reader_types.read_char = function cljs$tools$reader$reader_types$read_char(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(reader);
  } else {
    var x__4947__auto__ = reader == null ? null : reader;
    var m__4948__auto__ = cljs.tools.reader.reader_types.read_char[goog.typeOf(x__4947__auto__)];
    if (!(m__4948__auto__ == null)) {
      return m__4948__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4948__auto__.cljs$core$IFn$_invoke$arity$1(reader) : m__4948__auto__.call(null, reader);
    } else {
      var m__4948__auto____$1 = cljs.tools.reader.reader_types.read_char["_"];
      if (!(m__4948__auto____$1 == null)) {
        return m__4948__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4948__auto____$1.cljs$core$IFn$_invoke$arity$1(reader) : m__4948__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol("Reader.read-char", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.peek_char = function cljs$tools$reader$reader_types$peek_char(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(reader);
  } else {
    var x__4947__auto__ = reader == null ? null : reader;
    var m__4948__auto__ = cljs.tools.reader.reader_types.peek_char[goog.typeOf(x__4947__auto__)];
    if (!(m__4948__auto__ == null)) {
      return m__4948__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4948__auto__.cljs$core$IFn$_invoke$arity$1(reader) : m__4948__auto__.call(null, reader);
    } else {
      var m__4948__auto____$1 = cljs.tools.reader.reader_types.peek_char["_"];
      if (!(m__4948__auto____$1 == null)) {
        return m__4948__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4948__auto____$1.cljs$core$IFn$_invoke$arity$1(reader) : m__4948__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol("Reader.peek-char", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.IPushbackReader = {};
cljs.tools.reader.reader_types.unread = function cljs$tools$reader$reader_types$unread(reader, ch) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 == null)) {
    return reader.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4947__auto__ = reader == null ? null : reader;
    var m__4948__auto__ = cljs.tools.reader.reader_types.unread[goog.typeOf(x__4947__auto__)];
    if (!(m__4948__auto__ == null)) {
      return m__4948__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4948__auto__.cljs$core$IFn$_invoke$arity$2(reader, ch) : m__4948__auto__.call(null, reader, ch);
    } else {
      var m__4948__auto____$1 = cljs.tools.reader.reader_types.unread["_"];
      if (!(m__4948__auto____$1 == null)) {
        return m__4948__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4948__auto____$1.cljs$core$IFn$_invoke$arity$2(reader, ch) : m__4948__auto____$1.call(null, reader, ch);
      } else {
        throw cljs.core.missing_protocol("IPushbackReader.unread", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.IndexingReader = {};
cljs.tools.reader.reader_types.get_line_number = function cljs$tools$reader$reader_types$get_line_number(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1(reader);
  } else {
    var x__4947__auto__ = reader == null ? null : reader;
    var m__4948__auto__ = cljs.tools.reader.reader_types.get_line_number[goog.typeOf(x__4947__auto__)];
    if (!(m__4948__auto__ == null)) {
      return m__4948__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4948__auto__.cljs$core$IFn$_invoke$arity$1(reader) : m__4948__auto__.call(null, reader);
    } else {
      var m__4948__auto____$1 = cljs.tools.reader.reader_types.get_line_number["_"];
      if (!(m__4948__auto____$1 == null)) {
        return m__4948__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4948__auto____$1.cljs$core$IFn$_invoke$arity$1(reader) : m__4948__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol("IndexingReader.get-line-number", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.get_column_number = function cljs$tools$reader$reader_types$get_column_number(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1(reader);
  } else {
    var x__4947__auto__ = reader == null ? null : reader;
    var m__4948__auto__ = cljs.tools.reader.reader_types.get_column_number[goog.typeOf(x__4947__auto__)];
    if (!(m__4948__auto__ == null)) {
      return m__4948__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4948__auto__.cljs$core$IFn$_invoke$arity$1(reader) : m__4948__auto__.call(null, reader);
    } else {
      var m__4948__auto____$1 = cljs.tools.reader.reader_types.get_column_number["_"];
      if (!(m__4948__auto____$1 == null)) {
        return m__4948__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4948__auto____$1.cljs$core$IFn$_invoke$arity$1(reader) : m__4948__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol("IndexingReader.get-column-number", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.get_file_name = function cljs$tools$reader$reader_types$get_file_name(reader) {
  if (!(reader == null) && !(reader.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1 == null)) {
    return reader.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1(reader);
  } else {
    var x__4947__auto__ = reader == null ? null : reader;
    var m__4948__auto__ = cljs.tools.reader.reader_types.get_file_name[goog.typeOf(x__4947__auto__)];
    if (!(m__4948__auto__ == null)) {
      return m__4948__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4948__auto__.cljs$core$IFn$_invoke$arity$1(reader) : m__4948__auto__.call(null, reader);
    } else {
      var m__4948__auto____$1 = cljs.tools.reader.reader_types.get_file_name["_"];
      if (!(m__4948__auto____$1 == null)) {
        return m__4948__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4948__auto____$1.cljs$core$IFn$_invoke$arity$1(reader) : m__4948__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol("IndexingReader.get-file-name", reader);
      }
    }
  }
};
cljs.tools.reader.reader_types.StringReader = function(s, s_len, s_pos) {
  this.s = s;
  this.s_len = s_len;
  this.s_pos = s_pos;
};
cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$ = true;
cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.s_len > self__.s_pos) {
    var r = self__.s.charAt(self__.s_pos);
    self__.s_pos = self__.s_pos + 1;
    return r;
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.StringReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.s_len > self__.s_pos) {
    return self__.s.charAt(self__.s_pos);
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.StringReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s, cljs.core.cst$sym$s_DASH_len, cljs.core.with_meta(cljs.core.cst$sym$s_DASH_pos, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null))], null);
};
cljs.tools.reader.reader_types.StringReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.StringReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/StringReader";
cljs.tools.reader.reader_types.StringReader.cljs$lang$ctorPrWriter = function(this__4890__auto__, writer__4891__auto__, opt__4892__auto__) {
  return cljs.core._write(writer__4891__auto__, "cljs.tools.reader.reader-types/StringReader");
};
cljs.tools.reader.reader_types.__GT_StringReader = function cljs$tools$reader$reader_types$__GT_StringReader(s, s_len, s_pos) {
  return new cljs.tools.reader.reader_types.StringReader(s, s_len, s_pos);
};
cljs.tools.reader.reader_types.NodeReadableReader = function(readable, buf) {
  this.readable = readable;
  this.buf = buf;
};
cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$ = true;
cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(self__.buf)) {
    var c = self__.buf[0];
    self__.buf = null;
    return cljs.tools.reader.impl.utils.char$(c);
  } else {
    var c = [cljs.core.str(self__.readable.read(1))].join("");
    if (cljs.core.truth_(c)) {
      return cljs.tools.reader.impl.utils.char$(c);
    } else {
      return null;
    }
  }
};
cljs.tools.reader.reader_types.NodeReadableReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(self__.buf)) {
  } else {
    self__.buf = [cljs.core.str(self__.readable.read(1))].join("");
  }
  if (cljs.core.truth_(self__.buf)) {
    return cljs.tools.reader.impl.utils.char$(self__.buf[0]);
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.NodeReadableReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$readable, cljs.core.with_meta(cljs.core.cst$sym$buf, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null))], null);
};
cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/NodeReadableReader";
cljs.tools.reader.reader_types.NodeReadableReader.cljs$lang$ctorPrWriter = function(this__4890__auto__, writer__4891__auto__, opt__4892__auto__) {
  return cljs.core._write(writer__4891__auto__, "cljs.tools.reader.reader-types/NodeReadableReader");
};
cljs.tools.reader.reader_types.__GT_NodeReadableReader = function cljs$tools$reader$reader_types$__GT_NodeReadableReader(readable, buf) {
  return new cljs.tools.reader.reader_types.NodeReadableReader(readable, buf);
};
cljs.tools.reader.reader_types.PushbackReader = function(rdr, buf, buf_len, buf_pos) {
  this.rdr = rdr;
  this.buf = buf;
  this.buf_len = buf_len;
  this.buf_pos = buf_pos;
};
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$ = true;
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  var c = self__.buf_pos < self__.buf_len ? self__.buf[self__.buf_pos] : self__.rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
  if (self__.buf_pos < self__.buf_len) {
    self__.buf_pos = self__.buf_pos + 1;
  } else {
  }
  return cljs.tools.reader.impl.utils.char$(c);
};
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  var c = self__.buf_pos < self__.buf_len ? self__.buf[self__.buf_pos] : self__.rdr.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(null);
  return cljs.tools.reader.impl.utils.char$(c);
};
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$ = true;
cljs.tools.reader.reader_types.PushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(ch)) {
    if (self__.buf_pos === 0) {
      throw new Error("Pushback buffer is full");
    } else {
    }
    self__.buf_pos = self__.buf_pos - 1;
    return self__.buf[self__.buf_pos] = ch;
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.PushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs.core.cst$sym$rdr, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$tag, cljs.core.cst$sym$not_DASH_native], null)), cljs.core.cst$sym$buf, cljs.core.cst$sym$buf_DASH_len, cljs.core.with_meta(cljs.core.cst$sym$buf_DASH_pos, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null))], null);
};
cljs.tools.reader.reader_types.PushbackReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.PushbackReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/PushbackReader";
cljs.tools.reader.reader_types.PushbackReader.cljs$lang$ctorPrWriter = function(this__4890__auto__, writer__4891__auto__, opt__4892__auto__) {
  return cljs.core._write(writer__4891__auto__, "cljs.tools.reader.reader-types/PushbackReader");
};
cljs.tools.reader.reader_types.__GT_PushbackReader = function cljs$tools$reader$reader_types$__GT_PushbackReader(rdr, buf, buf_len, buf_pos) {
  return new cljs.tools.reader.reader_types.PushbackReader(rdr, buf, buf_len, buf_pos);
};
cljs.tools.reader.reader_types.normalize_newline = function cljs$tools$reader$reader_types$normalize_newline(rdr, ch) {
  if ("\r" === ch) {
    var c = rdr.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(null);
    if ("\f" === c || "\n" === c) {
      rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
    } else {
    }
    return "\n";
  } else {
    return ch;
  }
};
cljs.tools.reader.reader_types.IndexingPushbackReader = function(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name) {
  this.rdr = rdr;
  this.line = line;
  this.column = column;
  this.line_start_QMARK_ = line_start_QMARK_;
  this.prev = prev;
  this.prev_column = prev_column;
  this.file_name = file_name;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$ = true;
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  var temp__4425__auto__ = self__.rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var ch = temp__4425__auto__;
    var ch__$1 = cljs.tools.reader.reader_types.normalize_newline(self__.rdr, ch);
    self__.prev = self__.line_start_QMARK_;
    self__.line_start_QMARK_ = cljs.tools.reader.impl.utils.newline_QMARK_(ch__$1);
    if (cljs.core.truth_(self__.line_start_QMARK_)) {
      self__.prev_column = self__.column;
      self__.column = 0;
      self__.line = self__.line + 1;
    } else {
    }
    self__.column = self__.column + 1;
    return ch__$1;
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.rdr.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(null);
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$ = true;
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(self__.line_start_QMARK_)) {
    self__.line = self__.line - 1;
    self__.column = self__.prev_column;
  } else {
    self__.column = self__.column - 1;
  }
  self__.line_start_QMARK_ = self__.prev;
  return self__.rdr.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2(null, ch);
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$ = true;
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.line | 0;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.column | 0;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.file_name;
};
cljs.tools.reader.reader_types.IndexingPushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs.core.cst$sym$rdr, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$tag, cljs.core.cst$sym$not_DASH_native], null)), cljs.core.with_meta(cljs.core.cst$sym$line, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null)), cljs.core.with_meta(cljs.core.cst$sym$column, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null)), 
  cljs.core.with_meta(cljs.core.cst$sym$line_DASH_start_QMARK_, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null)), cljs.core.with_meta(cljs.core.cst$sym$prev, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null)), cljs.core.with_meta(cljs.core.cst$sym$prev_DASH_column, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null)), cljs.core.cst$sym$file_DASH_name], null);
};
cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/IndexingPushbackReader";
cljs.tools.reader.reader_types.IndexingPushbackReader.cljs$lang$ctorPrWriter = function(this__4890__auto__, writer__4891__auto__, opt__4892__auto__) {
  return cljs.core._write(writer__4891__auto__, "cljs.tools.reader.reader-types/IndexingPushbackReader");
};
cljs.tools.reader.reader_types.__GT_IndexingPushbackReader = function cljs$tools$reader$reader_types$__GT_IndexingPushbackReader(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name) {
  return new cljs.tools.reader.reader_types.IndexingPushbackReader(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name);
};
cljs.tools.reader.reader_types.merge_meta = function cljs$tools$reader$reader_types$merge_meta(obj, m) {
  var orig_meta = cljs.core.meta(obj);
  return cljs.core.with_meta(obj, cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([m, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(orig_meta, cljs.core.cst$kw$source)], 0)));
};
cljs.tools.reader.reader_types.peek_source_log = function cljs$tools$reader$reader_types$peek_source_log(frames) {
  return cljs.core.subs.cljs$core$IFn$_invoke$arity$2([cljs.core.str(cljs.core.cst$kw$buffer.cljs$core$IFn$_invoke$arity$1(frames))].join(""), cljs.core.first(cljs.core.cst$kw$offset.cljs$core$IFn$_invoke$arity$1(frames)));
};
cljs.tools.reader.reader_types.log_source_char = function cljs$tools$reader$reader_types$log_source_char(frames, char$) {
  var temp__4425__auto__ = cljs.core.cst$kw$buffer.cljs$core$IFn$_invoke$arity$1(frames);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var buffer = temp__4425__auto__;
    return buffer.append(char$);
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.drop_last_logged_char = function cljs$tools$reader$reader_types$drop_last_logged_char(frames) {
  var temp__4425__auto__ = cljs.core.cst$kw$buffer.cljs$core$IFn$_invoke$arity$1(frames);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var buffer = temp__4425__auto__;
    return buffer.set(cljs.core.subs.cljs$core$IFn$_invoke$arity$3([cljs.core.str(buffer)].join(""), 0, buffer.getLength() - 1));
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader = function(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name, frames) {
  this.rdr = rdr;
  this.line = line;
  this.column = column;
  this.line_start_QMARK_ = line_start_QMARK_;
  this.prev = prev;
  this.prev_column = prev_column;
  this.file_name = file_name;
  this.frames = frames;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$ = true;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  var temp__4425__auto__ = self__.rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var ch = temp__4425__auto__;
    var ch__$1 = cljs.tools.reader.reader_types.normalize_newline(self__.rdr, ch);
    self__.prev = self__.line_start_QMARK_;
    self__.line_start_QMARK_ = cljs.tools.reader.impl.utils.newline_QMARK_(ch__$1);
    if (cljs.core.truth_(self__.line_start_QMARK_)) {
      self__.prev_column = self__.column;
      self__.column = 0;
      self__.line = self__.line + 1;
    } else {
    }
    self__.column = self__.column + 1;
    cljs.tools.reader.reader_types.log_source_char(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.frames) : cljs.core.deref.call(null, self__.frames), ch__$1);
    return ch__$1;
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$Reader$peek_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.rdr.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(null);
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$ = true;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  if (cljs.core.truth_(self__.line_start_QMARK_)) {
    self__.line = self__.line - 1;
    self__.column = self__.prev_column;
  } else {
    self__.column = self__.column - 1;
  }
  self__.line_start_QMARK_ = self__.prev;
  if (cljs.core.truth_(ch)) {
    cljs.tools.reader.reader_types.drop_last_logged_char(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.frames) : cljs.core.deref.call(null, self__.frames));
  } else {
  }
  return self__.rdr.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2(null, ch);
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$ = true;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.line | 0;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.column | 0;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.prototype.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  return self__.file_name;
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs.core.cst$sym$rdr, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$tag, cljs.core.cst$sym$not_DASH_native], null)), cljs.core.with_meta(cljs.core.cst$sym$line, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null)), cljs.core.with_meta(cljs.core.cst$sym$column, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null)), 
  cljs.core.with_meta(cljs.core.cst$sym$line_DASH_start_QMARK_, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null)), cljs.core.with_meta(cljs.core.cst$sym$prev, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null)), cljs.core.with_meta(cljs.core.cst$sym$prev_DASH_column, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null)), cljs.core.cst$sym$file_DASH_name, cljs.core.cst$sym$frames], null);
};
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$type = true;
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$ctorStr = "cljs.tools.reader.reader-types/SourceLoggingPushbackReader";
cljs.tools.reader.reader_types.SourceLoggingPushbackReader.cljs$lang$ctorPrWriter = function(this__4890__auto__, writer__4891__auto__, opt__4892__auto__) {
  return cljs.core._write(writer__4891__auto__, "cljs.tools.reader.reader-types/SourceLoggingPushbackReader");
};
cljs.tools.reader.reader_types.__GT_SourceLoggingPushbackReader = function cljs$tools$reader$reader_types$__GT_SourceLoggingPushbackReader(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name, frames) {
  return new cljs.tools.reader.reader_types.SourceLoggingPushbackReader(rdr, line, column, line_start_QMARK_, prev, prev_column, file_name, frames);
};
cljs.tools.reader.reader_types.indexing_reader_QMARK_ = function cljs$tools$reader$reader_types$indexing_reader_QMARK_(rdr) {
  if (!(rdr == null)) {
    if (false || rdr.cljs$tools$reader$reader_types$IndexingReader$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.tools.reader.reader_types.string_reader = function cljs$tools$reader$reader_types$string_reader(s) {
  return new cljs.tools.reader.reader_types.StringReader(s, cljs.core.count(s), 0);
};
cljs.tools.reader.reader_types.string_push_back_reader = function cljs$tools$reader$reader_types$string_push_back_reader() {
  var args8779 = [];
  var len__5350__auto___8782 = arguments.length;
  var i__5351__auto___8783 = 0;
  while (true) {
    if (i__5351__auto___8783 < len__5350__auto___8782) {
      args8779.push(arguments[i__5351__auto___8783]);
      var G__8784 = i__5351__auto___8783 + 1;
      i__5351__auto___8783 = G__8784;
      continue;
    } else {
    }
    break;
  }
  var G__8781 = args8779.length;
  switch(G__8781) {
    case 1:
      return cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8779.length)].join(""));;
  }
};
cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2(s, 1);
};
cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2 = function(s, buf_len) {
  return new cljs.tools.reader.reader_types.PushbackReader(cljs.tools.reader.reader_types.string_reader(s), cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(buf_len), buf_len, buf_len);
};
cljs.tools.reader.reader_types.string_push_back_reader.cljs$lang$maxFixedArity = 2;
cljs.tools.reader.reader_types.node_readable_push_back_reader = function cljs$tools$reader$reader_types$node_readable_push_back_reader(readable) {
  return new cljs.tools.reader.reader_types.PushbackReader(new cljs.tools.reader.reader_types.NodeReadableReader(readable, null), cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(1), 1, 1);
};
cljs.tools.reader.reader_types.indexing_push_back_reader = function cljs$tools$reader$reader_types$indexing_push_back_reader() {
  var args8786 = [];
  var len__5350__auto___8789 = arguments.length;
  var i__5351__auto___8790 = 0;
  while (true) {
    if (i__5351__auto___8790 < len__5350__auto___8789) {
      args8786.push(arguments[i__5351__auto___8790]);
      var G__8791 = i__5351__auto___8790 + 1;
      i__5351__auto___8790 = G__8791;
      continue;
    } else {
    }
    break;
  }
  var G__8788 = args8786.length;
  switch(G__8788) {
    case 1:
      return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8786.length)].join(""));;
  }
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1 = function(s_or_rdr) {
  return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$2(s_or_rdr, 1);
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$2 = function(s_or_rdr, buf_len) {
  return cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3(s_or_rdr, buf_len, null);
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3 = function(s_or_rdr, buf_len, file_name) {
  return new cljs.tools.reader.reader_types.IndexingPushbackReader(typeof s_or_rdr === "string" ? cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2(s_or_rdr, buf_len) : s_or_rdr, 1, 1, true, null, 0, file_name);
};
cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$lang$maxFixedArity = 3;
cljs.tools.reader.reader_types.source_logging_push_back_reader = function cljs$tools$reader$reader_types$source_logging_push_back_reader() {
  var args8793 = [];
  var len__5350__auto___8797 = arguments.length;
  var i__5351__auto___8798 = 0;
  while (true) {
    if (i__5351__auto___8798 < len__5350__auto___8797) {
      args8793.push(arguments[i__5351__auto___8798]);
      var G__8799 = i__5351__auto___8798 + 1;
      i__5351__auto___8798 = G__8799;
      continue;
    } else {
    }
    break;
  }
  var G__8795 = args8793.length;
  switch(G__8795) {
    case 1:
      return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8793.length)].join(""));;
  }
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$1 = function(s_or_rdr) {
  return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$2(s_or_rdr, 1);
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$2 = function(s_or_rdr, buf_len) {
  return cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$3(s_or_rdr, buf_len, null);
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$3 = function(s_or_rdr, buf_len, file_name) {
  return new cljs.tools.reader.reader_types.SourceLoggingPushbackReader(typeof s_or_rdr === "string" ? cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$2(s_or_rdr, buf_len) : s_or_rdr, 1, 1, true, null, 0, file_name, function() {
    var G__8796 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$buffer, new goog.string.StringBuffer, cljs.core.cst$kw$offset, cljs.core.list(0)], null);
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__8796) : cljs.core.atom.call(null, G__8796);
  }());
};
cljs.tools.reader.reader_types.source_logging_push_back_reader.cljs$lang$maxFixedArity = 3;
cljs.tools.reader.reader_types.read_line = function cljs$tools$reader$reader_types$read_line(rdr) {
  var c = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
  var s = new goog.string.StringBuffer;
  while (true) {
    if (cljs.tools.reader.impl.utils.newline_QMARK_(c)) {
      return [cljs.core.str(s)].join("");
    } else {
      var G__8801 = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
      var G__8802 = s.append(c);
      c = G__8801;
      s = G__8802;
      continue;
    }
    break;
  }
};
cljs.tools.reader.reader_types.reader_error = function cljs$tools$reader$reader_types$reader_error() {
  var args__5357__auto__ = [];
  var len__5350__auto___8805 = arguments.length;
  var i__5351__auto___8806 = 0;
  while (true) {
    if (i__5351__auto___8806 < len__5350__auto___8805) {
      args__5357__auto__.push(arguments[i__5351__auto___8806]);
      var G__8807 = i__5351__auto___8806 + 1;
      i__5351__auto___8806 = G__8807;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 1 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(1), 0) : null;
  return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5358__auto__);
};
cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic = function(rdr, msg) {
  throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, msg), cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$reader_DASH_exception], null), cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_(rdr)) ? cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 
  2, [cljs.core.cst$kw$line, cljs.tools.reader.reader_types.get_line_number(rdr), cljs.core.cst$kw$column, cljs.tools.reader.reader_types.get_column_number(rdr)], null), function() {
    var temp__4425__auto__ = cljs.tools.reader.reader_types.get_file_name(rdr);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var file_name = temp__4425__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$file, file_name], null);
    } else {
      return null;
    }
  }()], 0)) : null], 0)));
};
cljs.tools.reader.reader_types.reader_error.cljs$lang$maxFixedArity = 1;
cljs.tools.reader.reader_types.reader_error.cljs$lang$applyTo = function(seq8803) {
  var G__8804 = cljs.core.first(seq8803);
  var seq8803__$1 = cljs.core.next(seq8803);
  return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(G__8804, seq8803__$1);
};
cljs.tools.reader.reader_types.source_logging_reader_QMARK_ = function cljs$tools$reader$reader_types$source_logging_reader_QMARK_(rdr) {
  return rdr instanceof cljs.tools.reader.reader_types.SourceLoggingPushbackReader;
};
cljs.tools.reader.reader_types.line_start_QMARK_ = function cljs$tools$reader$reader_types$line_start_QMARK_(rdr) {
  if (cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_(rdr))) {
    return 1 === rdr.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1(null);
  } else {
    return null;
  }
};
cljs.tools.reader.reader_types.log_source_STAR_ = function cljs$tools$reader$reader_types$log_source_STAR_(reader, f) {
  var buffer = cljs.core.cst$kw$buffer.cljs$core$IFn$_invoke$arity$1(function() {
    var G__8811 = reader.frames;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8811) : cljs.core.deref.call(null, G__8811);
  }());
  try {
    cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(reader.frames, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$offset], null), cljs.core.conj, cljs.core.array_seq([buffer.getLength()], 0));
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (!(ret == null) ? ret.cljs$lang$protocol_mask$partition0$ & 131072 || ret.cljs$core$IMeta$ ? true : false : false) {
      return cljs.tools.reader.reader_types.merge_meta(ret, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$source, cljs.tools.reader.reader_types.peek_source_log(function() {
        var G__8813 = reader.frames;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__8813) : cljs.core.deref.call(null, G__8813);
      }())], null));
    } else {
      return ret;
    }
  } finally {
    cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reader.frames, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$offset], null), cljs.core.rest);
  }
};
goog.provide("cljs.tools.reader.impl.commons");
goog.require("cljs.core");
goog.require("cljs.tools.reader.reader_types");
goog.require("cljs.tools.reader.impl.utils");
cljs.tools.reader.impl.commons.number_literal_QMARK_ = function cljs$tools$reader$impl$commons$number_literal_QMARK_(reader, initch) {
  return cljs.tools.reader.impl.utils.numeric_QMARK_(initch) || ("+" === initch || "-" === initch) && cljs.tools.reader.impl.utils.numeric_QMARK_(reader.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(null));
};
cljs.tools.reader.impl.commons.read_past = function cljs$tools$reader$impl$commons$read_past(pred, rdr) {
  var ch = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
  while (true) {
    if (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(ch) : pred.call(null, ch)) {
      var G__8816 = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
      ch = G__8816;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.tools.reader.impl.commons.skip_line = function cljs$tools$reader$impl$commons$skip_line(reader) {
  while (true) {
    if (cljs.tools.reader.impl.utils.newline_QMARK_(reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null))) {
    } else {
      continue;
    }
    break;
  }
  return reader;
};
cljs.tools.reader.impl.commons.int_pattern = /^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|(0[0-9]+))(N)?$/;
cljs.tools.reader.impl.commons.ratio_pattern = /([-+]?[0-9]+)\/([0-9]+)/;
cljs.tools.reader.impl.commons.float_pattern = /([-+]?[0-9]+(\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?/;
cljs.tools.reader.impl.commons.match_int = function cljs$tools$reader$impl$commons$match_int(s) {
  var m = cljs.core.vec(cljs.core.re_find(cljs.tools.reader.impl.commons.int_pattern, s));
  if (!((m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(2) : m.call(null, 2)) == null)) {
    return 0;
  } else {
    var negate_QMARK_ = "-" === (m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(1) : m.call(null, 1));
    var a = !((m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(3) : m.call(null, 3)) == null) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(3) : m.call(null, 3), 10], null) : !((m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(4) : m.call(null, 4)) == null) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m.cljs$core$IFn$_invoke$arity$1 ? 
    m.cljs$core$IFn$_invoke$arity$1(4) : m.call(null, 4), 16], null) : !((m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(5) : m.call(null, 5)) == null) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(5) : m.call(null, 5), 8], null) : !((m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(7) : m.call(null, 7)) == null) ? new cljs.core.PersistentVector(null, 2, 5, 
    cljs.core.PersistentVector.EMPTY_NODE, [m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(7) : m.call(null, 7), function() {
      var G__8818 = m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(6) : m.call(null, 6);
      return parseInt(G__8818);
    }()], null) : !((m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(8) : m.call(null, 8)) == null) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(8) : m.call(null, 8), 10], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
    var n = a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(0) : a.call(null, 0);
    var radix = (a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(1) : a.call(null, 1)) | 0;
    if (n == null) {
      return null;
    } else {
      var bn = parseInt(n, radix);
      var bn__$1 = negate_QMARK_ ? -1 * bn : bn;
      return bn__$1;
    }
  }
};
cljs.tools.reader.impl.commons.match_ratio = function cljs$tools$reader$impl$commons$match_ratio(s) {
  var m = cljs.core.vec(cljs.core.re_find(cljs.tools.reader.impl.commons.ratio_pattern, s));
  var numerator = m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(1) : m.call(null, 1);
  var denominator = m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(2) : m.call(null, 2);
  var numerator__$1 = cljs.core.truth_(cljs.core.re_find(/^\+/, numerator)) ? cljs.core.subs.cljs$core$IFn$_invoke$arity$2(numerator, 1) : numerator;
  return parseInt(numerator__$1) / parseInt(denominator);
};
cljs.tools.reader.impl.commons.match_float = function cljs$tools$reader$impl$commons$match_float(s) {
  var m = cljs.core.vec(cljs.core.re_find(cljs.tools.reader.impl.commons.float_pattern, s));
  if (!((m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(4) : m.call(null, 4)) == null)) {
    var G__8820 = m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(1) : m.call(null, 1);
    return parseFloat(G__8820);
  } else {
    return parseFloat(s);
  }
};
cljs.tools.reader.impl.commons.matches_QMARK_ = function cljs$tools$reader$impl$commons$matches_QMARK_(pattern, s) {
  var vec__8822 = cljs.core.re_find(pattern, s);
  var match = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8822, 0, null);
  return match === s;
};
cljs.tools.reader.impl.commons.match_number = function cljs$tools$reader$impl$commons$match_number(s) {
  if (cljs.tools.reader.impl.commons.matches_QMARK_(cljs.tools.reader.impl.commons.int_pattern, s)) {
    return cljs.tools.reader.impl.commons.match_int(s);
  } else {
    if (cljs.tools.reader.impl.commons.matches_QMARK_(cljs.tools.reader.impl.commons.float_pattern, s)) {
      return cljs.tools.reader.impl.commons.match_float(s);
    } else {
      if (cljs.tools.reader.impl.commons.matches_QMARK_(cljs.tools.reader.impl.commons.ratio_pattern, s)) {
        return cljs.tools.reader.impl.commons.match_ratio(s);
      } else {
        return null;
      }
    }
  }
};
cljs.tools.reader.impl.commons.parse_symbol = function cljs$tools$reader$impl$commons$parse_symbol(token) {
  if ("" === token || /:$/.test(token) === true || /^::/.test(token) === true) {
    return null;
  } else {
    var ns_idx = token.indexOf("/");
    var ns = ns_idx > 0 ? cljs.core.subs.cljs$core$IFn$_invoke$arity$3(token, 0, ns_idx) : null;
    if (!(ns == null)) {
      var ns_idx__$1 = ns_idx + 1;
      if (ns_idx__$1 === cljs.core.count(token)) {
        return null;
      } else {
        var sym = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(token, ns_idx__$1);
        if (!cljs.tools.reader.impl.utils.numeric_QMARK_(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(sym, 0)) && !("" === sym) && /:$/.test(ns) === false && (sym === "/" || -1 === sym.indexOf("/"))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns, sym], null);
        } else {
          return null;
        }
      }
    } else {
      if (token === "/" || -1 === token.indexOf("/")) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, token], null);
      } else {
        return null;
      }
    }
  }
};
cljs.tools.reader.impl.commons.read_comment = function cljs$tools$reader$impl$commons$read_comment() {
  var args__5357__auto__ = [];
  var len__5350__auto___8825 = arguments.length;
  var i__5351__auto___8826 = 0;
  while (true) {
    if (i__5351__auto___8826 < len__5350__auto___8825) {
      args__5357__auto__.push(arguments[i__5351__auto___8826]);
      var G__8827 = i__5351__auto___8826 + 1;
      i__5351__auto___8826 = G__8827;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 1 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(1), 0) : null;
  return cljs.tools.reader.impl.commons.read_comment.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5358__auto__);
};
cljs.tools.reader.impl.commons.read_comment.cljs$core$IFn$_invoke$arity$variadic = function(rdr, _) {
  return cljs.tools.reader.impl.commons.skip_line(rdr);
};
cljs.tools.reader.impl.commons.read_comment.cljs$lang$maxFixedArity = 1;
cljs.tools.reader.impl.commons.read_comment.cljs$lang$applyTo = function(seq8823) {
  var G__8824 = cljs.core.first(seq8823);
  var seq8823__$1 = cljs.core.next(seq8823);
  return cljs.tools.reader.impl.commons.read_comment.cljs$core$IFn$_invoke$arity$variadic(G__8824, seq8823__$1);
};
cljs.tools.reader.impl.commons.throwing_reader = function cljs$tools$reader$impl$commons$throwing_reader(msg) {
  return function() {
    var G__8828__delegate = function(rdr, _) {
      return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq([msg], 0));
    };
    var G__8828 = function(rdr, var_args) {
      var _ = null;
      if (arguments.length > 1) {
        var G__8829__i = 0, G__8829__a = new Array(arguments.length - 1);
        while (G__8829__i < G__8829__a.length) {
          G__8829__a[G__8829__i] = arguments[G__8829__i + 1];
          ++G__8829__i;
        }
        _ = new cljs.core.IndexedSeq(G__8829__a, 0);
      }
      return G__8828__delegate.call(this, rdr, _);
    };
    G__8828.cljs$lang$maxFixedArity = 1;
    G__8828.cljs$lang$applyTo = function(arglist__8830) {
      var rdr = cljs.core.first(arglist__8830);
      var _ = cljs.core.rest(arglist__8830);
      return G__8828__delegate(rdr, _);
    };
    G__8828.cljs$core$IFn$_invoke$arity$variadic = G__8828__delegate;
    return G__8828;
  }();
};
goog.provide("cljs.tools.reader");
goog.require("cljs.core");
goog.require("cljs.tools.reader.impl.commons");
goog.require("goog.string");
goog.require("goog.array");
goog.require("cljs.tools.reader.reader_types");
goog.require("goog.string.StringBuffer");
goog.require("cljs.tools.reader.impl.utils");
goog.require("clojure.string");
cljs.tools.reader.macro_terminating_QMARK_ = function cljs$tools$reader$macro_terminating_QMARK_(ch) {
  var G__8514 = ch;
  switch(G__8514) {
    case '"':
    ;
    case ";":
    ;
    case "@":
    ;
    case "^":
    ;
    case "`":
    ;
    case "~":
    ;
    case "(":
    ;
    case ")":
    ;
    case "[":
    ;
    case "]":
    ;
    case "{":
    ;
    case "}":
    ;
    case "\\":
      return true;
      break;
    default:
      return false;
  }
};
cljs.tools.reader.sb = new goog.string.StringBuffer;
cljs.tools.reader.read_token = function cljs$tools$reader$read_token(rdr, initch) {
  if (initch == null) {
    return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["EOF while reading"], 0));
  } else {
    cljs.tools.reader.sb.clear();
    var ch = initch;
    while (true) {
      if (cljs.tools.reader.impl.utils.whitespace_QMARK_(ch) || cljs.tools.reader.macro_terminating_QMARK_(ch) || ch == null) {
        if (ch == null) {
        } else {
          rdr.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2(null, ch);
        }
        return cljs.tools.reader.sb.toString();
      } else {
        cljs.tools.reader.sb.append(ch);
        var G__8516 = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
        ch = G__8516;
        continue;
      }
      break;
    }
  }
};
cljs.tools.reader.read_dispatch = function cljs$tools$reader$read_dispatch(rdr, _, opts, pending_forms) {
  var temp__4423__auto__ = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var ch = temp__4423__auto__;
    var temp__4423__auto____$1 = cljs.tools.reader.dispatch_macros.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.dispatch_macros.cljs$core$IFn$_invoke$arity$1(ch) : cljs.tools.reader.dispatch_macros.call(null, ch);
    if (cljs.core.truth_(temp__4423__auto____$1)) {
      var dm = temp__4423__auto____$1;
      return dm.cljs$core$IFn$_invoke$arity$4 ? dm.cljs$core$IFn$_invoke$arity$4(rdr, ch, opts, pending_forms) : dm.call(null, rdr, ch, opts, pending_forms);
    } else {
      var G__8524 = function() {
        var G__8528 = rdr;
        G__8528.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2(null, ch);
        return G__8528;
      }();
      var G__8525 = ch;
      var G__8526 = opts;
      var G__8527 = pending_forms;
      return cljs.tools.reader.read_tagged.cljs$core$IFn$_invoke$arity$4 ? cljs.tools.reader.read_tagged.cljs$core$IFn$_invoke$arity$4(G__8524, G__8525, G__8526, G__8527) : cljs.tools.reader.read_tagged.call(null, G__8524, G__8525, G__8526, G__8527);
    }
  } else {
    return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["EOF while reading character"], 0));
  }
};
cljs.tools.reader.read_unmatched_delimiter = function cljs$tools$reader$read_unmatched_delimiter(rdr, ch, opts, pending_forms) {
  return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Unmatched delimiter ", ch], 0));
};
cljs.tools.reader.read_regex = function cljs$tools$reader$read_regex(rdr, ch, opts, pending_forms) {
  var sb = new goog.string.StringBuffer;
  var ch__$1 = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
  while (true) {
    if ('"' === ch__$1) {
      return cljs.core.re_pattern([cljs.core.str(sb)].join(""));
    } else {
      if (ch__$1 == null) {
        return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["EOF while reading regex"], 0));
      } else {
        sb.append(ch__$1);
        if ("\\" === ch__$1) {
          var ch_8529__$2 = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
          if (ch_8529__$2 == null) {
            cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["EOF while reading regex"], 0));
          } else {
          }
          sb.append(ch_8529__$2);
        } else {
        }
        var G__8530 = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
        ch__$1 = G__8530;
        continue;
      }
    }
    break;
  }
};
cljs.tools.reader.char_code = function cljs$tools$reader$char_code(ch, base) {
  var code = parseInt(ch, base);
  if (cljs.core.truth_(isNaN(code))) {
    return -1;
  } else {
    return code;
  }
};
cljs.tools.reader.read_unicode_char = function cljs$tools$reader$read_unicode_char() {
  var args8531 = [];
  var len__5350__auto___8534 = arguments.length;
  var i__5351__auto___8535 = 0;
  while (true) {
    if (i__5351__auto___8535 < len__5350__auto___8534) {
      args8531.push(arguments[i__5351__auto___8535]);
      var G__8536 = i__5351__auto___8535 + 1;
      i__5351__auto___8535 = G__8536;
      continue;
    } else {
    }
    break;
  }
  var G__8533 = args8531.length;
  switch(G__8533) {
    case 4:
      return cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8531.length)].join(""));;
  }
};
cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$4 = function(token, offset, length, base) {
  var l = offset + length;
  if (cljs.core.count(token) === l) {
  } else {
    throw new cljs.core.ex_info([cljs.core.str("Invalid unicode character: \\"), cljs.core.str(token)].join(""), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$illegal_DASH_argument], null));
  }
  var i = offset;
  var uc = 0;
  while (true) {
    if (i === l) {
      return String.fromCharCode(uc);
    } else {
      var d = cljs.tools.reader.char_code(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(token, i), base);
      if (d === -1) {
        throw new cljs.core.ex_info([cljs.core.str("Invalid digit: "), cljs.core.str(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(token, i))].join(""), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$illegal_DASH_argument], null));
      } else {
        var G__8538 = i + 1;
        var G__8539 = d + uc * base;
        i = G__8538;
        uc = G__8539;
        continue;
      }
    }
    break;
  }
};
cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$5 = function(rdr, initch, base, length, exact_QMARK_) {
  var i = 1;
  var uc = cljs.tools.reader.char_code(initch, base);
  while (true) {
    if (uc === -1) {
      throw new cljs.core.ex_info([cljs.core.str("Invalid digit: "), cljs.core.str(initch)].join(""), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$illegal_DASH_argument], null));
    } else {
      if (!(i === length)) {
        var ch = rdr.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(null);
        if (cljs.core.truth_(function() {
          var or__4311__auto__ = cljs.tools.reader.impl.utils.whitespace_QMARK_(ch);
          if (or__4311__auto__) {
            return or__4311__auto__;
          } else {
            var or__4311__auto____$1 = cljs.tools.reader.macros.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.macros.cljs$core$IFn$_invoke$arity$1(ch) : cljs.tools.reader.macros.call(null, ch);
            if (cljs.core.truth_(or__4311__auto____$1)) {
              return or__4311__auto____$1;
            } else {
              return ch == null;
            }
          }
        }())) {
          if (cljs.core.truth_(exact_QMARK_)) {
            throw new cljs.core.ex_info([cljs.core.str("Invalid character length: "), cljs.core.str(i), cljs.core.str(", should be: "), cljs.core.str(length)].join(""), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$illegal_DASH_argument], null));
          } else {
            return String.fromCharCode(uc);
          }
        } else {
          var d = cljs.tools.reader.char_code(ch, base);
          rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
          if (d === -1) {
            throw new cljs.core.ex_info([cljs.core.str("Invalid digit: "), cljs.core.str(ch)].join(""), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$illegal_DASH_argument], null));
          } else {
            var G__8540 = i + 1;
            var G__8541 = d + uc * base;
            i = G__8540;
            uc = G__8541;
            continue;
          }
        }
      } else {
        return String.fromCharCode(uc);
      }
    }
    break;
  }
};
cljs.tools.reader.read_unicode_char.cljs$lang$maxFixedArity = 5;
cljs.tools.reader.upper_limit = "\ud7ff".charCodeAt(0);
cljs.tools.reader.lower_limit = "\ue000".charCodeAt(0);
cljs.tools.reader.valid_octal_QMARK_ = function cljs$tools$reader$valid_octal_QMARK_(token, base) {
  return parseInt(token, base) <= 255;
};
cljs.tools.reader.read_char_STAR_ = function cljs$tools$reader$read_char_STAR_(rdr, backslash, opts, pending_forms) {
  var ch = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
  if (!(ch == null)) {
    var token = cljs.tools.reader.macro_terminating_QMARK_(ch) || cljs.tools.reader.impl.utils.whitespace_QMARK_(ch) ? [cljs.core.str(ch)].join("") : cljs.tools.reader.read_token(rdr, ch);
    var token_len = token.length;
    if (1 === token_len) {
      return token.charAt(0);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(token, "newline")) {
        return "\n";
      } else {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(token, "space")) {
          return " ";
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(token, "tab")) {
            return "\t";
          } else {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(token, "backspace")) {
              return "\b";
            } else {
              if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(token, "formfeed")) {
                return "\f";
              } else {
                if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(token, "return")) {
                  return "\r";
                } else {
                  if (cljs.core.truth_(goog.string.startsWith(token, "u"))) {
                    var c = cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$4(token, 1, 4, 16);
                    var ic = c.charCodeAt(0);
                    if (ic > cljs.tools.reader.upper_limit && ic < cljs.tools.reader.lower_limit) {
                      return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Invalid character constant: \\u", c], 0));
                    } else {
                      return c;
                    }
                  } else {
                    if (cljs.core.truth_(goog.string.startsWith(token, "o"))) {
                      var len = token_len - 1;
                      if (len > 3) {
                        return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Invalid octal escape sequence length: ", len], 0));
                      } else {
                        var offset = 1;
                        var base = 8;
                        var uc = cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$4(token, offset, len, base);
                        if (cljs.core.not(cljs.tools.reader.valid_octal_QMARK_(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(token, offset), base))) {
                          return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Octal escape sequence must be in range [0, 377]"], 0));
                        } else {
                          return uc;
                        }
                      }
                    } else {
                      return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Unsupported character: \\", token], 0));
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  } else {
    return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["EOF while reading character"], 0));
  }
};
cljs.tools.reader.starting_line_col_info = function cljs$tools$reader$starting_line_col_info(rdr) {
  if (cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_(rdr))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rdr.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1(null), rdr.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1(null) - 1 | 0], null);
  } else {
    return null;
  }
};
cljs.tools.reader.ending_line_col_info = function cljs$tools$reader$ending_line_col_info(rdr) {
  if (cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_(rdr))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rdr.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1(null), rdr.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1(null)], null);
  } else {
    return null;
  }
};
if (typeof cljs.tools.reader.READ_EOF !== "undefined") {
} else {
  cljs.tools.reader.READ_EOF = new Object;
}
if (typeof cljs.tools.reader.READ_FINISHED !== "undefined") {
} else {
  cljs.tools.reader.READ_FINISHED = new Object;
}
cljs.tools.reader._STAR_read_delim_STAR_ = false;
cljs.tools.reader.read_delimited_internal = function cljs$tools$reader$read_delimited_internal(delim, rdr, opts, pending_forms) {
  var vec__8543 = cljs.tools.reader.starting_line_col_info(rdr);
  var start_line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8543, 0, null);
  var start_column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8543, 1, null);
  var delim__$1 = cljs.tools.reader.impl.utils.char$(delim);
  var a = cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
  while (true) {
    var form = cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(rdr, false, cljs.tools.reader.READ_EOF, delim__$1, opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, false, cljs.tools.reader.READ_EOF, delim__$1, opts, pending_forms);
    if (form === cljs.tools.reader.READ_FINISHED) {
      return cljs.core.persistent_BANG_(a);
    } else {
      if (form === cljs.tools.reader.READ_EOF) {
        return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["EOF while reading", cljs.core.truth_(start_line) ? [cljs.core.str(", starting at line "), cljs.core.str(start_line), cljs.core.str(" and column "), cljs.core.str(start_column)].join("") : null], 0));
      } else {
        var G__8544 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(a, form);
        a = G__8544;
        continue;
      }
    }
    break;
  }
};
cljs.tools.reader.read_delimited = function cljs$tools$reader$read_delimited(delim, rdr, opts, pending_forms) {
  var _STAR_read_delim_STAR_8546 = cljs.tools.reader._STAR_read_delim_STAR_;
  cljs.tools.reader._STAR_read_delim_STAR_ = true;
  try {
    return cljs.tools.reader.read_delimited_internal(delim, rdr, opts, pending_forms);
  } finally {
    cljs.tools.reader._STAR_read_delim_STAR_ = _STAR_read_delim_STAR_8546;
  }
};
cljs.tools.reader.read_list = function cljs$tools$reader$read_list(rdr, _, opts, pending_forms) {
  var vec__8549 = cljs.tools.reader.starting_line_col_info(rdr);
  var start_line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8549, 0, null);
  var start_column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8549, 1, null);
  var the_list = cljs.tools.reader.read_delimited(")", rdr, opts, pending_forms);
  var vec__8550 = cljs.tools.reader.ending_line_col_info(rdr);
  var end_line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8550, 0, null);
  var end_column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8550, 1, null);
  return cljs.core.with_meta(cljs.core.empty_QMARK_(the_list) ? cljs.core.List.EMPTY : cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.list, the_list), cljs.core.truth_(start_line) ? cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([function() {
    var temp__4425__auto__ = cljs.tools.reader.reader_types.get_file_name(rdr);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var file = temp__4425__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$file, file], null);
    } else {
      return null;
    }
  }(), new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$line, start_line, cljs.core.cst$kw$column, start_column, cljs.core.cst$kw$end_DASH_line, end_line, cljs.core.cst$kw$end_DASH_column, end_column], null)], 0)) : null);
};
cljs.tools.reader.read_vector = function cljs$tools$reader$read_vector(rdr, _, opts, pending_forms) {
  var vec__8553 = cljs.tools.reader.starting_line_col_info(rdr);
  var start_line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8553, 0, null);
  var start_column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8553, 1, null);
  var the_vector = cljs.tools.reader.read_delimited("]", rdr, opts, pending_forms);
  var vec__8554 = cljs.tools.reader.ending_line_col_info(rdr);
  var end_line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8554, 0, null);
  var end_column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8554, 1, null);
  return cljs.core.with_meta(the_vector, cljs.core.truth_(start_line) ? cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([function() {
    var temp__4425__auto__ = cljs.tools.reader.reader_types.get_file_name(rdr);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var file = temp__4425__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$file, file], null);
    } else {
      return null;
    }
  }(), new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$line, start_line, cljs.core.cst$kw$column, start_column, cljs.core.cst$kw$end_DASH_line, end_line, cljs.core.cst$kw$end_DASH_column, end_column], null)], 0)) : null);
};
cljs.tools.reader.read_map = function cljs$tools$reader$read_map(rdr, _, opts, pending_forms) {
  var vec__8557 = cljs.tools.reader.starting_line_col_info(rdr);
  var start_line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8557, 0, null);
  var start_column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8557, 1, null);
  var the_map = cljs.tools.reader.read_delimited("}", rdr, opts, pending_forms);
  var map_count = cljs.core.count(the_map);
  var vec__8558 = cljs.tools.reader.ending_line_col_info(rdr);
  var end_line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8558, 0, null);
  var end_column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8558, 1, null);
  if (cljs.core.odd_QMARK_(map_count)) {
    cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Map literal must contain an even number of forms"], 0));
  } else {
  }
  return cljs.core.with_meta(map_count === 0 ? cljs.core.PersistentArrayMap.EMPTY : cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, cljs.core.to_array(the_map)), cljs.core.truth_(start_line) ? cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([function() {
    var temp__4425__auto__ = cljs.tools.reader.reader_types.get_file_name(rdr);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var file = temp__4425__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$file, file], null);
    } else {
      return null;
    }
  }(), new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$line, start_line, cljs.core.cst$kw$column, start_column, cljs.core.cst$kw$end_DASH_line, end_line, cljs.core.cst$kw$end_DASH_column, end_column], null)], 0)) : null);
};
cljs.tools.reader.read_number = function cljs$tools$reader$read_number(rdr, initch) {
  var sb = function() {
    var G__8561 = new goog.string.StringBuffer;
    G__8561.append(initch);
    return G__8561;
  }();
  var ch = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__4311__auto__ = cljs.tools.reader.impl.utils.whitespace_QMARK_(ch);
      if (or__4311__auto__) {
        return or__4311__auto__;
      } else {
        var or__4311__auto____$1 = cljs.tools.reader.macros.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.macros.cljs$core$IFn$_invoke$arity$1(ch) : cljs.tools.reader.macros.call(null, ch);
        if (cljs.core.truth_(or__4311__auto____$1)) {
          return or__4311__auto____$1;
        } else {
          return ch == null;
        }
      }
    }())) {
      var s = [cljs.core.str(sb)].join("");
      rdr.cljs$tools$reader$reader_types$IPushbackReader$unread$arity$2(null, ch);
      var or__4311__auto__ = cljs.tools.reader.impl.commons.match_number(s);
      if (cljs.core.truth_(or__4311__auto__)) {
        return or__4311__auto__;
      } else {
        return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Invalid number format [", s, "]"], 0));
      }
    } else {
      var G__8563 = function() {
        var G__8562 = sb;
        G__8562.append(ch);
        return G__8562;
      }();
      var G__8564 = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
      sb = G__8563;
      ch = G__8564;
      continue;
    }
    break;
  }
};
cljs.tools.reader.escape_char = function cljs$tools$reader$escape_char(sb, rdr) {
  var ch = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
  var G__8568 = ch;
  switch(G__8568) {
    case "t":
      return "\t";
      break;
    case "r":
      return "\r";
      break;
    case "n":
      return "\n";
      break;
    case "\\":
      return "\\";
      break;
    case '"':
      return '"';
      break;
    case "b":
      return "\b";
      break;
    case "f":
      return "\f";
      break;
    case "u":
      var ch__$1 = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
      if (-1 === function() {
        var G__8569 = ch__$1 | 0;
        var G__8570 = 16;
        return parseInt(G__8569, G__8570);
      }()) {
        return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Invalid unicode escape: \\u", ch__$1], 0));
      } else {
        return cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$5(rdr, ch__$1, 16, 4, true);
      }
      break;
    default:
      if (cljs.tools.reader.impl.utils.numeric_QMARK_(ch)) {
        var ch__$1 = cljs.tools.reader.read_unicode_char.cljs$core$IFn$_invoke$arity$5(rdr, ch, 8, 3, false);
        if ((ch__$1 | 0) > 223) {
          return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Octal escape sequence must be in range [0, 377]"], 0));
        } else {
          return ch__$1;
        }
      } else {
        return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Unsupported escape character: \\", ch], 0));
      }
    ;
  }
};
cljs.tools.reader.read_string_STAR_ = function cljs$tools$reader$read_string_STAR_(reader, _, opts, pending_forms) {
  var sb = new goog.string.StringBuffer;
  var ch = reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
  while (true) {
    if (ch == null) {
      return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["EOF while reading string"], 0));
    } else {
      var G__8575 = ch;
      switch(G__8575) {
        case "\\":
          var G__8579 = function() {
            var G__8576 = sb;
            G__8576.append(cljs.tools.reader.escape_char(sb, reader));
            return G__8576;
          }();
          var G__8580 = reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
          sb = G__8579;
          ch = G__8580;
          continue;
          break;
        case '"':
          return [cljs.core.str(sb)].join("");
          break;
        default:
          var G__8581 = function() {
            var G__8577 = sb;
            G__8577.append(ch);
            return G__8577;
          }();
          var G__8582 = reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
          sb = G__8581;
          ch = G__8582;
          continue;
      }
    }
    break;
  }
};
cljs.tools.reader.loc_info = function cljs$tools$reader$loc_info(rdr, line, column) {
  if (line == null) {
    return null;
  } else {
    var file = cljs.tools.reader.reader_types.get_file_name(rdr);
    var filem = file == null ? null : new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$file, file], null);
    var vec__8584 = cljs.tools.reader.ending_line_col_info(rdr);
    var end_line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8584, 0, null);
    var end_column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8584, 1, null);
    var lcm = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$line, line, cljs.core.cst$kw$column, column, cljs.core.cst$kw$end_DASH_line, end_line, cljs.core.cst$kw$end_DASH_column, end_column], null);
    return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([filem, lcm], 0));
  }
};
cljs.tools.reader.read_symbol = function cljs$tools$reader$read_symbol(rdr, initch) {
  var vec__8587 = cljs.tools.reader.starting_line_col_info(rdr);
  var line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8587, 0, null);
  var column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8587, 1, null);
  var token = cljs.tools.reader.read_token(rdr, initch);
  if (token == null) {
    return null;
  } else {
    var G__8588 = token;
    switch(G__8588) {
      case "nil":
        return null;
        break;
      case "true":
        return true;
        break;
      case "false":
        return false;
        break;
      case "/":
        return cljs.core.cst$sym$_SLASH_;
        break;
      case "NaN":
        return Number.NaN;
        break;
      case "-Infinity":
        return Number.NEGATIVE_INFINITY;
        break;
      case "Infinity":
      ;
      case "+Infinity":
        return Number.POSITIVE_INFINITY;
        break;
      default:
        var p = cljs.tools.reader.impl.commons.parse_symbol(token);
        if (!(p == null)) {
          var sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(p.cljs$core$IIndexed$_nth$arity$2(null, 0), p.cljs$core$IIndexed$_nth$arity$2(null, 1));
          return sym.cljs$core$IWithMeta$_with_meta$arity$2(null, cljs.tools.reader.loc_info(rdr, line, column));
        } else {
          return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Invalid token: ", token], 0));
        }
      ;
    }
  }
};
cljs.tools.reader._STAR_alias_map_STAR_ = null;
cljs.tools.reader.resolve_ns = function cljs$tools$reader$resolve_ns(sym) {
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.tools.reader._STAR_alias_map_STAR_, sym, sym);
};
cljs.tools.reader.read_keyword = function cljs$tools$reader$read_keyword(reader, initch, opts, pending_forms) {
  var ch = reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
  if (!cljs.tools.reader.impl.utils.whitespace_QMARK_(ch)) {
    var token = cljs.tools.reader.read_token(reader, ch);
    var s = cljs.tools.reader.impl.commons.parse_symbol(token);
    if (!(s == null)) {
      var ns = s.cljs$core$IIndexed$_nth$arity$2(null, 0);
      var name = s.cljs$core$IIndexed$_nth$arity$2(null, 1);
      if (":" === token.charAt(0)) {
        if (!(ns == null)) {
          var ns__$1 = cljs.tools.reader.resolve_ns(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(ns, 1)));
          if (!(ns__$1 == null)) {
            return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2([cljs.core.str(ns__$1)].join(""), name);
          } else {
            return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["Invalid token: :", token], 0));
          }
        } else {
          return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2([cljs.core.str(cljs.core._STAR_ns_STAR_)].join(""), cljs.core.subs.cljs$core$IFn$_invoke$arity$2(name, 1));
        }
      } else {
        return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(ns, name);
      }
    } else {
      return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["Invalid token: :", token], 0));
    }
  } else {
    return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["Invalid token: :"], 0));
  }
};
cljs.tools.reader.wrapping_reader = function cljs$tools$reader$wrapping_reader(sym) {
  return function(rdr, _, opts, pending_forms) {
    return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr, true, null, opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms)), sym);
  };
};
cljs.tools.reader.read_meta = function cljs$tools$reader$read_meta(rdr, _, opts, pending_forms) {
  if (cljs.tools.reader.reader_types.source_logging_reader_QMARK_(rdr) && !cljs.tools.reader.impl.utils.whitespace_QMARK_(cljs.tools.reader.reader_types.peek_char(rdr))) {
    return cljs.tools.reader.reader_types.log_source_STAR_(rdr, function() {
      var vec__8596 = cljs.tools.reader.starting_line_col_info(rdr);
      var line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8596, 0, null);
      var column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8596, 1, null);
      var m = cljs.tools.reader.impl.utils.desugar_meta(cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr, true, null, opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
      if (cljs.core.map_QMARK_(m)) {
      } else {
        cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Metadata must be Symbol, Keyword, String or Map"], 0));
      }
      var o = cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr, true, null, opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
      if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$ ? true : false : false) {
        var m__$1 = cljs.core.truth_(function() {
          var and__4299__auto__ = line;
          if (cljs.core.truth_(and__4299__auto__)) {
            return cljs.core.seq_QMARK_(o);
          } else {
            return and__4299__auto__;
          }
        }()) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(m, cljs.core.cst$kw$line, line, cljs.core.array_seq([cljs.core.cst$kw$column, column], 0)) : m;
        if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 262144 || o.cljs$core$IWithMeta$ ? true : false : false) {
          return cljs.core.with_meta(o, cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.meta(o), m__$1], 0)));
        } else {
          return cljs.core.reset_meta_BANG_(o, m__$1);
        }
      } else {
        return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Metadata can only be applied to IMetas"], 0));
      }
    });
  } else {
    var vec__8599 = cljs.tools.reader.starting_line_col_info(rdr);
    var line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8599, 0, null);
    var column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8599, 1, null);
    var m = cljs.tools.reader.impl.utils.desugar_meta(cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr, true, null, opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
    if (cljs.core.map_QMARK_(m)) {
    } else {
      cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Metadata must be Symbol, Keyword, String or Map"], 0));
    }
    var o = cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr, true, null, opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$ ? true : false : false) {
      var m__$1 = cljs.core.truth_(function() {
        var and__4299__auto__ = line;
        if (cljs.core.truth_(and__4299__auto__)) {
          return cljs.core.seq_QMARK_(o);
        } else {
          return and__4299__auto__;
        }
      }()) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(m, cljs.core.cst$kw$line, line, cljs.core.array_seq([cljs.core.cst$kw$column, column], 0)) : m;
      if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 262144 || o.cljs$core$IWithMeta$ ? true : false : false) {
        return cljs.core.with_meta(o, cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.meta(o), m__$1], 0)));
      } else {
        return cljs.core.reset_meta_BANG_(o, m__$1);
      }
    } else {
      return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Metadata can only be applied to IMetas"], 0));
    }
  }
};
cljs.tools.reader.read_set = function cljs$tools$reader$read_set(rdr, _, opts, pending_forms) {
  var vec__8604 = cljs.tools.reader.starting_line_col_info(rdr);
  var start_line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8604, 0, null);
  var start_column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8604, 1, null);
  var start_column__$1 = cljs.core.truth_(start_column) ? start_column - 1 | 0 : null;
  var the_set = cljs.core.set(cljs.tools.reader.read_delimited("}", rdr, opts, pending_forms));
  var vec__8605 = cljs.tools.reader.ending_line_col_info(rdr);
  var end_line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8605, 0, null);
  var end_column = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8605, 1, null);
  return cljs.core.with_meta(the_set, cljs.core.truth_(start_line) ? cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([function() {
    var temp__4425__auto__ = cljs.tools.reader.reader_types.get_file_name(rdr);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var file = temp__4425__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$file, file], null);
    } else {
      return null;
    }
  }(), new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$line, start_line, cljs.core.cst$kw$column, start_column__$1, cljs.core.cst$kw$end_DASH_line, end_line, cljs.core.cst$kw$end_DASH_column, end_column], null)], 0)) : null);
};
cljs.tools.reader.read_discard = function cljs$tools$reader$read_discard(rdr, _, opts, pending_forms) {
  var G__8607 = rdr;
  cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(G__8607, true, null, opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, G__8607, true, null, opts, pending_forms);
  return G__8607;
};
cljs.tools.reader.RESERVED_FEATURES = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$else, null, cljs.core.cst$kw$none, null], null), null);
cljs.tools.reader.has_feature_QMARK_ = function cljs$tools$reader$has_feature_QMARK_(rdr, feature, opts) {
  if (feature instanceof cljs.core.Keyword) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$default, feature) || cljs.core.contains_QMARK_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, cljs.core.cst$kw$features), feature);
  } else {
    return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq([[cljs.core.str("Feature should be a keyword: "), cljs.core.str(feature)].join("")], 0));
  }
};
cljs.tools.reader.check_eof_error = function cljs$tools$reader$check_eof_error(form, rdr, first_line) {
  if (form === cljs.tools.reader.READ_EOF) {
    if (first_line < 0) {
      return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["EOF while reading"], 0));
    } else {
      return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["EOF while reading, starting at line ", first_line], 0));
    }
  } else {
    return null;
  }
};
cljs.tools.reader.check_reserved_features = function cljs$tools$reader$check_reserved_features(rdr, form) {
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.tools.reader.RESERVED_FEATURES, form))) {
    return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq([[cljs.core.str("Feature name "), cljs.core.str(form), cljs.core.str(" is reserved")].join("")], 0));
  } else {
    return null;
  }
};
cljs.tools.reader.check_invalid_read_cond = function cljs$tools$reader$check_invalid_read_cond(form, rdr, first_line) {
  if (form === cljs.tools.reader.READ_FINISHED) {
    if (first_line < 0) {
      return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["read-cond requires an even number of forms"], 0));
    } else {
      return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq([[cljs.core.str("read-cond starting on line "), cljs.core.str(first_line), cljs.core.str(" requires an even number of forms")].join("")], 0));
    }
  } else {
    return null;
  }
};
cljs.tools.reader.read_suppress = function cljs$tools$reader$read_suppress(first_line, rdr, opts, pending_forms) {
  var _STAR_suppress_read_STAR_8609 = cljs.tools.reader._STAR_suppress_read_STAR_;
  cljs.tools.reader._STAR_suppress_read_STAR_ = true;
  try {
    var form = cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(rdr, false, cljs.tools.reader.READ_EOF, ")", opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, false, cljs.tools.reader.READ_EOF, ")", opts, pending_forms);
    cljs.tools.reader.check_eof_error(form, rdr, first_line);
    if (form === cljs.tools.reader.READ_FINISHED) {
      return cljs.tools.reader.READ_FINISHED;
    } else {
      return null;
    }
  } finally {
    cljs.tools.reader._STAR_suppress_read_STAR_ = _STAR_suppress_read_STAR_8609;
  }
};
cljs.tools.reader.match_feature = function cljs$tools$reader$match_feature(first_line, rdr, opts, pending_forms) {
  var feature = cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(rdr, false, cljs.tools.reader.READ_EOF, ")", opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, false, cljs.tools.reader.READ_EOF, ")", opts, pending_forms);
  cljs.tools.reader.check_eof_error(feature, rdr, first_line);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(feature, cljs.tools.reader.READ_FINISHED)) {
    return cljs.tools.reader.READ_FINISHED;
  } else {
    cljs.tools.reader.check_reserved_features(rdr, feature);
    if (cljs.core.truth_(cljs.tools.reader.has_feature_QMARK_(rdr, feature, opts))) {
      var G__8611 = cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(rdr, false, cljs.tools.reader.READ_EOF, ")", opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, false, cljs.tools.reader.READ_EOF, ")", opts, pending_forms);
      cljs.tools.reader.check_eof_error(G__8611, rdr, first_line);
      cljs.tools.reader.check_invalid_read_cond(G__8611, rdr, first_line);
      return G__8611;
    } else {
      return cljs.tools.reader.read_suppress(first_line, rdr, opts, pending_forms);
    }
  }
};
cljs.tools.reader.read_cond_delimited = function cljs$tools$reader$read_cond_delimited(rdr, splicing, opts, pending_forms) {
  var first_line = cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_(rdr)) ? cljs.tools.reader.reader_types.get_line_number(rdr) : -1;
  var result = function() {
    var matched = null;
    var finished = null;
    while (true) {
      if (matched == null) {
        var match = cljs.tools.reader.match_feature(first_line, rdr, opts, pending_forms);
        if (!(match == null)) {
          if (match === cljs.tools.reader.READ_FINISHED) {
            return null;
          } else {
            var G__8620 = match;
            var G__8621 = null;
            matched = G__8620;
            finished = G__8621;
            continue;
          }
        } else {
          var G__8622 = null;
          var G__8623 = null;
          matched = G__8622;
          finished = G__8623;
          continue;
        }
      } else {
        if (!(finished === cljs.tools.reader.READ_FINISHED)) {
          var G__8624 = matched;
          var G__8625 = cljs.tools.reader.read_suppress(first_line, rdr, opts, pending_forms);
          matched = G__8624;
          finished = G__8625;
          continue;
        } else {
          return matched;
        }
      }
      break;
    }
  }();
  if (result == null) {
    return rdr;
  } else {
    if (cljs.core.truth_(splicing)) {
      if (!(result == null) ? result.cljs$lang$protocol_mask$partition0$ & 16777216 || result.cljs$core$ISequential$ ? true : false : false) {
        var G__8617_8626 = pending_forms;
        var G__8618_8627 = cljs.core.to_array(result);
        var G__8619_8628 = 0;
        goog.array.insertArrayAt(G__8617_8626, G__8618_8627, G__8619_8628);
        return rdr;
      } else {
        return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Spliced form list in read-cond-splicing must implement java.util.List."], 0));
      }
    } else {
      return result;
    }
  }
};
cljs.tools.reader.read_cond = function cljs$tools$reader$read_cond(rdr, _, opts, pending_forms) {
  if (cljs.core.not(function() {
    var and__4299__auto__ = opts;
    if (cljs.core.truth_(and__4299__auto__)) {
      return (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$preserve, null, cljs.core.cst$kw$allow, null], null), null)).call(null, cljs.core.cst$kw$read_DASH_cond.cljs$core$IFn$_invoke$arity$1(opts));
    } else {
      return and__4299__auto__;
    }
  }())) {
    throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Conditional read not allowed", new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$runtime_DASH_exception], null));
  } else {
  }
  var temp__4423__auto__ = rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var ch = temp__4423__auto__;
    var splicing = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ch, "@");
    var ch__$1 = splicing ? rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null) : ch;
    if (splicing) {
      if (cljs.core.truth_(cljs.tools.reader._STAR_read_delim_STAR_)) {
      } else {
        cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["cond-splice not in list"], 0));
      }
    } else {
    }
    var temp__4423__auto____$1 = cljs.tools.reader.impl.utils.whitespace_QMARK_(ch__$1) ? cljs.tools.reader.impl.commons.read_past(cljs.tools.reader.impl.utils.whitespace_QMARK_, rdr) : ch__$1;
    if (cljs.core.truth_(temp__4423__auto____$1)) {
      var ch__$2 = temp__4423__auto____$1;
      if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(ch__$2, "(")) {
        throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("read-cond body must be a list", new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$runtime_DASH_exception], null));
      } else {
        var _STAR_suppress_read_STAR_8630 = cljs.tools.reader._STAR_suppress_read_STAR_;
        cljs.tools.reader._STAR_suppress_read_STAR_ = function() {
          var or__4311__auto__ = cljs.tools.reader._STAR_suppress_read_STAR_;
          if (cljs.core.truth_(or__4311__auto__)) {
            return or__4311__auto__;
          } else {
            return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$preserve, cljs.core.cst$kw$read_DASH_cond.cljs$core$IFn$_invoke$arity$1(opts));
          }
        }();
        try {
          if (cljs.core.truth_(cljs.tools.reader._STAR_suppress_read_STAR_)) {
            return cljs.tools.reader.impl.utils.reader_conditional(cljs.tools.reader.read_list(rdr, ch__$2, opts, pending_forms), splicing);
          } else {
            return cljs.tools.reader.read_cond_delimited(rdr, splicing, opts, pending_forms);
          }
        } finally {
          cljs.tools.reader._STAR_suppress_read_STAR_ = _STAR_suppress_read_STAR_8630;
        }
      }
    } else {
      return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["EOF while reading character"], 0));
    }
  } else {
    return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["EOF while reading character"], 0));
  }
};
cljs.tools.reader.arg_env = null;
cljs.tools.reader.garg = function cljs$tools$reader$garg(n) {
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(-1 === n ? "rest" : [cljs.core.str("p"), cljs.core.str(n)].join("")), cljs.core.str("__"), cljs.core.str(cljs.tools.reader.impl.utils.next_id()), cljs.core.str("#")].join(""));
};
cljs.tools.reader.read_fn = function cljs$tools$reader$read_fn(rdr, _, opts, pending_forms) {
  if (cljs.core.truth_(cljs.tools.reader.arg_env)) {
    throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Nested #()s are not allowed", new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$illegal_DASH_state], null));
  } else {
  }
  var arg_env8639 = cljs.tools.reader.arg_env;
  cljs.tools.reader.arg_env = cljs.core.sorted_map();
  try {
    var form = function() {
      var G__8641 = function() {
        var G__8646 = rdr;
        cljs.tools.reader.reader_types.unread(G__8646, "(");
        return G__8646;
      }();
      var G__8642 = true;
      var G__8643 = null;
      var G__8644 = opts;
      var G__8645 = pending_forms;
      return cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(G__8641, G__8642, G__8643, G__8644, G__8645) : cljs.tools.reader.read_STAR_.call(null, G__8641, G__8642, G__8643, G__8644, G__8645);
    }();
    var rargs = cljs.core.rseq(cljs.tools.reader.arg_env);
    var args = rargs ? function() {
      var higharg = cljs.core.key(cljs.core.first(rargs));
      var args = function() {
        var i = 1;
        var args = cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
        while (true) {
          if (i > higharg) {
            return cljs.core.persistent_BANG_(args);
          } else {
            var G__8647 = i + 1;
            var G__8648 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(args, function() {
              var or__4311__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.tools.reader.arg_env, i);
              if (cljs.core.truth_(or__4311__auto__)) {
                return or__4311__auto__;
              } else {
                return cljs.tools.reader.garg(i);
              }
            }());
            i = G__8647;
            args = G__8648;
            continue;
          }
          break;
        }
      }();
      var args__$1 = cljs.core.truth_(cljs.tools.reader.arg_env.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.arg_env.cljs$core$IFn$_invoke$arity$1(-1) : cljs.tools.reader.arg_env.call(null, -1)) ? cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(args, cljs.core.cst$sym$_AMPERSAND_, cljs.core.array_seq([cljs.tools.reader.arg_env.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.arg_env.cljs$core$IFn$_invoke$arity$1(-1) : cljs.tools.reader.arg_env.call(null, -1)], 0)) : args;
      return args__$1;
    }() : cljs.core.PersistentVector.EMPTY;
    return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, form), args), cljs.core.cst$sym$fn_STAR_);
  } finally {
    cljs.tools.reader.arg_env = arg_env8639;
  }
};
cljs.tools.reader.register_arg = function cljs$tools$reader$register_arg(n) {
  if (cljs.core.truth_(cljs.tools.reader.arg_env)) {
    var temp__4423__auto__ = cljs.tools.reader.arg_env.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.arg_env.cljs$core$IFn$_invoke$arity$1(n) : cljs.tools.reader.arg_env.call(null, n);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var ret = temp__4423__auto__;
      return ret;
    } else {
      var g = cljs.tools.reader.garg(n);
      cljs.tools.reader.arg_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.tools.reader.arg_env, n, g);
      return g;
    }
  } else {
    throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Arg literal not in #()", new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$illegal_DASH_state], null));
  }
};
cljs.tools.reader.read_arg = function cljs$tools$reader$read_arg(rdr, pct, opts, pending_forms) {
  if (cljs.tools.reader.arg_env == null) {
    return cljs.tools.reader.read_symbol.cljs$core$IFn$_invoke$arity$2 ? cljs.tools.reader.read_symbol.cljs$core$IFn$_invoke$arity$2(rdr, pct) : cljs.tools.reader.read_symbol.call(null, rdr, pct);
  } else {
    var ch = rdr.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(null);
    if (cljs.tools.reader.impl.utils.whitespace_QMARK_(ch) || cljs.tools.reader.macro_terminating_QMARK_(ch) || ch == null) {
      return cljs.tools.reader.register_arg(1);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ch, "&")) {
        rdr.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
        return cljs.tools.reader.register_arg(-1);
      } else {
        var n = cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr, true, null, opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
        if (!cljs.core.integer_QMARK_(n)) {
          throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Arg literal must be %, %& or %integer", new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$illegal_DASH_state], null));
        } else {
          return cljs.tools.reader.register_arg(n);
        }
      }
    }
  }
};
cljs.tools.reader.gensym_env = null;
cljs.tools.reader.read_unquote = function cljs$tools$reader$read_unquote(rdr, comma, opts, pending_forms) {
  var temp__4423__auto__ = rdr.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(null);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var ch = temp__4423__auto__;
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2("@", ch)) {
      return cljs.tools.reader.wrapping_reader(cljs.core.cst$sym$clojure$core_SLASH_unquote_DASH_splicing).call(null, function() {
        var G__8650 = rdr;
        G__8650.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
        return G__8650;
      }(), "@", opts, pending_forms);
    } else {
      return cljs.tools.reader.wrapping_reader(cljs.core.cst$sym$clojure$core_SLASH_unquote).call(null, rdr, "~", opts, pending_forms);
    }
  } else {
    return null;
  }
};
cljs.tools.reader.unquote_splicing_QMARK_ = function cljs$tools$reader$unquote_splicing_QMARK_(form) {
  return cljs.core.seq_QMARK_(form) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(form), cljs.core.cst$sym$clojure$core_SLASH_unquote_DASH_splicing);
};
cljs.tools.reader.unquote_QMARK_ = function cljs$tools$reader$unquote_QMARK_(form) {
  return cljs.core.seq_QMARK_(form) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(form), cljs.core.cst$sym$clojure$core_SLASH_unquote);
};
cljs.tools.reader.expand_list = function cljs$tools$reader$expand_list(s) {
  var s__$1 = cljs.core.seq(s);
  var r = cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
  while (true) {
    if (s__$1) {
      var item = cljs.core.first(s__$1);
      var ret = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(r, cljs.core.truth_(cljs.tools.reader.unquote_QMARK_(item)) ? cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.second(item)), cljs.core.cst$sym$clojure$core_SLASH_list) : cljs.core.truth_(cljs.tools.reader.unquote_splicing_QMARK_(item)) ? cljs.core.second(item) : cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.tools.reader.syntax_quote_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.syntax_quote_STAR_.cljs$core$IFn$_invoke$arity$1(item) : 
      cljs.tools.reader.syntax_quote_STAR_.call(null, item)), cljs.core.cst$sym$clojure$core_SLASH_list));
      var G__8651 = cljs.core.next(s__$1);
      var G__8652 = ret;
      s__$1 = G__8651;
      r = G__8652;
      continue;
    } else {
      return cljs.core.seq(cljs.core.persistent_BANG_(r));
    }
    break;
  }
};
cljs.tools.reader.flatten_map = function cljs$tools$reader$flatten_map(form) {
  var s = cljs.core.seq(form);
  var key_vals = cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__8653 = cljs.core.next(s);
      var G__8654 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(key_vals, cljs.core.key(e)), cljs.core.val(e));
      s = G__8653;
      key_vals = G__8654;
      continue;
    } else {
      return cljs.core.seq(cljs.core.persistent_BANG_(key_vals));
    }
    break;
  }
};
cljs.tools.reader.register_gensym = function cljs$tools$reader$register_gensym(sym) {
  if (cljs.core.not(cljs.tools.reader.gensym_env)) {
    throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Gensym literal not in syntax-quote", new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$illegal_DASH_state], null));
  } else {
  }
  var or__4311__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.tools.reader.gensym_env, sym);
  if (cljs.core.truth_(or__4311__auto__)) {
    return or__4311__auto__;
  } else {
    var gs = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(cljs.core.name(sym), 0, cljs.core.count(cljs.core.name(sym)) - 1)), cljs.core.str("__"), cljs.core.str(cljs.tools.reader.impl.utils.next_id()), cljs.core.str("__auto__")].join(""));
    cljs.tools.reader.gensym_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.tools.reader.gensym_env, sym, gs);
    return gs;
  }
};
cljs.tools.reader.add_meta = function cljs$tools$reader$add_meta(form, ret) {
  if (function() {
    var and__4299__auto__ = !(form == null) ? form.cljs$lang$protocol_mask$partition0$ & 262144 || form.cljs$core$IWithMeta$ ? true : false : false;
    if (and__4299__auto__) {
      return cljs.core.seq(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(cljs.core.meta(form), cljs.core.cst$kw$line, cljs.core.array_seq([cljs.core.cst$kw$column, cljs.core.cst$kw$end_DASH_line, cljs.core.cst$kw$end_DASH_column, cljs.core.cst$kw$file, cljs.core.cst$kw$source], 0)));
    } else {
      return and__4299__auto__;
    }
  }()) {
    return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, function() {
      var G__8660 = cljs.core.meta(form);
      return cljs.tools.reader.syntax_quote_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.syntax_quote_STAR_.cljs$core$IFn$_invoke$arity$1(G__8660) : cljs.tools.reader.syntax_quote_STAR_.call(null, G__8660);
    }()), ret), cljs.core.cst$sym$cljs$core_SLASH_with_DASH_meta);
  } else {
    return ret;
  }
};
cljs.tools.reader.syntax_quote_coll = function cljs$tools$reader$syntax_quote_coll(type, coll) {
  var res = cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cons(cljs.core.cst$sym$cljs$core_SLASH_concat, cljs.tools.reader.expand_list(coll))), cljs.core.cst$sym$cljs$core_SLASH_sequence);
  if (cljs.core.truth_(type)) {
    return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, res), type), cljs.core.cst$sym$cljs$core_SLASH_apply);
  } else {
    return res;
  }
};
cljs.tools.reader.map_func = function cljs$tools$reader$map_func(coll) {
  if (cljs.core.count(coll) >= 16) {
    return cljs.core.cst$sym$cljs$core_SLASH_hash_DASH_map;
  } else {
    return cljs.core.cst$sym$cljs$core_SLASH_array_DASH_map;
  }
};
cljs.tools.reader.bool_QMARK_ = function cljs$tools$reader$bool_QMARK_(x) {
  return x instanceof Boolean || x === true || x === false;
};
cljs.tools.reader.resolve_symbol = function cljs$tools$reader$resolve_symbol(s) {
  var temp__4423__auto__ = cljs.core.namespace(s);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var ns_str = temp__4423__auto__;
    var ns = cljs.tools.reader.resolve_ns(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(ns_str));
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.name(ns), cljs.core.name(s));
  } else {
    return s;
  }
};
cljs.tools.reader.syntax_quote_STAR_ = function cljs$tools$reader$syntax_quote_STAR_(form) {
  return cljs.tools.reader.add_meta(form, cljs.core.special_symbol_QMARK_(form) ? cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, form), cljs.core.cst$sym$quote) : form instanceof cljs.core.Symbol ? cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.truth_(cljs.core.namespace(form)) ? cljs.tools.reader.resolve_symbol.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.resolve_symbol.cljs$core$IFn$_invoke$arity$1(form) : cljs.tools.reader.resolve_symbol.call(null, form) : cljs.core.truth_(function() {
    var G__8664 = cljs.core.name(form);
    var G__8665 = "#";
    return goog.string.endsWith(G__8664, G__8665);
  }()) ? cljs.tools.reader.register_gensym(form) : form), cljs.core.cst$sym$quote) : cljs.core.truth_(cljs.tools.reader.unquote_QMARK_(form)) ? cljs.core.second(form) : cljs.core.truth_(cljs.tools.reader.unquote_splicing_QMARK_(form)) ? function() {
    throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("unquote-splice not in list", new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$illegal_DASH_state], null));
  }() : cljs.core.coll_QMARK_(form) ? (!(form == null) ? form.cljs$lang$protocol_mask$partition0$ & 67108864 || form.cljs$core$IRecord$ ? true : false : false) ? form : cljs.core.map_QMARK_(form) ? cljs.tools.reader.syntax_quote_coll(cljs.tools.reader.map_func(form), cljs.tools.reader.flatten_map(form)) : cljs.core.vector_QMARK_(form) ? cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.tools.reader.syntax_quote_coll(null, form)), cljs.core.cst$sym$cljs$core_SLASH_vec) : cljs.core.set_QMARK_(form) ? 
  cljs.tools.reader.syntax_quote_coll(cljs.core.cst$sym$cljs$core_SLASH_hash_DASH_set, form) : cljs.core.seq_QMARK_(form) || cljs.core.list_QMARK_(form) ? function() {
    var seq = cljs.core.seq(form);
    if (seq) {
      return cljs.tools.reader.syntax_quote_coll(null, seq);
    } else {
      return cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_list);
    }
  }() : function() {
    throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2("Unknown Collection type", new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$unsupported_DASH_operation], null));
  }() : cljs.core.truth_(function() {
    var or__4311__auto__ = form instanceof cljs.core.Keyword;
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      var or__4311__auto____$1 = typeof form === "number";
      if (or__4311__auto____$1) {
        return or__4311__auto____$1;
      } else {
        var or__4311__auto____$2 = typeof form === "string";
        if (or__4311__auto____$2) {
          return or__4311__auto____$2;
        } else {
          var or__4311__auto____$3 = form == null;
          if (or__4311__auto____$3) {
            return or__4311__auto____$3;
          } else {
            var or__4311__auto____$4 = cljs.tools.reader.bool_QMARK_(form);
            if (cljs.core.truth_(or__4311__auto____$4)) {
              return or__4311__auto____$4;
            } else {
              return form instanceof RegExp;
            }
          }
        }
      }
    }
  }()) ? form : cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, form), cljs.core.cst$sym$quote));
};
cljs.tools.reader.read_syntax_quote = function cljs$tools$reader$read_syntax_quote(rdr, backquote, opts, pending_forms) {
  var gensym_env8668 = cljs.tools.reader.gensym_env;
  cljs.tools.reader.gensym_env = cljs.core.PersistentArrayMap.EMPTY;
  try {
    return cljs.tools.reader.syntax_quote_STAR_(cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr, true, null, opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
  } finally {
    cljs.tools.reader.gensym_env = gensym_env8668;
  }
};
cljs.tools.reader.macros = function cljs$tools$reader$macros(ch) {
  var G__8670 = ch;
  switch(G__8670) {
    case '"':
      return cljs.tools.reader.read_string_STAR_;
      break;
    case ":":
      return cljs.tools.reader.read_keyword;
      break;
    case ";":
      return cljs.tools.reader.impl.commons.read_comment;
      break;
    case "'":
      return cljs.tools.reader.wrapping_reader(cljs.core.cst$sym$quote);
      break;
    case "@":
      return cljs.tools.reader.wrapping_reader(cljs.core.cst$sym$clojure$core_SLASH_deref);
      break;
    case "^":
      return cljs.tools.reader.read_meta;
      break;
    case "`":
      return cljs.tools.reader.read_syntax_quote;
      break;
    case "~":
      return cljs.tools.reader.read_unquote;
      break;
    case "(":
      return cljs.tools.reader.read_list;
      break;
    case ")":
      return cljs.tools.reader.read_unmatched_delimiter;
      break;
    case "[":
      return cljs.tools.reader.read_vector;
      break;
    case "]":
      return cljs.tools.reader.read_unmatched_delimiter;
      break;
    case "{":
      return cljs.tools.reader.read_map;
      break;
    case "}":
      return cljs.tools.reader.read_unmatched_delimiter;
      break;
    case "\\":
      return cljs.tools.reader.read_char_STAR_;
      break;
    case "%":
      return cljs.tools.reader.read_arg;
      break;
    case "#":
      return cljs.tools.reader.read_dispatch;
      break;
    default:
      return null;
  }
};
cljs.tools.reader.dispatch_macros = function cljs$tools$reader$dispatch_macros(ch) {
  var G__8673 = ch;
  switch(G__8673) {
    case "^":
      return cljs.tools.reader.read_meta;
      break;
    case "'":
      return cljs.tools.reader.wrapping_reader(cljs.core.cst$sym$var);
      break;
    case "(":
      return cljs.tools.reader.read_fn;
      break;
    case "{":
      return cljs.tools.reader.read_set;
      break;
    case "<":
      return cljs.tools.reader.impl.commons.throwing_reader("Unreadable form");
      break;
    case '"':
      return cljs.tools.reader.read_regex;
      break;
    case "!":
      return cljs.tools.reader.impl.commons.read_comment;
      break;
    case "_":
      return cljs.tools.reader.read_discard;
      break;
    case "?":
      return cljs.tools.reader.read_cond;
      break;
    default:
      return null;
  }
};
cljs.tools.reader.emit_ctor = function cljs$tools$reader$emit_ctor(type, ns, record, val) {
  var method = [cljs.core.str(ns), cljs.core.str("."), cljs.core.str(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$extended, type) ? "map" : null), cljs.core.str("__GT_"), cljs.core.str(cljs.tools.reader.impl.utils.munge(record))].join("");
  return cljs.core.apply.call(null, eval(method), val);
};
cljs.tools.reader.read_ctor = function cljs$tools$reader$read_ctor(rdr, class_name, opts, pending_forms) {
  var ns = cljs.core.namespace(class_name);
  var ns_parts = clojure.string.split.cljs$core$IFn$_invoke$arity$2(class_name, /[\.\/]/);
  var record = cljs.core.truth_(ns) ? cljs.core.name(class_name) : cljs.core.last(ns_parts);
  var ns__$1 = function() {
    var or__4311__auto__ = ns;
    if (cljs.core.truth_(or__4311__auto__)) {
      return or__4311__auto__;
    } else {
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(".", cljs.core.butlast(ns_parts));
    }
  }();
  var ch = cljs.tools.reader.impl.commons.read_past(cljs.tools.reader.impl.utils.whitespace_QMARK_, rdr);
  var temp__4423__auto__ = function() {
    var G__8678 = ch;
    switch(G__8678) {
      case "[":
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["]", cljs.core.cst$kw$short], null);
        break;
      case "{":
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["}", cljs.core.cst$kw$extended], null);
        break;
      default:
        return null;
    }
  }();
  if (cljs.core.truth_(temp__4423__auto__)) {
    var vec__8679 = temp__4423__auto__;
    var end_ch = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8679, 0, null);
    var form = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8679, 1, null);
    var entries = cljs.tools.reader.read_delimited(end_ch, rdr, opts, pending_forms);
    var G__8680 = form instanceof cljs.core.Keyword ? form.fqn : null;
    switch(G__8680) {
      case "short":
        return cljs.tools.reader.emit_ctor(cljs.core.cst$kw$short, ns__$1, record, entries);
        break;
      case "extended":
        var vals = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, entries);
        var s_8683 = cljs.core.keys(vals);
        while (true) {
          if (cljs.core.truth_(s_8683)) {
            if (!(cljs.core.first(s_8683) instanceof cljs.core.Keyword)) {
              cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Unreadable ctor form: key must be of type cljs.core.Keyword"], 0));
            } else {
              var G__8684 = cljs.core.next(s_8683);
              s_8683 = G__8684;
              continue;
            }
          } else {
          }
          break;
        }
        return cljs.tools.reader.emit_ctor(cljs.core.cst$kw$extended, ns__$1, record, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [vals], null));
        break;
      default:
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(form)].join(""));;
    }
  } else {
    return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Invalid reader constructor form"], 0));
  }
};
cljs.tools.reader.read_tagged = function cljs$tools$reader$read_tagged(rdr, initch, opts, pending_forms) {
  var tag = cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr, true, null, opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
  if (!(tag instanceof cljs.core.Symbol)) {
    cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Reader tag must be a symbol"], 0));
  } else {
  }
  if (cljs.core.truth_(cljs.tools.reader._STAR_suppress_read_STAR_)) {
    return cljs.core.tagged_literal(tag, cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr, true, null, opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms));
  } else {
    var temp__4423__auto__ = function() {
      var or__4311__auto__ = cljs.tools.reader._STAR_data_readers_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader._STAR_data_readers_STAR_.cljs$core$IFn$_invoke$arity$1(tag) : cljs.tools.reader._STAR_data_readers_STAR_.call(null, tag);
      if (cljs.core.truth_(or__4311__auto__)) {
        return or__4311__auto__;
      } else {
        return cljs.tools.reader.default_data_readers.cljs$core$IFn$_invoke$arity$1 ? cljs.tools.reader.default_data_readers.cljs$core$IFn$_invoke$arity$1(tag) : cljs.tools.reader.default_data_readers.call(null, tag);
      }
    }();
    if (cljs.core.truth_(temp__4423__auto__)) {
      var f = temp__4423__auto__;
      var G__8688 = cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr, true, null, opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8688) : f.call(null, G__8688);
    } else {
      if (cljs.core.name(tag).indexOf(".") > 1) {
        return cljs.tools.reader.read_ctor(rdr, tag, opts, pending_forms);
      } else {
        var temp__4423__auto____$1 = cljs.tools.reader._STAR_default_data_reader_fn_STAR_;
        if (cljs.core.truth_(temp__4423__auto____$1)) {
          var f = temp__4423__auto____$1;
          var G__8689 = tag;
          var G__8690 = cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(rdr, true, null, opts, pending_forms) : cljs.tools.reader.read_STAR_.call(null, rdr, true, null, opts, pending_forms);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8689, G__8690) : f.call(null, G__8689, G__8690);
        } else {
          return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["No reader function for tag ", cljs.core.name(tag)], 0));
        }
      }
    }
  }
};
cljs.tools.reader._STAR_data_readers_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
cljs.tools.reader._STAR_default_data_reader_fn_STAR_ = null;
cljs.tools.reader._STAR_suppress_read_STAR_ = false;
cljs.tools.reader.default_data_readers = cljs.core.PersistentArrayMap.EMPTY;
cljs.tools.reader.read_STAR__internal = function cljs$tools$reader$read_STAR__internal(reader, eof_error_QMARK_, sentinel, return_on, opts, pending_forms) {
  while (true) {
    if (cljs.tools.reader.reader_types.source_logging_reader_QMARK_(reader) && !cljs.tools.reader.impl.utils.whitespace_QMARK_(reader.cljs$tools$reader$reader_types$Reader$peek_char$arity$1(null))) {
      return cljs.tools.reader.reader_types.log_source_STAR_(reader, function() {
        while (true) {
          if (!goog.array.isEmpty(pending_forms)) {
            var form = pending_forms[0];
            goog.array.removeAt(pending_forms, 0);
            return form;
          } else {
            var ch = reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
            if (cljs.tools.reader.impl.utils.whitespace_QMARK_(ch)) {
              continue;
            } else {
              if (ch == null) {
                if (eof_error_QMARK_) {
                  return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["EOF"], 0));
                } else {
                  return sentinel;
                }
              } else {
                if (ch === return_on) {
                  return cljs.tools.reader.READ_FINISHED;
                } else {
                  if (cljs.tools.reader.impl.commons.number_literal_QMARK_(reader, ch)) {
                    return cljs.tools.reader.read_number(reader, ch);
                  } else {
                    var f = cljs.tools.reader.macros(ch);
                    if (!(f == null)) {
                      var res = f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(reader, ch, opts, pending_forms) : f.call(null, reader, ch, opts, pending_forms);
                      if (res === reader) {
                        continue;
                      } else {
                        return res;
                      }
                    } else {
                      return cljs.tools.reader.read_symbol.cljs$core$IFn$_invoke$arity$2 ? cljs.tools.reader.read_symbol.cljs$core$IFn$_invoke$arity$2(reader, ch) : cljs.tools.reader.read_symbol.call(null, reader, ch);
                    }
                  }
                }
              }
            }
          }
          break;
        }
      });
    } else {
      if (!goog.array.isEmpty(pending_forms)) {
        var form = pending_forms[0];
        goog.array.removeAt(pending_forms, 0);
        return form;
      } else {
        var ch = reader.cljs$tools$reader$reader_types$Reader$read_char$arity$1(null);
        if (cljs.tools.reader.impl.utils.whitespace_QMARK_(ch)) {
          continue;
        } else {
          if (ch == null) {
            if (eof_error_QMARK_) {
              return cljs.tools.reader.reader_types.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["EOF"], 0));
            } else {
              return sentinel;
            }
          } else {
            if (ch === return_on) {
              return cljs.tools.reader.READ_FINISHED;
            } else {
              if (cljs.tools.reader.impl.commons.number_literal_QMARK_(reader, ch)) {
                return cljs.tools.reader.read_number(reader, ch);
              } else {
                var f = cljs.tools.reader.macros(ch);
                if (!(f == null)) {
                  var res = f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(reader, ch, opts, pending_forms) : f.call(null, reader, ch, opts, pending_forms);
                  if (res === reader) {
                    continue;
                  } else {
                    return res;
                  }
                } else {
                  return cljs.tools.reader.read_symbol.cljs$core$IFn$_invoke$arity$2 ? cljs.tools.reader.read_symbol.cljs$core$IFn$_invoke$arity$2(reader, ch) : cljs.tools.reader.read_symbol.call(null, reader, ch);
                }
              }
            }
          }
        }
      }
    }
    break;
  }
};
cljs.tools.reader.read_STAR_ = function cljs$tools$reader$read_STAR_() {
  var args8691 = [];
  var len__5350__auto___8695 = arguments.length;
  var i__5351__auto___8696 = 0;
  while (true) {
    if (i__5351__auto___8696 < len__5350__auto___8695) {
      args8691.push(arguments[i__5351__auto___8696]);
      var G__8697 = i__5351__auto___8696 + 1;
      i__5351__auto___8696 = G__8697;
      continue;
    } else {
    }
    break;
  }
  var G__8693 = args8691.length;
  switch(G__8693) {
    case 5:
      return cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8691.length)].join(""));;
  }
};
cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$5 = function(reader, eof_error_QMARK_, sentinel, opts, pending_forms) {
  return cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(reader, eof_error_QMARK_, sentinel, null, opts, pending_forms);
};
cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6 = function(reader, eof_error_QMARK_, sentinel, return_on, opts, pending_forms) {
  try {
    return cljs.tools.reader.read_STAR__internal(reader, eof_error_QMARK_, sentinel, return_on, opts, pending_forms);
  } catch (e8694) {
    if (e8694 instanceof Error) {
      var e = e8694;
      if (cljs.tools.reader.impl.utils.ex_info_QMARK_(e)) {
        var d = cljs.core.ex_data(e);
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$reader_DASH_exception, cljs.core.cst$kw$type.cljs$core$IFn$_invoke$arity$1(d))) {
          throw e;
        } else {
          throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(e.message, cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$reader_DASH_exception], null), d, cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_(reader)) ? new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$line, reader.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1(null), cljs.core.cst$kw$column, 
          reader.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1(null), cljs.core.cst$kw$file, reader.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1(null)], null) : null], 0)), e);
        }
      } else {
        throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(e.message, cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$type, cljs.core.cst$kw$reader_DASH_exception], null), cljs.core.truth_(cljs.tools.reader.reader_types.indexing_reader_QMARK_(reader)) ? new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$line, reader.cljs$tools$reader$reader_types$IndexingReader$get_line_number$arity$1(null), cljs.core.cst$kw$column, 
        reader.cljs$tools$reader$reader_types$IndexingReader$get_column_number$arity$1(null), cljs.core.cst$kw$file, reader.cljs$tools$reader$reader_types$IndexingReader$get_file_name$arity$1(null)], null) : null], 0)), e);
      }
    } else {
      throw e8694;
    }
  }
};
cljs.tools.reader.read_STAR_.cljs$lang$maxFixedArity = 6;
cljs.tools.reader.read = function cljs$tools$reader$read() {
  var args8699 = [];
  var len__5350__auto___8705 = arguments.length;
  var i__5351__auto___8706 = 0;
  while (true) {
    if (i__5351__auto___8706 < len__5350__auto___8705) {
      args8699.push(arguments[i__5351__auto___8706]);
      var G__8707 = i__5351__auto___8706 + 1;
      i__5351__auto___8706 = G__8707;
      continue;
    } else {
    }
    break;
  }
  var G__8701 = args8699.length;
  switch(G__8701) {
    case 1:
      return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8699.length)].join(""));;
  }
};
cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$1 = function(reader) {
  return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$3(reader, true, null);
};
cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2 = function(p__8702, reader) {
  var map__8703 = p__8702;
  var map__8703__$1 = (!(map__8703 == null) ? map__8703.cljs$lang$protocol_mask$partition0$ & 64 || map__8703.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__8703) : map__8703;
  var opts = map__8703__$1;
  var eof = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__8703__$1, cljs.core.cst$kw$eof, cljs.core.cst$kw$eofthrow);
  return cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(reader, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(eof, cljs.core.cst$kw$eofthrow), eof, null, opts, cljs.core.to_array(cljs.core.PersistentVector.EMPTY));
};
cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$3 = function(reader, eof_error_QMARK_, sentinel) {
  return cljs.tools.reader.read_STAR_.cljs$core$IFn$_invoke$arity$6(reader, eof_error_QMARK_, sentinel, null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.to_array(cljs.core.PersistentVector.EMPTY));
};
cljs.tools.reader.read.cljs$lang$maxFixedArity = 3;
cljs.tools.reader.read_string = function cljs$tools$reader$read_string() {
  var args8709 = [];
  var len__5350__auto___8712 = arguments.length;
  var i__5351__auto___8713 = 0;
  while (true) {
    if (i__5351__auto___8713 < len__5350__auto___8712) {
      args8709.push(arguments[i__5351__auto___8713]);
      var G__8714 = i__5351__auto___8713 + 1;
      i__5351__auto___8713 = G__8714;
      continue;
    } else {
    }
    break;
  }
  var G__8711 = args8709.length;
  switch(G__8711) {
    case 1:
      return cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8709.length)].join(""));;
  }
};
cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, s);
};
cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$2 = function(opts, s) {
  if (cljs.core.truth_(function() {
    var and__4299__auto__ = s;
    if (cljs.core.truth_(and__4299__auto__)) {
      return !(s === "");
    } else {
      return and__4299__auto__;
    }
  }())) {
    return cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2(opts, cljs.tools.reader.reader_types.string_push_back_reader.cljs$core$IFn$_invoke$arity$1(s));
  } else {
    return null;
  }
};
cljs.tools.reader.read_string.cljs$lang$maxFixedArity = 2;
goog.provide("cljs.env");
goog.require("cljs.core");
cljs.env._STAR_compiler_STAR_ = null;
cljs.env.default_compiler_env = function cljs$env$default_compiler_env() {
  var args9742 = [];
  var len__5350__auto___9746 = arguments.length;
  var i__5351__auto___9747 = 0;
  while (true) {
    if (i__5351__auto___9747 < len__5350__auto___9746) {
      args9742.push(arguments[i__5351__auto___9747]);
      var G__9748 = i__5351__auto___9747 + 1;
      i__5351__auto___9747 = G__9748;
      continue;
    } else {
    }
    break;
  }
  var G__9744 = args9742.length;
  switch(G__9744) {
    case 0:
      return cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9742.length)].join(""));;
  }
};
cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
};
cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$1 = function(options) {
  var G__9745 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$cljs$user, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, cljs.core.cst$sym$cljs$user], null)], null), cljs.core.cst$kw$cljs$analyzer_SLASH_constant_DASH_table, cljs.core.PersistentArrayMap.EMPTY, cljs.core.cst$kw$options, options], null)], 
  0));
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9745) : cljs.core.atom.call(null, G__9745);
};
cljs.env.default_compiler_env.cljs$lang$maxFixedArity = 1;
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function clojure$set$bubble_max_key(k, coll) {
  var max = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.max_key, k, coll);
  return cljs.core.cons(max, cljs.core.remove.cljs$core$IFn$_invoke$arity$2(function(max) {
    return function(p1__9679_SHARP_) {
      return max === p1__9679_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function clojure$set$union() {
  var args9680 = [];
  var len__5350__auto___9686 = arguments.length;
  var i__5351__auto___9687 = 0;
  while (true) {
    if (i__5351__auto___9687 < len__5350__auto___9686) {
      args9680.push(arguments[i__5351__auto___9687]);
      var G__9688 = i__5351__auto___9687 + 1;
      i__5351__auto___9687 = G__9688;
      continue;
    } else {
    }
    break;
  }
  var G__9685 = args9680.length;
  switch(G__9685) {
    case 0:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args9680.slice(2), 0);
      return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5369__auto__);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  if (cljs.core.count(s1) < cljs.core.count(s2)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, s2, s1);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, s1, s2);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  var bubbled_sets = clojure.set.bubble_max_key(cljs.core.count, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(sets, s2, cljs.core.array_seq([s1], 0)));
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.into, cljs.core.first(bubbled_sets), cljs.core.rest(bubbled_sets));
};
clojure.set.union.cljs$lang$applyTo = function(seq9681) {
  var G__9682 = cljs.core.first(seq9681);
  var seq9681__$1 = cljs.core.next(seq9681);
  var G__9683 = cljs.core.first(seq9681__$1);
  var seq9681__$2 = cljs.core.next(seq9681__$1);
  return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(G__9682, G__9683, seq9681__$2);
};
clojure.set.union.cljs$lang$maxFixedArity = 2;
clojure.set.intersection = function clojure$set$intersection() {
  var args9691 = [];
  var len__5350__auto___9697 = arguments.length;
  var i__5351__auto___9698 = 0;
  while (true) {
    if (i__5351__auto___9698 < len__5350__auto___9697) {
      args9691.push(arguments[i__5351__auto___9698]);
      var G__9699 = i__5351__auto___9698 + 1;
      i__5351__auto___9698 = G__9699;
      continue;
    } else {
    }
    break;
  }
  var G__9696 = args9691.length;
  switch(G__9696) {
    case 1:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args9691.slice(2), 0);
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5369__auto__);
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  while (true) {
    if (cljs.core.count(s2) < cljs.core.count(s1)) {
      var G__9701 = s2;
      var G__9702 = s1;
      s1 = G__9701;
      s2 = G__9702;
      continue;
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(s1, s2) {
        return function(result, item) {
          if (cljs.core.contains_QMARK_(s2, item)) {
            return result;
          } else {
            return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(result, item);
          }
        };
      }(s1, s2), s1, s1);
    }
    break;
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  var bubbled_sets = clojure.set.bubble_max_key(function(p1__9690_SHARP_) {
    return -cljs.core.count(p1__9690_SHARP_);
  }, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(sets, s2, cljs.core.array_seq([s1], 0)));
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(clojure.set.intersection, cljs.core.first(bubbled_sets), cljs.core.rest(bubbled_sets));
};
clojure.set.intersection.cljs$lang$applyTo = function(seq9692) {
  var G__9693 = cljs.core.first(seq9692);
  var seq9692__$1 = cljs.core.next(seq9692);
  var G__9694 = cljs.core.first(seq9692__$1);
  var seq9692__$2 = cljs.core.next(seq9692__$1);
  return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(G__9693, G__9694, seq9692__$2);
};
clojure.set.intersection.cljs$lang$maxFixedArity = 2;
clojure.set.difference = function clojure$set$difference() {
  var args9703 = [];
  var len__5350__auto___9709 = arguments.length;
  var i__5351__auto___9710 = 0;
  while (true) {
    if (i__5351__auto___9710 < len__5350__auto___9709) {
      args9703.push(arguments[i__5351__auto___9710]);
      var G__9711 = i__5351__auto___9710 + 1;
      i__5351__auto___9710 = G__9711;
      continue;
    } else {
    }
    break;
  }
  var G__9708 = args9703.length;
  switch(G__9708) {
    case 1:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args9703.slice(2), 0);
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5369__auto__);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  if (cljs.core.count(s1) < cljs.core.count(s2)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(result, item) {
      if (cljs.core.contains_QMARK_(s2, item)) {
        return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(result, item);
      } else {
        return result;
      }
    }, s1, s1);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.disj, s1, s2);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(clojure.set.difference, s1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(sets, s2));
};
clojure.set.difference.cljs$lang$applyTo = function(seq9704) {
  var G__9705 = cljs.core.first(seq9704);
  var seq9704__$1 = cljs.core.next(seq9704);
  var G__9706 = cljs.core.first(seq9704__$1);
  var seq9704__$2 = cljs.core.next(seq9704__$1);
  return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(G__9705, G__9706, seq9704__$2);
};
clojure.set.difference.cljs$lang$maxFixedArity = 2;
clojure.set.select = function clojure$set$select(pred, xset) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(s, k) {
    if (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(k) : pred.call(null, k)) {
      return s;
    } else {
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(s, k);
    }
  }, xset, xset);
};
clojure.set.project = function clojure$set$project(xrel, ks) {
  return cljs.core.set(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__9713_SHARP_) {
    return cljs.core.select_keys(p1__9713_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function clojure$set$rename_keys(map, kmap) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(m, p__9716) {
    var vec__9717 = p__9716;
    var old = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9717, 0, null);
    var new$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9717, 1, null);
    if (cljs.core.contains_QMARK_(map, old)) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, new$, cljs.core.get.cljs$core$IFn$_invoke$arity$2(map, old));
    } else {
      return m;
    }
  }, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc, map, cljs.core.keys(kmap)), kmap);
};
clojure.set.rename = function clojure$set$rename(xrel, kmap) {
  return cljs.core.set(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__9718_SHARP_) {
    return clojure.set.rename_keys(p1__9718_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function clojure$set$index(xrel, ks) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(m, x) {
    var ik = cljs.core.select_keys(x, ks);
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, ik, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function clojure$set$map_invert(m) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(m__$1, p__9721) {
    var vec__9722 = p__9721;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9722, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9722, 1, null);
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function clojure$set$join() {
  var args9727 = [];
  var len__5350__auto___9734 = arguments.length;
  var i__5351__auto___9735 = 0;
  while (true) {
    if (i__5351__auto___9735 < len__5350__auto___9734) {
      args9727.push(arguments[i__5351__auto___9735]);
      var G__9736 = i__5351__auto___9735 + 1;
      i__5351__auto___9735 = G__9736;
      continue;
    } else {
    }
    break;
  }
  var G__9729 = args9727.length;
  switch(G__9729) {
    case 2:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9727.length)].join(""));;
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$2 = function(xrel, yrel) {
  if (cljs.core.seq(xrel) && cljs.core.seq(yrel)) {
    var ks = clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(cljs.core.set(cljs.core.keys(cljs.core.first(xrel))), cljs.core.set(cljs.core.keys(cljs.core.first(yrel))));
    var vec__9730 = cljs.core.count(xrel) <= cljs.core.count(yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
    var r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9730, 0, null);
    var s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9730, 1, null);
    var idx = clojure.set.index(r, ks);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ks, vec__9730, r, s, idx) {
      return function(ret, x) {
        var found = function() {
          var G__9731 = cljs.core.select_keys(x, ks);
          return idx.cljs$core$IFn$_invoke$arity$1 ? idx.cljs$core$IFn$_invoke$arity$1(G__9731) : idx.call(null, G__9731);
        }();
        if (found) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(found, ks, vec__9730, r, s, idx) {
            return function(p1__9723_SHARP_, p2__9724_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9723_SHARP_, cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([p2__9724_SHARP_, x], 0)));
            };
          }(found, ks, vec__9730, r, s, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(ks, vec__9730, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
  } else {
    return cljs.core.PersistentHashSet.EMPTY;
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$3 = function(xrel, yrel, km) {
  var vec__9732 = cljs.core.count(xrel) <= cljs.core.count(yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert(km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
  var r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9732, 0, null);
  var s = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9732, 1, null);
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9732, 2, null);
  var idx = clojure.set.index(r, cljs.core.vals(k));
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(vec__9732, r, s, k, idx) {
    return function(ret, x) {
      var found = function() {
        var G__9733 = clojure.set.rename_keys(cljs.core.select_keys(x, cljs.core.keys(k)), k);
        return idx.cljs$core$IFn$_invoke$arity$1 ? idx.cljs$core$IFn$_invoke$arity$1(G__9733) : idx.call(null, G__9733);
      }();
      if (found) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(found, vec__9732, r, s, k, idx) {
          return function(p1__9725_SHARP_, p2__9726_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__9725_SHARP_, cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([p2__9726_SHARP_, x], 0)));
          };
        }(found, vec__9732, r, s, k, idx), ret, found);
      } else {
        return ret;
      }
    };
  }(vec__9732, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
};
clojure.set.join.cljs$lang$maxFixedArity = 3;
clojure.set.subset_QMARK_ = function clojure$set$subset_QMARK_(set1, set2) {
  return cljs.core.count(set1) <= cljs.core.count(set2) && cljs.core.every_QMARK_(function(p1__9738_SHARP_) {
    return cljs.core.contains_QMARK_(set2, p1__9738_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function clojure$set$superset_QMARK_(set1, set2) {
  return cljs.core.count(set1) >= cljs.core.count(set2) && cljs.core.every_QMARK_(function(p1__9739_SHARP_) {
    return cljs.core.contains_QMARK_(set1, p1__9739_SHARP_);
  }, set2);
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.reader.PushbackReader = {};
cljs.reader.read_char = function cljs$reader$read_char(reader) {
  if (!(reader == null) && !(reader.cljs$reader$PushbackReader$read_char$arity$1 == null)) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__4947__auto__ = reader == null ? null : reader;
    var m__4948__auto__ = cljs.reader.read_char[goog.typeOf(x__4947__auto__)];
    if (!(m__4948__auto__ == null)) {
      return m__4948__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4948__auto__.cljs$core$IFn$_invoke$arity$1(reader) : m__4948__auto__.call(null, reader);
    } else {
      var m__4948__auto____$1 = cljs.reader.read_char["_"];
      if (!(m__4948__auto____$1 == null)) {
        return m__4948__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4948__auto____$1.cljs$core$IFn$_invoke$arity$1(reader) : m__4948__auto____$1.call(null, reader);
      } else {
        throw cljs.core.missing_protocol("PushbackReader.read-char", reader);
      }
    }
  }
};
cljs.reader.unread = function cljs$reader$unread(reader, ch) {
  if (!(reader == null) && !(reader.cljs$reader$PushbackReader$unread$arity$2 == null)) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4947__auto__ = reader == null ? null : reader;
    var m__4948__auto__ = cljs.reader.unread[goog.typeOf(x__4947__auto__)];
    if (!(m__4948__auto__ == null)) {
      return m__4948__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4948__auto__.cljs$core$IFn$_invoke$arity$2(reader, ch) : m__4948__auto__.call(null, reader, ch);
    } else {
      var m__4948__auto____$1 = cljs.reader.unread["_"];
      if (!(m__4948__auto____$1 == null)) {
        return m__4948__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4948__auto____$1.cljs$core$IFn$_invoke$arity$2(reader, ch) : m__4948__auto____$1.call(null, reader, ch);
      } else {
        throw cljs.core.missing_protocol("PushbackReader.unread", reader);
      }
    }
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.StringPushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s, cljs.core.cst$sym$buffer, cljs.core.with_meta(cljs.core.cst$sym$idx, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null))], null);
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__4890__auto__, writer__4891__auto__, opt__4892__auto__) {
  return cljs.core._write(writer__4891__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.__GT_StringPushbackReader = function cljs$reader$__GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function cljs$reader$push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function cljs$reader$whitespace_QMARK_(ch) {
  var or__4311__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__4311__auto__)) {
    return or__4311__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function cljs$reader$numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function cljs$reader$comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function cljs$reader$number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_(initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_(function() {
    var next_ch = cljs.reader.read_char(reader);
    cljs.reader.unread(reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function cljs$reader$reader_error() {
  var args__5357__auto__ = [];
  var len__5350__auto___8385 = arguments.length;
  var i__5351__auto___8386 = 0;
  while (true) {
    if (i__5351__auto___8386 < len__5350__auto___8385) {
      args__5357__auto__.push(arguments[i__5351__auto___8386]);
      var G__8387 = i__5351__auto___8386 + 1;
      i__5351__auto___8386 = G__8387;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 1 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(1), 0) : null;
  return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5358__auto__);
};
cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic = function(rdr, msg) {
  throw new Error(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, msg));
};
cljs.reader.reader_error.cljs$lang$maxFixedArity = 1;
cljs.reader.reader_error.cljs$lang$applyTo = function(seq8383) {
  var G__8384 = cljs.core.first(seq8383);
  var seq8383__$1 = cljs.core.next(seq8383);
  return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(G__8384, seq8383__$1);
};
cljs.reader.macro_terminating_QMARK_ = function cljs$reader$macro_terminating_QMARK_(ch) {
  var and__4299__auto__ = !(ch === "#");
  if (and__4299__auto__) {
    var and__4299__auto____$1 = !(ch === "'");
    if (and__4299__auto____$1) {
      var and__4299__auto____$2 = !(ch === ":");
      if (and__4299__auto____$2) {
        return cljs.reader.macros.cljs$core$IFn$_invoke$arity$1 ? cljs.reader.macros.cljs$core$IFn$_invoke$arity$1(ch) : cljs.reader.macros.call(null, ch);
      } else {
        return and__4299__auto____$2;
      }
    } else {
      return and__4299__auto____$1;
    }
  } else {
    return and__4299__auto__;
  }
};
cljs.reader.read_token = function cljs$reader$read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char(rdr);
  while (true) {
    if (ch == null || cljs.reader.whitespace_QMARK_(ch) || cljs.reader.macro_terminating_QMARK_(ch)) {
      cljs.reader.unread(rdr, ch);
      return sb.toString();
    } else {
      var G__8388 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__8389 = cljs.reader.read_char(rdr);
      sb = G__8388;
      ch = G__8389;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function cljs$reader$skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char(reader);
    if (ch === "\n" || ch === "\r" || ch == null) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern("^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+))(N)?$");
cljs.reader.ratio_pattern = cljs.core.re_pattern("^([-+]?[0-9]+)/([0-9]+)$");
cljs.reader.float_pattern = cljs.core.re_pattern("^([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?$");
cljs.reader.symbol_pattern = cljs.core.re_pattern("^[:]?([^0-9/].*/)?([^0-9/][^/]*)$");
cljs.reader.re_matches_STAR_ = function cljs$reader$re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_int = function cljs$reader$match_int(s) {
  var groups = cljs.reader.re_matches_STAR_(cljs.reader.int_pattern, s);
  var ie8_fix = groups[2];
  var zero = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ie8_fix, "") ? null : ie8_fix;
  if (!(zero == null)) {
    return 0;
  } else {
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[6]) ? [groups[7], function() {
      var G__8392 = groups[6];
      var G__8393 = 10;
      return parseInt(G__8392, G__8393);
    }()] : [null, null];
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      var parsed = parseInt(n, radix);
      if ("-" === groups[1]) {
        return -parsed;
      } else {
        return parsed;
      }
    }
  }
};
cljs.reader.match_ratio = function cljs$reader$match_ratio(s) {
  var groups = cljs.reader.re_matches_STAR_(cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator, 10) / parseInt(denominator, 10);
};
cljs.reader.match_float = function cljs$reader$match_float(s) {
  return parseFloat(s);
};
cljs.reader.match_number = function cljs$reader$match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_(cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int(s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_(cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio(s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_(cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float(s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function cljs$reader$escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return '"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function cljs$reader$read_2_chars(reader) {
  return (new goog.string.StringBuffer(cljs.reader.read_char(reader), cljs.reader.read_char(reader))).toString();
};
cljs.reader.read_4_chars = function cljs$reader$read_4_chars(reader) {
  return (new goog.string.StringBuffer(cljs.reader.read_char(reader), cljs.reader.read_char(reader), cljs.reader.read_char(reader), cljs.reader.read_char(reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern("^[0-9A-Fa-f]{2}$");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern("^[0-9A-Fa-f]{4}$");
cljs.reader.validate_unicode_escape = function cljs$reader$validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches(unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["Unexpected unicode escape \\", escape_char, unicode_str], 0));
  }
};
cljs.reader.make_unicode_char = function cljs$reader$make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function cljs$reader$escape_char(buffer, reader) {
  var ch = cljs.reader.read_char(reader);
  var mapresult = cljs.reader.escape_char_map(ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char(cljs.reader.validate_unicode_escape(cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars(reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char(cljs.reader.validate_unicode_escape(cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars(reader)));
      } else {
        if (cljs.reader.numeric_QMARK_(ch)) {
          return String.fromCharCode(ch);
        } else {
          return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["Unexpected unicode escape \\", ch], 0));
        }
      }
    }
  }
};
cljs.reader.read_past = function cljs$reader$read_past(pred, rdr) {
  var ch = cljs.reader.read_char(rdr);
  while (true) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(ch) : pred.call(null, ch))) {
      var G__8394 = cljs.reader.read_char(rdr);
      ch = G__8394;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function cljs$reader$read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past(cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["EOF while reading"], 0));
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_(a);
    } else {
      var temp__4423__auto__ = cljs.reader.macros.cljs$core$IFn$_invoke$arity$1 ? cljs.reader.macros.cljs$core$IFn$_invoke$arity$1(ch) : cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4423__auto__)) {
        var macrofn = temp__4423__auto__;
        var mret = macrofn.cljs$core$IFn$_invoke$arity$2 ? macrofn.cljs$core$IFn$_invoke$arity$2(rdr, ch) : macrofn.call(null, rdr, ch);
        var G__8395 = mret === rdr ? a : cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(a, mret);
        a = G__8395;
        continue;
      } else {
        cljs.reader.unread(rdr, ch);
        var o = cljs.reader.read.cljs$core$IFn$_invoke$arity$4 ? cljs.reader.read.cljs$core$IFn$_invoke$arity$4(rdr, true, null, recursive_QMARK_) : cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__8396 = o === rdr ? a : cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(a, o);
        a = G__8396;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function cljs$reader$not_implemented(rdr, ch) {
  return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Reader for ", ch, " not implemented yet"], 0));
};
cljs.reader.read_dispatch = function cljs$reader$read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char(rdr);
  var dm = cljs.reader.dispatch_macros.cljs$core$IFn$_invoke$arity$1 ? cljs.reader.dispatch_macros.cljs$core$IFn$_invoke$arity$1(ch) : cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.cljs$core$IFn$_invoke$arity$2 ? dm.cljs$core$IFn$_invoke$arity$2(rdr, _) : dm.call(null, rdr, _);
  } else {
    var temp__4423__auto__ = cljs.reader.maybe_read_tagged_type.cljs$core$IFn$_invoke$arity$2 ? cljs.reader.maybe_read_tagged_type.cljs$core$IFn$_invoke$arity$2(rdr, ch) : cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var obj = temp__4423__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["No dispatch macro for ", ch], 0));
    }
  }
};
cljs.reader.read_unmatched_delimiter = function cljs$reader$read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Unmatched delimiter ", ch], 0));
};
cljs.reader.read_list = function cljs$reader$read_list(rdr, _) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.list, cljs.reader.read_delimited_list(")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function cljs$reader$read_vector(rdr, _) {
  return cljs.reader.read_delimited_list("]", rdr, true);
};
cljs.reader.read_map = function cljs$reader$read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list("}", rdr, true);
  if (cljs.core.odd_QMARK_(cljs.core.count(l))) {
    cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Map literal must contain an even number of forms"], 0));
  } else {
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, l);
};
cljs.reader.read_number = function cljs$reader$read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char(reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__4311__auto__ = ch == null;
      if (or__4311__auto__) {
        return or__4311__auto__;
      } else {
        var or__4311__auto____$1 = cljs.reader.whitespace_QMARK_(ch);
        if (or__4311__auto____$1) {
          return or__4311__auto____$1;
        } else {
          return cljs.reader.macros.cljs$core$IFn$_invoke$arity$1 ? cljs.reader.macros.cljs$core$IFn$_invoke$arity$1(ch) : cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread(reader, ch);
      var s = buffer.toString();
      var or__4311__auto__ = cljs.reader.match_number(s);
      if (cljs.core.truth_(or__4311__auto__)) {
        return or__4311__auto__;
      } else {
        return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["Invalid number format [", s, "]"], 0));
      }
    } else {
      var G__8397 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__8398 = cljs.reader.read_char(reader);
      buffer = G__8397;
      ch = G__8398;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function cljs$reader$read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char(reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["EOF while reading"], 0));
    } else {
      if ("\\" === ch) {
        var G__8399 = function() {
          buffer.append(cljs.reader.escape_char(buffer, reader));
          return buffer;
        }();
        var G__8400 = cljs.reader.read_char(reader);
        buffer = G__8399;
        ch = G__8400;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__8401 = function() {
            buffer.append(ch);
            return buffer;
          }();
          var G__8402 = cljs.reader.read_char(reader);
          buffer = G__8401;
          ch = G__8402;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.read_raw_string_STAR_ = function cljs$reader$read_raw_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char(reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["EOF while reading"], 0));
    } else {
      if ("\\" === ch) {
        buffer.append(ch);
        var nch = cljs.reader.read_char(reader);
        if (nch == null) {
          return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["EOF while reading"], 0));
        } else {
          var G__8407 = function() {
            var G__8405 = buffer;
            G__8405.append(nch);
            return G__8405;
          }();
          var G__8408 = cljs.reader.read_char(reader);
          buffer = G__8407;
          ch = G__8408;
          continue;
        }
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__8409 = function() {
            var G__8406 = buffer;
            G__8406.append(ch);
            return G__8406;
          }();
          var G__8410 = cljs.reader.read_char(reader);
          buffer = G__8409;
          ch = G__8410;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function cljs$reader$special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        if (t === "/") {
          return cljs.core.cst$sym$_SLASH_;
        } else {
          return not_found;
        }
      }
    }
  }
};
cljs.reader.read_symbol = function cljs$reader$read_symbol(reader, initch) {
  var token = cljs.reader.read_token(reader, initch);
  if (cljs.core.truth_(function() {
    var and__4299__auto__ = goog.string.contains(token, "/");
    if (cljs.core.truth_(and__4299__auto__)) {
      return !(token.length === 1);
    } else {
      return and__4299__auto__;
    }
  }())) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(token, 0, token.indexOf("/")), cljs.core.subs.cljs$core$IFn$_invoke$arity$3(token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols(token, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(token));
  }
};
cljs.reader.read_keyword = function cljs$reader$read_keyword(reader, initch) {
  var token = cljs.reader.read_token(reader, cljs.reader.read_char(reader));
  var a = cljs.reader.re_matches_STAR_(cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1)) {
    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["Invalid token: ", token__$1], 0));
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(token__$1);
    }
  }
};
cljs.reader.desugar_meta = function cljs$reader$desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$tag, f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$tag, f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        return f;
      }
    }
  }
};
cljs.reader.wrapping_reader = function cljs$reader$wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.reader.read.cljs$core$IFn$_invoke$arity$4 ? cljs.reader.read.cljs$core$IFn$_invoke$arity$4(rdr, true, null, true) : cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function cljs$reader$throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq([msg], 0));
  };
};
cljs.reader.read_meta = function cljs$reader$read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta(cljs.reader.read.cljs$core$IFn$_invoke$arity$4 ? cljs.reader.read.cljs$core$IFn$_invoke$arity$4(rdr, true, null, true) : cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_(m)) {
  } else {
    cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Metadata must be Symbol,Keyword,String or Map"], 0));
  }
  var o = cljs.reader.read.cljs$core$IFn$_invoke$arity$4 ? cljs.reader.read.cljs$core$IFn$_invoke$arity$4(rdr, true, null, true) : cljs.reader.read.call(null, rdr, true, null, true);
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 262144 || o.cljs$core$IWithMeta$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, o)) {
    return cljs.core.with_meta(o, cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.meta(o), m], 0)));
  } else {
    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Metadata can only be applied to IWithMetas"], 0));
  }
};
cljs.reader.read_set = function cljs$reader$read_set(rdr, _) {
  return cljs.core.set(cljs.reader.read_delimited_list("}", rdr, true));
};
cljs.reader.read_regex = function cljs$reader$read_regex(rdr, ch) {
  return cljs.core.re_pattern(cljs.reader.read_raw_string_STAR_(rdr, ch));
};
cljs.reader.read_discard = function cljs$reader$read_discard(rdr, _) {
  cljs.reader.read.cljs$core$IFn$_invoke$arity$4 ? cljs.reader.read.cljs$core$IFn$_invoke$arity$4(rdr, true, null, true) : cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function cljs$reader$macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader(cljs.core.cst$sym$quote);
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader(cljs.core.cst$sym$deref);
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function cljs$reader$dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "<") {
      return cljs.reader.throwing_reader("Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read = function cljs$reader$read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char(reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(reader, cljs.core.array_seq(["EOF while reading"], 0));
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_(ch)) {
        var G__8413 = reader;
        var G__8414 = eof_is_error;
        var G__8415 = sentinel;
        var G__8416 = is_recursive;
        reader = G__8413;
        eof_is_error = G__8414;
        sentinel = G__8415;
        is_recursive = G__8416;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_(ch)) {
          var G__8417 = cljs.reader.read_comment.cljs$core$IFn$_invoke$arity$2 ? cljs.reader.read_comment.cljs$core$IFn$_invoke$arity$2(reader, ch) : cljs.reader.read_comment.call(null, reader, ch);
          var G__8418 = eof_is_error;
          var G__8419 = sentinel;
          var G__8420 = is_recursive;
          reader = G__8417;
          eof_is_error = G__8418;
          sentinel = G__8419;
          is_recursive = G__8420;
          continue;
        } else {
          var f = cljs.reader.macros(ch);
          var res = cljs.core.truth_(f) ? f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(reader, ch) : f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_(reader, ch) ? cljs.reader.read_number(reader, ch) : cljs.reader.read_symbol(reader, ch);
          if (res === reader) {
            var G__8421 = reader;
            var G__8422 = eof_is_error;
            var G__8423 = sentinel;
            var G__8424 = is_recursive;
            reader = G__8421;
            eof_is_error = G__8422;
            sentinel = G__8423;
            is_recursive = G__8424;
            continue;
          } else {
            return res;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function cljs$reader$read_string(s) {
  if (typeof s === "string") {
  } else {
    throw new Error("Cannot read from non-string object.");
  }
  var r = cljs.reader.push_back_reader(s);
  return cljs.reader.read(r, false, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function cljs$reader$zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(width, cljs.core.count(s))) {
    return s;
  } else {
    if (width < cljs.core.count(s)) {
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s, 0, width);
    } else {
      var b = new goog.string.StringBuffer(s);
      while (true) {
        if (b.getLength() < width) {
          var G__8425 = b.append("0");
          b = G__8425;
          continue;
        } else {
          return b.toString();
        }
        break;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function cljs$reader$divisible_QMARK_(num, div) {
  return cljs.core.mod(num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function cljs$reader$indivisible_QMARK_(num, div) {
  return cljs.core.not(cljs.reader.divisible_QMARK_(num, div));
};
cljs.reader.leap_year_QMARK_ = function cljs$reader$leap_year_QMARK_(year) {
  var and__4299__auto__ = cljs.reader.divisible_QMARK_(year, 4);
  if (cljs.core.truth_(and__4299__auto__)) {
    var or__4311__auto__ = cljs.reader.indivisible_QMARK_(year, 100);
    if (cljs.core.truth_(or__4311__auto__)) {
      return or__4311__auto__;
    } else {
      return cljs.reader.divisible_QMARK_(year, 400);
    }
  } else {
    return and__4299__auto__;
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(dim_norm, dim_leap) {
    return function(month, leap_year_QMARK_) {
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
    };
  }(dim_norm, dim_leap);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function cljs$reader$parse_int(s) {
  var n = parseInt(s, 10);
  if (cljs.core.not(isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function cljs$reader$check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(null, cljs.core.array_seq([[cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("<="), cljs.core.str(n), cljs.core.str("<="), cljs.core.str(high)].join("")], 0));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function cljs$reader$parse_and_validate_timestamp(s) {
  var vec__8429 = cljs.core.re_matches(cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8429, 0, null);
  var years = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8429, 1, null);
  var months = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8429, 2, null);
  var days = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8429, 3, null);
  var hours = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8429, 4, null);
  var minutes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8429, 5, null);
  var seconds = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8429, 6, null);
  var fraction = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8429, 7, null);
  var offset_sign = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8429, 8, null);
  var offset_hours = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8429, 9, null);
  var offset_minutes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8429, 10, null);
  var v = vec__8429;
  if (cljs.core.not(v)) {
    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(null, cljs.core.array_seq([[cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join("")], 0));
  } else {
    var years__$1 = cljs.reader.parse_int(years);
    var months__$1 = function() {
      var or__4311__auto__ = cljs.reader.parse_int(months);
      if (cljs.core.truth_(or__4311__auto__)) {
        return or__4311__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__4311__auto__ = cljs.reader.parse_int(days);
      if (cljs.core.truth_(or__4311__auto__)) {
        return or__4311__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__4311__auto__ = cljs.reader.parse_int(hours);
      if (cljs.core.truth_(or__4311__auto__)) {
        return or__4311__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__4311__auto__ = cljs.reader.parse_int(minutes);
      if (cljs.core.truth_(or__4311__auto__)) {
        return or__4311__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__4311__auto__ = cljs.reader.parse_int(seconds);
      if (cljs.core.truth_(or__4311__auto__)) {
        return or__4311__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__4311__auto__ = cljs.reader.parse_int(cljs.reader.zero_fill_right_and_truncate(fraction, 3));
      if (cljs.core.truth_(or__4311__auto__)) {
        return or__4311__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__4311__auto__ = cljs.reader.parse_int(offset_hours);
      if (cljs.core.truth_(or__4311__auto__)) {
        return or__4311__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__4311__auto__ = cljs.reader.parse_int(offset_minutes);
      if (cljs.core.truth_(or__4311__auto__)) {
        return or__4311__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check(1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check(1, days__$1, function() {
      var G__8430 = months__$1;
      var G__8431 = cljs.reader.leap_year_QMARK_(years__$1);
      return cljs.reader.days_in_month.cljs$core$IFn$_invoke$arity$2 ? cljs.reader.days_in_month.cljs$core$IFn$_invoke$arity$2(G__8430, G__8431) : cljs.reader.days_in_month.call(null, G__8430, G__8431);
    }(), "timestamp day field must be in range 1..last day in month"), cljs.reader.check(0, hours__$1, 23, "timestamp hour field must be in range 0..23"), cljs.reader.check(0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check(0, seconds__$1, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check(0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], 
    null);
  }
};
cljs.reader.parse_timestamp = function cljs$reader$parse_timestamp(ts) {
  var temp__4423__auto__ = cljs.reader.parse_and_validate_timestamp(ts);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var vec__8433 = temp__4423__auto__;
    var years = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8433, 0, null);
    var months = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8433, 1, null);
    var days = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8433, 2, null);
    var hours = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8433, 3, null);
    var minutes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8433, 4, null);
    var seconds = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8433, 5, null);
    var ms = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8433, 6, null);
    var offset = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8433, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(null, cljs.core.array_seq([[cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join("")], 0));
  }
};
cljs.reader.read_date = function cljs$reader$read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp(s);
  } else {
    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(null, cljs.core.array_seq(["Instance literal expects a string for its timestamp."], 0));
  }
};
cljs.reader.read_queue = function cljs$reader$read_queue(elems) {
  if (cljs.core.vector_QMARK_(elems)) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(null, cljs.core.array_seq(["Queue literal expects a vector for its elements."], 0));
  }
};
cljs.reader.read_js = function cljs$reader$read_js(form) {
  if (cljs.core.vector_QMARK_(form)) {
    var arr = [];
    var seq__8446_8458 = cljs.core.seq(form);
    var chunk__8447_8459 = null;
    var count__8448_8460 = 0;
    var i__8449_8461 = 0;
    while (true) {
      if (i__8449_8461 < count__8448_8460) {
        var x_8462 = chunk__8447_8459.cljs$core$IIndexed$_nth$arity$2(null, i__8449_8461);
        arr.push(x_8462);
        var G__8463 = seq__8446_8458;
        var G__8464 = chunk__8447_8459;
        var G__8465 = count__8448_8460;
        var G__8466 = i__8449_8461 + 1;
        seq__8446_8458 = G__8463;
        chunk__8447_8459 = G__8464;
        count__8448_8460 = G__8465;
        i__8449_8461 = G__8466;
        continue;
      } else {
        var temp__4425__auto___8467 = cljs.core.seq(seq__8446_8458);
        if (temp__4425__auto___8467) {
          var seq__8446_8468__$1 = temp__4425__auto___8467;
          if (cljs.core.chunked_seq_QMARK_(seq__8446_8468__$1)) {
            var c__5095__auto___8469 = cljs.core.chunk_first(seq__8446_8468__$1);
            var G__8470 = cljs.core.chunk_rest(seq__8446_8468__$1);
            var G__8471 = c__5095__auto___8469;
            var G__8472 = cljs.core.count(c__5095__auto___8469);
            var G__8473 = 0;
            seq__8446_8458 = G__8470;
            chunk__8447_8459 = G__8471;
            count__8448_8460 = G__8472;
            i__8449_8461 = G__8473;
            continue;
          } else {
            var x_8474 = cljs.core.first(seq__8446_8468__$1);
            arr.push(x_8474);
            var G__8475 = cljs.core.next(seq__8446_8468__$1);
            var G__8476 = null;
            var G__8477 = 0;
            var G__8478 = 0;
            seq__8446_8458 = G__8475;
            chunk__8447_8459 = G__8476;
            count__8448_8460 = G__8477;
            i__8449_8461 = G__8478;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_(form)) {
      var obj = {};
      var seq__8452_8479 = cljs.core.seq(form);
      var chunk__8453_8480 = null;
      var count__8454_8481 = 0;
      var i__8455_8482 = 0;
      while (true) {
        if (i__8455_8482 < count__8454_8481) {
          var vec__8456_8483 = chunk__8453_8480.cljs$core$IIndexed$_nth$arity$2(null, i__8455_8482);
          var k_8484 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8456_8483, 0, null);
          var v_8485 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8456_8483, 1, null);
          obj[cljs.core.name(k_8484)] = v_8485;
          var G__8486 = seq__8452_8479;
          var G__8487 = chunk__8453_8480;
          var G__8488 = count__8454_8481;
          var G__8489 = i__8455_8482 + 1;
          seq__8452_8479 = G__8486;
          chunk__8453_8480 = G__8487;
          count__8454_8481 = G__8488;
          i__8455_8482 = G__8489;
          continue;
        } else {
          var temp__4425__auto___8490 = cljs.core.seq(seq__8452_8479);
          if (temp__4425__auto___8490) {
            var seq__8452_8491__$1 = temp__4425__auto___8490;
            if (cljs.core.chunked_seq_QMARK_(seq__8452_8491__$1)) {
              var c__5095__auto___8492 = cljs.core.chunk_first(seq__8452_8491__$1);
              var G__8493 = cljs.core.chunk_rest(seq__8452_8491__$1);
              var G__8494 = c__5095__auto___8492;
              var G__8495 = cljs.core.count(c__5095__auto___8492);
              var G__8496 = 0;
              seq__8452_8479 = G__8493;
              chunk__8453_8480 = G__8494;
              count__8454_8481 = G__8495;
              i__8455_8482 = G__8496;
              continue;
            } else {
              var vec__8457_8497 = cljs.core.first(seq__8452_8491__$1);
              var k_8498 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8457_8497, 0, null);
              var v_8499 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8457_8497, 1, null);
              obj[cljs.core.name(k_8498)] = v_8499;
              var G__8500 = cljs.core.next(seq__8452_8491__$1);
              var G__8501 = null;
              var G__8502 = 0;
              var G__8503 = 0;
              seq__8452_8479 = G__8500;
              chunk__8453_8480 = G__8501;
              count__8454_8481 = G__8502;
              i__8455_8482 = G__8503;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(null, cljs.core.array_seq([[cljs.core.str("JS literal expects a vector or map containing "), cljs.core.str("only string or unqualified keyword keys")].join("")], 0));
    }
  }
};
cljs.reader.read_uuid = function cljs$reader$read_uuid(uuid) {
  if (typeof uuid === "string") {
    return cljs.core.uuid(uuid);
  } else {
    return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(null, cljs.core.array_seq(["UUID literal expects a string as its representation."], 0));
  }
};
cljs.reader._STAR_tag_table_STAR_ = function() {
  var G__8504 = new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__8504) : cljs.core.atom.call(null, G__8504);
}();
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null) : cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function cljs$reader$maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol(rdr, initch);
  var pfn = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.reader._STAR_tag_table_STAR_) : cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.reader._STAR_default_data_reader_fn_STAR_) : cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    var G__8508 = cljs.reader.read(rdr, true, null, false);
    return pfn.cljs$core$IFn$_invoke$arity$1 ? pfn.cljs$core$IFn$_invoke$arity$1(G__8508) : pfn.call(null, G__8508);
  } else {
    if (cljs.core.truth_(dfn)) {
      var G__8509 = tag;
      var G__8510 = cljs.reader.read(rdr, true, null, false);
      return dfn.cljs$core$IFn$_invoke$arity$2 ? dfn.cljs$core$IFn$_invoke$arity$2(G__8509, G__8510) : dfn.call(null, G__8509, G__8510);
    } else {
      return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(rdr, cljs.core.array_seq(["Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.keys(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.reader._STAR_tag_table_STAR_) : cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))], 0))], 0));
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function cljs$reader$register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.reader._STAR_tag_table_STAR_) : cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function cljs$reader$deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.reader._STAR_tag_table_STAR_) : cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function cljs$reader$register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.reader._STAR_default_data_reader_fn_STAR_) : cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return f;
    };
  }(old_parser));
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function cljs$reader$deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.reader._STAR_default_data_reader_fn_STAR_) : cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return null;
    };
  }(old_parser));
  return old_parser;
};
goog.provide("cljs.tagged_literals");
goog.require("cljs.core");
goog.require("cljs.reader");
cljs.tagged_literals.read_queue = function cljs$tagged_literals$read_queue(form) {
  if (cljs.core.vector_QMARK_(form)) {
  } else {
    throw new Error("Queue literal expects a vector for its elements.");
  }
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, form), cljs.core.cst$sym$cljs$core$PersistentQueue$EMPTY), cljs.core.cst$sym$cljs$core_SLASH_into);
};
cljs.tagged_literals.read_uuid = function cljs$tagged_literals$read_uuid(form) {
  if (typeof form === "string") {
  } else {
    throw new Error("UUID literal expects a string as its representation.");
  }
  try {
    return cljs.core.uuid(form);
  } catch (e8376) {
    var e = e8376;
    throw new Error(e.message);
  }
};
cljs.tagged_literals.read_inst = function cljs$tagged_literals$read_inst(form) {
  if (typeof form === "string") {
  } else {
    throw new Error("Instance literal expects a string for its timestamp.");
  }
  try {
    return cljs.reader.read_date(form);
  } catch (e8378) {
    var e = e8378;
    throw new Error(e.message);
  }
};
cljs.tagged_literals.valid_js_literal_key_QMARK_ = function cljs$tagged_literals$valid_js_literal_key_QMARK_(k) {
  return typeof k === "string" || k instanceof cljs.core.Keyword && cljs.core.namespace(k) == null;
};
cljs.tagged_literals.JSValue = function(val) {
  this.val = val;
};
cljs.tagged_literals.JSValue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$val], null);
};
cljs.tagged_literals.JSValue.cljs$lang$type = true;
cljs.tagged_literals.JSValue.cljs$lang$ctorStr = "cljs.tagged-literals/JSValue";
cljs.tagged_literals.JSValue.cljs$lang$ctorPrWriter = function(this__4890__auto__, writer__4891__auto__, opt__4892__auto__) {
  return cljs.core._write(writer__4891__auto__, "cljs.tagged-literals/JSValue");
};
cljs.tagged_literals.__GT_JSValue = function cljs$tagged_literals$__GT_JSValue(val) {
  return new cljs.tagged_literals.JSValue(val);
};
cljs.tagged_literals.read_js = function cljs$tagged_literals$read_js(form) {
  if (cljs.core.vector_QMARK_(form) || cljs.core.map_QMARK_(form)) {
  } else {
    throw new Error("JavaScript literal must use map or vector notation");
  }
  if (!cljs.core.map_QMARK_(form) || cljs.core.every_QMARK_(cljs.tagged_literals.valid_js_literal_key_QMARK_, cljs.core.keys(form))) {
  } else {
    throw new Error("JavaScript literal keys must be strings or unqualified keywords");
  }
  return new cljs.tagged_literals.JSValue(form);
};
cljs.tagged_literals._STAR_cljs_data_readers_STAR_ = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$sym$queue, cljs.tagged_literals.read_queue, cljs.core.cst$sym$uuid, cljs.tagged_literals.read_uuid, cljs.core.cst$sym$inst, cljs.tagged_literals.read_inst, cljs.core.cst$sym$js, cljs.tagged_literals.read_js], null);
goog.provide("cljs.analyzer");
goog.require("cljs.core");
goog.require("clojure.set");
goog.require("goog.string");
goog.require("cljs.tools.reader");
goog.require("cljs.tagged_literals");
goog.require("cljs.tools.reader.reader_types");
goog.require("cljs.env");
goog.require("clojure.string");
goog.require("cljs.reader");
cljs.analyzer._STAR_cljs_ns_STAR_ = cljs.core.cst$sym$cljs$user;
cljs.analyzer._STAR_cljs_file_STAR_ = null;
cljs.analyzer._STAR_cljs_static_fns_STAR_ = false;
cljs.analyzer._STAR_cljs_macros_path_STAR_ = "/cljs/core";
cljs.analyzer._STAR_cljs_macros_is_classpath_STAR_ = true;
cljs.analyzer._STAR_cljs_dep_set_STAR_ = cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$dep_DASH_path, cljs.core.PersistentVector.EMPTY], null));
cljs.analyzer._STAR_analyze_deps_STAR_ = true;
cljs.analyzer._STAR_load_tests_STAR_ = true;
cljs.analyzer._STAR_load_macros_STAR_ = true;
cljs.analyzer._STAR_reload_macros_STAR_ = false;
cljs.analyzer._STAR_macro_infer_STAR_ = true;
cljs.analyzer._STAR_file_defs_STAR_ = null;
cljs.analyzer._STAR_verbose_STAR_ = false;
cljs.analyzer._cljs_macros_loaded = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false) : cljs.core.atom.call(null, false);
cljs.analyzer._STAR_cljs_warnings_STAR_ = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$invoke_DASH_ctor, cljs.core.cst$kw$extending_DASH_base_DASH_js_DASH_type, cljs.core.cst$kw$unsupported_DASH_preprocess_DASH_value, cljs.core.cst$kw$redef, cljs.core.cst$kw$unsupported_DASH_js_DASH_module_DASH_type, cljs.core.cst$kw$invalid_DASH_protocol_DASH_symbol, cljs.core.cst$kw$protocol_DASH_duped_DASH_method, cljs.core.cst$kw$munged_DASH_namespace, cljs.core.cst$kw$single_DASH_segment_DASH_namespace, 
cljs.core.cst$kw$fn_DASH_arity, cljs.core.cst$kw$variadic_DASH_max_DASH_arity, cljs.core.cst$kw$fn_DASH_deprecated, cljs.core.cst$kw$undeclared_DASH_var, cljs.core.cst$kw$preamble_DASH_missing, cljs.core.cst$kw$undeclared_DASH_protocol_DASH_symbol, cljs.core.cst$kw$dynamic, cljs.core.cst$kw$unprovided, cljs.core.cst$kw$ns_DASH_var_DASH_clash, cljs.core.cst$kw$undeclared_DASH_ns, cljs.core.cst$kw$undeclared_DASH_ns_DASH_form, cljs.core.cst$kw$invalid_DASH_arithmetic, cljs.core.cst$kw$protocol_DASH_deprecated, 
cljs.core.cst$kw$fn_DASH_var, cljs.core.cst$kw$overload_DASH_arity, cljs.core.cst$kw$protocol_DASH_multiple_DASH_impls, cljs.core.cst$kw$redef_DASH_in_DASH_file, cljs.core.cst$kw$protocol_DASH_invalid_DASH_method, cljs.core.cst$kw$extend_DASH_type_DASH_invalid_DASH_method_DASH_shape, cljs.core.cst$kw$multiple_DASH_variadic_DASH_overloads], [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, 
true, true]);
cljs.analyzer.js_reserved = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 61, ["typeof", null, "float", null, "implements", null, "else", null, "boolean", null, "abstract", null, "int", null, "static", null, "package", null, "this", null, "yield", null, "interface", null, "void", null, "delete", null, "class", null, "export", null, "var", null, "try", null, "long", null, "null", null, "return", null, "methods", null, "native", null, "private", null, "new", null, "for", 
null, "catch", null, "extends", null, "short", null, "protected", null, "throws", null, "synchronized", null, "transient", null, "super", null, "if", null, "let", null, "import", null, "char", null, "switch", null, "const", null, "case", null, "break", null, "volatile", null, "function", null, "continue", null, "final", null, "do", null, "double", null, "while", null, "public", null, "arguments", null, "debugger", null, "with", null, "instanceof", null, "default", null, "throw", null, "goto", null, 
"finally", null, "byte", null, "in", null, "enum", null], null), null);
cljs.analyzer.SENTINEL = {};
cljs.analyzer.gets = function cljs$analyzer$gets() {
  var args8835 = [];
  var len__5350__auto___8838 = arguments.length;
  var i__5351__auto___8839 = 0;
  while (true) {
    if (i__5351__auto___8839 < len__5350__auto___8838) {
      args8835.push(arguments[i__5351__auto___8839]);
      var G__8840 = i__5351__auto___8839 + 1;
      i__5351__auto___8839 = G__8840;
      continue;
    } else {
    }
    break;
  }
  var G__8837 = args8835.length;
  switch(G__8837) {
    case 3:
      return cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8835.length)].join(""));;
  }
};
cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3 = function(m, k0, k1) {
  var m__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m, k0, cljs.analyzer.SENTINEL);
  if (m__$1 === cljs.analyzer.SENTINEL) {
    return null;
  } else {
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$1, k1);
  }
};
cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4 = function(m, k0, k1, k2) {
  var m__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m, k0, cljs.analyzer.SENTINEL);
  if (m__$1 === cljs.analyzer.SENTINEL) {
    return null;
  } else {
    var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, k1, cljs.analyzer.SENTINEL);
    if (m__$2 === cljs.analyzer.SENTINEL) {
      return null;
    } else {
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$2, k2);
    }
  }
};
cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5 = function(m, k0, k1, k2, k3) {
  var m__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m, k0, cljs.analyzer.SENTINEL);
  if (m__$1 === cljs.analyzer.SENTINEL) {
    return null;
  } else {
    var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, k1, cljs.analyzer.SENTINEL);
    if (m__$2 === cljs.analyzer.SENTINEL) {
      return null;
    } else {
      var m__$3 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$2, k2, cljs.analyzer.SENTINEL);
      if (m__$3 === cljs.analyzer.SENTINEL) {
        return null;
      } else {
        return cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$3, k3);
      }
    }
  }
};
cljs.analyzer.gets.cljs$lang$maxFixedArity = 5;
cljs.analyzer.CLJ_NIL_SYM = cljs.core.cst$sym$clj_DASH_nil;
cljs.analyzer.NUMBER_SYM = cljs.core.cst$sym$number;
cljs.analyzer.STRING_SYM = cljs.core.cst$sym$string;
cljs.analyzer.BOOLEAN_SYM = cljs.core.cst$sym$boolean;
cljs.analyzer.JS_STAR_SYM = cljs.core.cst$sym$js_STAR_;
cljs.analyzer.DOT_SYM = cljs.core.cst$sym$$;
cljs.analyzer.NEW_SYM = cljs.core.cst$sym$new;
cljs.analyzer.CLJS_CORE_SYM = cljs.core.cst$sym$cljs$core;
cljs.analyzer.CLJS_CORE_MACROS_SYM = cljs.core.cst$sym$cljs$core$macros;
cljs.analyzer.IGNORE_SYM = cljs.core.cst$sym$ignore;
cljs.analyzer.ANY_SYM = cljs.core.cst$sym$any;
cljs.analyzer.cljs_seq_QMARK_ = function cljs$analyzer$cljs_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 64 || x.cljs$core$ISeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.analyzer.cljs_map_QMARK_ = function cljs$analyzer$cljs_map_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 1024 || x.cljs$core$IMap$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.analyzer.cljs_vector_QMARK_ = function cljs$analyzer$cljs_vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || x.cljs$core$IVector$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.analyzer.cljs_set_QMARK_ = function cljs$analyzer$cljs_set_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 4096 || x.cljs$core$ISet$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.analyzer.munge_path = function cljs$analyzer$munge_path(ss) {
  return cljs.core.munge([cljs.core.str(ss)].join(""));
};
cljs.analyzer.ns__GT_relpath = function cljs$analyzer$ns__GT_relpath() {
  var args8850 = [];
  var len__5350__auto___8853 = arguments.length;
  var i__5351__auto___8854 = 0;
  while (true) {
    if (i__5351__auto___8854 < len__5350__auto___8853) {
      args8850.push(arguments[i__5351__auto___8854]);
      var G__8855 = i__5351__auto___8854 + 1;
      i__5351__auto___8854 = G__8855;
      continue;
    } else {
    }
    break;
  }
  var G__8852 = args8850.length;
  switch(G__8852) {
    case 1:
      return cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8850.length)].join(""));;
  }
};
cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$1 = function(ns) {
  return cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns, cljs.core.cst$kw$cljs);
};
cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2 = function(ns, ext) {
  return [cljs.core.str(clojure.string.replace(cljs.analyzer.munge_path(ns), ".", "/")), cljs.core.str("."), cljs.core.str(cljs.core.name(ext))].join("");
};
cljs.analyzer.ns__GT_relpath.cljs$lang$maxFixedArity = 2;
cljs.analyzer.topo_sort = function cljs$analyzer$topo_sort() {
  var args8857 = [];
  var len__5350__auto___8871 = arguments.length;
  var i__5351__auto___8872 = 0;
  while (true) {
    if (i__5351__auto___8872 < len__5350__auto___8871) {
      args8857.push(arguments[i__5351__auto___8872]);
      var G__8873 = i__5351__auto___8872 + 1;
      i__5351__auto___8872 = G__8873;
      continue;
    } else {
    }
    break;
  }
  var G__8859 = args8857.length;
  switch(G__8859) {
    case 2:
      return cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8857.length)].join(""));;
  }
};
cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$2 = function(x, get_deps) {
  return cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4(x, 0, function() {
    var G__8860 = cljs.core.sorted_map();
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__8860) : cljs.core.atom.call(null, G__8860);
  }(), cljs.core.memoize(get_deps));
};
cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4 = function(x, depth, state, memo_get_deps) {
  var deps = memo_get_deps.cljs$core$IFn$_invoke$arity$1 ? memo_get_deps.cljs$core$IFn$_invoke$arity$1(x) : memo_get_deps.call(null, x);
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [depth], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.into, cljs.core.PersistentHashSet.EMPTY), cljs.core.array_seq([deps], 0));
  var seq__8861_8875 = cljs.core.seq(deps);
  var chunk__8862_8876 = null;
  var count__8863_8877 = 0;
  var i__8864_8878 = 0;
  while (true) {
    if (i__8864_8878 < count__8863_8877) {
      var dep_8879 = chunk__8862_8876.cljs$core$IIndexed$_nth$arity$2(null, i__8864_8878);
      cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4(dep_8879, depth + 1, state, memo_get_deps);
      var G__8880 = seq__8861_8875;
      var G__8881 = chunk__8862_8876;
      var G__8882 = count__8863_8877;
      var G__8883 = i__8864_8878 + 1;
      seq__8861_8875 = G__8880;
      chunk__8862_8876 = G__8881;
      count__8863_8877 = G__8882;
      i__8864_8878 = G__8883;
      continue;
    } else {
      var temp__4425__auto___8884 = cljs.core.seq(seq__8861_8875);
      if (temp__4425__auto___8884) {
        var seq__8861_8885__$1 = temp__4425__auto___8884;
        if (cljs.core.chunked_seq_QMARK_(seq__8861_8885__$1)) {
          var c__5095__auto___8886 = cljs.core.chunk_first(seq__8861_8885__$1);
          var G__8887 = cljs.core.chunk_rest(seq__8861_8885__$1);
          var G__8888 = c__5095__auto___8886;
          var G__8889 = cljs.core.count(c__5095__auto___8886);
          var G__8890 = 0;
          seq__8861_8875 = G__8887;
          chunk__8862_8876 = G__8888;
          count__8863_8877 = G__8889;
          i__8864_8878 = G__8890;
          continue;
        } else {
          var dep_8891 = cljs.core.first(seq__8861_8885__$1);
          cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4(dep_8891, depth + 1, state, memo_get_deps);
          var G__8892 = cljs.core.next(seq__8861_8885__$1);
          var G__8893 = null;
          var G__8894 = 0;
          var G__8895 = 0;
          seq__8861_8875 = G__8892;
          chunk__8862_8876 = G__8893;
          count__8863_8877 = G__8894;
          i__8864_8878 = G__8895;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var seq__8865_8896 = cljs.core.seq(cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(state) : cljs.core.deref.call(null, state), cljs.core._LT_, depth));
  var chunk__8866_8897 = null;
  var count__8867_8898 = 0;
  var i__8868_8899 = 0;
  while (true) {
    if (i__8868_8899 < count__8867_8898) {
      var vec__8869_8900 = chunk__8866_8897.cljs$core$IIndexed$_nth$arity$2(null, i__8868_8899);
      var _LT_depth_8901 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8869_8900, 0, null);
      var __8902 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8869_8900, 1, null);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [_LT_depth_8901], null), clojure.set.difference, cljs.core.array_seq([deps], 0));
      var G__8903 = seq__8865_8896;
      var G__8904 = chunk__8866_8897;
      var G__8905 = count__8867_8898;
      var G__8906 = i__8868_8899 + 1;
      seq__8865_8896 = G__8903;
      chunk__8866_8897 = G__8904;
      count__8867_8898 = G__8905;
      i__8868_8899 = G__8906;
      continue;
    } else {
      var temp__4425__auto___8907 = cljs.core.seq(seq__8865_8896);
      if (temp__4425__auto___8907) {
        var seq__8865_8908__$1 = temp__4425__auto___8907;
        if (cljs.core.chunked_seq_QMARK_(seq__8865_8908__$1)) {
          var c__5095__auto___8909 = cljs.core.chunk_first(seq__8865_8908__$1);
          var G__8910 = cljs.core.chunk_rest(seq__8865_8908__$1);
          var G__8911 = c__5095__auto___8909;
          var G__8912 = cljs.core.count(c__5095__auto___8909);
          var G__8913 = 0;
          seq__8865_8896 = G__8910;
          chunk__8866_8897 = G__8911;
          count__8867_8898 = G__8912;
          i__8868_8899 = G__8913;
          continue;
        } else {
          var vec__8870_8914 = cljs.core.first(seq__8865_8908__$1);
          var _LT_depth_8915 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8870_8914, 0, null);
          var __8916 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8870_8914, 1, null);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [_LT_depth_8915], null), clojure.set.difference, cljs.core.array_seq([deps], 0));
          var G__8917 = cljs.core.next(seq__8865_8908__$1);
          var G__8918 = null;
          var G__8919 = 0;
          var G__8920 = 0;
          seq__8865_8896 = G__8917;
          chunk__8866_8897 = G__8918;
          count__8867_8898 = G__8919;
          i__8868_8899 = G__8920;
          continue;
        }
      } else {
      }
    }
    break;
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(depth, 0)) {
    return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.vals(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(state) : cljs.core.deref.call(null, state))));
  } else {
    return null;
  }
};
cljs.analyzer.topo_sort.cljs$lang$maxFixedArity = 4;
cljs.analyzer.ast_QMARK_ = function cljs$analyzer$ast_QMARK_(x) {
  return cljs.core.map_QMARK_(x) && cljs.core.contains_QMARK_(x, cljs.core.cst$kw$op);
};
if (typeof cljs.analyzer.error_message !== "undefined") {
} else {
  cljs.analyzer.error_message = function() {
    var method_table__5205__auto__ = function() {
      var G__8921 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__8921) : cljs.core.atom.call(null, G__8921);
    }();
    var prefer_table__5206__auto__ = function() {
      var G__8922 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__8922) : cljs.core.atom.call(null, G__8922);
    }();
    var method_cache__5207__auto__ = function() {
      var G__8923 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__8923) : cljs.core.atom.call(null, G__8923);
    }();
    var cached_hierarchy__5208__auto__ = function() {
      var G__8924 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__8924) : cljs.core.atom.call(null, G__8924);
    }();
    var hierarchy__5209__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY, cljs.core.cst$kw$hierarchy, cljs.core.get_global_hierarchy());
    return new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("cljs.analyzer", "error-message"), function(method_table__5205__auto__, prefer_table__5206__auto__, method_cache__5207__auto__, cached_hierarchy__5208__auto__, hierarchy__5209__auto__) {
      return function() {
        var G__8925__delegate = function(warning_type, _) {
          return warning_type;
        };
        var G__8925 = function(warning_type, var_args) {
          var _ = null;
          if (arguments.length > 1) {
            var G__8926__i = 0, G__8926__a = new Array(arguments.length - 1);
            while (G__8926__i < G__8926__a.length) {
              G__8926__a[G__8926__i] = arguments[G__8926__i + 1];
              ++G__8926__i;
            }
            _ = new cljs.core.IndexedSeq(G__8926__a, 0);
          }
          return G__8925__delegate.call(this, warning_type, _);
        };
        G__8925.cljs$lang$maxFixedArity = 1;
        G__8925.cljs$lang$applyTo = function(arglist__8927) {
          var warning_type = cljs.core.first(arglist__8927);
          var _ = cljs.core.rest(arglist__8927);
          return G__8925__delegate(warning_type, _);
        };
        G__8925.cljs$core$IFn$_invoke$arity$variadic = G__8925__delegate;
        return G__8925;
      }();
    }(method_table__5205__auto__, prefer_table__5206__auto__, method_cache__5207__auto__, cached_hierarchy__5208__auto__, hierarchy__5209__auto__), cljs.core.cst$kw$default, hierarchy__5209__auto__, method_table__5205__auto__, prefer_table__5206__auto__, method_cache__5207__auto__, cached_hierarchy__5208__auto__);
  }();
}
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$preamble_DASH_missing, function(warning_type, info) {
  return [cljs.core.str("Preamble resource file not found: "), cljs.core.str(clojure.string.join.cljs$core$IFn$_invoke$arity$2(" ", cljs.core.cst$kw$missing.cljs$core$IFn$_invoke$arity$1(info)))].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$unprovided, function(warning_type, info) {
  return [cljs.core.str("Required namespace not provided for "), cljs.core.str(clojure.string.join.cljs$core$IFn$_invoke$arity$2(" ", cljs.core.cst$kw$unprovided.cljs$core$IFn$_invoke$arity$1(info)))].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$undeclared_DASH_var, function(warning_type, info) {
  return [cljs.core.str("Use of undeclared Var "), cljs.core.str(cljs.core.cst$kw$prefix.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str("/"), cljs.core.str(cljs.core.cst$kw$suffix.cljs$core$IFn$_invoke$arity$1(info))].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$undeclared_DASH_ns, function(warning_type, p__8928) {
  var map__8929 = p__8928;
  var map__8929__$1 = (!(map__8929 == null) ? map__8929.cljs$lang$protocol_mask$partition0$ & 64 || map__8929.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__8929) : map__8929;
  var info = map__8929__$1;
  var ns_sym = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8929__$1, cljs.core.cst$kw$ns_DASH_sym);
  var js_provide = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8929__$1, cljs.core.cst$kw$js_DASH_provide);
  return [cljs.core.str("No such namespace: "), cljs.core.str(ns_sym), cljs.core.str(", could not locate "), cljs.core.str(cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym, cljs.core.cst$kw$cljs)), cljs.core.str(", "), cljs.core.str(cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym, cljs.core.cst$kw$cljc)), cljs.core.str(', or Closure namespace "'), cljs.core.str(js_provide), cljs.core.str('"')].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$dynamic, function(warning_type, info) {
  return [cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" not declared ^:dynamic")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$redef, function(warning_type, info) {
  return [cljs.core.str(cljs.core.cst$kw$sym.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" already refers to: "), cljs.core.str(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(info))].join(""), [cljs.core.str(cljs.core.cst$kw$sym.cljs$core$IFn$_invoke$arity$1(info))].join(""))), cljs.core.str(" being replaced by: "), cljs.core.str(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(cljs.core.cst$kw$ns_DASH_name.cljs$core$IFn$_invoke$arity$1(info))].join(""), 
  [cljs.core.str(cljs.core.cst$kw$sym.cljs$core$IFn$_invoke$arity$1(info))].join("")))].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$redef_DASH_in_DASH_file, function(warning_type, info) {
  return [cljs.core.str(cljs.core.cst$kw$sym.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" at line "), cljs.core.str(cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" is being replaced")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$fn_DASH_var, function(warning_type, info) {
  return [cljs.core.str(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(cljs.core.cst$kw$ns_DASH_name.cljs$core$IFn$_invoke$arity$1(info))].join(""), [cljs.core.str(cljs.core.cst$kw$sym.cljs$core$IFn$_invoke$arity$1(info))].join(""))), cljs.core.str(" no longer fn, references are stale")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$fn_DASH_arity, function(warning_type, info) {
  return [cljs.core.str("Wrong number of args ("), cljs.core.str(cljs.core.cst$kw$argc.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(") passed to "), cljs.core.str(function() {
    var or__4311__auto__ = cljs.core.cst$kw$ctor.cljs$core$IFn$_invoke$arity$1(info);
    if (cljs.core.truth_(or__4311__auto__)) {
      return or__4311__auto__;
    } else {
      return cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(info);
    }
  }())].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$fn_DASH_deprecated, function(warning_type, info) {
  return [cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$fexpr.cljs$core$IFn$_invoke$arity$1(info)))), cljs.core.str(" is deprecated.")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$undeclared_DASH_ns_DASH_form, function(warning_type, info) {
  return [cljs.core.str("Referred "), cljs.core.str(cljs.core.cst$kw$type.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" "), cljs.core.str(cljs.core.cst$kw$lib.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str("/"), cljs.core.str(cljs.core.cst$kw$sym.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" does not exist")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$protocol_DASH_deprecated, function(warning_type, info) {
  return [cljs.core.str("Protocol "), cljs.core.str(cljs.core.cst$kw$protocol.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" is deprecated")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$undeclared_DASH_protocol_DASH_symbol, function(warning_type, info) {
  return [cljs.core.str("Can't resolve protocol symbol "), cljs.core.str(cljs.core.cst$kw$protocol.cljs$core$IFn$_invoke$arity$1(info))].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$invalid_DASH_protocol_DASH_symbol, function(warning_type, info) {
  return [cljs.core.str("Symbol "), cljs.core.str(cljs.core.cst$kw$protocol.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" is not a protocol")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$protocol_DASH_invalid_DASH_method, function(warning_type, info) {
  if (cljs.core.truth_(cljs.core.cst$kw$no_DASH_such_DASH_method.cljs$core$IFn$_invoke$arity$1(info))) {
    return [cljs.core.str("Bad method signature in protocol implementation, "), cljs.core.str(cljs.core.cst$kw$protocol.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" does not declare method called "), cljs.core.str(cljs.core.cst$kw$fname.cljs$core$IFn$_invoke$arity$1(info))].join("");
  } else {
    return [cljs.core.str("Bad method signature in protocol implementation, "), cljs.core.str(cljs.core.cst$kw$protocol.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" "), cljs.core.str(cljs.core.cst$kw$fname.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" does not declare arity "), cljs.core.str(cljs.core.cst$kw$invalid_DASH_arity.cljs$core$IFn$_invoke$arity$1(info))].join("");
  }
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$protocol_DASH_duped_DASH_method, function(warning_type, info) {
  return [cljs.core.str("Duplicated methods in protocol implementation "), cljs.core.str(cljs.core.cst$kw$protocol.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" "), cljs.core.str(cljs.core.cst$kw$fname.cljs$core$IFn$_invoke$arity$1(info))].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$protocol_DASH_multiple_DASH_impls, function(warning_type, info) {
  return [cljs.core.str("Protocol "), cljs.core.str(cljs.core.cst$kw$protocol.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" implemented multiple times")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$multiple_DASH_variadic_DASH_overloads, function(warning_type, info) {
  return [cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(": Can't have more than 1 variadic overload")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$variadic_DASH_max_DASH_arity, function(warning_type, info) {
  return [cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(": Can't have fixed arity function with more params than variadic function")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$overload_DASH_arity, function(warning_type, info) {
  return [cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(": Can't have 2 overloads with same arity")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$extending_DASH_base_DASH_js_DASH_type, function(warning_type, info) {
  return [cljs.core.str("Extending an existing JavaScript type - use a different symbol name "), cljs.core.str("instead of "), cljs.core.str(cljs.core.cst$kw$current_DASH_symbol.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" e.g "), cljs.core.str(cljs.core.cst$kw$suggested_DASH_symbol.cljs$core$IFn$_invoke$arity$1(info))].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$invalid_DASH_arithmetic, function(warning_type, info) {
  return [cljs.core.str(cljs.core.cst$kw$js_DASH_op.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(", all arguments must be numbers, got "), cljs.core.str(cljs.core.cst$kw$types.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" instead.")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$invoke_DASH_ctor, function(warning_type, info) {
  return [cljs.core.str("Cannot invoke type constructor "), cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$fexpr.cljs$core$IFn$_invoke$arity$1(info)))), cljs.core.str(" as function ")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$single_DASH_segment_DASH_namespace, function(warning_type, info) {
  return [cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(info)), cljs.core.str(" is a single segment namespace")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$munged_DASH_namespace, function(warning_type, p__8932) {
  var map__8933 = p__8932;
  var map__8933__$1 = (!(map__8933 == null) ? map__8933.cljs$lang$protocol_mask$partition0$ & 64 || map__8933.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__8933) : map__8933;
  var info = map__8933__$1;
  var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8933__$1, cljs.core.cst$kw$name);
  var munged = cljs.core.munge(clojure.string.join.cljs$core$IFn$_invoke$arity$2(".", cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(map__8933, map__8933__$1, info, name) {
    return function(p1__8931_SHARP_) {
      if (cljs.core.truth_(cljs.analyzer.js_reserved.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.js_reserved.cljs$core$IFn$_invoke$arity$1(p1__8931_SHARP_) : cljs.analyzer.js_reserved.call(null, p1__8931_SHARP_))) {
        return [cljs.core.str(p1__8931_SHARP_), cljs.core.str("$")].join("");
      } else {
        return p1__8931_SHARP_;
      }
    };
  }(map__8933, map__8933__$1, info, name), clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(name), /\./))));
  return [cljs.core.str("Namespace "), cljs.core.str(name), cljs.core.str(" contains a reserved JavaScript keyword,"), cljs.core.str(" the corresponding Google Closure namespace will be munged to "), cljs.core.str(munged)].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$ns_DASH_var_DASH_clash, function(warning_type, p__8935) {
  var map__8936 = p__8935;
  var map__8936__$1 = (!(map__8936 == null) ? map__8936.cljs$lang$protocol_mask$partition0$ & 64 || map__8936.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__8936) : map__8936;
  var info = map__8936__$1;
  var ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8936__$1, cljs.core.cst$kw$ns);
  var var$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8936__$1, cljs.core.cst$kw$var);
  return [cljs.core.str("Namespace "), cljs.core.str(ns), cljs.core.str(" clashes with var "), cljs.core.str(var$)].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$extend_DASH_type_DASH_invalid_DASH_method_DASH_shape, function(warning_type, p__8938) {
  var map__8939 = p__8938;
  var map__8939__$1 = (!(map__8939 == null) ? map__8939.cljs$lang$protocol_mask$partition0$ & 64 || map__8939.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__8939) : map__8939;
  var info = map__8939__$1;
  var protocol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8939__$1, cljs.core.cst$kw$protocol);
  var method = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8939__$1, cljs.core.cst$kw$method);
  return [cljs.core.str("Bad extend-type method shape for protocol "), cljs.core.str(protocol), cljs.core.str(" method "), cljs.core.str(method), cljs.core.str(", method arities must be grouped together")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$unsupported_DASH_js_DASH_module_DASH_type, function(warning_type, p__8941) {
  var map__8942 = p__8941;
  var map__8942__$1 = (!(map__8942 == null) ? map__8942.cljs$lang$protocol_mask$partition0$ & 64 || map__8942.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__8942) : map__8942;
  var info = map__8942__$1;
  var module_type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8942__$1, cljs.core.cst$kw$module_DASH_type);
  var file = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8942__$1, cljs.core.cst$kw$file);
  return [cljs.core.str("Unsupported JavaScript module type "), cljs.core.str(module_type), cljs.core.str(" for foreign library "), cljs.core.str(file), cljs.core.str(".")].join("");
});
cljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$unsupported_DASH_preprocess_DASH_value, function(warning_type, p__8944) {
  var map__8945 = p__8944;
  var map__8945__$1 = (!(map__8945 == null) ? map__8945.cljs$lang$protocol_mask$partition0$ & 64 || map__8945.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__8945) : map__8945;
  var preprocess = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8945__$1, cljs.core.cst$kw$preprocess);
  var file = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8945__$1, cljs.core.cst$kw$file);
  return [cljs.core.str("Unsupported preprocess value "), cljs.core.str(preprocess), cljs.core.str(" for foreign library "), cljs.core.str(file), cljs.core.str(".")].join("");
});
cljs.analyzer.default_warning_handler = function cljs$analyzer$default_warning_handler(warning_type, env, extra) {
  if (cljs.core.truth_(warning_type.cljs$core$IFn$_invoke$arity$1 ? warning_type.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_warnings_STAR_) : warning_type.call(null, cljs.analyzer._STAR_cljs_warnings_STAR_))) {
    var temp__4425__auto__ = cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(warning_type, extra) : cljs.analyzer.error_message.call(null, warning_type, extra);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var s = temp__4425__auto__;
      var _STAR_print_fn_STAR_8950 = cljs.core._STAR_print_fn_STAR_;
      cljs.core._STAR_print_fn_STAR_ = cljs.core._STAR_print_err_fn_STAR_;
      try {
        return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([function() {
          var G__8951 = env;
          var G__8952 = [cljs.core.str("WARNING: "), cljs.core.str(s)].join("");
          return cljs.analyzer.message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.message.cljs$core$IFn$_invoke$arity$2(G__8951, G__8952) : cljs.analyzer.message.call(null, G__8951, G__8952);
        }()], 0));
      } finally {
        cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_8950;
      }
    } else {
      return null;
    }
  } else {
    return null;
  }
};
cljs.analyzer._STAR_cljs_warning_handlers_STAR_ = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.default_warning_handler], null);
cljs.analyzer.gen_constant_id = function cljs$analyzer$gen_constant_id(value) {
  var prefix = value instanceof cljs.core.Keyword ? "cst$kw$" : value instanceof cljs.core.Symbol ? "cst$sym$" : function() {
    throw new Error([cljs.core.str("constant type "), cljs.core.str(cljs.core.type(value)), cljs.core.str(" not supported")].join(""));
  }();
  var name = value instanceof cljs.core.Keyword ? cljs.core.subs.cljs$core$IFn$_invoke$arity$2([cljs.core.str(value)].join(""), 1) : [cljs.core.str(value)].join("");
  var name__$1 = clojure.string.replace(cljs.core.munge(clojure.string.replace(name, "-", "_DASH_")), ".", "$");
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix), cljs.core.str(name__$1)].join(""));
};
cljs.analyzer.register_constant_BANG_ = function cljs$analyzer$register_constant_BANG_() {
  var args8953 = [];
  var len__5350__auto___8961 = arguments.length;
  var i__5351__auto___8962 = 0;
  while (true) {
    if (i__5351__auto___8962 < len__5350__auto___8961) {
      args8953.push(arguments[i__5351__auto___8962]);
      var G__8963 = i__5351__auto___8962 + 1;
      i__5351__auto___8962 = G__8963;
      continue;
    } else {
    }
    break;
  }
  var G__8955 = args8953.length;
  switch(G__8955) {
    case 1:
      return cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8953.length)].join(""));;
  }
};
cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$1 = function(val) {
  return cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2(null, val);
};
cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2 = function(env, val) {
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_, function(cenv) {
    var G__8956 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cenv, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_constant_DASH_table], null), function(table) {
      if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(table, val))) {
        return table;
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(table, val, cljs.analyzer.gen_constant_id(val));
      }
    });
    var G__8956__$1 = cljs.core.truth_(env) ? cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__8956, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env)), cljs.core.cst$kw$cljs$analyzer_SLASH_constants], null), function(G__8956) {
      return function(p__8957) {
        var map__8958 = p__8957;
        var map__8958__$1 = (!(map__8958 == null) ? map__8958.cljs$lang$protocol_mask$partition0$ & 64 || map__8958.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__8958) : map__8958;
        var constants = map__8958__$1;
        var seen = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__8958__$1, cljs.core.cst$kw$seen, cljs.core.PersistentHashSet.EMPTY);
        var order = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__8958__$1, cljs.core.cst$kw$order, cljs.core.PersistentVector.EMPTY);
        var G__8960 = constants;
        var G__8960__$1 = !cljs.core.contains_QMARK_(seen, val) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__8960, cljs.core.cst$kw$seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen, val), cljs.core.array_seq([cljs.core.cst$kw$order, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(order, val)], 0)) : G__8960;
        return G__8960__$1;
      };
    }(G__8956)) : G__8956;
    return G__8956__$1;
  });
};
cljs.analyzer.register_constant_BANG_.cljs$lang$maxFixedArity = 2;
cljs.analyzer.default_namespaces = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$sym$cljs$core, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, cljs.core.cst$sym$cljs$core], null), cljs.core.cst$sym$cljs$user, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, cljs.core.cst$sym$cljs$user], null)], null);
cljs.analyzer.namespaces = function() {
  if (typeof cljs.analyzer.t8965 !== "undefined") {
  } else {
    cljs.analyzer.t8965 = function(meta8966) {
      this.meta8966 = meta8966;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.analyzer.t8965.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_8967, meta8966__$1) {
      var self__ = this;
      var _8967__$1 = this;
      return new cljs.analyzer.t8965(meta8966__$1);
    };
    cljs.analyzer.t8965.prototype.cljs$core$IMeta$_meta$arity$1 = function(_8967) {
      var self__ = this;
      var _8967__$1 = this;
      return self__.meta8966;
    };
    cljs.analyzer.t8965.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      if (!(cljs.env._STAR_compiler_STAR_ == null)) {
        return cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces.cljs$core$IFn$_invoke$arity$1(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_));
      } else {
        return cljs.analyzer.default_namespaces;
      }
    };
    cljs.analyzer.t8965.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$meta8966], null);
    };
    cljs.analyzer.t8965.cljs$lang$type = true;
    cljs.analyzer.t8965.cljs$lang$ctorStr = "cljs.analyzer/t8965";
    cljs.analyzer.t8965.cljs$lang$ctorPrWriter = function(this__4890__auto__, writer__4891__auto__, opt__4892__auto__) {
      return cljs.core._write(writer__4891__auto__, "cljs.analyzer/t8965");
    };
    cljs.analyzer.__GT_t8965 = function cljs$analyzer$__GT_t8965(meta8966) {
      return new cljs.analyzer.t8965(meta8966);
    };
  }
  return new cljs.analyzer.t8965(cljs.core.PersistentArrayMap.EMPTY);
}();
cljs.analyzer.get_namespace = function cljs$analyzer$get_namespace() {
  var args8968 = [];
  var len__5350__auto___8971 = arguments.length;
  var i__5351__auto___8972 = 0;
  while (true) {
    if (i__5351__auto___8972 < len__5350__auto___8971) {
      args8968.push(arguments[i__5351__auto___8972]);
      var G__8973 = i__5351__auto___8972 + 1;
      i__5351__auto___8972 = G__8973;
      continue;
    } else {
    }
    break;
  }
  var G__8970 = args8968.length;
  switch(G__8970) {
    case 1:
      return cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8968.length)].join(""));;
  }
};
cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1 = function(key) {
  return cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_, key);
};
cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2 = function(cenv, key) {
  var ns = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cenv) : cljs.core.deref.call(null, cenv), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, key], null));
  if (!(ns == null)) {
    return ns;
  } else {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$cljs$user, key)) {
      return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, cljs.core.cst$sym$cljs$user], null);
    } else {
      return null;
    }
  }
};
cljs.analyzer.get_namespace.cljs$lang$maxFixedArity = 2;
cljs.analyzer.get_line = function cljs$analyzer$get_line(x, env) {
  var or__4311__auto__ = cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(x));
  if (cljs.core.truth_(or__4311__auto__)) {
    return or__4311__auto__;
  } else {
    return cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1(env);
  }
};
cljs.analyzer.get_col = function cljs$analyzer$get_col(x, env) {
  var or__4311__auto__ = cljs.core.cst$kw$column.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(x));
  if (cljs.core.truth_(or__4311__auto__)) {
    return or__4311__auto__;
  } else {
    return cljs.core.cst$kw$column.cljs$core$IFn$_invoke$arity$1(env);
  }
};
cljs.analyzer.intern_macros = function cljs$analyzer$intern_macros() {
  var args8975 = [];
  var len__5350__auto___8982 = arguments.length;
  var i__5351__auto___8983 = 0;
  while (true) {
    if (i__5351__auto___8983 < len__5350__auto___8982) {
      args8975.push(arguments[i__5351__auto___8983]);
      var G__8984 = i__5351__auto___8983 + 1;
      i__5351__auto___8983 = G__8984;
      continue;
    } else {
    }
    break;
  }
  var G__8977 = args8975.length;
  switch(G__8977) {
    case 1:
      return cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8975.length)].join(""));;
  }
};
cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$1 = function(ns) {
  return cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2(ns, false);
};
cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2 = function(ns, reload) {
  if (cljs.core.truth_(function() {
    var or__4311__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, ns, cljs.core.cst$kw$macros], null)) == null;
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return reload;
    }
  }())) {
    return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, ns, cljs.core.cst$kw$macros], null), cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p__8978) {
      var vec__8979 = p__8978;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8979, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8979, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, function() {
        var vm = cljs.core.meta(v);
        var vm__$1 = function() {
          var ns__$1 = cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(vm).getName();
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(vm, cljs.core.cst$kw$ns, ns__$1, cljs.core.array_seq([cljs.core.cst$kw$name, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(ns__$1)].join(""), [cljs.core.str(k)].join(""))], 0));
        }();
        return vm__$1;
      }()], null);
    }, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p__8980) {
      var vec__8981 = p__8980;
      var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8981, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8981, 1, null);
      return v.isMacro();
    }, cljs.core.ns_interns_STAR_(ns)))));
  } else {
    return null;
  }
};
cljs.analyzer.intern_macros.cljs$lang$maxFixedArity = 2;
cljs.analyzer.empty_env = function cljs$analyzer$empty_env() {
  var val__5746__auto__ = cljs.env._STAR_compiler_STAR_;
  if (val__5746__auto__ == null) {
    cljs.env._STAR_compiler_STAR_ = cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0();
  } else {
  }
  try {
    return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns, cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_), cljs.core.cst$kw$context, cljs.core.cst$kw$statement, cljs.core.cst$kw$locals, cljs.core.PersistentArrayMap.EMPTY, cljs.core.cst$kw$fn_DASH_scope, cljs.core.PersistentVector.EMPTY, cljs.core.cst$kw$js_DASH_globals, cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(val__5746__auto__) {
      return function(p1__8986_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__8986_SHARP_, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, p1__8986_SHARP_], null)], null);
      };
    }(val__5746__auto__), cljs.core.list(cljs.core.cst$sym$alert, cljs.core.cst$sym$window, cljs.core.cst$sym$document, cljs.core.cst$sym$console, cljs.core.cst$sym$escape, cljs.core.cst$sym$unescape, cljs.core.cst$sym$screen, cljs.core.cst$sym$location, cljs.core.cst$sym$navigator, cljs.core.cst$sym$history, cljs.core.cst$sym$location, cljs.core.cst$sym$global, cljs.core.cst$sym$process, cljs.core.cst$sym$require, cljs.core.cst$sym$module, cljs.core.cst$sym$exports)))], null);
  } finally {
    if (val__5746__auto__ == null) {
      cljs.env._STAR_compiler_STAR_ = null;
    } else {
    }
  }
};
cljs.analyzer.source_info = function cljs$analyzer$source_info() {
  var args8987 = [];
  var len__5350__auto___8990 = arguments.length;
  var i__5351__auto___8991 = 0;
  while (true) {
    if (i__5351__auto___8991 < len__5350__auto___8990) {
      args8987.push(arguments[i__5351__auto___8991]);
      var G__8992 = i__5351__auto___8991 + 1;
      i__5351__auto___8991 = G__8992;
      continue;
    } else {
    }
    break;
  }
  var G__8989 = args8987.length;
  switch(G__8989) {
    case 1:
      return cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8987.length)].join(""));;
  }
};
cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1 = function(env) {
  var temp__4425__auto__ = cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1(env);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var line = temp__4425__auto__;
    return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$file, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env)), cljs.core.cst$sym$cljs$core) ? "cljs/core.cljs" : cljs.analyzer._STAR_cljs_file_STAR_, cljs.core.cst$kw$line, cljs.analyzer.get_line(cljs.core.name, env), cljs.core.cst$kw$column, cljs.analyzer.get_col(cljs.core.name, env)], null);
  } else {
    return null;
  }
};
cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2 = function(name, env) {
  return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$file, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env)), cljs.core.cst$sym$cljs$core) ? "cljs/core.cljs" : cljs.analyzer._STAR_cljs_file_STAR_, cljs.core.cst$kw$line, cljs.analyzer.get_line(name, env), cljs.core.cst$kw$column, cljs.analyzer.get_col(name, env)], null);
};
cljs.analyzer.source_info.cljs$lang$maxFixedArity = 2;
cljs.analyzer.message = function cljs$analyzer$message(env, s) {
  return [cljs.core.str(s), cljs.core.str(cljs.core.truth_(cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1(env)) ? [cljs.core.str(" at line "), cljs.core.str(cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1(env)), cljs.core.str(" "), cljs.core.str(cljs.analyzer._STAR_cljs_file_STAR_)].join("") : null)].join("");
};
cljs.analyzer.warning = function cljs$analyzer$warning(warning_type, env, extra) {
  var seq__8998 = cljs.core.seq(cljs.analyzer._STAR_cljs_warning_handlers_STAR_);
  var chunk__8999 = null;
  var count__9000 = 0;
  var i__9001 = 0;
  while (true) {
    if (i__9001 < count__9000) {
      var handler = chunk__8999.cljs$core$IIndexed$_nth$arity$2(null, i__9001);
      handler.cljs$core$IFn$_invoke$arity$3 ? handler.cljs$core$IFn$_invoke$arity$3(warning_type, env, extra) : handler.call(null, warning_type, env, extra);
      var G__9002 = seq__8998;
      var G__9003 = chunk__8999;
      var G__9004 = count__9000;
      var G__9005 = i__9001 + 1;
      seq__8998 = G__9002;
      chunk__8999 = G__9003;
      count__9000 = G__9004;
      i__9001 = G__9005;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__8998);
      if (temp__4425__auto__) {
        var seq__8998__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8998__$1)) {
          var c__5095__auto__ = cljs.core.chunk_first(seq__8998__$1);
          var G__9006 = cljs.core.chunk_rest(seq__8998__$1);
          var G__9007 = c__5095__auto__;
          var G__9008 = cljs.core.count(c__5095__auto__);
          var G__9009 = 0;
          seq__8998 = G__9006;
          chunk__8999 = G__9007;
          count__9000 = G__9008;
          i__9001 = G__9009;
          continue;
        } else {
          var handler = cljs.core.first(seq__8998__$1);
          handler.cljs$core$IFn$_invoke$arity$3 ? handler.cljs$core$IFn$_invoke$arity$3(warning_type, env, extra) : handler.call(null, warning_type, env, extra);
          var G__9010 = cljs.core.next(seq__8998__$1);
          var G__9011 = null;
          var G__9012 = 0;
          var G__9013 = 0;
          seq__8998 = G__9010;
          chunk__8999 = G__9011;
          count__9000 = G__9012;
          i__9001 = G__9013;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.analyzer.error = function cljs$analyzer$error() {
  var args9014 = [];
  var len__5350__auto___9017 = arguments.length;
  var i__5351__auto___9018 = 0;
  while (true) {
    if (i__5351__auto___9018 < len__5350__auto___9017) {
      args9014.push(arguments[i__5351__auto___9018]);
      var G__9019 = i__5351__auto___9018 + 1;
      i__5351__auto___9018 = G__9019;
      continue;
    } else {
    }
    break;
  }
  var G__9016 = args9014.length;
  switch(G__9016) {
    case 2:
      return cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9014.length)].join(""));;
  }
};
cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2 = function(env, msg) {
  return cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env, msg, null);
};
cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3 = function(env, msg, cause) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.message(env, msg), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1(env), cljs.core.cst$kw$tag, cljs.core.cst$kw$cljs_SLASH_analysis_DASH_error), cause);
};
cljs.analyzer.error.cljs$lang$maxFixedArity = 3;
cljs.analyzer.analysis_error_QMARK_ = function cljs$analyzer$analysis_error_QMARK_(ex) {
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$cljs_SLASH_analysis_DASH_error, cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(cljs.core.ex_data(ex)));
};
cljs.analyzer.implicit_import_QMARK_ = function cljs$analyzer$implicit_import_QMARK_(env, prefix, suffix) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$sym$goog$string, null, cljs.core.cst$sym$goog, null, cljs.core.cst$sym$goog$object, null, cljs.core.cst$sym$Math, null, cljs.core.cst$sym$goog$array, null], null), null), prefix);
};
cljs.analyzer.confirm_var_exist_warning = function cljs$analyzer$confirm_var_exist_warning(env, prefix, suffix) {
  return function(env__$1, prefix__$1, suffix__$1) {
    return cljs.analyzer.warning(cljs.core.cst$kw$undeclared_DASH_var, env__$1, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$prefix, prefix__$1, cljs.core.cst$kw$suffix, suffix__$1], null));
  };
};
cljs.analyzer.loaded_js_ns_QMARK_ = function cljs$analyzer$loaded_js_ns_QMARK_(env, prefix) {
  if (cljs.core.truth_(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, prefix))) {
    return null;
  } else {
    var ns = cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env);
    if (!(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$requires.cljs$core$IFn$_invoke$arity$1(ns), prefix) == null)) {
      return true;
    } else {
      if (!(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$imports.cljs$core$IFn$_invoke$arity$1(ns), prefix) == null)) {
        return true;
      } else {
        return false;
      }
    }
  }
};
cljs.analyzer.confirm_var_exists = function cljs$analyzer$confirm_var_exists() {
  var args9022 = [];
  var len__5350__auto___9025 = arguments.length;
  var i__5351__auto___9026 = 0;
  while (true) {
    if (i__5351__auto___9026 < len__5350__auto___9025) {
      args9022.push(arguments[i__5351__auto___9026]);
      var G__9027 = i__5351__auto___9026 + 1;
      i__5351__auto___9026 = G__9027;
      continue;
    } else {
    }
    break;
  }
  var G__9024 = args9022.length;
  switch(G__9024) {
    case 3:
      return cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9022.length)].join(""));;
  }
};
cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$3 = function(env, prefix, suffix) {
  var warn = cljs.analyzer.confirm_var_exist_warning(env, prefix, suffix);
  return cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4(env, prefix, suffix, warn);
};
cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4 = function(env, prefix, suffix, missing_fn) {
  var sufstr = [cljs.core.str(suffix)].join("");
  var suffix_str = !(".." === sufstr) && /\./.test(sufstr) ? cljs.core.first(clojure.string.split.cljs$core$IFn$_invoke$arity$2(sufstr, /\./)) : suffix;
  var suffix__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(suffix_str);
  if (!cljs.analyzer.implicit_import_QMARK_(env, prefix, suffix__$1) && !cljs.analyzer.loaded_js_ns_QMARK_(env, prefix) && !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$cljs$core, prefix) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$unquote, suffix__$1)) && cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, 
  cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, prefix, cljs.core.cst$kw$defs, suffix__$1) == null) {
    return missing_fn.cljs$core$IFn$_invoke$arity$3 ? missing_fn.cljs$core$IFn$_invoke$arity$3(env, prefix, suffix__$1) : missing_fn.call(null, env, prefix, suffix__$1);
  } else {
    return null;
  }
};
cljs.analyzer.confirm_var_exists.cljs$lang$maxFixedArity = 4;
cljs.analyzer.confirm_var_exists_throw = function cljs$analyzer$confirm_var_exists_throw() {
  return function(env, prefix, suffix) {
    return cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4(env, prefix, suffix, function(env__$1, prefix__$1, suffix__$1) {
      throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env__$1, [cljs.core.str("Unable to resolve var: "), cljs.core.str(suffix__$1), cljs.core.str(" in this context")].join(""));
    });
  };
};
cljs.analyzer.resolve_ns_alias = function cljs$analyzer$resolve_ns_alias(env, name) {
  var sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name);
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.cst$kw$requires.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env)), sym, sym);
};
cljs.analyzer.resolve_macro_ns_alias = function cljs$analyzer$resolve_macro_ns_alias(env, name) {
  var sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name);
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.cst$kw$require_DASH_macros.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env)), sym, sym);
};
cljs.analyzer.confirm_ns = function cljs$analyzer$confirm_ns(env, ns_sym) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$sym$goog$string, null, cljs.core.cst$sym$cljs$core, null, cljs.core.cst$sym$goog, null, cljs.core.cst$sym$Math, null], null), null), ns_sym) == null && cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$requires.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env)), ns_sym) == null && cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? 
  cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, ns_sym) == null) {
    return cljs.analyzer.warning(cljs.core.cst$kw$undeclared_DASH_ns, env, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$ns_DASH_sym, ns_sym], null));
  } else {
    return null;
  }
};
cljs.analyzer.core_name_QMARK_ = function cljs$analyzer$core_name_QMARK_(env, sym) {
  var and__4299__auto__ = function() {
    var or__4311__auto__ = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, cljs.core.cst$sym$cljs$core, cljs.core.cst$kw$defs, sym);
    if (cljs.core.truth_(or__4311__auto__)) {
      return or__4311__auto__;
    } else {
      var temp__4425__auto__ = cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2(sym, env) : cljs.analyzer.get_expander.call(null, sym, env);
      if (cljs.core.truth_(temp__4425__auto__)) {
        var mac = temp__4425__auto__;
        var ns = cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(mac));
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns.getName(), cljs.core.cst$sym$cljs$core$macros);
      } else {
        return null;
      }
    }
  }();
  if (cljs.core.truth_(and__4299__auto__)) {
    return !cljs.core.contains_QMARK_(cljs.core.cst$kw$excludes.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env)), sym);
  } else {
    return and__4299__auto__;
  }
};
cljs.analyzer.resolve_var = function cljs$analyzer$resolve_var() {
  var args9029 = [];
  var len__5350__auto___9035 = arguments.length;
  var i__5351__auto___9036 = 0;
  while (true) {
    if (i__5351__auto___9036 < len__5350__auto___9035) {
      args9029.push(arguments[i__5351__auto___9036]);
      var G__9037 = i__5351__auto___9036 + 1;
      i__5351__auto___9036 = G__9037;
      continue;
    } else {
    }
    break;
  }
  var G__9031 = args9029.length;
  switch(G__9031) {
    case 2:
      return cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9029.length)].join(""));;
  }
};
cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2 = function(env, sym) {
  return cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env, sym, null);
};
cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3 = function(env, sym, confirm) {
  while (true) {
    if ("js" === cljs.core.namespace(sym)) {
      return new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$name, sym, cljs.core.cst$kw$ns, cljs.core.cst$sym$js], null);
    } else {
      var s = [cljs.core.str(sym)].join("");
      var lcls = cljs.core.cst$kw$locals.cljs$core$IFn$_invoke$arity$1(env);
      var lb = cljs.core.get.cljs$core$IFn$_invoke$arity$2(lcls, sym);
      if (!(lb == null)) {
        return lb;
      } else {
        if (!(cljs.core.namespace(sym) == null)) {
          var ns = cljs.core.namespace(sym);
          var ns__$1 = "clojure.core" === ns ? "cljs.core" : ns;
          var full_ns = cljs.analyzer.resolve_ns_alias(env, ns__$1);
          if (confirm == null) {
          } else {
            if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env)), full_ns)) {
              cljs.analyzer.confirm_ns(env, full_ns);
            } else {
            }
            var G__9032_9039 = env;
            var G__9033_9040 = full_ns;
            var G__9034_9041 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));
            confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(G__9032_9039, G__9033_9040, G__9034_9041) : confirm.call(null, G__9032_9039, G__9033_9040, G__9034_9041);
          }
          return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, full_ns, cljs.core.cst$kw$defs, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym))), new cljs.core.PersistentArrayMap(null, 
          2, [cljs.core.cst$kw$name, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(full_ns)].join(""), [cljs.core.str(cljs.core.name(sym))].join("")), cljs.core.cst$kw$ns, full_ns], null)], 0));
        } else {
          if (goog.string.contains(s, ".") && !goog.string.contains(s, "..")) {
            var idx = s.indexOf(".");
            var prefix = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s, 0, idx));
            var suffix = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, idx + 1);
            var lb__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(lcls, prefix);
            if (!(lb__$1 == null)) {
              return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(lb__$1))].join(""), suffix)], null);
            } else {
              var cur_ns = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env));
              var full_ns = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, cur_ns, cljs.core.cst$kw$imports, prefix);
              if (!(full_ns == null)) {
                return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(full_ns)].join(""), suffix)], null);
              } else {
                var info = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, cur_ns, cljs.core.cst$kw$defs, prefix);
                if (!(info == null)) {
                  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([info, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$name, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(cur_ns)].join(""), [cljs.core.str(sym)].join("")), cljs.core.cst$kw$ns, cur_ns], null)], 0));
                } else {
                  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, prefix, cljs.core.cst$kw$defs, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(suffix)), new cljs.core.PersistentArrayMap(null, 
                  2, [cljs.core.cst$kw$name, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2("", prefix) ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(suffix) : cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(prefix)].join(""), suffix), cljs.core.cst$kw$ns, prefix], null)], 0));
                }
              }
            }
          } else {
            if (!(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env)), cljs.core.cst$kw$uses, sym) == null)) {
              var full_ns = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env)), cljs.core.cst$kw$uses, sym);
              return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, full_ns, cljs.core.cst$kw$defs, sym), new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$name, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(full_ns)].join(""), 
              [cljs.core.str(sym)].join("")), cljs.core.cst$kw$ns, cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env))], null)], 0));
            } else {
              if (!(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env)), cljs.core.cst$kw$imports, sym) == null)) {
                var G__9042 = env;
                var G__9043 = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env)), cljs.core.cst$kw$imports, sym);
                var G__9044 = confirm;
                env = G__9042;
                sym = G__9043;
                confirm = G__9044;
                continue;
              } else {
                var cur_ns = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env));
                var full_ns = !(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, cur_ns, cljs.core.cst$kw$defs, sym) == null) ? cur_ns : cljs.analyzer.core_name_QMARK_(env, sym) ? cljs.core.cst$sym$cljs$core : cur_ns;
                if (confirm == null) {
                } else {
                  confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(env, full_ns, sym) : confirm.call(null, env, full_ns, sym);
                }
                return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, full_ns, cljs.core.cst$kw$defs, sym), new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$name, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(full_ns)].join(""), 
                [cljs.core.str(sym)].join("")), cljs.core.cst$kw$ns, full_ns], null)], 0));
              }
            }
          }
        }
      }
    }
    break;
  }
};
cljs.analyzer.resolve_var.cljs$lang$maxFixedArity = 3;
cljs.analyzer.resolve_existing_var = function cljs$analyzer$resolve_existing_var(env, sym) {
  if (cljs.core.not(cljs.core.cst$kw$cljs$analyzer_SLASH_no_DASH_resolve.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym)))) {
    return cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env, sym, cljs.analyzer.confirm_var_exists);
  } else {
    return cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env, sym);
  }
};
cljs.analyzer.confirm_bindings = function cljs$analyzer$confirm_bindings(env, names) {
  var seq__9049 = cljs.core.seq(names);
  var chunk__9050 = null;
  var count__9051 = 0;
  var i__9052 = 0;
  while (true) {
    if (i__9052 < count__9051) {
      var name = chunk__9050.cljs$core$IIndexed$_nth$arity$2(null, i__9052);
      var env_9053__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$ns, cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));
      var ev_9054 = cljs.analyzer.resolve_existing_var(env_9053__$1, name);
      if (cljs.core.truth_(function() {
        var and__4299__auto__ = ev_9054;
        if (cljs.core.truth_(and__4299__auto__)) {
          return cljs.core.not(cljs.core.cst$kw$dynamic.cljs$core$IFn$_invoke$arity$1(ev_9054));
        } else {
          return and__4299__auto__;
        }
      }())) {
        cljs.analyzer.warning(cljs.core.cst$kw$dynamic, env_9053__$1, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ev, ev_9054, cljs.core.cst$kw$name, cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ev_9054)], null));
      } else {
      }
      var G__9055 = seq__9049;
      var G__9056 = chunk__9050;
      var G__9057 = count__9051;
      var G__9058 = i__9052 + 1;
      seq__9049 = G__9055;
      chunk__9050 = G__9056;
      count__9051 = G__9057;
      i__9052 = G__9058;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__9049);
      if (temp__4425__auto__) {
        var seq__9049__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9049__$1)) {
          var c__5095__auto__ = cljs.core.chunk_first(seq__9049__$1);
          var G__9059 = cljs.core.chunk_rest(seq__9049__$1);
          var G__9060 = c__5095__auto__;
          var G__9061 = cljs.core.count(c__5095__auto__);
          var G__9062 = 0;
          seq__9049 = G__9059;
          chunk__9050 = G__9060;
          count__9051 = G__9061;
          i__9052 = G__9062;
          continue;
        } else {
          var name = cljs.core.first(seq__9049__$1);
          var env_9063__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$ns, cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));
          var ev_9064 = cljs.analyzer.resolve_existing_var(env_9063__$1, name);
          if (cljs.core.truth_(function() {
            var and__4299__auto__ = ev_9064;
            if (cljs.core.truth_(and__4299__auto__)) {
              return cljs.core.not(cljs.core.cst$kw$dynamic.cljs$core$IFn$_invoke$arity$1(ev_9064));
            } else {
              return and__4299__auto__;
            }
          }())) {
            cljs.analyzer.warning(cljs.core.cst$kw$dynamic, env_9063__$1, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ev, ev_9064, cljs.core.cst$kw$name, cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ev_9064)], null));
          } else {
          }
          var G__9065 = cljs.core.next(seq__9049__$1);
          var G__9066 = null;
          var G__9067 = 0;
          var G__9068 = 0;
          seq__9049 = G__9065;
          chunk__9050 = G__9066;
          count__9051 = G__9067;
          i__9052 = G__9068;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.analyzer.resolve_macro_var = function cljs$analyzer$resolve_macro_var(env, sym) {
  var ns = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env));
  var namespaces = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces);
  if (cljs.core.truth_(cljs.core.namespace(sym))) {
    var ns__$1 = cljs.core.namespace(sym);
    var ns__$2 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2("clojure.core", ns__$1) ? "cljs.core" : ns__$1;
    var full_ns = cljs.analyzer.resolve_macro_ns_alias(env, ns__$2);
    return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [full_ns, cljs.core.cst$kw$macros, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym))], null));
  } else {
    if (cljs.core.truth_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns, cljs.core.cst$kw$use_DASH_macros, sym], null)))) {
      var full_ns = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns, cljs.core.cst$kw$use_DASH_macros, sym], null));
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [full_ns, cljs.core.cst$kw$macros, sym], null));
    } else {
      var ns__$1 = cljs.core.truth_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns, cljs.core.cst$kw$macros, sym], null))) ? ns : cljs.analyzer.core_name_QMARK_(env, sym) ? cljs.core.cst$sym$cljs$core : null;
      if (cljs.core.truth_(ns__$1)) {
        return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns__$1, cljs.core.cst$kw$macros, sym], null));
      } else {
        return null;
      }
    }
  }
};
cljs.analyzer.ns_dependents = function cljs$analyzer$ns_dependents() {
  var args9070 = [];
  var len__5350__auto___9087 = arguments.length;
  var i__5351__auto___9088 = 0;
  while (true) {
    if (i__5351__auto___9088 < len__5350__auto___9087) {
      args9070.push(arguments[i__5351__auto___9088]);
      var G__9089 = i__5351__auto___9088 + 1;
      i__5351__auto___9088 = G__9089;
      continue;
    } else {
    }
    break;
  }
  var G__9072 = args9070.length;
  switch(G__9072) {
    case 1:
      return cljs.analyzer.ns_dependents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.analyzer.ns_dependents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9070.length)].join(""));;
  }
};
cljs.analyzer.ns_dependents.cljs$core$IFn$_invoke$arity$1 = function(ns) {
  return cljs.analyzer.ns_dependents.cljs$core$IFn$_invoke$arity$2(ns, cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces));
};
cljs.analyzer.ns_dependents.cljs$core$IFn$_invoke$arity$2 = function(ns, ns_map) {
  var parent_QMARK_ = function cljs$analyzer$parent_QMARK_(parent, p__9080) {
    var vec__9084 = p__9080;
    var child = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9084, 0, null);
    var map__9085 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9084, 1, null);
    var map__9085__$1 = (!(map__9085 == null) ? map__9085.cljs$lang$protocol_mask$partition0$ & 64 || map__9085.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__9085) : map__9085;
    var ns_info = map__9085__$1;
    var requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9085__$1, cljs.core.cst$kw$requires);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(parent, child)) {
      return null;
    } else {
      if (cljs.core.map_QMARK_(requires) || cljs.core.set_QMARK_(requires)) {
        return cljs.core.contains_QMARK_(requires, parent);
      } else {
        if (cljs.core.vector_QMARK_(requires)) {
          return cljs.core.some(cljs.core.PersistentHashSet.fromArray([cljs.core.munge(cljs.core.name(parent))], true), requires);
        } else {
          return null;
        }
      }
    }
  };
  return cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$2(ns, function(ns_SINGLEQUOTE_) {
    return cljs.core.set(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__9069_SHARP_) {
      return parent_QMARK_(ns_SINGLEQUOTE_, p1__9069_SHARP_);
    }, ns_map)));
  });
};
cljs.analyzer.ns_dependents.cljs$lang$maxFixedArity = 2;
cljs.analyzer.specials = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 21, [cljs.core.cst$sym$_AMPERSAND_, null, cljs.core.cst$sym$case_STAR_, null, cljs.core.cst$sym$defrecord_STAR_, null, cljs.core.cst$sym$try, null, cljs.core.cst$sym$loop_STAR_, null, cljs.core.cst$sym$do, null, cljs.core.cst$sym$letfn_STAR_, null, cljs.core.cst$sym$if, null, cljs.core.cst$sym$new, null, cljs.core.cst$sym$ns, null, cljs.core.cst$sym$deftype_STAR_, null, cljs.core.cst$sym$let_STAR_, 
null, cljs.core.cst$sym$js_STAR_, null, cljs.core.cst$sym$fn_STAR_, null, cljs.core.cst$sym$recur, null, cljs.core.cst$sym$set_BANG_, null, cljs.core.cst$sym$$, null, cljs.core.cst$sym$var, null, cljs.core.cst$sym$quote, null, cljs.core.cst$sym$throw, null, cljs.core.cst$sym$def, null], null), null);
cljs.analyzer._STAR_recur_frames_STAR_ = null;
cljs.analyzer._STAR_loop_lets_STAR_ = cljs.core.List.EMPTY;
cljs.analyzer._STAR_allow_redef_STAR_ = false;
cljs.analyzer.analyze_keyword = function cljs$analyzer$analyze_keyword(env, sym) {
  cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2(env, sym);
  return new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$op, cljs.core.cst$kw$constant, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, sym, cljs.core.cst$kw$tag, cljs.core.cst$sym$cljs$core_SLASH_Keyword], null);
};
cljs.analyzer.get_tag = function cljs$analyzer$get_tag(e) {
  var tag = cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(e);
  if (!(tag == null)) {
    return tag;
  } else {
    var tag__$1 = cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(e));
    if (!(tag__$1 == null)) {
      return tag__$1;
    } else {
      return cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(cljs.core.cst$kw$form.cljs$core$IFn$_invoke$arity$1(e)));
    }
  }
};
cljs.analyzer.find_matching_method = function cljs$analyzer$find_matching_method(f, params) {
  var methods$ = function() {
    var or__4311__auto__ = cljs.core.cst$kw$methods.cljs$core$IFn$_invoke$arity$1(f);
    if (cljs.core.truth_(or__4311__auto__)) {
      return or__4311__auto__;
    } else {
      return cljs.core.cst$kw$methods.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(f));
    }
  }();
  var c = cljs.core.count(params);
  return cljs.core.some(function(methods$, c) {
    return function(m) {
      var and__4299__auto__ = function() {
        var or__4311__auto__ = cljs.core.cst$kw$max_DASH_fixed_DASH_arity.cljs$core$IFn$_invoke$arity$1(m) === c;
        if (or__4311__auto__) {
          return or__4311__auto__;
        } else {
          return cljs.core.cst$kw$variadic.cljs$core$IFn$_invoke$arity$1(m);
        }
      }();
      if (cljs.core.truth_(and__4299__auto__)) {
        return m;
      } else {
        return and__4299__auto__;
      }
    };
  }(methods$, c), methods$);
};
cljs.analyzer.type_QMARK_ = function cljs$analyzer$type_QMARK_(env, t) {
  if (!(t == null) && t instanceof cljs.core.Symbol) {
    var var$ = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env, t);
    var type = cljs.core.cst$kw$type.cljs$core$IFn$_invoke$arity$1(var$);
    if (!(type == null)) {
      return type;
    } else {
      var type__$1 = cljs.core.cst$kw$type.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(var$));
      if (!(type__$1 == null)) {
        return type__$1;
      } else {
        var proto = cljs.core.cst$kw$protocol_DASH_symbol.cljs$core$IFn$_invoke$arity$1(var$);
        if (!(proto == null)) {
          return proto;
        } else {
          return cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$sym$cljs$core_SLASH_PersistentHashMap, null, cljs.core.cst$sym$cljs$core_SLASH_List, null], null), null), t);
        }
      }
    }
  } else {
    return null;
  }
};
cljs.analyzer.NOT_NATIVE = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$sym$clj, null, cljs.core.cst$sym$not_DASH_native, null], null), null);
cljs.analyzer.BOOLEAN_OR_SEQ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$sym$seq, null, cljs.core.cst$sym$boolean, null], null), null);
cljs.analyzer.infer_if = function cljs$analyzer$infer_if(env, e) {
  var map__9099 = e;
  var map__9099__$1 = (!(map__9099 == null) ? map__9099.cljs$lang$protocol_mask$partition0$ & 64 || map__9099.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__9099) : map__9099;
  var map__9100 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9099__$1, cljs.core.cst$kw$test);
  var map__9100__$1 = (!(map__9100 == null) ? map__9100.cljs$lang$protocol_mask$partition0$ & 64 || map__9100.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__9100) : map__9100;
  var op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9100__$1, cljs.core.cst$kw$op);
  var form = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9100__$1, cljs.core.cst$kw$form);
  var then_tag = function() {
    var G__9103 = env;
    var G__9104 = cljs.core.cst$kw$then.cljs$core$IFn$_invoke$arity$1(e);
    return cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__9103, G__9104) : cljs.analyzer.infer_tag.call(null, G__9103, G__9104);
  }();
  if (cljs.core.keyword_identical_QMARK_(op, cljs.core.cst$kw$constant) && !(form == null) && !(form === false)) {
    return then_tag;
  } else {
    var else_tag = function() {
      var G__9105 = env;
      var G__9106 = cljs.core.cst$kw$else.cljs$core$IFn$_invoke$arity$1(e);
      return cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__9105, G__9106) : cljs.analyzer.infer_tag.call(null, G__9105, G__9106);
    }();
    if (cljs.core.symbol_identical_QMARK_(then_tag, else_tag) || cljs.core.symbol_identical_QMARK_(else_tag, cljs.analyzer.IGNORE_SYM)) {
      return then_tag;
    } else {
      if (cljs.core.symbol_identical_QMARK_(then_tag, cljs.analyzer.IGNORE_SYM)) {
        return else_tag;
      } else {
        if ((!(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.NOT_NATIVE, then_tag) == null) || cljs.analyzer.type_QMARK_(env, then_tag)) && (!(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.NOT_NATIVE, else_tag) == null) || cljs.analyzer.type_QMARK_(env, else_tag))) {
          return cljs.core.cst$sym$clj;
        } else {
          if (!(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.BOOLEAN_OR_SEQ, then_tag) == null) && !(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.BOOLEAN_OR_SEQ, else_tag) == null)) {
            return cljs.core.cst$sym$seq;
          } else {
            var then_tag__$1 = cljs.analyzer.cljs_set_QMARK_(then_tag) ? then_tag : cljs.core.PersistentHashSet.fromArray([then_tag], true);
            var else_tag__$1 = cljs.analyzer.cljs_set_QMARK_(else_tag) ? else_tag : cljs.core.PersistentHashSet.fromArray([else_tag], true);
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(then_tag__$1, else_tag__$1);
          }
        }
      }
    }
  }
};
cljs.analyzer.infer_invoke = function cljs$analyzer$infer_invoke(env, e) {
  var map__9109 = cljs.core.cst$kw$f.cljs$core$IFn$_invoke$arity$1(e);
  var map__9109__$1 = (!(map__9109 == null) ? map__9109.cljs$lang$protocol_mask$partition0$ & 64 || map__9109.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__9109) : map__9109;
  var f = map__9109__$1;
  var info = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9109__$1, cljs.core.cst$kw$info);
  var ret_tag = cljs.core.cst$kw$fn_DASH_var.cljs$core$IFn$_invoke$arity$1(info) == null ? null : cljs.core.cst$kw$ret_DASH_tag.cljs$core$IFn$_invoke$arity$1(info);
  if (!(ret_tag == null)) {
    return ret_tag;
  } else {
    var args = cljs.core.cst$kw$args.cljs$core$IFn$_invoke$arity$1(e);
    var me = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.find_matching_method(f, args), cljs.core.cst$kw$op, cljs.core.cst$kw$method);
    var ret_tag__$1 = cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(env, me) : cljs.analyzer.infer_tag.call(null, env, me);
    if (!(ret_tag__$1 == null)) {
      return ret_tag__$1;
    } else {
      return cljs.analyzer.ANY_SYM;
    }
  }
};
cljs.analyzer.infer_tag = function cljs$analyzer$infer_tag(env, e) {
  var tag = cljs.analyzer.get_tag(e);
  if (!(tag == null)) {
    return tag;
  } else {
    var G__9127 = cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(e) instanceof cljs.core.Keyword ? cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(e).fqn : null;
    switch(G__9127) {
      case "js":
        return cljs.analyzer.ANY_SYM;
        break;
      case "let":
        return cljs$analyzer$infer_tag(env, cljs.core.cst$kw$expr.cljs$core$IFn$_invoke$arity$1(e));
        break;
      case "do":
        return cljs$analyzer$infer_tag(env, cljs.core.cst$kw$ret.cljs$core$IFn$_invoke$arity$1(e));
        break;
      case "if":
        return cljs.analyzer.infer_if(env, e);
        break;
      case "method":
        return cljs$analyzer$infer_tag(env, cljs.core.cst$kw$expr.cljs$core$IFn$_invoke$arity$1(e));
        break;
      case "constant":
        var G__9128 = cljs.core.cst$kw$form.cljs$core$IFn$_invoke$arity$1(e);
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(true, G__9128)) {
          return cljs.analyzer.BOOLEAN_SYM;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(false, G__9128)) {
            return cljs.analyzer.BOOLEAN_SYM;
          } else {
            return cljs.analyzer.ANY_SYM;
          }
        }
        break;
      case "recur":
        return cljs.analyzer.IGNORE_SYM;
        break;
      case "loop":
        return cljs$analyzer$infer_tag(env, cljs.core.cst$kw$expr.cljs$core$IFn$_invoke$arity$1(e));
        break;
      case "var":
        if (!(cljs.core.cst$kw$init.cljs$core$IFn$_invoke$arity$1(e) == null)) {
          return cljs$analyzer$infer_tag(env, cljs.core.cst$kw$init.cljs$core$IFn$_invoke$arity$1(e));
        } else {
          return cljs$analyzer$infer_tag(env, cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(e));
        }
        break;
      case "invoke":
        return cljs.analyzer.infer_invoke(env, e);
        break;
      case "throw":
        return cljs.analyzer.IGNORE_SYM;
        break;
      case "def":
        return cljs$analyzer$infer_tag(env, cljs.core.cst$kw$init.cljs$core$IFn$_invoke$arity$1(e));
        break;
      case "dot":
        return cljs.analyzer.ANY_SYM;
        break;
      default:
        return null;
    }
  }
};
if (typeof cljs.analyzer.parse !== "undefined") {
} else {
  cljs.analyzer.parse = function() {
    var method_table__5205__auto__ = function() {
      var G__9130 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9130) : cljs.core.atom.call(null, G__9130);
    }();
    var prefer_table__5206__auto__ = function() {
      var G__9131 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9131) : cljs.core.atom.call(null, G__9131);
    }();
    var method_cache__5207__auto__ = function() {
      var G__9132 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9132) : cljs.core.atom.call(null, G__9132);
    }();
    var cached_hierarchy__5208__auto__ = function() {
      var G__9133 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9133) : cljs.core.atom.call(null, G__9133);
    }();
    var hierarchy__5209__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY, cljs.core.cst$kw$hierarchy, cljs.core.get_global_hierarchy());
    return new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("cljs.analyzer", "parse"), function(method_table__5205__auto__, prefer_table__5206__auto__, method_cache__5207__auto__, cached_hierarchy__5208__auto__, hierarchy__5209__auto__) {
      return function() {
        var G__9134__delegate = function(op, rest) {
          return op;
        };
        var G__9134 = function(op, var_args) {
          var rest = null;
          if (arguments.length > 1) {
            var G__9135__i = 0, G__9135__a = new Array(arguments.length - 1);
            while (G__9135__i < G__9135__a.length) {
              G__9135__a[G__9135__i] = arguments[G__9135__i + 1];
              ++G__9135__i;
            }
            rest = new cljs.core.IndexedSeq(G__9135__a, 0);
          }
          return G__9134__delegate.call(this, op, rest);
        };
        G__9134.cljs$lang$maxFixedArity = 1;
        G__9134.cljs$lang$applyTo = function(arglist__9136) {
          var op = cljs.core.first(arglist__9136);
          var rest = cljs.core.rest(arglist__9136);
          return G__9134__delegate(op, rest);
        };
        G__9134.cljs$core$IFn$_invoke$arity$variadic = G__9134__delegate;
        return G__9134;
      }();
    }(method_table__5205__auto__, prefer_table__5206__auto__, method_cache__5207__auto__, cached_hierarchy__5208__auto__, hierarchy__5209__auto__), cljs.core.cst$kw$default, hierarchy__5209__auto__, method_table__5205__auto__, prefer_table__5206__auto__, method_cache__5207__auto__, cached_hierarchy__5208__auto__);
  }();
}
cljs.analyzer.var_ast = function cljs$analyzer$var_ast(env, sym) {
  var var$ = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env, sym, cljs.analyzer.confirm_var_exists_throw());
  var expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
  var temp__4423__auto__ = cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(var$);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var var_ns = temp__4423__auto__;
    return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$var, cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env, sym) : cljs.analyzer.analyze.call(null, expr_env, sym), cljs.core.cst$kw$sym, function() {
      var G__9141 = expr_env;
      var G__9142 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$quote), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.name(var_ns), cljs.core.name(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(var$)))))));
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__9141, G__9142) : cljs.analyzer.analyze.call(null, G__9141, G__9142);
    }(), cljs.core.cst$kw$meta, function() {
      var ks = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$ns, cljs.core.cst$kw$doc, cljs.core.cst$kw$file, cljs.core.cst$kw$line, cljs.core.cst$kw$column], null);
      var m = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([function() {
        var user_meta = cljs.core.cst$kw$meta.cljs$core$IFn$_invoke$arity$1(var$);
        var uks = cljs.core.keys(user_meta);
        return cljs.core.zipmap(uks, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(user_meta, uks, ks, var_ns, temp__4423__auto__, var$, expr_env) {
          return function(p1__9137_SHARP_) {
            return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.get.cljs$core$IFn$_invoke$arity$2(user_meta, p1__9137_SHARP_)), cljs.core.cst$sym$quote);
          };
        }(user_meta, uks, ks, var_ns, temp__4423__auto__, var$, expr_env), uks));
      }(), cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(cljs.core.zipmap(ks, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(ks, var_ns, temp__4423__auto__, var$, expr_env) {
        return function(p1__9138_SHARP_) {
          return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.get.cljs$core$IFn$_invoke$arity$2(var$, p1__9138_SHARP_)), cljs.core.cst$sym$quote);
        };
      }(ks, var_ns, temp__4423__auto__, var$, expr_env), ks)), cljs.core.cst$kw$name, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$quote), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(var$))))))), cljs.core.array_seq([cljs.core.cst$kw$test, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$cljs$core_SLASH_when), cljs.core._conj(cljs.core.List.EMPTY, sym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$_DASH_cljs$lang$test), cljs.core._conj(cljs.core.List.EMPTY, sym)))))], 0)))), cljs.core.cst$kw$arglists, function() {
        var arglists = cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(var$);
        var arglists_SINGLEQUOTE_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$quote, cljs.core.first(arglists)) ? cljs.core.second(arglists) : arglists;
        return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.with_meta, arglists_SINGLEQUOTE_, cljs.core.cst$kw$arglists_DASH_meta.cljs$core$IFn$_invoke$arity$1(var$)))), cljs.core.cst$sym$quote);
      }()], 0))], 0));
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env, m) : cljs.analyzer.analyze.call(null, expr_env, m);
    }()], null);
  } else {
    return null;
  }
};
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$var, function(op, env, p__9143, _, ___$1) {
  var vec__9144 = p__9143;
  var ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9144, 0, null);
  var sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9144, 1, null);
  var form = vec__9144;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$env, env, cljs.core.cst$kw$op, cljs.core.cst$kw$var_DASH_special, cljs.core.cst$kw$form, form], null), cljs.analyzer.var_ast(env, sym)], 0));
});
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$if, function(op, env, p__9145, name, _) {
  var vec__9146 = p__9145;
  var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9146, 0, null);
  var test = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9146, 1, null);
  var then = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9146, 2, null);
  var else$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9146, 3, null);
  var form = vec__9146;
  if (cljs.core.count(form) < 3) {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Too few arguments to if");
  } else {
  }
  if (cljs.core.count(form) > 4) {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Too many arguments to if");
  } else {
  }
  var test_expr = function() {
    var _STAR_recur_frames_STAR_9147 = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      var G__9148 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
      var G__9149 = test;
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__9148, G__9149) : cljs.analyzer.analyze.call(null, G__9148, G__9149);
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_9147;
    }
  }();
  var then_expr = function() {
    var _STAR_allow_redef_STAR_9150 = cljs.analyzer._STAR_allow_redef_STAR_;
    cljs.analyzer._STAR_allow_redef_STAR_ = true;
    try {
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env, then) : cljs.analyzer.analyze.call(null, env, then);
    } finally {
      cljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR_9150;
    }
  }();
  var else_expr = function() {
    var _STAR_allow_redef_STAR_9151 = cljs.analyzer._STAR_allow_redef_STAR_;
    cljs.analyzer._STAR_allow_redef_STAR_ = true;
    try {
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env, else$) : cljs.analyzer.analyze.call(null, env, else$);
    } finally {
      cljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR_9151;
    }
  }();
  return new cljs.core.PersistentArrayMap(null, 8, [cljs.core.cst$kw$env, env, cljs.core.cst$kw$op, cljs.core.cst$kw$if, cljs.core.cst$kw$form, form, cljs.core.cst$kw$test, test_expr, cljs.core.cst$kw$then, then_expr, cljs.core.cst$kw$else, else_expr, cljs.core.cst$kw$unchecked, cljs.core._STAR_unchecked_if_STAR_, cljs.core.cst$kw$children, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [test_expr, then_expr, else_expr], null)], null);
});
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$case_STAR_, function(op, env, p__9154, name, _) {
  var vec__9155 = p__9154;
  var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9155, 0, null);
  var sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9155, 1, null);
  var tests = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9155, 2, null);
  var thens = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9155, 3, null);
  var default$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9155, 4, null);
  var form = vec__9155;
  if (sym instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("case* must switch on symbol"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$symbol_QMARK_, cljs.core.cst$sym$sym)], 0)))].join(""));
  }
  if (cljs.core.every_QMARK_(cljs.core.vector_QMARK_, tests)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("case* tests must be grouped in vectors"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$every_QMARK_, cljs.core.cst$sym$vector_QMARK_, cljs.core.cst$sym$tests)], 0)))].join(""));
  }
  var expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
  var v = function() {
    var _STAR_recur_frames_STAR_9156 = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env, sym) : cljs.analyzer.analyze.call(null, expr_env, sym);
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_9156;
    }
  }();
  var tests__$1 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(function(expr_env, v, vec__9155, ___$1, sym, tests, thens, default$, form) {
    return function(p1__9152_SHARP_) {
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(function(expr_env, v, vec__9155, ___$1, sym, tests, thens, default$, form) {
        return function(t) {
          return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env, t) : cljs.analyzer.analyze.call(null, expr_env, t);
        };
      }(expr_env, v, vec__9155, ___$1, sym, tests, thens, default$, form), p1__9152_SHARP_);
    };
  }(expr_env, v, vec__9155, ___$1, sym, tests, thens, default$, form), tests);
  var thens__$1 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(function(expr_env, v, tests__$1, vec__9155, ___$1, sym, tests, thens, default$, form) {
    return function(p1__9153_SHARP_) {
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env, p1__9153_SHARP_) : cljs.analyzer.analyze.call(null, env, p1__9153_SHARP_);
    };
  }(expr_env, v, tests__$1, vec__9155, ___$1, sym, tests, thens, default$, form), thens);
  var default$__$1 = cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env, default$) : cljs.analyzer.analyze.call(null, env, default$);
  if (cljs.core.every_QMARK_(function(expr_env, v, tests__$1, thens__$1, default$__$1, vec__9155, ___$1, sym, tests, thens, default$, form) {
    return function(t) {
      var or__4311__auto__ = cljs.core.cst$kw$const.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(t));
      if (cljs.core.truth_(or__4311__auto__)) {
        return or__4311__auto__;
      } else {
        var and__4299__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$constant, cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(t));
        if (and__4299__auto__) {
          return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(cljs.core.number_QMARK_, cljs.core.string_QMARK_, cljs.core.char_QMARK_).call(null, cljs.core.cst$kw$form.cljs$core$IFn$_invoke$arity$1(t));
        } else {
          return and__4299__auto__;
        }
      }
    };
  }(expr_env, v, tests__$1, thens__$1, default$__$1, vec__9155, ___$1, sym, tests, thens, default$, form), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, tests__$1))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("case* tests must be numbers, strings, or constants"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$every_QMARK_, cljs.core.list(cljs.core.cst$sym$fn, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$t], null), cljs.core.list(cljs.core.cst$sym$or, cljs.core.list(cljs.core.cst$sym$_DASH__GT_, 
    cljs.core.cst$sym$t, cljs.core.cst$kw$info, cljs.core.cst$kw$const), cljs.core.list(cljs.core.cst$sym$and, cljs.core.list(cljs.core.cst$sym$_EQ_, cljs.core.cst$kw$constant, cljs.core.list(cljs.core.cst$kw$op, cljs.core.cst$sym$t)), cljs.core.list(cljs.core.list(cljs.core.cst$sym$some_DASH_fn, cljs.core.cst$sym$number_QMARK_, cljs.core.cst$sym$string_QMARK_, cljs.core.cst$sym$char_QMARK_), cljs.core.list(cljs.core.cst$kw$form, cljs.core.cst$sym$t))))), cljs.core.list(cljs.core.cst$sym$apply, cljs.core.cst$sym$concat, 
    cljs.core.cst$sym$tests))], 0)))].join(""));
  }
  return new cljs.core.PersistentArrayMap(null, 8, [cljs.core.cst$kw$env, env, cljs.core.cst$kw$op, cljs.core.cst$kw$case_STAR_, cljs.core.cst$kw$form, form, cljs.core.cst$kw$v, v, cljs.core.cst$kw$tests, tests__$1, cljs.core.cst$kw$thens, thens__$1, cljs.core.cst$kw$default, default$__$1, cljs.core.cst$kw$children, cljs.core.vec(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [v], null), tests__$1, cljs.core.array_seq([thens__$1, 
  cljs.core.truth_(default$__$1) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$__$1], null) : null], 0)))], null);
});
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$throw, function(op, env, p__9157, name, _) {
  var vec__9158 = p__9157;
  var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9158, 0, null);
  var throw$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9158, 1, null);
  var form = vec__9158;
  var throw_expr = function() {
    var _STAR_recur_frames_STAR_9159 = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      var G__9160 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
      var G__9161 = throw$;
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__9160, G__9161) : cljs.analyzer.analyze.call(null, G__9160, G__9161);
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_9159;
    }
  }();
  return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$env, env, cljs.core.cst$kw$op, cljs.core.cst$kw$throw, cljs.core.cst$kw$form, form, cljs.core.cst$kw$throw, throw_expr, cljs.core.cst$kw$children, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [throw_expr], null)], null);
});
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$try, function(op, env, p__9166, name, _) {
  var vec__9167 = p__9166;
  var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9167, 0, null);
  var body = cljs.core.nthnext(vec__9167, 1);
  var form = vec__9167;
  var catchenv = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(env, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$context], null), function(vec__9167, ___$1, body, form) {
    return function(p1__9162_SHARP_) {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, p1__9162_SHARP_)) {
        return cljs.core.cst$kw$return;
      } else {
        return p1__9162_SHARP_;
      }
    };
  }(vec__9167, ___$1, body, form));
  var catch_QMARK_ = cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_, function(catchenv, vec__9167, ___$1, body, form) {
    return function(p1__9163_SHARP_) {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__9163_SHARP_), cljs.core.cst$sym$catch);
    };
  }(catchenv, vec__9167, ___$1, body, form));
  var default_QMARK_ = cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(catch_QMARK_, function(catchenv, catch_QMARK_, vec__9167, ___$1, body, form) {
    return function(p1__9164_SHARP_) {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.second(p1__9164_SHARP_), cljs.core.cst$kw$default);
    };
  }(catchenv, catch_QMARK_, vec__9167, ___$1, body, form));
  var finally_QMARK_ = cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_, function(catchenv, catch_QMARK_, default_QMARK_, vec__9167, ___$1, body, form) {
    return function(p1__9165_SHARP_) {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__9165_SHARP_), cljs.core.cst$sym$finally);
    };
  }(catchenv, catch_QMARK_, default_QMARK_, vec__9167, ___$1, body, form));
  var map__9168 = function() {
    var parser = new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$state, cljs.core.cst$kw$start, cljs.core.cst$kw$forms, body, cljs.core.cst$kw$body, cljs.core.PersistentVector.EMPTY, cljs.core.cst$kw$cblocks, cljs.core.PersistentVector.EMPTY, cljs.core.cst$kw$dblock, null, cljs.core.cst$kw$fblock, null], null);
    while (true) {
      if (cljs.core.seq_QMARK_(cljs.core.cst$kw$forms.cljs$core$IFn$_invoke$arity$1(parser))) {
        var vec__9169 = cljs.core.cst$kw$forms.cljs$core$IFn$_invoke$arity$1(parser);
        var form__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9169, 0, null);
        var forms_STAR_ = cljs.core.nthnext(vec__9169, 1);
        var parser_STAR_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser, cljs.core.cst$kw$forms, forms_STAR_);
        var G__9170 = cljs.core.cst$kw$state.cljs$core$IFn$_invoke$arity$1(parser) instanceof cljs.core.Keyword ? cljs.core.cst$kw$state.cljs$core$IFn$_invoke$arity$1(parser).fqn : null;
        switch(G__9170) {
          case "start":
            if (cljs.core.truth_(catch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? catch_QMARK_.cljs$core$IFn$_invoke$arity$1(form__$1) : catch_QMARK_.call(null, form__$1))) {
              var G__9182 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser, cljs.core.cst$kw$state, cljs.core.cst$kw$catches);
              parser = G__9182;
              continue;
            } else {
              if (cljs.core.truth_(finally_QMARK_.cljs$core$IFn$_invoke$arity$1 ? finally_QMARK_.cljs$core$IFn$_invoke$arity$1(form__$1) : finally_QMARK_.call(null, form__$1))) {
                var G__9183 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser, cljs.core.cst$kw$state, cljs.core.cst$kw$finally);
                parser = G__9183;
                continue;
              } else {
                var G__9184 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(parser_STAR_, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$body], null), cljs.core.conj, form__$1);
                parser = G__9184;
                continue;
              }
            }
            break;
          case "catches":
            if (cljs.core.truth_(default_QMARK_.cljs$core$IFn$_invoke$arity$1 ? default_QMARK_.cljs$core$IFn$_invoke$arity$1(form__$1) : default_QMARK_.call(null, form__$1))) {
              var G__9185 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(parser_STAR_, cljs.core.cst$kw$dblock, form__$1, cljs.core.array_seq([cljs.core.cst$kw$state, cljs.core.cst$kw$finally], 0));
              parser = G__9185;
              continue;
            } else {
              if (cljs.core.truth_(catch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? catch_QMARK_.cljs$core$IFn$_invoke$arity$1(form__$1) : catch_QMARK_.call(null, form__$1))) {
                var G__9186 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(parser_STAR_, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cblocks], null), cljs.core.conj, form__$1);
                parser = G__9186;
                continue;
              } else {
                if (cljs.core.truth_(finally_QMARK_.cljs$core$IFn$_invoke$arity$1 ? finally_QMARK_.cljs$core$IFn$_invoke$arity$1(form__$1) : finally_QMARK_.call(null, form__$1))) {
                  var G__9187 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser, cljs.core.cst$kw$state, cljs.core.cst$kw$finally);
                  parser = G__9187;
                  continue;
                } else {
                  throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Invalid try form");
                }
              }
            }
            break;
          case "finally":
            var G__9188 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(parser_STAR_, cljs.core.cst$kw$fblock, form__$1, cljs.core.array_seq([cljs.core.cst$kw$state, cljs.core.cst$kw$done], 0));
            parser = G__9188;
            continue;
            break;
          case "done":
            throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Unexpected form after finally");break;
          default:
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(cljs.core.cst$kw$state.cljs$core$IFn$_invoke$arity$1(parser))].join(""));;
        }
      } else {
        return parser;
      }
      break;
    }
  }();
  var map__9168__$1 = (!(map__9168 == null) ? map__9168.cljs$lang$protocol_mask$partition0$ & 64 || map__9168.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__9168) : map__9168;
  var body__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9168__$1, cljs.core.cst$kw$body);
  var cblocks = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9168__$1, cljs.core.cst$kw$cblocks);
  var dblock = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9168__$1, cljs.core.cst$kw$dblock);
  var fblock = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9168__$1, cljs.core.cst$kw$fblock);
  var finally$ = cljs.core.seq(fblock) ? function() {
    var G__9172 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$statement);
    var G__9173 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core.rest(fblock))));
    return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__9172, G__9173) : cljs.analyzer.analyze.call(null, G__9172, G__9173);
  }() : null;
  var e = cljs.core.truth_(function() {
    var or__4311__auto__ = cljs.core.seq(cblocks);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return dblock;
    }
  }()) ? cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("e") : null;
  var default$ = function() {
    var temp__4423__auto__ = dblock;
    if (cljs.core.truth_(temp__4423__auto__)) {
      var vec__9174 = temp__4423__auto__;
      var ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9174, 0, null);
      var ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9174, 1, null);
      var name__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9174, 2, null);
      var cb = cljs.core.nthnext(vec__9174, 3);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, name__$1), cljs.core._conj(cljs.core.List.EMPTY, e)))))), cljs.core.array_seq([cb], 0))));
    } else {
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$throw), cljs.core._conj(cljs.core.List.EMPTY, e))));
    }
  }();
  var cblock = cljs.core.seq(cblocks) ? cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_cond), cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(function(catchenv, catch_QMARK_, default_QMARK_, finally_QMARK_, map__9168, map__9168__$1, body__$1, cblocks, dblock, fblock, finally$, e, default$, vec__9167, ___$1, body, form) {
    return function(p__9175) {
      var vec__9176 = p__9175;
      var ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9176, 0, null);
      var type = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9176, 1, null);
      var name__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9176, 2, null);
      var cb = cljs.core.nthnext(vec__9176, 3);
      if (cljs.core.truth_(name__$1)) {
        if (cljs.core.not(cljs.core.namespace(name__$1))) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't qualify symbol in catch"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$not, cljs.core.list(cljs.core.cst$sym$namespace, cljs.core.cst$sym$name))], 0)))].join(""));
        }
      } else {
      }
      return cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_instance_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, type), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, e)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, name__$1), cljs.core._conj(cljs.core.List.EMPTY, e)))))), cljs.core.array_seq([cb], 0)))))))));
    };
  }(catchenv, catch_QMARK_, default_QMARK_, finally_QMARK_, map__9168, map__9168__$1, body__$1, cblocks, dblock, fblock, finally$, e, default$, vec__9167, ___$1, body, form), cljs.core.array_seq([cblocks], 0)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$else), cljs.core._conj(cljs.core.List.EMPTY, default$)], 0)))) : default$;
  var locals = cljs.core.cst$kw$locals.cljs$core$IFn$_invoke$arity$1(catchenv);
  var locals__$1 = cljs.core.truth_(e) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(locals, e, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$name, e, cljs.core.cst$kw$line, cljs.analyzer.get_line(e, env), cljs.core.cst$kw$column, cljs.analyzer.get_col(e, env)], null)) : locals;
  var catch$ = cljs.core.truth_(cblock) ? function() {
    var G__9177 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(catchenv, cljs.core.cst$kw$locals, locals__$1);
    var G__9178 = cblock;
    return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__9177, G__9178) : cljs.analyzer.analyze.call(null, G__9177, G__9178);
  }() : null;
  var try$ = function() {
    var G__9179 = cljs.core.truth_(function() {
      var or__4311__auto__ = e;
      if (cljs.core.truth_(or__4311__auto__)) {
        return or__4311__auto__;
      } else {
        return finally$;
      }
    }()) ? catchenv : env;
    var G__9180 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), body__$1)));
    return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__9179, G__9180) : cljs.analyzer.analyze.call(null, G__9179, G__9180);
  }();
  return new cljs.core.PersistentArrayMap(null, 8, [cljs.core.cst$kw$env, env, cljs.core.cst$kw$op, cljs.core.cst$kw$try, cljs.core.cst$kw$form, form, cljs.core.cst$kw$try, try$, cljs.core.cst$kw$finally, finally$, cljs.core.cst$kw$name, e, cljs.core.cst$kw$catch, catch$, cljs.core.cst$kw$children, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [try$, catch$, finally$], null)], null);
});
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$def, function(op, env, form, name, _) {
  var pfn = function() {
    var G__9199 = null;
    var G__9199__2 = function(___$1, sym) {
      return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sym, sym], null);
    };
    var G__9199__3 = function(___$1, sym, init) {
      return new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$sym, sym, cljs.core.cst$kw$init, init], null);
    };
    var G__9199__4 = function(___$1, sym, doc, init) {
      return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$sym, sym, cljs.core.cst$kw$doc, doc, cljs.core.cst$kw$init, init], null);
    };
    G__9199 = function(___$1, sym, doc, init) {
      switch(arguments.length) {
        case 2:
          return G__9199__2.call(this, ___$1, sym);
        case 3:
          return G__9199__3.call(this, ___$1, sym, doc);
        case 4:
          return G__9199__4.call(this, ___$1, sym, doc, init);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__9199.cljs$core$IFn$_invoke$arity$2 = G__9199__2;
    G__9199.cljs$core$IFn$_invoke$arity$3 = G__9199__3;
    G__9199.cljs$core$IFn$_invoke$arity$4 = G__9199__4;
    return G__9199;
  }();
  var args = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(pfn, form);
  var sym = cljs.core.cst$kw$sym.cljs$core$IFn$_invoke$arity$1(args);
  var sym_meta = cljs.core.meta(sym);
  var tag = cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));
  var protocol = cljs.core.cst$kw$protocol.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));
  var dynamic = cljs.core.cst$kw$dynamic.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));
  var ns_name = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env));
  var locals = cljs.core.cst$kw$locals.cljs$core$IFn$_invoke$arity$1(env);
  var clash_ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(ns_name), cljs.core.str("."), cljs.core.str(sym)].join(""));
  if (cljs.core.truth_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, clash_ns], null)))) {
    cljs.analyzer.warning(cljs.core.cst$kw$ns_DASH_var_DASH_clash, env, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ns, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(ns_name), cljs.core.str("."), cljs.core.str(sym)].join("")), cljs.core.cst$kw$var, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(ns_name)].join(""), [cljs.core.str(sym)].join(""))], null));
  } else {
  }
  if (cljs.core.truth_(cljs.core.namespace(sym))) {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Can't def ns-qualified name");
  } else {
  }
  if (cljs.core.truth_(cljs.core.cst$kw$const.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env, cljs.core.cst$kw$locals), sym)))) {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Can't redefine a constant");
  } else {
  }
  var temp__4425__auto___9200 = cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(args);
  if (cljs.core.truth_(temp__4425__auto___9200)) {
    var doc_9201 = temp__4425__auto___9200;
    if (typeof doc_9201 === "string") {
    } else {
      throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Too many arguments to def");
    }
  } else {
  }
  var temp__4425__auto___9202 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, ns_name, cljs.core.cst$kw$defs, sym], null));
  if (cljs.core.truth_(temp__4425__auto___9202)) {
    var v_9203 = temp__4425__auto___9202;
    if (cljs.core.truth_(function() {
      var and__4299__auto__ = cljs.core.not(cljs.analyzer._STAR_allow_redef_STAR_);
      if (and__4299__auto__) {
        var and__4299__auto____$1 = cljs.core.not(cljs.core.cst$kw$declared.cljs$core$IFn$_invoke$arity$1(v_9203));
        if (and__4299__auto____$1) {
          var and__4299__auto____$2 = cljs.core.not(cljs.core.cst$kw$declared.cljs$core$IFn$_invoke$arity$1(sym_meta));
          if (and__4299__auto____$2) {
            var and__4299__auto____$3 = cljs.analyzer._STAR_file_defs_STAR_;
            if (cljs.core.truth_(and__4299__auto____$3)) {
              return cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_file_defs_STAR_) : cljs.core.deref.call(null, cljs.analyzer._STAR_file_defs_STAR_), sym);
            } else {
              return and__4299__auto____$3;
            }
          } else {
            return and__4299__auto____$2;
          }
        } else {
          return and__4299__auto____$1;
        }
      } else {
        return and__4299__auto__;
      }
    }())) {
      cljs.analyzer.warning(cljs.core.cst$kw$redef_DASH_in_DASH_file, env, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$sym, sym, cljs.core.cst$kw$line, cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1(v_9203)], null));
    } else {
    }
  } else {
  }
  if (cljs.core.truth_(cljs.analyzer._STAR_file_defs_STAR_)) {
    cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.analyzer._STAR_file_defs_STAR_, cljs.core.conj, sym);
  } else {
  }
  var env__$1 = cljs.core.truth_(function() {
    var or__4311__auto__ = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(ns_name, cljs.core.cst$sym$cljs$core) && cljs.analyzer.core_name_QMARK_(env, sym);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, ns_name, cljs.core.cst$kw$uses, sym], null));
    }
  }()) ? function() {
    var ev = cljs.analyzer.resolve_existing_var(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env, cljs.core.cst$kw$locals), sym);
    cljs.analyzer.warning(cljs.core.cst$kw$redef, env, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$sym, sym, cljs.core.cst$kw$ns, cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(ev), cljs.core.cst$kw$ns_DASH_name, ns_name], null));
    cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_, cljs.core.update_in, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, ns_name, cljs.core.cst$kw$excludes], null), cljs.core.conj, cljs.core.array_seq([sym], 0));
    return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$ns, cljs.core.cst$kw$excludes], null), cljs.core.conj, sym);
  }() : env;
  var var_name = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env__$1, cljs.core.cst$kw$locals), sym));
  var init_expr = cljs.core.contains_QMARK_(args, cljs.core.cst$kw$init) ? function() {
    cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, ns_name, cljs.core.cst$kw$defs, sym], null), cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, var_name], null), sym_meta, cljs.core.truth_(dynamic) ? new cljs.core.PersistentArrayMap(null, 
    1, [cljs.core.cst$kw$dynamic, true], null) : null, cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(var_name, env__$1)], 0)));
    var _STAR_recur_frames_STAR_9190 = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      var G__9191 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
      var G__9192 = cljs.core.cst$kw$init.cljs$core$IFn$_invoke$arity$1(args);
      var G__9193 = sym;
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3(G__9191, G__9192, G__9193) : cljs.analyzer.analyze.call(null, G__9191, G__9192, G__9193);
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_9190;
    }
  }() : null;
  var fn_var_QMARK_ = function() {
    var and__4299__auto__ = init_expr;
    if (cljs.core.truth_(and__4299__auto__)) {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(init_expr), cljs.core.cst$kw$fn);
    } else {
      return and__4299__auto__;
    }
  }();
  var tag__$1 = cljs.core.truth_(fn_var_QMARK_) ? function() {
    var or__4311__auto__ = cljs.core.cst$kw$ret_DASH_tag.cljs$core$IFn$_invoke$arity$1(init_expr);
    if (cljs.core.truth_(or__4311__auto__)) {
      return or__4311__auto__;
    } else {
      return tag;
    }
  }() : tag;
  var export_as = function() {
    var temp__4425__auto__ = cljs.core.cst$kw$export.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));
    if (cljs.core.truth_(temp__4425__auto__)) {
      var export_val = temp__4425__auto__;
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(true, export_val)) {
        return var_name;
      } else {
        return export_val;
      }
    } else {
      return null;
    }
  }();
  var doc = function() {
    var or__4311__auto__ = cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(args);
    if (cljs.core.truth_(or__4311__auto__)) {
      return or__4311__auto__;
    } else {
      return cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));
    }
  }();
  var temp__4425__auto___9204 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, ns_name, cljs.core.cst$kw$defs, sym], null));
  if (cljs.core.truth_(temp__4425__auto___9204)) {
    var v_9205 = temp__4425__auto___9204;
    if (cljs.core.truth_(function() {
      var and__4299__auto__ = cljs.core.not(cljs.core.cst$kw$declared.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym)));
      if (and__4299__auto__) {
        var and__4299__auto____$1 = cljs.core.cst$kw$fn_DASH_var.cljs$core$IFn$_invoke$arity$1(v_9205);
        if (cljs.core.truth_(and__4299__auto____$1)) {
          return cljs.core.not(fn_var_QMARK_);
        } else {
          return and__4299__auto____$1;
        }
      } else {
        return and__4299__auto__;
      }
    }())) {
      cljs.analyzer.warning(cljs.core.cst$kw$fn_DASH_var, env__$1, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ns_DASH_name, ns_name, cljs.core.cst$kw$sym, sym], null));
    } else {
    }
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, ns_name, cljs.core.cst$kw$defs, sym], null), cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, var_name], null), function() {
    var G__9194 = sym_meta;
    var G__9194__$1 = cljs.core.truth_(cljs.core.cst$kw$test.cljs$core$IFn$_invoke$arity$1(sym_meta)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__9194, cljs.core.cst$kw$test, true) : G__9194;
    return G__9194__$1;
  }(), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$meta, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(sym_meta, cljs.core.cst$kw$test), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$file], null), function(env__$1, var_name, init_expr, fn_var_QMARK_, tag__$1, export_as, doc, pfn, args, sym, sym_meta, tag, protocol, dynamic, ns_name, locals, clash_ns) {
    return function(f) {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env__$1)), cljs.core.cst$sym$cljs$core)) {
        return "cljs/core.cljs";
      } else {
        return f;
      }
    };
  }(env__$1, var_name, init_expr, fn_var_QMARK_, tag__$1, export_as, doc, pfn, args, sym, sym_meta, tag, protocol, dynamic, ns_name, locals, clash_ns))], null), cljs.core.truth_(doc) ? new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$doc, doc], null) : null, cljs.core.truth_(dynamic) ? new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$dynamic, true], null) : null, cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(var_name, env__$1), cljs.core.truth_(protocol) ? new cljs.core.PersistentArrayMap(null, 
  1, [cljs.core.cst$kw$protocol, protocol], null) : null, function() {
    var temp__4425__auto__ = cljs.core.cst$kw$protocol_DASH_symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));
    if (cljs.core.truth_(temp__4425__auto__)) {
      var protocol_symbol = temp__4425__auto__;
      return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$protocol_DASH_symbol, protocol_symbol, cljs.core.cst$kw$info, cljs.core.cst$kw$protocol_DASH_info.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(protocol_symbol)), cljs.core.cst$kw$impls, cljs.core.PersistentHashSet.EMPTY], null);
    } else {
      return null;
    }
  }(), cljs.core.truth_(fn_var_QMARK_) ? function() {
    var params = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(env__$1, var_name, init_expr, fn_var_QMARK_, tag__$1, export_as, doc, pfn, args, sym, sym_meta, tag, protocol, dynamic, ns_name, locals, clash_ns) {
      return function(p1__9189_SHARP_) {
        return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$name, cljs.core.cst$kw$params.cljs$core$IFn$_invoke$arity$1(p1__9189_SHARP_)));
      };
    }(env__$1, var_name, init_expr, fn_var_QMARK_, tag__$1, export_as, doc, pfn, args, sym, sym_meta, tag, protocol, dynamic, ns_name, locals, clash_ns), cljs.core.cst$kw$methods.cljs$core$IFn$_invoke$arity$1(init_expr));
    return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$fn_DASH_var, true, cljs.core.cst$kw$protocol_DASH_impl, cljs.core.cst$kw$protocol_DASH_impl.cljs$core$IFn$_invoke$arity$1(init_expr), cljs.core.cst$kw$protocol_DASH_inline, cljs.core.cst$kw$protocol_DASH_inline.cljs$core$IFn$_invoke$arity$1(init_expr)], null), function() {
      var temp__4423__auto__ = cljs.core.cst$kw$top_DASH_fn.cljs$core$IFn$_invoke$arity$1(sym_meta);
      if (cljs.core.truth_(temp__4423__auto__)) {
        var top_fn_meta = temp__4423__auto__;
        return top_fn_meta;
      } else {
        return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$variadic, cljs.core.cst$kw$variadic.cljs$core$IFn$_invoke$arity$1(init_expr), cljs.core.cst$kw$max_DASH_fixed_DASH_arity, cljs.core.cst$kw$max_DASH_fixed_DASH_arity.cljs$core$IFn$_invoke$arity$1(init_expr), cljs.core.cst$kw$method_DASH_params, params, cljs.core.cst$kw$arglists, cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(sym_meta), cljs.core.cst$kw$arglists_DASH_meta, cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.meta, 
        cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(sym_meta)))], null);
      }
    }()], 0));
  }() : null, cljs.core.truth_(function() {
    var and__4299__auto__ = fn_var_QMARK_;
    if (cljs.core.truth_(and__4299__auto__)) {
      return tag__$1;
    } else {
      return and__4299__auto__;
    }
  }()) ? new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$ret_DASH_tag, tag__$1], null) : null], 0)));
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 8, [cljs.core.cst$kw$env, env__$1, cljs.core.cst$kw$op, cljs.core.cst$kw$def, cljs.core.cst$kw$form, form, cljs.core.cst$kw$name, var_name, cljs.core.cst$kw$var, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(function() {
    var G__9195 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env__$1, cljs.core.cst$kw$locals), cljs.core.cst$kw$context, cljs.core.cst$kw$expr), cljs.core.cst$kw$def_DASH_var, true);
    var G__9196 = sym;
    return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__9195, G__9196) : cljs.analyzer.analyze.call(null, G__9195, G__9196);
  }(), cljs.core.cst$kw$op, cljs.core.cst$kw$var), cljs.core.cst$kw$doc, doc, cljs.core.cst$kw$jsdoc, cljs.core.cst$kw$jsdoc.cljs$core$IFn$_invoke$arity$1(sym_meta), cljs.core.cst$kw$init, init_expr], null), cljs.core.truth_(cljs.core.cst$kw$def_DASH_emits_DASH_var.cljs$core$IFn$_invoke$arity$1(env__$1)) ? new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$var_DASH_ast, cljs.analyzer.var_ast(env__$1, sym)], null) : null, function() {
    var temp__4425__auto__ = cljs.core.cst$kw$test.cljs$core$IFn$_invoke$arity$1(sym_meta);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var test = temp__4425__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$test, function() {
        var G__9197 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
        var G__9198 = test;
        return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__9197, G__9198) : cljs.analyzer.analyze.call(null, G__9197, G__9198);
      }()], null);
    } else {
      return null;
    }
  }(), cljs.core.truth_(tag__$1) ? cljs.core.truth_(fn_var_QMARK_) ? new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$ret_DASH_tag, tag__$1], null) : new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$tag, tag__$1], null) : null, cljs.core.truth_(dynamic) ? new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$dynamic, true], null) : null, cljs.core.truth_(export_as) ? new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$export, export_as], null) : null, cljs.core.truth_(init_expr) ? 
  new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$children, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [init_expr], null)], null) : null], 0));
});
cljs.analyzer.analyze_fn_method_param = function cljs$analyzer$analyze_fn_method_param(env) {
  return function(p__9208, name) {
    var vec__9209 = p__9208;
    var locals = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9209, 0, null);
    var params = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9209, 1, null);
    var line = cljs.analyzer.get_line(name, env);
    var column = cljs.analyzer.get_col(name, env);
    var nmeta = cljs.core.meta(name);
    var tag = cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(nmeta);
    var shadow = locals == null ? null : locals.cljs$core$IFn$_invoke$arity$1 ? locals.cljs$core$IFn$_invoke$arity$1(name) : locals.call(null, name);
    var env__$1 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.select_keys(env, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$context], null)), new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$line, line, cljs.core.cst$kw$column, column], null)], 0));
    var param = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$name, cljs.core.cst$kw$binding_DASH_form_QMARK_, cljs.core.cst$kw$op, cljs.core.cst$kw$env, cljs.core.cst$kw$column, cljs.core.cst$kw$line, cljs.core.cst$kw$info, cljs.core.cst$kw$tag, cljs.core.cst$kw$shadow], [name, true, cljs.core.cst$kw$var, env__$1, column, line, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$name, name, cljs.core.cst$kw$shadow, shadow], null), tag, shadow]);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(locals, name, param), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(params, param)], null);
  };
};
cljs.analyzer.analyze_fn_method_body = function cljs$analyzer$analyze_fn_method_body(env, form, recur_frames) {
  var _STAR_recur_frames_STAR_9211 = cljs.analyzer._STAR_recur_frames_STAR_;
  cljs.analyzer._STAR_recur_frames_STAR_ = recur_frames;
  try {
    return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env, form) : cljs.analyzer.analyze.call(null, env, form);
  } finally {
    cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_9211;
  }
};
cljs.analyzer.analyze_fn_method = function cljs$analyzer$analyze_fn_method(env, locals, form, type) {
  var param_names = cljs.core.first(form);
  var variadic = cljs.core.boolean$(cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$_AMPERSAND_, null], null), null), param_names));
  var param_names__$1 = cljs.core.vec(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$_AMPERSAND_, null], null), null), param_names));
  var body = cljs.core.next(form);
  var step = cljs.analyzer.analyze_fn_method_param(env);
  var step_init = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [locals, cljs.core.PersistentVector.EMPTY], null);
  var vec__9214 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, step_init, param_names__$1);
  var locals__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9214, 0, null);
  var params = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9214, 1, null);
  var params_SINGLEQUOTE_ = variadic === true ? cljs.core.butlast(params) : params;
  var fixed_arity = cljs.core.count(params_SINGLEQUOTE_);
  var recur_frame = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$params, params, cljs.core.cst$kw$flag, cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null) : cljs.core.atom.call(null, null)], null);
  var recur_frames = cljs.core.cons(recur_frame, cljs.analyzer._STAR_recur_frames_STAR_);
  var body_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(env, cljs.core.cst$kw$context, cljs.core.cst$kw$return, cljs.core.array_seq([cljs.core.cst$kw$locals, locals__$1], 0));
  var body_form = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), body)));
  var expr = cljs.analyzer.analyze_fn_method_body(body_env, body_form, recur_frames);
  var recurs = function() {
    var G__9215 = cljs.core.cst$kw$flag.cljs$core$IFn$_invoke$arity$1(recur_frame);
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9215) : cljs.core.deref.call(null, G__9215);
  }();
  return new cljs.core.PersistentArrayMap(null, 8, [cljs.core.cst$kw$env, env, cljs.core.cst$kw$variadic, variadic, cljs.core.cst$kw$params, params, cljs.core.cst$kw$max_DASH_fixed_DASH_arity, fixed_arity, cljs.core.cst$kw$type, type, cljs.core.cst$kw$form, form, cljs.core.cst$kw$expr, expr, cljs.core.cst$kw$recurs, recurs], null);
};
cljs.analyzer.fn_name_var = function cljs$analyzer$fn_name_var(env, locals, name) {
  if (name == null) {
    return null;
  } else {
    var ns = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env));
    var shadow = cljs.core.get.cljs$core$IFn$_invoke$arity$2(locals, name);
    var shadow__$1 = shadow == null ? cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$js_DASH_globals, name], null)) : null;
    var fn_scope = cljs.core.cst$kw$fn_DASH_scope.cljs$core$IFn$_invoke$arity$1(env);
    var name_var = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$name, name, cljs.core.cst$kw$info, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$fn_DASH_self_DASH_name, true, cljs.core.cst$kw$fn_DASH_scope, fn_scope, cljs.core.cst$kw$ns, ns, cljs.core.cst$kw$shadow, shadow__$1], null)], null);
    var tag = cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(name));
    var ret_tag = tag == null ? null : new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$ret_DASH_tag, tag], null);
    return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([name_var, ret_tag], 0));
  }
};
cljs.analyzer.analyze_fn_methods_pass2_STAR_ = function cljs$analyzer$analyze_fn_methods_pass2_STAR_(menv, locals, type, meths) {
  return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__9216_SHARP_) {
    return cljs.analyzer.analyze_fn_method(menv, locals, p1__9216_SHARP_, type);
  }, meths));
};
cljs.analyzer.analyze_fn_methods_pass2 = function cljs$analyzer$analyze_fn_methods_pass2(menv, locals, type, meths) {
  var _STAR_cljs_warnings_STAR_9218 = cljs.analyzer._STAR_cljs_warnings_STAR_;
  cljs.analyzer._STAR_cljs_warnings_STAR_ = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_), cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));
  try {
    return cljs.analyzer.analyze_fn_methods_pass2_STAR_(menv, locals, type, meths);
  } finally {
    cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR_9218;
  }
};
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$fn_STAR_, function(op, env, p__9220, name, _) {
  var vec__9221 = p__9220;
  var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9221, 0, null);
  var args = cljs.core.nthnext(vec__9221, 1);
  var form = vec__9221;
  var vec__9222 = cljs.core.first(args) instanceof cljs.core.Symbol ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(args), cljs.core.next(args)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, cljs.core.seq(args)], null);
  var name__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9222, 0, null);
  var meths = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9222, 1, null);
  var meths__$1 = cljs.core.vector_QMARK_(cljs.core.first(meths)) ? cljs.core._conj(cljs.core.List.EMPTY, meths) : meths;
  var locals = cljs.core.cst$kw$locals.cljs$core$IFn$_invoke$arity$1(env);
  var name_var = cljs.analyzer.fn_name_var(env, locals, name__$1);
  var env__$1 = !(name__$1 == null) ? cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(env, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$fn_DASH_scope], null), cljs.core.conj, name_var) : env;
  var locals__$1 = !(locals == null) && !(name__$1 == null) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(locals, name__$1, name_var) : locals;
  var form_meta = cljs.core.meta(form);
  var type = cljs.core.cst$kw$cljs$analyzer_SLASH_type.cljs$core$IFn$_invoke$arity$1(form_meta);
  var proto_impl = cljs.core.cst$kw$cljs$analyzer_SLASH_protocol_DASH_impl.cljs$core$IFn$_invoke$arity$1(form_meta);
  var proto_inline = cljs.core.cst$kw$cljs$analyzer_SLASH_protocol_DASH_inline.cljs$core$IFn$_invoke$arity$1(form_meta);
  var menv = cljs.core.count(meths__$1) > 1 ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1, cljs.core.cst$kw$context, cljs.core.cst$kw$expr) : env__$1;
  var menv__$1 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([menv, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$protocol_DASH_impl, proto_impl, cljs.core.cst$kw$protocol_DASH_inline, proto_inline], null)], 0));
  var methods$ = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(vec__9222, name__$1, meths, meths__$1, locals, name_var, env__$1, locals__$1, form_meta, type, proto_impl, proto_inline, menv, menv__$1, vec__9221, ___$1, args, form) {
    return function(p1__9219_SHARP_) {
      return cljs.analyzer.analyze_fn_method(menv__$1, locals__$1, p1__9219_SHARP_, type);
    };
  }(vec__9222, name__$1, meths, meths__$1, locals, name_var, env__$1, locals__$1, form_meta, type, proto_impl, proto_inline, menv, menv__$1, vec__9221, ___$1, args, form), meths__$1);
  var mfa = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.max, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$max_DASH_fixed_DASH_arity, methods$));
  var variadic = cljs.core.boolean$(cljs.core.some(cljs.core.cst$kw$variadic, methods$));
  var locals__$2 = !(name__$1 == null) ? cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(locals__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [name__$1], null), cljs.core.assoc, cljs.core.cst$kw$fn_DASH_var, true, cljs.core.cst$kw$variadic, cljs.core.array_seq([variadic, cljs.core.cst$kw$max_DASH_fixed_DASH_arity, mfa, cljs.core.cst$kw$method_DASH_params, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$params, methods$)], 0)) : locals__$1;
  var methods$__$1 = !(name__$1 == null) ? cljs.analyzer.analyze_fn_methods_pass2(menv__$1, locals__$2, type, meths__$1) : methods$;
  var form__$1 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(form, cljs.core.dissoc, cljs.core.cst$kw$cljs$analyzer_SLASH_protocol_DASH_impl, cljs.core.cst$kw$cljs$analyzer_SLASH_protocol_DASH_inline, cljs.core.cst$kw$cljs$analyzer_SLASH_type);
  var js_doc = variadic === true ? "@param {...*} var_args" : null;
  var children = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, methods$__$1);
  var ast = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$children, cljs.core.cst$kw$protocol_DASH_inline, cljs.core.cst$kw$name, cljs.core.cst$kw$variadic, cljs.core.cst$kw$loop_DASH_lets, cljs.core.cst$kw$protocol_DASH_impl, cljs.core.cst$kw$op, cljs.core.cst$kw$env, cljs.core.cst$kw$methods, cljs.core.cst$kw$recur_DASH_frames, cljs.core.cst$kw$max_DASH_fixed_DASH_arity, cljs.core.cst$kw$form, cljs.core.cst$kw$tag, cljs.core.cst$kw$jsdoc], [children, proto_inline, name_var, variadic, 
  cljs.analyzer._STAR_loop_lets_STAR_, proto_impl, cljs.core.cst$kw$fn, env__$1, methods$__$1, cljs.analyzer._STAR_recur_frames_STAR_, mfa, form__$1, cljs.core.cst$sym$function, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [js_doc], null)]);
  var variadic_methods_9223 = cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$variadic, methods$__$1);
  var variadic_params_9224 = cljs.core.count(cljs.core.cst$kw$params.cljs$core$IFn$_invoke$arity$1(cljs.core.first(variadic_methods_9223)));
  var param_counts_9225 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.count, cljs.core.cst$kw$params), methods$__$1);
  if (1 < cljs.core.count(variadic_methods_9223)) {
    cljs.analyzer.warning(cljs.core.cst$kw$multiple_DASH_variadic_DASH_overloads, env__$1, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, name_var], null));
  } else {
  }
  if (!(variadic_params_9224 === 0 || variadic_params_9224 === 1 + mfa)) {
    cljs.analyzer.warning(cljs.core.cst$kw$variadic_DASH_max_DASH_arity, env__$1, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, name_var], null));
  } else {
  }
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(param_counts_9225), param_counts_9225)) {
    cljs.analyzer.warning(cljs.core.cst$kw$overload_DASH_arity, env__$1, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, name_var], null));
  } else {
  }
  return cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(ast) : cljs.analyzer.analyze_wrap_meta.call(null, ast);
});
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$letfn_STAR_, function(op, env, p__9226, name, _) {
  var vec__9227 = p__9226;
  var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9227, 0, null);
  var bindings = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9227, 1, null);
  var exprs = cljs.core.nthnext(vec__9227, 2);
  var form = vec__9227;
  if (cljs.core.vector_QMARK_(bindings) && cljs.core.even_QMARK_(cljs.core.count(bindings))) {
  } else {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "bindings must be vector of even number of elements");
  }
  var n__GT_fexpr = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(cljs.core.first, cljs.core.second), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, bindings)));
  var names = cljs.core.keys(n__GT_fexpr);
  var context = cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env);
  var vec__9228 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n__GT_fexpr, names, context, vec__9227, ___$1, bindings, exprs, form) {
    return function(p__9230, n) {
      var vec__9231 = p__9230;
      var map__9232 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9231, 0, null);
      var map__9232__$1 = (!(map__9232 == null) ? map__9232.cljs$lang$protocol_mask$partition0$ & 64 || map__9232.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__9232) : map__9232;
      var env__$1 = map__9232__$1;
      var locals = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9232__$1, cljs.core.cst$kw$locals);
      var bes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9231, 1, null);
      var ret_tag = cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(n));
      var fexpr = function() {
        var _STAR_cljs_warnings_STAR_9234 = cljs.analyzer._STAR_cljs_warnings_STAR_;
        cljs.analyzer._STAR_cljs_warnings_STAR_ = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_), cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));
        try {
          var G__9235 = env__$1;
          var G__9236 = n__GT_fexpr.cljs$core$IFn$_invoke$arity$1 ? n__GT_fexpr.cljs$core$IFn$_invoke$arity$1(n) : n__GT_fexpr.call(null, n);
          return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__9235, G__9236) : cljs.analyzer.analyze.call(null, G__9235, G__9236);
        } finally {
          cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR_9234;
        }
      }();
      var be = function() {
        var G__9237 = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$name, cljs.core.cst$kw$variadic, cljs.core.cst$kw$method_DASH_params, cljs.core.cst$kw$column, cljs.core.cst$kw$line, cljs.core.cst$kw$max_DASH_fixed_DASH_arity, cljs.core.cst$kw$fn_DASH_var, cljs.core.cst$kw$shadow, cljs.core.cst$kw$local], [n, cljs.core.cst$kw$variadic.cljs$core$IFn$_invoke$arity$1(fexpr), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$params, cljs.core.cst$kw$methods.cljs$core$IFn$_invoke$arity$1(fexpr)), 
        cljs.analyzer.get_col(n, env__$1), cljs.analyzer.get_line(n, env__$1), cljs.core.cst$kw$max_DASH_fixed_DASH_arity.cljs$core$IFn$_invoke$arity$1(fexpr), true, locals.cljs$core$IFn$_invoke$arity$1 ? locals.cljs$core$IFn$_invoke$arity$1(n) : locals.call(null, n), true]);
        var G__9237__$1 = cljs.core.truth_(ret_tag) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__9237, cljs.core.cst$kw$ret_DASH_tag, ret_tag) : G__9237;
        return G__9237__$1;
      }();
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc_in(env__$1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$locals, n], null), be), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bes, be)], null);
    };
  }(n__GT_fexpr, names, context, vec__9227, ___$1, bindings, exprs, form), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [env, cljs.core.PersistentVector.EMPTY], null), names);
  var meth_env = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9228, 0, null);
  var bes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9228, 1, null);
  var meth_env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(meth_env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
  var vec__9229 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n__GT_fexpr, names, context, vec__9228, meth_env, bes, meth_env__$1, vec__9227, ___$1, bindings, exprs, form) {
    return function(p__9238, p__9239) {
      var vec__9240 = p__9238;
      var meth_env__$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9240, 0, null);
      var bes__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9240, 1, null);
      var map__9241 = p__9239;
      var map__9241__$1 = (!(map__9241 == null) ? map__9241.cljs$lang$protocol_mask$partition0$ & 64 || map__9241.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__9241) : map__9241;
      var be = map__9241__$1;
      var name__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9241__$1, cljs.core.cst$kw$name);
      var shadow = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9241__$1, cljs.core.cst$kw$shadow);
      var env__$1 = cljs.core.assoc_in(meth_env__$2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$locals, name__$1], null), shadow);
      var fexpr = function() {
        var G__9243 = env__$1;
        var G__9244 = n__GT_fexpr.cljs$core$IFn$_invoke$arity$1 ? n__GT_fexpr.cljs$core$IFn$_invoke$arity$1(name__$1) : n__GT_fexpr.call(null, name__$1);
        return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__9243, G__9244) : cljs.analyzer.analyze.call(null, G__9243, G__9244);
      }();
      var be_SINGLEQUOTE_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(be, cljs.core.cst$kw$init, fexpr, cljs.core.array_seq([cljs.core.cst$kw$variadic, cljs.core.cst$kw$variadic.cljs$core$IFn$_invoke$arity$1(fexpr), cljs.core.cst$kw$max_DASH_fixed_DASH_arity, cljs.core.cst$kw$max_DASH_fixed_DASH_arity.cljs$core$IFn$_invoke$arity$1(fexpr), cljs.core.cst$kw$method_DASH_params, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$params, cljs.core.cst$kw$methods.cljs$core$IFn$_invoke$arity$1(fexpr))], 
      0));
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc_in(env__$1, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$locals, name__$1], null), be_SINGLEQUOTE_), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bes__$1, be_SINGLEQUOTE_)], null);
    };
  }(n__GT_fexpr, names, context, vec__9228, meth_env, bes, meth_env__$1, vec__9227, ___$1, bindings, exprs, form), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [meth_env__$1, cljs.core.PersistentVector.EMPTY], null), bes);
  var meth_env__$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9229, 0, null);
  var bes__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9229, 1, null);
  var expr = function() {
    var G__9245 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(meth_env__$2, cljs.core.cst$kw$context, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, context) ? cljs.core.cst$kw$return : context);
    var G__9246 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), exprs)));
    return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__9245, G__9246) : cljs.analyzer.analyze.call(null, G__9245, G__9246);
  }();
  return new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$env, env, cljs.core.cst$kw$op, cljs.core.cst$kw$letfn, cljs.core.cst$kw$bindings, bes__$1, cljs.core.cst$kw$expr, expr, cljs.core.cst$kw$form, form, cljs.core.cst$kw$children, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$init, bes__$1)), expr)], null);
});
cljs.analyzer.analyze_do_statements_STAR_ = function cljs$analyzer$analyze_do_statements_STAR_(env, exprs) {
  return cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__9247_SHARP_) {
    var G__9250 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$statement);
    var G__9251 = p1__9247_SHARP_;
    return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__9250, G__9251) : cljs.analyzer.analyze.call(null, G__9250, G__9251);
  }, cljs.core.butlast(exprs)));
};
cljs.analyzer.analyze_do_statements = function cljs$analyzer$analyze_do_statements(env, exprs) {
  var _STAR_recur_frames_STAR_9253 = cljs.analyzer._STAR_recur_frames_STAR_;
  cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
  try {
    return cljs.analyzer.analyze_do_statements_STAR_(env, exprs);
  } finally {
    cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_9253;
  }
};
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$do, function(op, env, p__9254, _, ___$1) {
  var vec__9255 = p__9254;
  var ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9255, 0, null);
  var exprs = cljs.core.nthnext(vec__9255, 1);
  var form = vec__9255;
  var statements = cljs.analyzer.analyze_do_statements(env, exprs);
  if (cljs.core.count(exprs) <= 1) {
    var ret = function() {
      var G__9256 = env;
      var G__9257 = cljs.core.first(exprs);
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__9256, G__9257) : cljs.analyzer.analyze.call(null, G__9256, G__9257);
    }();
    var children = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(statements), ret);
    return new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$op, cljs.core.cst$kw$do, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form, cljs.core.cst$kw$statements, statements, cljs.core.cst$kw$ret, ret, cljs.core.cst$kw$children, children], null);
  } else {
    var ret_env = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$statement, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$statement) : cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$return);
    var ret = function() {
      var G__9258 = ret_env;
      var G__9259 = cljs.core.last(exprs);
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__9258, G__9259) : cljs.analyzer.analyze.call(null, G__9258, G__9259);
    }();
    var children = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(statements), ret);
    return new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$op, cljs.core.cst$kw$do, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form, cljs.core.cst$kw$statements, statements, cljs.core.cst$kw$ret, ret, cljs.core.cst$kw$children, children], null);
  }
});
cljs.analyzer.analyze_let_binding_init = function cljs$analyzer$analyze_let_binding_init(env, init, loop_lets) {
  var _STAR_loop_lets_STAR_9261 = cljs.analyzer._STAR_loop_lets_STAR_;
  cljs.analyzer._STAR_loop_lets_STAR_ = loop_lets;
  try {
    return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env, init) : cljs.analyzer.analyze.call(null, env, init);
  } finally {
    cljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR_9261;
  }
};
cljs.analyzer.get_let_tag = function cljs$analyzer$get_let_tag(name, init_expr) {
  var tag = cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(name));
  if (!(tag == null)) {
    return tag;
  } else {
    var tag__$1 = cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(init_expr);
    if (!(tag__$1 == null)) {
      return tag__$1;
    } else {
      return cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(init_expr));
    }
  }
};
cljs.analyzer.analyze_let_bindings_STAR_ = function cljs$analyzer$analyze_let_bindings_STAR_(encl_env, bindings) {
  var bes = cljs.core.PersistentVector.EMPTY;
  var env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(encl_env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
  var bindings__$1 = cljs.core.seq(cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, bindings));
  while (true) {
    var binding = cljs.core.first(bindings__$1);
    if (!(binding == null)) {
      var vec__9269 = binding;
      var name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9269, 0, null);
      var init = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9269, 1, null);
      if (cljs.core.truth_(function() {
        var or__4311__auto__ = !(cljs.core.namespace(name) == null);
        if (or__4311__auto__) {
          return or__4311__auto__;
        } else {
          var G__9272 = [cljs.core.str(name)].join("");
          var G__9273 = ".";
          return goog.string.contains(G__9272, G__9273);
        }
      }())) {
        throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(encl_env, [cljs.core.str("Invalid local name: "), cljs.core.str(name)].join(""));
      } else {
      }
      var init_expr = cljs.analyzer.analyze_let_binding_init(env, init, cljs.core.cons(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$params, bes], null), cljs.analyzer._STAR_loop_lets_STAR_));
      var line = cljs.analyzer.get_line(name, env);
      var col = cljs.analyzer.get_col(name, env);
      var be = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$init, cljs.core.cst$kw$name, cljs.core.cst$kw$binding_DASH_form_QMARK_, cljs.core.cst$kw$op, cljs.core.cst$kw$env, cljs.core.cst$kw$column, cljs.core.cst$kw$line, cljs.core.cst$kw$info, cljs.core.cst$kw$tag, cljs.core.cst$kw$shadow, cljs.core.cst$kw$local], [init_expr, name, true, cljs.core.cst$kw$var, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$line, line, cljs.core.cst$kw$column, col], null), col, line, new cljs.core.PersistentArrayMap(null, 
      2, [cljs.core.cst$kw$name, name, cljs.core.cst$kw$shadow, function() {
        var G__9274 = cljs.core.cst$kw$locals.cljs$core$IFn$_invoke$arity$1(env);
        return name.cljs$core$IFn$_invoke$arity$1 ? name.cljs$core$IFn$_invoke$arity$1(G__9274) : name.call(null, G__9274);
      }()], null), cljs.analyzer.get_let_tag(name, init_expr), function() {
        var G__9275 = cljs.core.cst$kw$locals.cljs$core$IFn$_invoke$arity$1(env);
        return name.cljs$core$IFn$_invoke$arity$1 ? name.cljs$core$IFn$_invoke$arity$1(G__9275) : name.call(null, G__9275);
      }(), true]);
      var be__$1 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$fn, cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(init_expr)) ? cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([be, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$fn_DASH_var, true, cljs.core.cst$kw$variadic, cljs.core.cst$kw$variadic.cljs$core$IFn$_invoke$arity$1(init_expr), cljs.core.cst$kw$max_DASH_fixed_DASH_arity, cljs.core.cst$kw$max_DASH_fixed_DASH_arity.cljs$core$IFn$_invoke$arity$1(init_expr), 
      cljs.core.cst$kw$method_DASH_params, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$params, cljs.core.cst$kw$methods.cljs$core$IFn$_invoke$arity$1(init_expr))], null)], 0)) : be;
      var G__9276 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bes, be__$1);
      var G__9277 = cljs.core.assoc_in(env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$locals, name], null), be__$1);
      var G__9278 = cljs.core.next(bindings__$1);
      bes = G__9276;
      env = G__9277;
      bindings__$1 = G__9278;
      continue;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [bes, env], null);
    }
    break;
  }
};
cljs.analyzer.analyze_let_bindings = function cljs$analyzer$analyze_let_bindings(encl_env, bindings) {
  var _STAR_recur_frames_STAR_9280 = cljs.analyzer._STAR_recur_frames_STAR_;
  cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
  try {
    return cljs.analyzer.analyze_let_bindings_STAR_(encl_env, bindings);
  } finally {
    cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_9280;
  }
};
cljs.analyzer.analyze_let_body_STAR_ = function cljs$analyzer$analyze_let_body_STAR_(env, context, exprs) {
  var G__9283 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, context) ? cljs.core.cst$kw$return : context);
  var G__9284 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), exprs)));
  return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__9283, G__9284) : cljs.analyzer.analyze.call(null, G__9283, G__9284);
};
cljs.analyzer.analyze_let_body = function cljs$analyzer$analyze_let_body(env, context, exprs, recur_frames, loop_lets) {
  var _STAR_recur_frames_STAR_9287 = cljs.analyzer._STAR_recur_frames_STAR_;
  var _STAR_loop_lets_STAR_9288 = cljs.analyzer._STAR_loop_lets_STAR_;
  cljs.analyzer._STAR_recur_frames_STAR_ = recur_frames;
  cljs.analyzer._STAR_loop_lets_STAR_ = loop_lets;
  try {
    return cljs.analyzer.analyze_let_body_STAR_(env, context, exprs);
  } finally {
    cljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR_9288;
    cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_9287;
  }
};
cljs.analyzer.analyze_let = function cljs$analyzer$analyze_let(encl_env, p__9289, is_loop) {
  var vec__9292 = p__9289;
  var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9292, 0, null);
  var bindings = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9292, 1, null);
  var exprs = cljs.core.nthnext(vec__9292, 2);
  var form = vec__9292;
  if (cljs.core.vector_QMARK_(bindings) && cljs.core.even_QMARK_(cljs.core.count(bindings))) {
  } else {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(encl_env, "bindings must be vector of even number of elements");
  }
  var context = cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(encl_env);
  var vec__9293 = cljs.analyzer.analyze_let_bindings(encl_env, bindings);
  var bes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9293, 0, null);
  var env = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9293, 1, null);
  var recur_frame = is_loop === true ? new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$params, bes, cljs.core.cst$kw$flag, cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null) : cljs.core.atom.call(null, null)], null) : null;
  var recur_frames = cljs.core.truth_(recur_frame) ? cljs.core.cons(recur_frame, cljs.analyzer._STAR_recur_frames_STAR_) : cljs.analyzer._STAR_recur_frames_STAR_;
  var loop_lets = is_loop === true ? cljs.analyzer._STAR_loop_lets_STAR_ : !(cljs.analyzer._STAR_loop_lets_STAR_ == null) ? cljs.core.cons(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$params, bes], null), cljs.analyzer._STAR_loop_lets_STAR_) : null;
  var expr = cljs.analyzer.analyze_let_body(env, context, exprs, recur_frames, loop_lets);
  var op = is_loop === true ? cljs.core.cst$kw$loop : cljs.core.cst$kw$let;
  var children = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$init, bes)), expr);
  return new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$op, op, cljs.core.cst$kw$env, encl_env, cljs.core.cst$kw$bindings, bes, cljs.core.cst$kw$expr, expr, cljs.core.cst$kw$form, form, cljs.core.cst$kw$children, children], null);
};
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$let_STAR_, function(op, encl_env, form, _, ___$1) {
  return cljs.analyzer.analyze_let(encl_env, form, false);
});
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$loop_STAR_, function(op, encl_env, form, _, ___$1) {
  return cljs.analyzer.analyze_let(encl_env, form, true);
});
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$recur, function(op, env, p__9295, _, ___$1) {
  var vec__9296 = p__9295;
  var ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9296, 0, null);
  var exprs = cljs.core.nthnext(vec__9296, 1);
  var form = vec__9296;
  var context = cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env);
  var frame = cljs.core.first(cljs.analyzer._STAR_recur_frames_STAR_);
  var exprs__$1 = function() {
    var _STAR_recur_frames_STAR_9297 = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(_STAR_recur_frames_STAR_9297, context, frame, vec__9296, ___$2, exprs, form) {
        return function(p1__9294_SHARP_) {
          var G__9298 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
          var G__9299 = p1__9294_SHARP_;
          return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__9298, G__9299) : cljs.analyzer.analyze.call(null, G__9298, G__9299);
        };
      }(_STAR_recur_frames_STAR_9297, context, frame, vec__9296, ___$2, exprs, form), exprs));
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_9297;
    }
  }();
  if (cljs.core.truth_(frame)) {
  } else {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Can't recur here");
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(exprs__$1), cljs.core.count(cljs.core.cst$kw$params.cljs$core$IFn$_invoke$arity$1(frame)))) {
  } else {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "recur argument count mismatch");
  }
  var G__9300_9302 = cljs.core.cst$kw$flag.cljs$core$IFn$_invoke$arity$1(frame);
  var G__9301_9303 = true;
  cljs.core.reset_BANG_.cljs$core$IFn$_invoke$arity$2 ? cljs.core.reset_BANG_.cljs$core$IFn$_invoke$arity$2(G__9300_9302, G__9301_9303) : cljs.core.reset_BANG_.call(null, G__9300_9302, G__9301_9303);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$env, env, cljs.core.cst$kw$op, cljs.core.cst$kw$recur, cljs.core.cst$kw$form, form], null), cljs.core.cst$kw$frame, frame, cljs.core.array_seq([cljs.core.cst$kw$exprs, exprs__$1, cljs.core.cst$kw$children, exprs__$1], 0));
});
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$quote, function(_, env, p__9304, ___$1, ___$2) {
  var vec__9305 = p__9304;
  var ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9305, 0, null);
  var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9305, 1, null);
  var G__9306 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$quoted_QMARK_, true);
  var G__9307 = x;
  return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__9306, G__9307) : cljs.analyzer.analyze.call(null, G__9306, G__9307);
});
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$new, function(_, env, p__9309, ___$1, ___$2) {
  var vec__9310 = p__9309;
  var ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9310, 0, null);
  var ctor = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9310, 1, null);
  var args = cljs.core.nthnext(vec__9310, 2);
  var form = vec__9310;
  if (ctor instanceof cljs.core.Symbol) {
  } else {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "First arg to new must be a symbol");
  }
  var _STAR_recur_frames_STAR_9311 = cljs.analyzer._STAR_recur_frames_STAR_;
  cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
  try {
    var enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
    var ctorexpr = cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve, ctor) : cljs.analyzer.analyze.call(null, enve, ctor);
    var ctor_var = cljs.analyzer.resolve_existing_var(env, ctor);
    var record_args = cljs.core.truth_(function() {
      var and__4299__auto__ = cljs.core.cst$kw$record.cljs$core$IFn$_invoke$arity$1(ctor_var);
      if (cljs.core.truth_(and__4299__auto__)) {
        return cljs.core.not(cljs.core.cst$kw$internal_DASH_ctor.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(ctor)));
      } else {
        return and__4299__auto__;
      }
    }()) ? cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(3, cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve, null) : cljs.analyzer.analyze.call(null, enve, null)) : null;
    var argexprs = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(enve, ctorexpr, ctor_var, record_args, _STAR_recur_frames_STAR_9311, vec__9310, ___$3, ctor, args, form) {
      return function(p1__9308_SHARP_) {
        return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve, p1__9308_SHARP_) : cljs.analyzer.analyze.call(null, enve, p1__9308_SHARP_);
      };
    }(enve, ctorexpr, ctor_var, record_args, _STAR_recur_frames_STAR_9311, vec__9310, ___$3, ctor, args, form), args)), record_args);
    var known_num_fields = cljs.core.cst$kw$num_DASH_fields.cljs$core$IFn$_invoke$arity$1(ctor_var);
    var argc = cljs.core.count(args);
    if (cljs.core.truth_(function() {
      var and__4299__auto__ = cljs.core.not(cljs.core.cst$kw$internal_DASH_ctor.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(ctor)));
      if (and__4299__auto__) {
        var and__4299__auto____$1 = known_num_fields;
        if (cljs.core.truth_(and__4299__auto____$1)) {
          return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(known_num_fields, argc);
        } else {
          return and__4299__auto____$1;
        }
      } else {
        return and__4299__auto__;
      }
    }())) {
      cljs.analyzer.warning(cljs.core.cst$kw$fn_DASH_arity, env, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$argc, argc, cljs.core.cst$kw$ctor, ctor], null));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$env, env, cljs.core.cst$kw$op, cljs.core.cst$kw$new, cljs.core.cst$kw$form, form, cljs.core.cst$kw$ctor, ctorexpr, cljs.core.cst$kw$args, argexprs, cljs.core.cst$kw$children, cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ctorexpr], null), argexprs), cljs.core.cst$kw$tag, function() {
      var name = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(ctorexpr));
      var or__4311__auto__ = (new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$sym$js_SLASH_Object, cljs.core.cst$sym$object, cljs.core.cst$sym$js_SLASH_String, cljs.core.cst$sym$string, cljs.core.cst$sym$js_SLASH_Array, cljs.core.cst$sym$array, cljs.core.cst$sym$js_SLASH_Number, cljs.core.cst$sym$number, cljs.core.cst$sym$js_SLASH_Function, cljs.core.cst$sym$function, cljs.core.cst$sym$js_SLASH_Boolean, cljs.core.cst$sym$boolean], null)).call(null, name);
      if (cljs.core.truth_(or__4311__auto__)) {
        return or__4311__auto__;
      } else {
        return name;
      }
    }()], null);
  } finally {
    cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_9311;
  }
});
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$set_BANG_, function(_, env, p__9312, ___$1, ___$2) {
  var vec__9313 = p__9312;
  var ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9313, 0, null);
  var target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9313, 1, null);
  var val = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9313, 2, null);
  var alt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9313, 3, null);
  var form = vec__9313;
  var vec__9314 = cljs.core.truth_(alt) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, target), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, val)], 0)))), alt], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [target, val], null);
  var target__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9314, 0, null);
  var val__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9314, 1, null);
  var _STAR_recur_frames_STAR_9315 = cljs.analyzer._STAR_recur_frames_STAR_;
  cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
  try {
    var enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
    var targetexpr = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(target__$1, cljs.core.cst$sym$_STAR_unchecked_DASH_if_STAR_) ? function() {
      return cljs.core.cst$kw$cljs$analyzer_SLASH_set_DASH_unchecked_DASH_if;
    }() : target__$1 instanceof cljs.core.Symbol ? function() {
      if (cljs.core.cst$kw$const.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env, cljs.core.cst$kw$locals), target__$1))) {
        throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Can't set! a constant");
      } else {
      }
      var local_9317 = function() {
        var G__9316 = cljs.core.cst$kw$locals.cljs$core$IFn$_invoke$arity$1(env);
        return target__$1.cljs$core$IFn$_invoke$arity$1 ? target__$1.cljs$core$IFn$_invoke$arity$1(G__9316) : target__$1.call(null, G__9316);
      }();
      if (function() {
        var or__4311__auto__ = local_9317 == null;
        if (or__4311__auto__) {
          return or__4311__auto__;
        } else {
          var and__4299__auto__ = cljs.core.cst$kw$field.cljs$core$IFn$_invoke$arity$1(local_9317);
          if (and__4299__auto__) {
            var or__4311__auto____$1 = cljs.core.cst$kw$mutable.cljs$core$IFn$_invoke$arity$1(local_9317);
            if (or__4311__auto____$1) {
              return or__4311__auto____$1;
            } else {
              var or__4311__auto____$2 = cljs.core.cst$kw$unsynchronized_DASH_mutable.cljs$core$IFn$_invoke$arity$1(local_9317);
              if (or__4311__auto____$2) {
                return or__4311__auto____$2;
              } else {
                return cljs.core.cst$kw$volatile_DASH_mutable.cljs$core$IFn$_invoke$arity$1(local_9317);
              }
            }
          } else {
            return and__4299__auto__;
          }
        }
      }()) {
      } else {
        throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Can't set! local var or non-mutable field");
      }
      return cljs.analyzer.analyze_symbol.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze_symbol.cljs$core$IFn$_invoke$arity$2(enve, target__$1) : cljs.analyzer.analyze_symbol.call(null, enve, target__$1);
    }() : cljs.core.seq_QMARK_(target__$1) ? function() {
      var targetexpr = cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3(enve, target__$1, null) : cljs.analyzer.analyze_seq.call(null, enve, target__$1, null);
      if (cljs.core.cst$kw$field.cljs$core$IFn$_invoke$arity$1(targetexpr)) {
        return targetexpr;
      } else {
        return null;
      }
    }() : null;
    var valexpr = cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve, val__$1) : cljs.analyzer.analyze.call(null, enve, val__$1);
    if (targetexpr) {
    } else {
      throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "set! target must be a field or a symbol naming a var");
    }
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(targetexpr, cljs.core.cst$kw$cljs$analyzer_SLASH_set_DASH_unchecked_DASH_if)) {
      return new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$env, env, cljs.core.cst$kw$op, cljs.core.cst$kw$no_DASH_op], null);
    } else {
      return new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$env, env, cljs.core.cst$kw$op, cljs.core.cst$kw$set_BANG_, cljs.core.cst$kw$form, form, cljs.core.cst$kw$target, targetexpr, cljs.core.cst$kw$val, valexpr, cljs.core.cst$kw$children, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [targetexpr, valexpr], null)], null);
    }
  } finally {
    cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_9315;
  }
});
cljs.analyzer.foreign_dep_QMARK_ = function cljs$analyzer$foreign_dep_QMARK_(dep) {
  if (dep instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$symbol_QMARK_, cljs.core.cst$sym$dep)], 0)))].join(""));
  }
  var js_index = cljs.core.cst$kw$js_DASH_dependency_DASH_index.cljs$core$IFn$_invoke$arity$1(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_));
  var temp__4423__auto__ = cljs.core.find(js_index, cljs.core.name(dep));
  if (temp__4423__auto__) {
    var vec__9321 = temp__4423__auto__;
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9321, 0, null);
    var map__9322 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9321, 1, null);
    var map__9322__$1 = (!(map__9322 == null) ? map__9322.cljs$lang$protocol_mask$partition0$ & 64 || map__9322.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__9322) : map__9322;
    var foreign = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9322__$1, cljs.core.cst$kw$foreign);
    return foreign;
  } else {
    return false;
  }
};
cljs.analyzer.analyze_deps = function cljs$analyzer$analyze_deps() {
  var args9325 = [];
  var len__5350__auto___9337 = arguments.length;
  var i__5351__auto___9338 = 0;
  while (true) {
    if (i__5351__auto___9338 < len__5350__auto___9337) {
      args9325.push(arguments[i__5351__auto___9338]);
      var G__9339 = i__5351__auto___9338 + 1;
      i__5351__auto___9338 = G__9339;
      continue;
    } else {
    }
    break;
  }
  var G__9327 = args9325.length;
  switch(G__9327) {
    case 3:
      return cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9325.length)].join(""));;
  }
};
cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$3 = function(lib, deps, env) {
  return cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4(lib, deps, env, null);
};
cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4 = function(lib, deps, env, opts) {
  var compiler = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_);
  var _STAR_cljs_dep_set_STAR_9328 = cljs.analyzer._STAR_cljs_dep_set_STAR_;
  cljs.analyzer._STAR_cljs_dep_set_STAR_ = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.analyzer._STAR_cljs_dep_set_STAR_, lib), cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$dep_DASH_path], null), cljs.core.conj, lib);
  try {
    if (cljs.core.every_QMARK_(function(_STAR_cljs_dep_set_STAR_9328, compiler) {
      return function(p1__9324_SHARP_) {
        return !cljs.core.contains_QMARK_(cljs.analyzer._STAR_cljs_dep_set_STAR_, p1__9324_SHARP_);
      };
    }(_STAR_cljs_dep_set_STAR_9328, compiler), deps)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Circular dependency detected "), cljs.core.str(cljs.core.cst$kw$dep_DASH_path.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(cljs.analyzer._STAR_cljs_dep_set_STAR_)))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$every_QMARK_, cljs.core.list(cljs.core.cst$sym$fn_STAR_, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p1__9324_SHARP_], null), cljs.core.list(cljs.core.cst$sym$not, cljs.core.list(cljs.core.cst$sym$contains_QMARK_, cljs.core.cst$sym$_STAR_cljs_DASH_dep_DASH_set_STAR_, cljs.core.cst$sym$p1__9324_SHARP_))), cljs.core.cst$sym$deps)], 0)))].join(""));
    }
    var seq__9329 = cljs.core.seq(deps);
    var chunk__9330 = null;
    var count__9331 = 0;
    var i__9332 = 0;
    while (true) {
      if (i__9332 < count__9331) {
        var dep = chunk__9330.cljs$core$IIndexed$_nth$arity$2(null, i__9332);
        if (function() {
          var or__4311__auto__ = cljs.core.not_empty(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(compiler, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, dep, cljs.core.cst$kw$defs], null)));
          if (or__4311__auto__) {
            return or__4311__auto__;
          } else {
            return cljs.core.contains_QMARK_(cljs.core.cst$kw$js_DASH_dependency_DASH_index.cljs$core$IFn$_invoke$arity$1(compiler), cljs.core.name(dep));
          }
        }()) {
        } else {
          throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, function() {
            var G__9333 = cljs.core.cst$kw$undeclared_DASH_ns;
            var G__9334 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ns_DASH_sym, dep, cljs.core.cst$kw$js_DASH_provide, cljs.core.name(dep)], null);
            return cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__9333, G__9334) : cljs.analyzer.error_message.call(null, G__9333, G__9334);
          }());
        }
        var G__9341 = seq__9329;
        var G__9342 = chunk__9330;
        var G__9343 = count__9331;
        var G__9344 = i__9332 + 1;
        seq__9329 = G__9341;
        chunk__9330 = G__9342;
        count__9331 = G__9343;
        i__9332 = G__9344;
        continue;
      } else {
        var temp__4425__auto__ = cljs.core.seq(seq__9329);
        if (temp__4425__auto__) {
          var seq__9329__$1 = temp__4425__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__9329__$1)) {
            var c__5095__auto__ = cljs.core.chunk_first(seq__9329__$1);
            var G__9345 = cljs.core.chunk_rest(seq__9329__$1);
            var G__9346 = c__5095__auto__;
            var G__9347 = cljs.core.count(c__5095__auto__);
            var G__9348 = 0;
            seq__9329 = G__9345;
            chunk__9330 = G__9346;
            count__9331 = G__9347;
            i__9332 = G__9348;
            continue;
          } else {
            var dep = cljs.core.first(seq__9329__$1);
            if (function() {
              var or__4311__auto__ = cljs.core.not_empty(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(compiler, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, dep, cljs.core.cst$kw$defs], null)));
              if (or__4311__auto__) {
                return or__4311__auto__;
              } else {
                return cljs.core.contains_QMARK_(cljs.core.cst$kw$js_DASH_dependency_DASH_index.cljs$core$IFn$_invoke$arity$1(compiler), cljs.core.name(dep));
              }
            }()) {
            } else {
              throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, function() {
                var G__9335 = cljs.core.cst$kw$undeclared_DASH_ns;
                var G__9336 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ns_DASH_sym, dep, cljs.core.cst$kw$js_DASH_provide, cljs.core.name(dep)], null);
                return cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__9335, G__9336) : cljs.analyzer.error_message.call(null, G__9335, G__9336);
              }());
            }
            var G__9349 = cljs.core.next(seq__9329__$1);
            var G__9350 = null;
            var G__9351 = 0;
            var G__9352 = 0;
            seq__9329 = G__9349;
            chunk__9330 = G__9350;
            count__9331 = G__9351;
            i__9332 = G__9352;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  } finally {
    cljs.analyzer._STAR_cljs_dep_set_STAR_ = _STAR_cljs_dep_set_STAR_9328;
  }
};
cljs.analyzer.analyze_deps.cljs$lang$maxFixedArity = 4;
cljs.analyzer.check_uses = function cljs$analyzer$check_uses(uses, env) {
  var seq__9363 = cljs.core.seq(uses);
  var chunk__9364 = null;
  var count__9365 = 0;
  var i__9366 = 0;
  while (true) {
    if (i__9366 < count__9365) {
      var vec__9367 = chunk__9364.cljs$core$IIndexed$_nth$arity$2(null, i__9366);
      var sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9367, 0, null);
      var lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9367, 1, null);
      var js_lib_9373 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$js_DASH_dependency_DASH_index, cljs.core.name(lib)], null));
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, lib, cljs.core.cst$kw$defs, sym], null), cljs.core.cst$kw$cljs$analyzer_SLASH_not_DASH_found), 
      cljs.core.cst$kw$cljs$analyzer_SLASH_not_DASH_found) && !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(js_lib_9373, cljs.core.cst$kw$group), cljs.core.cst$kw$goog) && cljs.core.not(cljs.core.get.cljs$core$IFn$_invoke$arity$2(js_lib_9373, cljs.core.cst$kw$closure_DASH_lib))) {
        throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, function() {
          var G__9368 = cljs.core.cst$kw$undeclared_DASH_ns_DASH_form;
          var G__9369 = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$type, "var", cljs.core.cst$kw$lib, lib, cljs.core.cst$kw$sym, sym], null);
          return cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__9368, G__9369) : cljs.analyzer.error_message.call(null, G__9368, G__9369);
        }());
      } else {
      }
      var G__9374 = seq__9363;
      var G__9375 = chunk__9364;
      var G__9376 = count__9365;
      var G__9377 = i__9366 + 1;
      seq__9363 = G__9374;
      chunk__9364 = G__9375;
      count__9365 = G__9376;
      i__9366 = G__9377;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__9363);
      if (temp__4425__auto__) {
        var seq__9363__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9363__$1)) {
          var c__5095__auto__ = cljs.core.chunk_first(seq__9363__$1);
          var G__9378 = cljs.core.chunk_rest(seq__9363__$1);
          var G__9379 = c__5095__auto__;
          var G__9380 = cljs.core.count(c__5095__auto__);
          var G__9381 = 0;
          seq__9363 = G__9378;
          chunk__9364 = G__9379;
          count__9365 = G__9380;
          i__9366 = G__9381;
          continue;
        } else {
          var vec__9370 = cljs.core.first(seq__9363__$1);
          var sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9370, 0, null);
          var lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9370, 1, null);
          var js_lib_9382 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$js_DASH_dependency_DASH_index, cljs.core.name(lib)], null));
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, lib, cljs.core.cst$kw$defs, sym], null), cljs.core.cst$kw$cljs$analyzer_SLASH_not_DASH_found), 
          cljs.core.cst$kw$cljs$analyzer_SLASH_not_DASH_found) && !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(js_lib_9382, cljs.core.cst$kw$group), cljs.core.cst$kw$goog) && cljs.core.not(cljs.core.get.cljs$core$IFn$_invoke$arity$2(js_lib_9382, cljs.core.cst$kw$closure_DASH_lib))) {
            throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, function() {
              var G__9371 = cljs.core.cst$kw$undeclared_DASH_ns_DASH_form;
              var G__9372 = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$type, "var", cljs.core.cst$kw$lib, lib, cljs.core.cst$kw$sym, sym], null);
              return cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__9371, G__9372) : cljs.analyzer.error_message.call(null, G__9371, G__9372);
            }());
          } else {
          }
          var G__9383 = cljs.core.next(seq__9363__$1);
          var G__9384 = null;
          var G__9385 = 0;
          var G__9386 = 0;
          seq__9363 = G__9383;
          chunk__9364 = G__9384;
          count__9365 = G__9385;
          i__9366 = G__9386;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.analyzer.check_use_macros = function cljs$analyzer$check_use_macros(use_macros, env) {
  var seq__9397 = cljs.core.seq(use_macros);
  var chunk__9398 = null;
  var count__9399 = 0;
  var i__9400 = 0;
  while (true) {
    if (i__9400 < count__9399) {
      var vec__9401 = chunk__9398.cljs$core$IIndexed$_nth$arity$2(null, i__9400);
      var sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9401, 0, null);
      var lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9401, 1, null);
      var the_ns_9407 = cljs.core.find_macros_ns(lib);
      if (the_ns_9407 == null || the_ns_9407.findInternedVar(sym) == null) {
        throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, function() {
          var G__9402 = cljs.core.cst$kw$undeclared_DASH_ns_DASH_form;
          var G__9403 = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$type, "macro", cljs.core.cst$kw$lib, lib, cljs.core.cst$kw$sym, sym], null);
          return cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__9402, G__9403) : cljs.analyzer.error_message.call(null, G__9402, G__9403);
        }());
      } else {
      }
      var G__9408 = seq__9397;
      var G__9409 = chunk__9398;
      var G__9410 = count__9399;
      var G__9411 = i__9400 + 1;
      seq__9397 = G__9408;
      chunk__9398 = G__9409;
      count__9399 = G__9410;
      i__9400 = G__9411;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__9397);
      if (temp__4425__auto__) {
        var seq__9397__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9397__$1)) {
          var c__5095__auto__ = cljs.core.chunk_first(seq__9397__$1);
          var G__9412 = cljs.core.chunk_rest(seq__9397__$1);
          var G__9413 = c__5095__auto__;
          var G__9414 = cljs.core.count(c__5095__auto__);
          var G__9415 = 0;
          seq__9397 = G__9412;
          chunk__9398 = G__9413;
          count__9399 = G__9414;
          i__9400 = G__9415;
          continue;
        } else {
          var vec__9404 = cljs.core.first(seq__9397__$1);
          var sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9404, 0, null);
          var lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9404, 1, null);
          var the_ns_9416 = cljs.core.find_macros_ns(lib);
          if (the_ns_9416 == null || the_ns_9416.findInternedVar(sym) == null) {
            throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, function() {
              var G__9405 = cljs.core.cst$kw$undeclared_DASH_ns_DASH_form;
              var G__9406 = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$type, "macro", cljs.core.cst$kw$lib, lib, cljs.core.cst$kw$sym, sym], null);
              return cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__9405, G__9406) : cljs.analyzer.error_message.call(null, G__9405, G__9406);
            }());
          } else {
          }
          var G__9417 = cljs.core.next(seq__9397__$1);
          var G__9418 = null;
          var G__9419 = 0;
          var G__9420 = 0;
          seq__9397 = G__9417;
          chunk__9398 = G__9418;
          count__9399 = G__9419;
          i__9400 = G__9420;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.analyzer.parse_ns_error_msg = function cljs$analyzer$parse_ns_error_msg(spec, msg) {
  return [cljs.core.str(msg), cljs.core.str("; offending spec: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([spec], 0)))].join("");
};
cljs.analyzer.basic_validate_ns_spec = function cljs$analyzer$basic_validate_ns_spec(env, macros_QMARK_, spec) {
  if (spec instanceof cljs.core.Symbol || cljs.core.sequential_QMARK_(spec)) {
  } else {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, cljs.analyzer.parse_ns_error_msg(spec, "Only [lib.ns & options] and lib.ns specs supported in :require / :require-macros"));
  }
  if (cljs.core.sequential_QMARK_(spec)) {
    if (cljs.core.first(spec) instanceof cljs.core.Symbol) {
    } else {
      throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, cljs.analyzer.parse_ns_error_msg(spec, "Library name must be specified as a symbol in :require / :require-macros"));
    }
    if (cljs.core.odd_QMARK_(cljs.core.count(spec))) {
    } else {
      throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, cljs.analyzer.parse_ns_error_msg(spec, "Only :as alias and :refer (names) options supported in :require"));
    }
    if (cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$as, null, cljs.core.cst$kw$refer, null], null), null), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, cljs.core.next(spec))))) {
    } else {
      throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, cljs.analyzer.parse_ns_error_msg(spec, "Only :as and :refer options supported in :require / :require-macros"));
    }
    if (function() {
      var fs = cljs.core.frequencies(cljs.core.next(spec));
      return (fs.cljs$core$IFn$_invoke$arity$2 ? fs.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$as, 0) : fs.call(null, cljs.core.cst$kw$as, 0)) <= 1 && (fs.cljs$core$IFn$_invoke$arity$2 ? fs.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$refer, 0) : fs.call(null, cljs.core.cst$kw$refer, 0)) <= 1;
    }()) {
      return null;
    } else {
      throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, cljs.analyzer.parse_ns_error_msg(spec, "Each of :as and :refer options may only be specified once in :require / :require-macros"));
    }
  } else {
    return null;
  }
};
cljs.analyzer.parse_ns_excludes = function cljs$analyzer$parse_ns_excludes(env, args) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(s, p__9423) {
    var vec__9424 = p__9423;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9424, 0, null);
    var exclude = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9424, 1, null);
    var xs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9424, 2, null);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, cljs.core.cst$kw$refer_DASH_clojure)) {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(exclude, cljs.core.cst$kw$exclude)) {
      } else {
        throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Only [:refer-clojure :exclude (names)] form supported");
      }
      if (cljs.core.seq(s)) {
        throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Only one :refer-clojure form is allowed per namespace definition");
      } else {
      }
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(s, xs);
    } else {
      return s;
    }
  }, cljs.core.PersistentHashSet.EMPTY, args);
};
cljs.analyzer.use__GT_require = function cljs$analyzer$use__GT_require(env, p__9425) {
  var vec__9427 = p__9425;
  var lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9427, 0, null);
  var kw = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9427, 1, null);
  var referred = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9427, 2, null);
  var spec = vec__9427;
  if (lib instanceof cljs.core.Symbol && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$only, kw) && cljs.core.sequential_QMARK_(referred) && cljs.core.every_QMARK_(cljs.core.symbol_QMARK_, referred)) {
  } else {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, cljs.analyzer.parse_ns_error_msg(spec, "Only [lib.ns :only (names)] specs supported in :use / :use-macros"));
  }
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [lib, cljs.core.cst$kw$refer, referred], null);
};
cljs.analyzer.parse_require_spec = function cljs$analyzer$parse_require_spec(env, macros_QMARK_, deps, aliases, spec) {
  while (true) {
    if (spec instanceof cljs.core.Symbol) {
      var G__9438 = env;
      var G__9439 = macros_QMARK_;
      var G__9440 = deps;
      var G__9441 = aliases;
      var G__9442 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [spec], null);
      env = G__9438;
      macros_QMARK_ = G__9439;
      deps = G__9440;
      aliases = G__9441;
      spec = G__9442;
      continue;
    } else {
      cljs.analyzer.basic_validate_ns_spec(env, macros_QMARK_, spec);
      var vec__9433 = spec;
      var lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9433, 0, null);
      var opts = cljs.core.nthnext(vec__9433, 1);
      var lib__$1 = function() {
        var temp__4423__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$js_DASH_module_DASH_index, cljs.core.name(lib)], null));
        if (temp__4423__auto__) {
          var js_module_name = temp__4423__auto__;
          return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(js_module_name);
        } else {
          return lib;
        }
      }();
      var map__9434 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, opts);
      var map__9434__$1 = (!(map__9434 == null) ? map__9434.cljs$lang$protocol_mask$partition0$ & 64 || map__9434.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__9434) : map__9434;
      var alias = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__9434__$1, cljs.core.cst$kw$as, lib__$1);
      var referred = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9434__$1, cljs.core.cst$kw$refer);
      var vec__9435 = macros_QMARK_ ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$require_DASH_macros, cljs.core.cst$kw$use_DASH_macros], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$require, cljs.core.cst$kw$use], null);
      var rk = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9435, 0, null);
      var uk = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9435, 1, null);
      if (alias instanceof cljs.core.Symbol || alias == null) {
      } else {
        throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, cljs.analyzer.parse_ns_error_msg(spec, ":as must be followed by a symbol in :require / :require-macros"));
      }
      if (alias) {
        var alias_type_9443 = macros_QMARK_ ? cljs.core.cst$kw$macros : cljs.core.cst$kw$fns;
        var lib_SINGLEQUOTE__9444 = function() {
          var G__9437 = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(aliases) : cljs.core.deref.call(null, aliases);
          return alias_type_9443.cljs$core$IFn$_invoke$arity$1 ? alias_type_9443.cljs$core$IFn$_invoke$arity$1(G__9437) : alias_type_9443.call(null, G__9437);
        }().call(null, alias);
        if (!(lib_SINGLEQUOTE__9444 == null) && cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(lib__$1, lib_SINGLEQUOTE__9444)) {
          throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, cljs.analyzer.parse_ns_error_msg(spec, ":as alias must be unique"));
        } else {
        }
        cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(aliases, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [alias_type_9443], null), cljs.core.conj, cljs.core.array_seq([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [alias, lib__$1], null)], 0));
      } else {
      }
      if (cljs.core.sequential_QMARK_(referred) && cljs.core.every_QMARK_(cljs.core.symbol_QMARK_, referred) || referred == null) {
      } else {
        throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, cljs.analyzer.parse_ns_error_msg(spec, ":refer must be followed by a sequence of symbols in :require / :require-macros"));
      }
      if (macros_QMARK_) {
      } else {
        cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(deps, cljs.core.conj, lib__$1);
      }
      return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([alias ? new cljs.core.PersistentArrayMap.fromArray([rk, cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap.fromArray([alias, lib__$1], true, false), new cljs.core.PersistentArrayMap.fromArray([lib__$1, lib__$1], true, false)], 0))], true, false) : null, referred ? new cljs.core.PersistentArrayMap.fromArray([uk, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, 
      cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(referred, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(lib__$1)))], true, false) : null], 0));
    }
    break;
  }
};
cljs.analyzer.parse_import_spec = function cljs$analyzer$parse_import_spec(env, deps, spec) {
  if (cljs.core.sequential_QMARK_(spec) && cljs.core.every_QMARK_(cljs.core.symbol_QMARK_, spec) || spec instanceof cljs.core.Symbol && cljs.core.namespace(spec) == null) {
  } else {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, cljs.analyzer.parse_ns_error_msg(spec, "Only lib.ns.Ctor or [lib.ns Ctor*] spec supported in :import"));
  }
  var import_map = cljs.core.sequential_QMARK_(spec) ? cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__9445_SHARP_) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__9445_SHARP_, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(cljs.core.first(spec)), cljs.core.str("."), cljs.core.str(p1__9445_SHARP_)].join(""))], null);
  }, cljs.core.rest(spec))) : new cljs.core.PersistentArrayMap.fromArray([cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.last(clojure.string.split.cljs$core$IFn$_invoke$arity$2([cljs.core.str(spec)].join(""), /\./))), spec], true, false);
  var seq__9452_9458 = cljs.core.seq(import_map);
  var chunk__9453_9459 = null;
  var count__9454_9460 = 0;
  var i__9455_9461 = 0;
  while (true) {
    if (i__9455_9461 < count__9454_9460) {
      var vec__9456_9462 = chunk__9453_9459.cljs$core$IIndexed$_nth$arity$2(null, i__9455_9461);
      var __9463 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9456_9462, 0, null);
      var spec_9464__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9456_9462, 1, null);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(deps, cljs.core.conj, spec_9464__$1);
      var G__9465 = seq__9452_9458;
      var G__9466 = chunk__9453_9459;
      var G__9467 = count__9454_9460;
      var G__9468 = i__9455_9461 + 1;
      seq__9452_9458 = G__9465;
      chunk__9453_9459 = G__9466;
      count__9454_9460 = G__9467;
      i__9455_9461 = G__9468;
      continue;
    } else {
      var temp__4425__auto___9469 = cljs.core.seq(seq__9452_9458);
      if (temp__4425__auto___9469) {
        var seq__9452_9470__$1 = temp__4425__auto___9469;
        if (cljs.core.chunked_seq_QMARK_(seq__9452_9470__$1)) {
          var c__5095__auto___9471 = cljs.core.chunk_first(seq__9452_9470__$1);
          var G__9472 = cljs.core.chunk_rest(seq__9452_9470__$1);
          var G__9473 = c__5095__auto___9471;
          var G__9474 = cljs.core.count(c__5095__auto___9471);
          var G__9475 = 0;
          seq__9452_9458 = G__9472;
          chunk__9453_9459 = G__9473;
          count__9454_9460 = G__9474;
          i__9455_9461 = G__9475;
          continue;
        } else {
          var vec__9457_9476 = cljs.core.first(seq__9452_9470__$1);
          var __9477 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9457_9476, 0, null);
          var spec_9478__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9457_9476, 1, null);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(deps, cljs.core.conj, spec_9478__$1);
          var G__9479 = cljs.core.next(seq__9452_9470__$1);
          var G__9480 = null;
          var G__9481 = 0;
          var G__9482 = 0;
          seq__9452_9458 = G__9479;
          chunk__9453_9459 = G__9480;
          count__9454_9460 = G__9481;
          i__9455_9461 = G__9482;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$import, import_map, cljs.core.cst$kw$require, import_map], null);
};
cljs.analyzer.macro_autoload_ns_QMARK_ = function cljs$analyzer$macro_autoload_ns_QMARK_(form) {
  if (cljs.analyzer._STAR_macro_infer_STAR_) {
    var ns = cljs.core.sequential_QMARK_(form) ? cljs.core.first(form) : form;
    var map__9485 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, ns], null));
    var map__9485__$1 = (!(map__9485 == null) ? map__9485.cljs$lang$protocol_mask$partition0$ & 64 || map__9485.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__9485) : map__9485;
    var use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9485__$1, cljs.core.cst$kw$use_DASH_macros);
    var require_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9485__$1, cljs.core.cst$kw$require_DASH_macros);
    var or__4311__auto__ = cljs.core.some(cljs.core.PersistentHashSet.fromArray([ns], true), cljs.core.vals(use_macros));
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return cljs.core.some(cljs.core.PersistentHashSet.fromArray([ns], true), cljs.core.vals(require_macros));
    }
  } else {
    return null;
  }
};
cljs.analyzer.desugar_ns_specs = function cljs$analyzer$desugar_ns_specs(args) {
  var map__9494 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p__9495) {
    var vec__9496 = p__9495;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9496, 0, null);
    var specs = cljs.core.nthnext(vec__9496, 1);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, specs)], null);
  }, args));
  var map__9494__$1 = (!(map__9494 == null) ? map__9494.cljs$lang$protocol_mask$partition0$ & 64 || map__9494.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__9494) : map__9494;
  var indexed = map__9494__$1;
  var require = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9494__$1, cljs.core.cst$kw$require);
  var sugar_keys = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$include_DASH_macros, null, cljs.core.cst$kw$refer_DASH_macros, null], null), null);
  var remove_from_spec = function(map__9494, map__9494__$1, indexed, require, sugar_keys) {
    return function(pred, spec) {
      while (true) {
        if (cljs.core.not(function() {
          var and__4299__auto__ = cljs.core.sequential_QMARK_(spec);
          if (and__4299__auto__) {
            return cljs.core.some(pred, spec);
          } else {
            return and__4299__auto__;
          }
        }())) {
          return spec;
        } else {
          var vec__9498 = cljs.core.split_with(cljs.core.complement(pred), spec);
          var l = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9498, 0, null);
          var r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9498, 1, null);
          var G__9500 = pred;
          var G__9501 = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(l, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(2, r));
          pred = G__9500;
          spec = G__9501;
          continue;
        }
        break;
      }
    };
  }(map__9494, map__9494__$1, indexed, require, sugar_keys);
  var replace_refer_macros = function(map__9494, map__9494__$1, indexed, require, sugar_keys, remove_from_spec) {
    return function(spec) {
      if (!cljs.core.sequential_QMARK_(spec)) {
        return spec;
      } else {
        return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(map__9494, map__9494__$1, indexed, require, sugar_keys, remove_from_spec) {
          return function(x) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, cljs.core.cst$kw$refer_DASH_macros)) {
              return cljs.core.cst$kw$refer;
            } else {
              return x;
            }
          };
        }(map__9494, map__9494__$1, indexed, require, sugar_keys, remove_from_spec), spec);
      }
    };
  }(map__9494, map__9494__$1, indexed, require, sugar_keys, remove_from_spec);
  var reload_spec_QMARK_ = function(map__9494, map__9494__$1, indexed, require, sugar_keys, remove_from_spec, replace_refer_macros) {
    return function(p1__9487_SHARP_) {
      return (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$reload, null, cljs.core.cst$kw$reload_DASH_all, null], null), null)).call(null, p1__9487_SHARP_);
    };
  }(map__9494, map__9494__$1, indexed, require, sugar_keys, remove_from_spec, replace_refer_macros);
  var to_macro_specs = function(map__9494, map__9494__$1, indexed, require, sugar_keys, remove_from_spec, replace_refer_macros, reload_spec_QMARK_) {
    return function(specs) {
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(map__9494, map__9494__$1, indexed, require, sugar_keys, remove_from_spec, replace_refer_macros, reload_spec_QMARK_) {
        return function(x) {
          if (cljs.core.not(reload_spec_QMARK_(x))) {
            return replace_refer_macros(remove_from_spec(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$refer, null], null), null), remove_from_spec(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$include_DASH_macros, null], null), null), x)));
          } else {
            return x;
          }
        };
      }(map__9494, map__9494__$1, indexed, require, sugar_keys, remove_from_spec, replace_refer_macros, reload_spec_QMARK_), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(map__9494, map__9494__$1, indexed, require, sugar_keys, remove_from_spec, replace_refer_macros, reload_spec_QMARK_) {
        return function(x) {
          var or__4311__auto__ = function() {
            var and__4299__auto__ = cljs.core.sequential_QMARK_(x);
            if (and__4299__auto__) {
              return cljs.core.some(sugar_keys, x);
            } else {
              return and__4299__auto__;
            }
          }();
          if (or__4311__auto__) {
            return or__4311__auto__;
          } else {
            var or__4311__auto____$1 = reload_spec_QMARK_(x);
            if (or__4311__auto____$1) {
              return or__4311__auto____$1;
            } else {
              return cljs.analyzer.macro_autoload_ns_QMARK_(x);
            }
          }
        };
      }(map__9494, map__9494__$1, indexed, require, sugar_keys, remove_from_spec, replace_refer_macros, reload_spec_QMARK_), specs));
    };
  }(map__9494, map__9494__$1, indexed, require, sugar_keys, remove_from_spec, replace_refer_macros, reload_spec_QMARK_);
  var remove_sugar = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(remove_from_spec, sugar_keys);
  var temp__4423__auto__ = cljs.core.seq(to_macro_specs(require));
  if (temp__4423__auto__) {
    var require_specs = temp__4423__auto__;
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(require_specs, temp__4423__auto__, map__9494, map__9494__$1, indexed, require, sugar_keys, remove_from_spec, replace_refer_macros, reload_spec_QMARK_, to_macro_specs, remove_sugar) {
      return function(x) {
        if (cljs.core.not(reload_spec_QMARK_(x))) {
          var vec__9499 = x;
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9499, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9499, 1, null);
          return cljs.core.cons(k, cljs.core.map.cljs$core$IFn$_invoke$arity$2(remove_sugar, v));
        } else {
          return x;
        }
      };
    }(require_specs, temp__4423__auto__, map__9494, map__9494__$1, indexed, require, sugar_keys, remove_from_spec, replace_refer_macros, reload_spec_QMARK_, to_macro_specs, remove_sugar), cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(indexed, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$require_DASH_macros], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.into, cljs.core.PersistentVector.EMPTY), require_specs));
  } else {
    return args;
  }
};
cljs.analyzer.find_def_clash = function cljs$analyzer$find_def_clash(env, ns, segments) {
  var to_check = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xs) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(clojure.string.join.cljs$core$IFn$_invoke$arity$2(".", cljs.core.butlast(xs))), cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.last(xs))], null);
  }, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(2, cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.PersistentVector.EMPTY, segments)));
  var seq__9508 = cljs.core.seq(to_check);
  var chunk__9509 = null;
  var count__9510 = 0;
  var i__9511 = 0;
  while (true) {
    if (i__9511 < count__9510) {
      var vec__9512 = chunk__9509.cljs$core$IIndexed$_nth$arity$2(null, i__9511);
      var clash_ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9512, 0, null);
      var name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9512, 1, null);
      if (cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, clash_ns, cljs.core.cst$kw$defs, name], null))) {
        cljs.analyzer.warning(cljs.core.cst$kw$ns_DASH_var_DASH_clash, env, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ns, ns, cljs.core.cst$kw$var, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(clash_ns)].join(""), [cljs.core.str(name)].join(""))], null));
      } else {
      }
      var G__9514 = seq__9508;
      var G__9515 = chunk__9509;
      var G__9516 = count__9510;
      var G__9517 = i__9511 + 1;
      seq__9508 = G__9514;
      chunk__9509 = G__9515;
      count__9510 = G__9516;
      i__9511 = G__9517;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__9508);
      if (temp__4425__auto__) {
        var seq__9508__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9508__$1)) {
          var c__5095__auto__ = cljs.core.chunk_first(seq__9508__$1);
          var G__9518 = cljs.core.chunk_rest(seq__9508__$1);
          var G__9519 = c__5095__auto__;
          var G__9520 = cljs.core.count(c__5095__auto__);
          var G__9521 = 0;
          seq__9508 = G__9518;
          chunk__9509 = G__9519;
          count__9510 = G__9520;
          i__9511 = G__9521;
          continue;
        } else {
          var vec__9513 = cljs.core.first(seq__9508__$1);
          var clash_ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9513, 0, null);
          var name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9513, 1, null);
          if (cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, clash_ns, cljs.core.cst$kw$defs, name], null))) {
            cljs.analyzer.warning(cljs.core.cst$kw$ns_DASH_var_DASH_clash, env, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ns, ns, cljs.core.cst$kw$var, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(clash_ns)].join(""), [cljs.core.str(name)].join(""))], null));
          } else {
          }
          var G__9522 = cljs.core.next(seq__9508__$1);
          var G__9523 = null;
          var G__9524 = 0;
          var G__9525 = 0;
          seq__9508 = G__9522;
          chunk__9509 = G__9523;
          count__9510 = G__9524;
          i__9511 = G__9525;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.analyzer.macro_ns_name = function cljs$analyzer$macro_ns_name(name) {
  var name_str = [cljs.core.str(name)].join("");
  if (cljs.core.not(goog.string.endsWith(name_str, "$macros"))) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(name_str), cljs.core.str("$macros")].join(""));
  } else {
    return name;
  }
};
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$ns, function(_, env, p__9528, ___$1, opts) {
  var vec__9529 = p__9528;
  var ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9529, 0, null);
  var name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9529, 1, null);
  var args = cljs.core.nthnext(vec__9529, 2);
  var form = vec__9529;
  if (name instanceof cljs.core.Symbol) {
  } else {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Namespaces must be named by a symbol.");
  }
  var name__$1 = function() {
    var G__9530 = name;
    var G__9530__$1 = cljs.core.cst$kw$macros_DASH_ns.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.analyzer.macro_ns_name(G__9530) : G__9530;
    return G__9530__$1;
  }();
  var segments_9543 = clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(name__$1), /\./);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, cljs.core.count(segments_9543))) {
    cljs.analyzer.warning(cljs.core.cst$kw$single_DASH_segment_DASH_namespace, env, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, name__$1], null));
  } else {
  }
  if (cljs.core.some(cljs.analyzer.js_reserved, segments_9543)) {
    cljs.analyzer.warning(cljs.core.cst$kw$munged_DASH_namespace, env, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, name__$1], null));
  } else {
  }
  cljs.analyzer.find_def_clash(env, name__$1, segments_9543);
  var docstring = typeof cljs.core.first(args) === "string" ? cljs.core.first(args) : null;
  var mdocstr = cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(name__$1));
  var args__$1 = docstring ? cljs.core.next(args) : args;
  var metadata = cljs.core.map_QMARK_(cljs.core.first(args__$1)) ? cljs.core.first(args__$1) : null;
  var form_meta = cljs.core.meta(form);
  var args__$2 = cljs.analyzer.desugar_ns_specs(metadata ? cljs.core.next(args__$1) : args__$1);
  var name__$2 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(name__$1, cljs.core.merge, metadata);
  var excludes = cljs.analyzer.parse_ns_excludes(env, args__$2);
  var deps = function() {
    var G__9532 = cljs.core.PersistentHashSet.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9532) : cljs.core.atom.call(null, G__9532);
  }();
  var aliases = function() {
    var G__9533 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$fns, cljs.core.PersistentArrayMap.EMPTY, cljs.core.cst$kw$macros, cljs.core.PersistentArrayMap.EMPTY], null);
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9533) : cljs.core.atom.call(null, G__9533);
  }();
  var spec_parsers = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$require, cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec, env, false, deps, cljs.core.array_seq([aliases], 0)), cljs.core.cst$kw$require_DASH_macros, cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec, env, true, deps, cljs.core.array_seq([aliases], 0)), cljs.core.cst$kw$use, cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec, 
  env, false, deps, cljs.core.array_seq([aliases], 0)), cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require, env)), cljs.core.cst$kw$use_DASH_macros, cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec, env, true, deps, cljs.core.array_seq([aliases], 0)), cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require, env)), cljs.core.cst$kw$import, cljs.core.partial.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.parse_import_spec, 
  env, deps)], null);
  var valid_forms = function() {
    var G__9534 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$use_DASH_macros, null, cljs.core.cst$kw$use, null, cljs.core.cst$kw$require, null, cljs.core.cst$kw$require_DASH_macros, null, cljs.core.cst$kw$import, null], null), null);
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9534) : cljs.core.atom.call(null, G__9534);
  }();
  var reload = function() {
    var G__9535 = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$use, null, cljs.core.cst$kw$require, null, cljs.core.cst$kw$use_DASH_macros, null, cljs.core.cst$kw$require_DASH_macros, null], null);
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9535) : cljs.core.atom.call(null, G__9535);
  }();
  var reloads = function() {
    var G__9536 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9536) : cljs.core.atom.call(null, G__9536);
  }();
  var map__9531 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(docstring, mdocstr, args__$1, metadata, form_meta, args__$2, name__$2, excludes, deps, aliases, spec_parsers, valid_forms, reload, reloads, name__$1, vec__9529, ___$2, name, args, form) {
    return function(m, p__9537) {
      var vec__9538 = p__9537;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9538, 0, null);
      var libs = cljs.core.nthnext(vec__9538, 1);
      if ((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$use_DASH_macros, null, cljs.core.cst$kw$use, null, cljs.core.cst$kw$require, null, cljs.core.cst$kw$require_DASH_macros, null, cljs.core.cst$kw$import, null], null), null)).call(null, k)) {
      } else {
        throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Only :refer-clojure, :require, :require-macros, :use, :use-macros, and :import libspecs supported");
      }
      if ((cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(valid_forms) : cljs.core.deref.call(null, valid_forms)).call(null, k)) {
      } else {
        throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, [cljs.core.str("Only one "), cljs.core.str(k), cljs.core.str(" form is allowed per namespace definition")].join(""));
      }
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(valid_forms, cljs.core.disj, k);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$import, k)) {
      } else {
        if (cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$reload, null], null), null), libs)) {
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload, cljs.core.assoc, k, cljs.core.cst$kw$reload);
        } else {
        }
        if (cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$reload_DASH_all, null], null), null), libs)) {
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload, cljs.core.assoc, k, cljs.core.cst$kw$reload_DASH_all);
        } else {
        }
      }
      var temp__4425__auto___9544 = cljs.core.seq(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(vec__9538, k, libs, docstring, mdocstr, args__$1, metadata, form_meta, args__$2, name__$2, excludes, deps, aliases, spec_parsers, valid_forms, reload, reloads, name__$1, vec__9529, ___$2, name, args, form) {
        return function(p1__9526_SHARP_) {
          return cljs.core.cst$kw$reload.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__9526_SHARP_));
        };
      }(vec__9538, k, libs, docstring, mdocstr, args__$1, metadata, form_meta, args__$2, name__$2, excludes, deps, aliases, spec_parsers, valid_forms, reload, reloads, name__$1, vec__9529, ___$2, name, args, form), libs));
      if (temp__4425__auto___9544) {
        var xs_9545 = temp__4425__auto___9544;
        cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reloads, cljs.core.assoc, k, cljs.core.zipmap(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, xs_9545), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xs_9545, temp__4425__auto___9544, vec__9538, k, libs, docstring, mdocstr, args__$1, metadata, form_meta, args__$2, name__$2, excludes, deps, aliases, spec_parsers, valid_forms, reload, reloads, name__$1, vec__9529, ___$2, name, args, form) {
          return function(p1__9527_SHARP_) {
            return cljs.core.cst$kw$reload.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__9527_SHARP_));
          };
        }(xs_9545, temp__4425__auto___9544, vec__9538, k, libs, docstring, mdocstr, args__$1, metadata, form_meta, args__$2, name__$2, excludes, deps, aliases, spec_parsers, valid_forms, reload, reloads, name__$1, vec__9529, ___$2, name, args, form), xs_9545)));
      } else {
      }
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.merge_with, cljs.core.merge, m, cljs.core.map.cljs$core$IFn$_invoke$arity$2(spec_parsers.cljs$core$IFn$_invoke$arity$1 ? spec_parsers.cljs$core$IFn$_invoke$arity$1(k) : spec_parsers.call(null, k), cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$reload, null, cljs.core.cst$kw$reload_DASH_all, null], null), null), libs)));
    };
  }(docstring, mdocstr, args__$1, metadata, form_meta, args__$2, name__$2, excludes, deps, aliases, spec_parsers, valid_forms, reload, reloads, name__$1, vec__9529, ___$2, name, args, form), cljs.core.PersistentArrayMap.EMPTY, cljs.core.remove.cljs$core$IFn$_invoke$arity$2(function(docstring, mdocstr, args__$1, metadata, form_meta, args__$2, name__$2, excludes, deps, aliases, spec_parsers, valid_forms, reload, reloads, name__$1, vec__9529, ___$2, name, args, form) {
    return function(p__9539) {
      var vec__9540 = p__9539;
      var r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9540, 0, null);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(r, cljs.core.cst$kw$refer_DASH_clojure);
    };
  }(docstring, mdocstr, args__$1, metadata, form_meta, args__$2, name__$2, excludes, deps, aliases, spec_parsers, valid_forms, reload, reloads, name__$1, vec__9529, ___$2, name, args, form), args__$2));
  var map__9531__$1 = (!(map__9531 == null) ? map__9531.cljs$lang$protocol_mask$partition0$ & 64 || map__9531.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__9531) : map__9531;
  var params = map__9531__$1;
  var uses = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9531__$1, cljs.core.cst$kw$use);
  var requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9531__$1, cljs.core.cst$kw$require);
  var use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9531__$1, cljs.core.cst$kw$use_DASH_macros);
  var require_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9531__$1, cljs.core.cst$kw$require_DASH_macros);
  var imports = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9531__$1, cljs.core.cst$kw$import);
  cljs.analyzer._STAR_cljs_ns_STAR_ = name__$2;
  var ns_info = new cljs.core.PersistentArrayMap(null, 8, [cljs.core.cst$kw$name, name__$2, cljs.core.cst$kw$doc, function() {
    var or__4311__auto__ = docstring;
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return mdocstr;
    }
  }(), cljs.core.cst$kw$excludes, excludes, cljs.core.cst$kw$use_DASH_macros, use_macros, cljs.core.cst$kw$require_DASH_macros, require_macros, cljs.core.cst$kw$uses, uses, cljs.core.cst$kw$requires, requires, cljs.core.cst$kw$imports, imports], null);
  var ns_info__$1 = cljs.core.cst$kw$merge.cljs$core$IFn$_invoke$arity$1(form_meta) ? function() {
    var ns_info_SINGLEQUOTE_ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, name__$2], null));
    if (cljs.core.count(ns_info_SINGLEQUOTE_) > 0) {
      var merge_keys = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$use_DASH_macros, cljs.core.cst$kw$require_DASH_macros, cljs.core.cst$kw$uses, cljs.core.cst$kw$requires, cljs.core.cst$kw$imports], null);
      return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([ns_info_SINGLEQUOTE_, cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.merge, cljs.core.array_seq([cljs.core.select_keys(ns_info_SINGLEQUOTE_, merge_keys), cljs.core.select_keys(ns_info, merge_keys)], 0))], 0));
    } else {
      return ns_info;
    }
  }() : ns_info;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_, cljs.core.update_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, name__$2], null), cljs.core.merge, cljs.core.array_seq([ns_info__$1], 0));
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$op, cljs.core.cst$kw$ns, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form, cljs.core.cst$kw$deps, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(deps) : cljs.core.deref.call(null, deps), cljs.core.cst$kw$reload, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(reload) : 
  cljs.core.deref.call(null, reload), cljs.core.cst$kw$reloads, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(reloads) : cljs.core.deref.call(null, reloads)], null), function() {
    var G__9542 = ns_info__$1;
    var G__9542__$1 = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(reload) : cljs.core.deref.call(null, reload)).call(null, cljs.core.cst$kw$use) ? cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__9542, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$uses], null), function(G__9542, ns_info, ns_info__$1, docstring, mdocstr, args__$1, metadata, form_meta, args__$2, name__$2, excludes, deps, aliases, 
    spec_parsers, valid_forms, reload, reloads, map__9531, map__9531__$1, params, uses, requires, use_macros, require_macros, imports, name__$1, vec__9529, ___$2, name, args, form) {
      return function(m) {
        return cljs.core.with_meta(m, new cljs.core.PersistentArrayMap.fromArray([(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(reload) : cljs.core.deref.call(null, reload)).call(null, cljs.core.cst$kw$use), true], true, false));
      };
    }(G__9542, ns_info, ns_info__$1, docstring, mdocstr, args__$1, metadata, form_meta, args__$2, name__$2, excludes, deps, aliases, spec_parsers, valid_forms, reload, reloads, map__9531, map__9531__$1, params, uses, requires, use_macros, require_macros, imports, name__$1, vec__9529, ___$2, name, args, form)) : G__9542;
    var G__9542__$2 = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(reload) : cljs.core.deref.call(null, reload)).call(null, cljs.core.cst$kw$require) ? cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__9542__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$requires], null), function(G__9542, G__9542__$1, ns_info, ns_info__$1, docstring, mdocstr, args__$1, metadata, form_meta, args__$2, name__$2, 
    excludes, deps, aliases, spec_parsers, valid_forms, reload, reloads, map__9531, map__9531__$1, params, uses, requires, use_macros, require_macros, imports, name__$1, vec__9529, ___$2, name, args, form) {
      return function(m) {
        return cljs.core.with_meta(m, new cljs.core.PersistentArrayMap.fromArray([(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(reload) : cljs.core.deref.call(null, reload)).call(null, cljs.core.cst$kw$require), true], true, false));
      };
    }(G__9542, G__9542__$1, ns_info, ns_info__$1, docstring, mdocstr, args__$1, metadata, form_meta, args__$2, name__$2, excludes, deps, aliases, spec_parsers, valid_forms, reload, reloads, map__9531, map__9531__$1, params, uses, requires, use_macros, require_macros, imports, name__$1, vec__9529, ___$2, name, args, form)) : G__9542__$1;
    return G__9542__$2;
  }()], 0));
});
cljs.analyzer.parse_type = function cljs$analyzer$parse_type(op, env, p__9546) {
  var vec__9550 = p__9546;
  var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9550, 0, null);
  var tsym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9550, 1, null);
  var fields = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9550, 2, null);
  var pmasks = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9550, 3, null);
  var body = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9550, 4, null);
  var form = vec__9550;
  var t = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env, cljs.core.cst$kw$locals), tsym));
  var locals = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(t, vec__9550, _, tsym, fields, pmasks, body, form) {
    return function(m, fld) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, fld, cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$name, cljs.core.cst$kw$field, cljs.core.cst$kw$column, cljs.core.cst$kw$unsynchronized_DASH_mutable, cljs.core.cst$kw$line, cljs.core.cst$kw$tag, cljs.core.cst$kw$mutable, cljs.core.cst$kw$volatile_DASH_mutable, cljs.core.cst$kw$shadow], [fld, true, cljs.analyzer.get_col(fld, env), cljs.core.cst$kw$unsynchronized_DASH_mutable.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)), 
      cljs.analyzer.get_line(fld, env), cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)), cljs.core.cst$kw$mutable.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)), cljs.core.cst$kw$volatile_DASH_mutable.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)), m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(fld) : m.call(null, fld)]));
    };
  }(t, vec__9550, _, tsym, fields, pmasks, body, form), cljs.core.PersistentArrayMap.EMPTY, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$defrecord_STAR_, op) ? cljs.core.concat.cljs$core$IFn$_invoke$arity$2(fields, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$__meta, cljs.core.cst$sym$__extmap, cljs.core.with_meta(cljs.core.cst$sym$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null))], null)) : 
  fields);
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_, cljs.core.update_in, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(env)), cljs.core.cst$kw$defs, tsym], null), function(t, locals, vec__9550, _, tsym, fields, pmasks, body, form) {
    return function(m) {
      var m__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(function() {
        var or__4311__auto__ = m;
        if (or__4311__auto__) {
          return or__4311__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), cljs.core.cst$kw$name, t, cljs.core.array_seq([cljs.core.cst$kw$type, true, cljs.core.cst$kw$num_DASH_fields, cljs.core.count(fields), cljs.core.cst$kw$record, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$defrecord_STAR_, op)], 0));
      return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([m__$1, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.meta(tsym), cljs.core.cst$kw$protocols), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$protocols, cljs.core.cst$kw$protocols.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tsym))], null), cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(tsym, env)], 0));
    };
  }(t, locals, vec__9550, _, tsym, fields, pmasks, body, form));
  return new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$op, op, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form, cljs.core.cst$kw$t, t, cljs.core.cst$kw$fields, fields, cljs.core.cst$kw$pmasks, pmasks, cljs.core.cst$kw$body, function() {
    var G__9551 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$locals, locals);
    var G__9552 = body;
    return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__9551, G__9552) : cljs.analyzer.analyze.call(null, G__9551, G__9552);
  }()], null);
};
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$deftype_STAR_, function(_, env, form, ___$1, ___$2) {
  return cljs.analyzer.parse_type(cljs.core.cst$kw$deftype_STAR_, env, form);
});
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$defrecord_STAR_, function(_, env, form, ___$1, ___$2) {
  return cljs.analyzer.parse_type(cljs.core.cst$kw$defrecord_STAR_, env, form);
});
cljs.analyzer.property_symbol_QMARK_ = function cljs$analyzer$property_symbol_QMARK_(p1__9553_SHARP_) {
  return cljs.core.boolean$(function() {
    var and__4299__auto__ = p1__9553_SHARP_ instanceof cljs.core.Symbol;
    if (and__4299__auto__) {
      return cljs.core.re_matches(/^-.*/, cljs.core.name(p1__9553_SHARP_));
    } else {
      return and__4299__auto__;
    }
  }());
};
cljs.analyzer.classify_dot_form = function cljs$analyzer$classify_dot_form(p__9554) {
  var vec__9556 = p__9554;
  var target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9556, 0, null);
  var member = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9556, 1, null);
  var args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9556, 2, null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [target == null ? cljs.core.cst$kw$cljs$analyzer_SLASH_error : cljs.core.cst$kw$cljs$analyzer_SLASH_expr, cljs.analyzer.property_symbol_QMARK_(member) ? cljs.core.cst$kw$cljs$analyzer_SLASH_property : member instanceof cljs.core.Symbol ? cljs.core.cst$kw$cljs$analyzer_SLASH_symbol : cljs.core.seq_QMARK_(member) ? cljs.core.cst$kw$cljs$analyzer_SLASH_list : cljs.core.cst$kw$cljs$analyzer_SLASH_error, args == 
  null ? cljs.core.List.EMPTY : cljs.core.cst$kw$cljs$analyzer_SLASH_expr], null);
};
if (typeof cljs.analyzer.build_dot_form !== "undefined") {
} else {
  cljs.analyzer.build_dot_form = function() {
    var method_table__5205__auto__ = function() {
      var G__9558 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9558) : cljs.core.atom.call(null, G__9558);
    }();
    var prefer_table__5206__auto__ = function() {
      var G__9559 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9559) : cljs.core.atom.call(null, G__9559);
    }();
    var method_cache__5207__auto__ = function() {
      var G__9560 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9560) : cljs.core.atom.call(null, G__9560);
    }();
    var cached_hierarchy__5208__auto__ = function() {
      var G__9561 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9561) : cljs.core.atom.call(null, G__9561);
    }();
    var hierarchy__5209__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY, cljs.core.cst$kw$hierarchy, cljs.core.get_global_hierarchy());
    return new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("cljs.analyzer", "build-dot-form"), function(method_table__5205__auto__, prefer_table__5206__auto__, method_cache__5207__auto__, cached_hierarchy__5208__auto__, hierarchy__5209__auto__) {
      return function(p1__9557_SHARP_) {
        return cljs.analyzer.classify_dot_form(p1__9557_SHARP_);
      };
    }(method_table__5205__auto__, prefer_table__5206__auto__, method_cache__5207__auto__, cached_hierarchy__5208__auto__, hierarchy__5209__auto__), cljs.core.cst$kw$default, hierarchy__5209__auto__, method_table__5205__auto__, prefer_table__5206__auto__, method_cache__5207__auto__, cached_hierarchy__5208__auto__);
  }();
}
cljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_expr, cljs.core.cst$kw$cljs$analyzer_SLASH_property, cljs.core.List.EMPTY], null), function(p__9562) {
  var vec__9563 = p__9562;
  var target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9563, 0, null);
  var prop = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9563, 1, null);
  var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9563, 2, null);
  return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$dot_DASH_action, cljs.core.cst$kw$cljs$analyzer_SLASH_access, cljs.core.cst$kw$target, target, cljs.core.cst$kw$field, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(prop).substring(1))], null);
});
cljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_expr, cljs.core.cst$kw$cljs$analyzer_SLASH_property, cljs.core.cst$kw$cljs$analyzer_SLASH_list], null), function(p__9564) {
  var vec__9565 = p__9564;
  var target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9565, 0, null);
  var prop = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9565, 1, null);
  var args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9565, 2, null);
  throw new Error([cljs.core.str("Cannot provide arguments "), cljs.core.str(args), cljs.core.str(" on property access "), cljs.core.str(prop)].join(""));
});
cljs.analyzer.build_method_call = function cljs$analyzer$build_method_call(target, meth, args) {
  if (meth instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$dot_DASH_action, cljs.core.cst$kw$cljs$analyzer_SLASH_call, cljs.core.cst$kw$target, target, cljs.core.cst$kw$method, meth, cljs.core.cst$kw$args, args], null);
  } else {
    return new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$dot_DASH_action, cljs.core.cst$kw$cljs$analyzer_SLASH_call, cljs.core.cst$kw$target, target, cljs.core.cst$kw$method, cljs.core.first(meth), cljs.core.cst$kw$args, args], null);
  }
};
cljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_expr, cljs.core.cst$kw$cljs$analyzer_SLASH_symbol, cljs.core.cst$kw$cljs$analyzer_SLASH_expr], null), function(p__9566) {
  var vec__9567 = p__9566;
  var target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9567, 0, null);
  var meth = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9567, 1, null);
  var args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9567, 2, null);
  return cljs.analyzer.build_method_call(target, meth, args);
});
cljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_expr, cljs.core.cst$kw$cljs$analyzer_SLASH_symbol, cljs.core.List.EMPTY], null), function(p__9568) {
  var vec__9569 = p__9568;
  var target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9569, 0, null);
  var meth = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9569, 1, null);
  var args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9569, 2, null);
  return cljs.analyzer.build_method_call(target, meth, args);
});
cljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_expr, cljs.core.cst$kw$cljs$analyzer_SLASH_list, cljs.core.List.EMPTY], null), function(p__9570) {
  var vec__9571 = p__9570;
  var target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9571, 0, null);
  var meth_expr = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9571, 1, null);
  var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9571, 2, null);
  return cljs.analyzer.build_method_call(target, cljs.core.first(meth_expr), cljs.core.rest(meth_expr));
});
cljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$default, function(dot_form) {
  throw new Error([cljs.core.str("Unknown dot form of "), cljs.core.str(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$$, dot_form)), cljs.core.str(" with classification "), cljs.core.str(cljs.analyzer.classify_dot_form(dot_form))].join(""));
});
cljs.analyzer.analyze_dot = function cljs$analyzer$analyze_dot(env, target, field, member_PLUS_, form) {
  var v = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [target, field, member_PLUS_], null);
  var map__9576 = cljs.analyzer.build_dot_form.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.build_dot_form.cljs$core$IFn$_invoke$arity$1(v) : cljs.analyzer.build_dot_form.call(null, v);
  var map__9576__$1 = (!(map__9576 == null) ? map__9576.cljs$lang$protocol_mask$partition0$ & 64 || map__9576.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__9576) : map__9576;
  var dot_action = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9576__$1, cljs.core.cst$kw$dot_DASH_action);
  var target__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9576__$1, cljs.core.cst$kw$target);
  var method = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9576__$1, cljs.core.cst$kw$method);
  var field__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9576__$1, cljs.core.cst$kw$field);
  var args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9576__$1, cljs.core.cst$kw$args);
  var enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
  var targetexpr = cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve, target__$1) : cljs.analyzer.analyze.call(null, enve, target__$1);
  var form_meta = cljs.core.meta(form);
  var tag = cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(form_meta);
  var G__9578 = dot_action instanceof cljs.core.Keyword ? dot_action.fqn : null;
  switch(G__9578) {
    case "cljs.analyzer/access":
      var children = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [targetexpr], null);
      return new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$op, cljs.core.cst$kw$dot, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form, cljs.core.cst$kw$target, targetexpr, cljs.core.cst$kw$field, field__$1, cljs.core.cst$kw$children, children, cljs.core.cst$kw$tag, tag], null);
      break;
    case "cljs.analyzer/call":
      var argexprs = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(G__9578, v, map__9576, map__9576__$1, dot_action, target__$1, method, field__$1, args, enve, targetexpr, form_meta, tag) {
        return function(p1__9572_SHARP_) {
          return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve, p1__9572_SHARP_) : cljs.analyzer.analyze.call(null, enve, p1__9572_SHARP_);
        };
      }(G__9578, v, map__9576, map__9576__$1, dot_action, target__$1, method, field__$1, args, enve, targetexpr, form_meta, tag), args);
      var children = cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [targetexpr], null), argexprs);
      return new cljs.core.PersistentArrayMap(null, 8, [cljs.core.cst$kw$op, cljs.core.cst$kw$dot, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form, cljs.core.cst$kw$target, targetexpr, cljs.core.cst$kw$method, method, cljs.core.cst$kw$args, argexprs, cljs.core.cst$kw$children, children, cljs.core.cst$kw$tag, tag], null);
      break;
    default:
      throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(dot_action)].join(""));;
  }
};
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$$, function(_, env, p__9580, ___$1, ___$2) {
  var vec__9581 = p__9580;
  var ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9581, 0, null);
  var target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9581, 1, null);
  var vec__9582 = cljs.core.nthnext(vec__9581, 2);
  var field = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9582, 0, null);
  var member_PLUS_ = cljs.core.nthnext(vec__9582, 1);
  var form = vec__9581;
  var _STAR_recur_frames_STAR_9583 = cljs.analyzer._STAR_recur_frames_STAR_;
  cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
  try {
    return cljs.analyzer.analyze_dot(env, target, field, member_PLUS_, form);
  } finally {
    cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_9583;
  }
});
cljs.analyzer.get_js_tag = function cljs$analyzer$get_js_tag(form) {
  var form_meta = cljs.core.meta(form);
  var tag = cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(form_meta);
  if (!(tag == null)) {
    return tag;
  } else {
    if (cljs.core.cst$kw$numeric.cljs$core$IFn$_invoke$arity$1(form_meta) === true) {
      return cljs.core.cst$sym$number;
    } else {
      return null;
    }
  }
};
cljs.analyzer.js_star_interp = function cljs$analyzer$js_star_interp(env, s) {
  var idx = s.indexOf("~{");
  if (-1 === idx) {
    return cljs.core._conj(cljs.core.List.EMPTY, s);
  } else {
    var end = s.indexOf("}", idx);
    var inner = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_existing_var(env, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s, 2 + idx, end))));
    return new cljs.core.LazySeq(null, function(end, inner, idx) {
      return function() {
        return cljs.core.cons(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s, 0, idx), cljs.core.cons(inner, cljs$analyzer$js_star_interp(env, cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, end + 1))));
      };
    }(end, inner, idx), null, null);
  }
};
cljs.analyzer.js_star_seg = function cljs$analyzer$js_star_seg(s) {
  var idx = s.indexOf("~{");
  if (-1 === idx) {
    return cljs.core._conj(cljs.core.List.EMPTY, s);
  } else {
    var end = s.indexOf("}", idx);
    return new cljs.core.LazySeq(null, function(end, idx) {
      return function() {
        return cljs.core.cons(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s, 0, idx), cljs$analyzer$js_star_seg(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, end + 1)));
      };
    }(end, idx), null, null);
  }
};
cljs.analyzer.NUMERIC_SET = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$sym$any, null, cljs.core.cst$sym$long, null, cljs.core.cst$sym$double, null, cljs.core.cst$sym$number, null], null), null);
cljs.analyzer.numeric_type_QMARK_ = function cljs$analyzer$numeric_type_QMARK_(t) {
  if (t == null) {
    return true;
  } else {
    if (t instanceof cljs.core.Symbol && !(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.NUMERIC_SET, t) == null)) {
      return true;
    } else {
      if (cljs.analyzer.cljs_set_QMARK_(t)) {
        return cljs.core.contains_QMARK_(t, cljs.core.cst$sym$number) || cljs.core.contains_QMARK_(t, cljs.core.cst$sym$long) || cljs.core.contains_QMARK_(t, cljs.core.cst$sym$double) || cljs.core.contains_QMARK_(t, cljs.core.cst$sym$any);
      } else {
        return null;
      }
    }
  }
};
cljs.analyzer.analyze_js_star_STAR_ = function cljs$analyzer$analyze_js_star_STAR_(env, jsform, args, form) {
  var enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
  var argexprs = cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(enve) {
    return function(p1__9587_SHARP_) {
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve, p1__9587_SHARP_) : cljs.analyzer.analyze.call(null, enve, p1__9587_SHARP_);
    };
  }(enve), args));
  var form_meta = cljs.core.meta(form);
  var segs = cljs.analyzer.js_star_seg(jsform);
  var tag = cljs.analyzer.get_js_tag(form);
  var js_op = cljs.core.cst$kw$js_DASH_op.cljs$core$IFn$_invoke$arity$1(form_meta);
  var numeric = cljs.core.cst$kw$numeric.cljs$core$IFn$_invoke$arity$1(form_meta);
  if (numeric === true) {
    var types_9589 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(enve, argexprs, form_meta, segs, tag, js_op, numeric) {
      return function(p1__9588_SHARP_) {
        return cljs.analyzer.infer_tag(env, p1__9588_SHARP_);
      };
    }(enve, argexprs, form_meta, segs, tag, js_op, numeric), argexprs);
    if (cljs.core.every_QMARK_(cljs.analyzer.numeric_type_QMARK_, types_9589)) {
    } else {
      cljs.analyzer.warning(cljs.core.cst$kw$invalid_DASH_arithmetic, env, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$js_DASH_op, js_op, cljs.core.cst$kw$types, cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, types_9589)], null));
    }
  } else {
  }
  return cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$args, cljs.core.cst$kw$children, cljs.core.cst$kw$numeric, cljs.core.cst$kw$segs, cljs.core.cst$kw$op, cljs.core.cst$kw$env, cljs.core.cst$kw$js_DASH_op, cljs.core.cst$kw$form, cljs.core.cst$kw$tag], [argexprs, argexprs, numeric, segs, cljs.core.cst$kw$js, env, js_op, form, tag]);
};
cljs.analyzer.analyze_js_star = function cljs$analyzer$analyze_js_star(env, jsform, args, form) {
  var _STAR_recur_frames_STAR_9591 = cljs.analyzer._STAR_recur_frames_STAR_;
  cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
  try {
    return cljs.analyzer.analyze_js_star_STAR_(env, jsform, args, form);
  } finally {
    cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_9591;
  }
};
cljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$sym$js_STAR_, function(op, env, p__9592, _, ___$1) {
  var vec__9593 = p__9592;
  var ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9593, 0, null);
  var jsform = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9593, 1, null);
  var args = cljs.core.nthnext(vec__9593, 2);
  var form = vec__9593;
  if (typeof jsform === "string") {
  } else {
    throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, "Invalid js* form");
  }
  if (!(args == null)) {
    return cljs.analyzer.analyze_js_star(env, jsform, args, form);
  } else {
    var code = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.analyzer.js_star_interp(env, jsform));
    var tag = cljs.analyzer.get_js_tag(form);
    var form_meta = cljs.core.meta(form);
    var js_op = cljs.core.cst$kw$js_DASH_op.cljs$core$IFn$_invoke$arity$1(form_meta);
    var numeric = cljs.core.cst$kw$numeric.cljs$core$IFn$_invoke$arity$1(form_meta);
    return new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$op, cljs.core.cst$kw$js, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form, cljs.core.cst$kw$code, code, cljs.core.cst$kw$tag, tag, cljs.core.cst$kw$js_DASH_op, js_op, cljs.core.cst$kw$numeric, numeric], null);
  }
});
cljs.analyzer.analyzed_QMARK_ = function cljs$analyzer$analyzed_QMARK_(f) {
  return cljs.core.contains_QMARK_(cljs.core.meta(f), cljs.core.cst$kw$cljs$analyzer_SLASH_analyzed);
};
cljs.analyzer.all_values_QMARK_ = function cljs$analyzer$all_values_QMARK_(exprs) {
  return cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$constant, null, cljs.core.cst$kw$var, null], null), null), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$op, exprs));
};
cljs.analyzer.valid_arity_QMARK_ = function cljs$analyzer$valid_arity_QMARK_(argc, method_params) {
  return cljs.core.boolean$(cljs.core.some(cljs.core.PersistentHashSet.fromArray([argc], true), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.count, method_params)));
};
cljs.analyzer.parse_invoke_STAR_ = function cljs$analyzer$parse_invoke_STAR_(env, p__9595) {
  var vec__9601 = p__9595;
  var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9601, 0, null);
  var args = cljs.core.nthnext(vec__9601, 1);
  var form = vec__9601;
  var enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
  var fexpr = cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve, f) : cljs.analyzer.analyze.call(null, enve, f);
  var argc = cljs.core.count(args);
  var fn_var_QMARK_ = cljs.core.cst$kw$fn_DASH_var.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(fexpr));
  var kw_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$cljs$core_SLASH_Keyword, cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(fexpr));
  if (fn_var_QMARK_) {
    var map__9602_9606 = cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(fexpr);
    var map__9602_9607__$1 = (!(map__9602_9606 == null) ? map__9602_9606.cljs$lang$protocol_mask$partition0$ & 64 || map__9602_9606.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__9602_9606) : map__9602_9606;
    var variadic_9608 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9602_9607__$1, cljs.core.cst$kw$variadic);
    var max_fixed_arity_9609 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9602_9607__$1, cljs.core.cst$kw$max_DASH_fixed_DASH_arity);
    var method_params_9610 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9602_9607__$1, cljs.core.cst$kw$method_DASH_params);
    var name_9611 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9602_9607__$1, cljs.core.cst$kw$name);
    if (!cljs.analyzer.valid_arity_QMARK_(argc, method_params_9610) && (!variadic_9608 || variadic_9608 && argc < max_fixed_arity_9609)) {
      cljs.analyzer.warning(cljs.core.cst$kw$fn_DASH_arity, env, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$name, name_9611, cljs.core.cst$kw$argc, argc], null));
    } else {
    }
  } else {
  }
  if (kw_QMARK_ && !(1 === argc || 2 === argc)) {
    cljs.analyzer.warning(cljs.core.cst$kw$fn_DASH_arity, env, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$name, cljs.core.first(form), cljs.core.cst$kw$argc, argc], null));
  } else {
  }
  var deprecated_QMARK__9612 = cljs.core.cst$kw$deprecated.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(fexpr));
  var no_warn_QMARK__9613 = cljs.core.cst$kw$deprecation_DASH_nowarn.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form));
  if (cljs.core.boolean$(deprecated_QMARK__9612) && !cljs.core.boolean$(no_warn_QMARK__9613)) {
    cljs.analyzer.warning(cljs.core.cst$kw$fn_DASH_deprecated, env, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$fexpr, fexpr], null));
  } else {
  }
  if (cljs.core.cst$kw$type.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(fexpr)) == null) {
  } else {
    cljs.analyzer.warning(cljs.core.cst$kw$invoke_DASH_ctor, env, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$fexpr, fexpr], null));
  }
  var ana_expr = function(enve, fexpr, argc, fn_var_QMARK_, kw_QMARK_, vec__9601, f, args, form) {
    return function(p1__9594_SHARP_) {
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve, p1__9594_SHARP_) : cljs.analyzer.analyze.call(null, enve, p1__9594_SHARP_);
    };
  }(enve, fexpr, argc, fn_var_QMARK_, kw_QMARK_, vec__9601, f, args, form);
  var argexprs = cljs.core.map.cljs$core$IFn$_invoke$arity$2(ana_expr, args);
  if (function() {
    var or__4311__auto__ = !cljs.core.boolean$(cljs.analyzer._STAR_cljs_static_fns_STAR_);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      var or__4311__auto____$1 = !(f instanceof cljs.core.Symbol);
      if (or__4311__auto____$1) {
        return or__4311__auto____$1;
      } else {
        var or__4311__auto____$2 = fn_var_QMARK_;
        if (or__4311__auto____$2) {
          return or__4311__auto____$2;
        } else {
          return cljs.analyzer.analyzed_QMARK_(f) || cljs.analyzer.all_values_QMARK_(argexprs);
        }
      }
    }
  }()) {
    return new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$env, env, cljs.core.cst$kw$op, cljs.core.cst$kw$invoke, cljs.core.cst$kw$form, form, cljs.core.cst$kw$f, fexpr, cljs.core.cst$kw$args, cljs.core.vec(argexprs), cljs.core.cst$kw$children, cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [fexpr], null), argexprs)], null);
  } else {
    var arg_syms = cljs.core.take.cljs$core$IFn$_invoke$arity$2(argc, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym));
    var G__9604 = env;
    var G__9605 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core.vec(cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arg_syms, args))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(f, cljs.core.assoc, cljs.core.cst$kw$cljs$analyzer_SLASH_analyzed, true)), arg_syms))))], 0))));
    return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__9604, G__9605) : cljs.analyzer.analyze.call(null, G__9604, G__9605);
  }
};
cljs.analyzer.parse_invoke = function cljs$analyzer$parse_invoke(env, form) {
  var _STAR_recur_frames_STAR_9615 = cljs.analyzer._STAR_recur_frames_STAR_;
  cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
  try {
    return cljs.analyzer.parse_invoke_STAR_(env, form);
  } finally {
    cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_9615;
  }
};
cljs.analyzer.analyze_symbol = function cljs$analyzer$analyze_symbol(env, sym) {
  if (cljs.core.cst$kw$quoted_QMARK_.cljs$core$IFn$_invoke$arity$1(env)) {
    cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2(env, sym);
    var G__9619 = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$op, cljs.core.cst$kw$constant, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, sym, cljs.core.cst$kw$tag, cljs.core.cst$sym$cljs$core_SLASH_Symbol], null);
    return cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__9619) : cljs.analyzer.analyze_wrap_meta.call(null, G__9619);
  } else {
    var map__9620 = cljs.core.meta(sym);
    var map__9620__$1 = (!(map__9620 == null) ? map__9620.cljs$lang$protocol_mask$partition0$ & 64 || map__9620.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__9620) : map__9620;
    var line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9620__$1, cljs.core.cst$kw$line);
    var column = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9620__$1, cljs.core.cst$kw$column);
    var env__$1 = !(line == null) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$line, line) : env;
    var env__$2 = !(column == null) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1, cljs.core.cst$kw$column, column) : env__$1;
    var ret = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$env, env__$2, cljs.core.cst$kw$form, sym], null);
    var lcls = cljs.core.cst$kw$locals.cljs$core$IFn$_invoke$arity$1(env__$2);
    var lb = cljs.core.get.cljs$core$IFn$_invoke$arity$2(lcls, sym);
    if (!(lb == null)) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(ret, cljs.core.cst$kw$op, cljs.core.cst$kw$var, cljs.core.array_seq([cljs.core.cst$kw$info, lb], 0));
    } else {
      if (!(cljs.core.cst$kw$def_DASH_var.cljs$core$IFn$_invoke$arity$1(env__$2) === true)) {
        var sym_meta = cljs.core.meta(sym);
        var info = !cljs.core.contains_QMARK_(sym_meta, cljs.core.cst$kw$cljs$analyzer_SLASH_analyzed) ? cljs.analyzer.resolve_existing_var(env__$2, sym) : cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env__$2, sym);
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(ret, cljs.core.cst$kw$op, cljs.core.cst$kw$var, cljs.core.array_seq([cljs.core.cst$kw$info, info], 0));
      } else {
        var info = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env__$2, sym);
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(ret, cljs.core.cst$kw$op, cljs.core.cst$kw$var, cljs.core.array_seq([cljs.core.cst$kw$info, info], 0));
      }
    }
  }
};
cljs.analyzer.excluded_QMARK_ = function cljs$analyzer$excluded_QMARK_(env, sym) {
  if (!(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env, cljs.core.cst$kw$ns, cljs.core.cst$kw$excludes, sym) == null)) {
    return true;
  } else {
    return !(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$ns, cljs.core.cst$kw$name), cljs.core.cst$kw$excludes, sym) == null);
  }
};
cljs.analyzer.used_QMARK_ = function cljs$analyzer$used_QMARK_(env, sym) {
  if (!(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env, cljs.core.cst$kw$ns, cljs.core.cst$kw$use_DASH_macros, sym) == null)) {
    return true;
  } else {
    return !(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$ns, cljs.core.cst$kw$name), cljs.core.cst$kw$use_DASH_macros, sym) == null);
  }
};
cljs.analyzer.get_expander_ns = function cljs$analyzer$get_expander_ns(env, nstr) {
  if ("clojure.core" === nstr) {
    return cljs.core.find_macros_ns(cljs.analyzer.CLJS_CORE_MACROS_SYM);
  } else {
    if ("clojure.repl" === nstr) {
      return cljs.core.find_macros_ns(cljs.core.cst$sym$cljs$repl);
    } else {
      if (goog.string.contains(nstr, ".")) {
        return cljs.core.find_macros_ns(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(nstr));
      } else {
        var G__9623 = env;
        var G__9623__$1 = G__9623 == null ? null : cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(G__9623);
        var G__9623__$2 = G__9623__$1 == null ? null : cljs.core.cst$kw$require_DASH_macros.cljs$core$IFn$_invoke$arity$1(G__9623__$1);
        var G__9623__$3 = G__9623__$2 == null ? null : cljs.core.get.cljs$core$IFn$_invoke$arity$2(G__9623__$2, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(nstr));
        var G__9623__$4 = G__9623__$3 == null ? null : cljs.core.find_ns(G__9623__$3);
        return G__9623__$4;
      }
    }
  }
};
cljs.analyzer.get_expander_STAR_ = function cljs$analyzer$get_expander_STAR_(sym, env) {
  if (!(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$locals, sym) == null) || cljs.analyzer.excluded_QMARK_(env, sym) && !cljs.analyzer.used_QMARK_(env, sym)) {
    return null;
  } else {
    var nstr = cljs.core.namespace(sym);
    if (!(nstr == null)) {
      var ns = cljs.analyzer.get_expander_ns(env, nstr);
      if (ns == null) {
        return null;
      } else {
        return ns.findInternedVar(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym)));
      }
    } else {
      var nsym = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env, cljs.core.cst$kw$ns, cljs.core.cst$kw$use_DASH_macros, sym);
      if (!(nsym == null)) {
        return cljs.core.find_macros_ns(nsym).findInternedVar(sym);
      } else {
        return cljs.core.find_macros_ns(cljs.analyzer.CLJS_CORE_MACROS_SYM).findInternedVar(sym);
      }
    }
  }
};
cljs.analyzer.get_expander = function cljs$analyzer$get_expander(sym, env) {
  var mvar = cljs.analyzer.get_expander_STAR_(sym, env);
  if (!(mvar == null) && mvar.isMacro()) {
    return mvar;
  } else {
    return null;
  }
};
cljs.analyzer.macroexpand_1_STAR_ = function cljs$analyzer$macroexpand_1_STAR_(env, form) {
  var op = cljs.core.first(form);
  if (!(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.specials, op) == null)) {
    return form;
  } else {
    var mac_var = op instanceof cljs.core.Symbol ? cljs.analyzer.get_expander(op, env) : null;
    if (!(mac_var == null)) {
      var form_SINGLEQUOTE_ = cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(mac_var) : cljs.core.deref.call(null, mac_var), form, env, cljs.core.rest(form));
      if (cljs.analyzer.cljs_seq_QMARK_(form_SINGLEQUOTE_)) {
        var sym_SINGLEQUOTE_ = cljs.core.first(form_SINGLEQUOTE_);
        var sym = cljs.core.first(form);
        if (cljs.core.symbol_identical_QMARK_(sym_SINGLEQUOTE_, cljs.analyzer.JS_STAR_SYM)) {
          var sym__$1 = cljs.core.namespace(sym) ? sym : cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("cljs.core", [cljs.core.str(sym)].join(""));
          var js_op = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$js_DASH_op, sym__$1], null);
          var js_op__$1 = cljs.core.cst$kw$cljs$analyzer_SLASH_numeric.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(mac_var)) === true ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(js_op, cljs.core.cst$kw$numeric, true) : js_op;
          return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(form_SINGLEQUOTE_, cljs.core.merge, js_op__$1);
        } else {
          return form_SINGLEQUOTE_;
        }
      } else {
        return form_SINGLEQUOTE_;
      }
    } else {
      if (op instanceof cljs.core.Symbol) {
        var opname = [cljs.core.str(op)].join("");
        if ("." === opname.charAt(0)) {
          var vec__9625 = cljs.core.next(form);
          var target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9625, 0, null);
          var args = cljs.core.nthnext(vec__9625, 1);
          return cljs.core.with_meta(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(cljs.analyzer.DOT_SYM, target, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(opname, 1)), args), cljs.core.meta(form));
        } else {
          if ("." === opname.charAt(opname.length - 1)) {
            return cljs.core.with_meta(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.NEW_SYM, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(opname, 0, cljs.core.count(opname) - 1)), cljs.core.next(form)), cljs.core.meta(form));
          } else {
            return form;
          }
        }
      } else {
        return form;
      }
    }
  }
};
cljs.analyzer.macroexpand_1 = function cljs$analyzer$macroexpand_1(env, form) {
  var val__5746__auto__ = cljs.env._STAR_compiler_STAR_;
  if (val__5746__auto__ == null) {
    cljs.env._STAR_compiler_STAR_ = cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0();
  } else {
  }
  try {
    try {
      return cljs.analyzer.macroexpand_1_STAR_(env, form);
    } catch (e9627) {
      var err__5782__auto__ = e9627;
      if (cljs.analyzer.analysis_error_QMARK_(err__5782__auto__)) {
        throw err__5782__auto__;
      } else {
        throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env, err__5782__auto__.message, err__5782__auto__);
      }
    }
  } finally {
    if (val__5746__auto__ == null) {
      cljs.env._STAR_compiler_STAR_ = null;
    } else {
    }
  }
};
cljs.analyzer.analyze_seq_STAR_ = function cljs$analyzer$analyze_seq_STAR_(op, env, form, name, opts) {
  if (!(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.specials, op) == null)) {
    return cljs.analyzer.parse.cljs$core$IFn$_invoke$arity$5 ? cljs.analyzer.parse.cljs$core$IFn$_invoke$arity$5(op, env, form, name, opts) : cljs.analyzer.parse.call(null, op, env, form, name, opts);
  } else {
    return cljs.analyzer.parse_invoke(env, form);
  }
};
cljs.analyzer.analyze_seq_STAR__wrap = function cljs$analyzer$analyze_seq_STAR__wrap(op, env, form, name, opts) {
  try {
    return cljs.analyzer.analyze_seq_STAR_(op, env, form, name, opts);
  } catch (e9629) {
    var err__5782__auto__ = e9629;
    if (cljs.analyzer.analysis_error_QMARK_(err__5782__auto__)) {
      throw err__5782__auto__;
    } else {
      throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env, err__5782__auto__.message, err__5782__auto__);
    }
  }
};
cljs.analyzer.analyze_seq = function cljs$analyzer$analyze_seq() {
  var args9630 = [];
  var len__5350__auto___9633 = arguments.length;
  var i__5351__auto___9634 = 0;
  while (true) {
    if (i__5351__auto___9634 < len__5350__auto___9633) {
      args9630.push(arguments[i__5351__auto___9634]);
      var G__9635 = i__5351__auto___9634 + 1;
      i__5351__auto___9634 = G__9635;
      continue;
    } else {
    }
    break;
  }
  var G__9632 = args9630.length;
  switch(G__9632) {
    case 3:
      return cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9630.length)].join(""));;
  }
};
cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3 = function(env, form, name) {
  return cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4(env, form, name, null);
};
cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4 = function(env, form, name, opts) {
  if (cljs.core.cst$kw$quoted_QMARK_.cljs$core$IFn$_invoke$arity$1(env)) {
    return cljs.analyzer.analyze_list.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze_list.cljs$core$IFn$_invoke$arity$2(env, form) : cljs.analyzer.analyze_list.call(null, env, form);
  } else {
    var line = cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form));
    var line__$1 = line == null ? cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1(env) : null;
    var col = cljs.core.cst$kw$column.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form));
    var col__$1 = col == null ? cljs.core.cst$kw$column.cljs$core$IFn$_invoke$arity$1(env) : null;
    var env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(env, cljs.core.cst$kw$line, line__$1, cljs.core.array_seq([cljs.core.cst$kw$column, col__$1], 0));
    var op = cljs.core.first(form);
    if (op == null) {
      throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env__$1, "Can't call nil");
    } else {
    }
    var mform = cljs.analyzer.macroexpand_1(env__$1, form);
    if (form === mform) {
      return cljs.analyzer.analyze_seq_STAR__wrap(op, env__$1, form, name, opts);
    } else {
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(env__$1, mform, name, opts) : cljs.analyzer.analyze.call(null, env__$1, mform, name, opts);
    }
  }
};
cljs.analyzer.analyze_seq.cljs$lang$maxFixedArity = 4;
cljs.analyzer.analyze_map = function cljs$analyzer$analyze_map(env, form) {
  var expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
  var ks = function() {
    var _STAR_recur_frames_STAR_9642 = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(_STAR_recur_frames_STAR_9642, expr_env) {
        return function(p1__9637_SHARP_) {
          return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env, p1__9637_SHARP_) : cljs.analyzer.analyze.call(null, expr_env, p1__9637_SHARP_);
        };
      }(_STAR_recur_frames_STAR_9642, expr_env), cljs.core.keys(form)));
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_9642;
    }
  }();
  var vs = function() {
    var _STAR_recur_frames_STAR_9643 = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(_STAR_recur_frames_STAR_9643, expr_env, ks) {
        return function(p1__9638_SHARP_) {
          return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env, p1__9638_SHARP_) : cljs.analyzer.analyze.call(null, expr_env, p1__9638_SHARP_);
        };
      }(_STAR_recur_frames_STAR_9643, expr_env, ks), cljs.core.vals(form)));
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_9643;
    }
  }();
  var G__9644 = new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$op, cljs.core.cst$kw$map, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form, cljs.core.cst$kw$keys, ks, cljs.core.cst$kw$vals, vs, cljs.core.cst$kw$children, cljs.core.vec(cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(ks, vs)), cljs.core.cst$kw$tag, cljs.core.cst$sym$cljs$core_SLASH_IMap], null);
  return cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__9644) : cljs.analyzer.analyze_wrap_meta.call(null, G__9644);
};
cljs.analyzer.analyze_list = function cljs$analyzer$analyze_list(env, form) {
  var expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
  var items = function() {
    var _STAR_recur_frames_STAR_9648 = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(_STAR_recur_frames_STAR_9648, expr_env) {
        return function(p1__9645_SHARP_) {
          return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env, p1__9645_SHARP_) : cljs.analyzer.analyze.call(null, expr_env, p1__9645_SHARP_);
        };
      }(_STAR_recur_frames_STAR_9648, expr_env), form));
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_9648;
    }
  }();
  var G__9649 = new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$op, cljs.core.cst$kw$list, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form, cljs.core.cst$kw$items, items, cljs.core.cst$kw$children, items, cljs.core.cst$kw$tag, cljs.core.cst$sym$cljs$core_SLASH_IList], null);
  return cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__9649) : cljs.analyzer.analyze_wrap_meta.call(null, G__9649);
};
cljs.analyzer.analyze_vector = function cljs$analyzer$analyze_vector(env, form) {
  var expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
  var items = function() {
    var _STAR_recur_frames_STAR_9653 = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(_STAR_recur_frames_STAR_9653, expr_env) {
        return function(p1__9650_SHARP_) {
          return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env, p1__9650_SHARP_) : cljs.analyzer.analyze.call(null, expr_env, p1__9650_SHARP_);
        };
      }(_STAR_recur_frames_STAR_9653, expr_env), form));
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_9653;
    }
  }();
  var G__9654 = new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$op, cljs.core.cst$kw$vector, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form, cljs.core.cst$kw$items, items, cljs.core.cst$kw$children, items, cljs.core.cst$kw$tag, cljs.core.cst$sym$cljs$core_SLASH_IVector], null);
  return cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__9654) : cljs.analyzer.analyze_wrap_meta.call(null, G__9654);
};
cljs.analyzer.analyze_set = function cljs$analyzer$analyze_set(env, form) {
  var expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
  var items = function() {
    var _STAR_recur_frames_STAR_9658 = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(_STAR_recur_frames_STAR_9658, expr_env) {
        return function(p1__9655_SHARP_) {
          return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env, p1__9655_SHARP_) : cljs.analyzer.analyze.call(null, expr_env, p1__9655_SHARP_);
        };
      }(_STAR_recur_frames_STAR_9658, expr_env), form));
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_9658;
    }
  }();
  var G__9659 = new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$op, cljs.core.cst$kw$set, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form, cljs.core.cst$kw$items, items, cljs.core.cst$kw$children, items, cljs.core.cst$kw$tag, cljs.core.cst$sym$cljs$core_SLASH_ISet], null);
  return cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__9659) : cljs.analyzer.analyze_wrap_meta.call(null, G__9659);
};
cljs.analyzer.analyze_js_value = function cljs$analyzer$analyze_js_value(env, form) {
  var val = form.val;
  var expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr);
  var items = cljs.core.map_QMARK_(val) ? cljs.core.zipmap(cljs.core.keys(val), function() {
    var _STAR_recur_frames_STAR_9664 = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(_STAR_recur_frames_STAR_9664, val, expr_env) {
        return function(p1__9660_SHARP_) {
          return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env, p1__9660_SHARP_) : cljs.analyzer.analyze.call(null, expr_env, p1__9660_SHARP_);
        };
      }(_STAR_recur_frames_STAR_9664, val, expr_env), cljs.core.vals(val)));
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_9664;
    }
  }()) : function() {
    var _STAR_recur_frames_STAR_9665 = cljs.analyzer._STAR_recur_frames_STAR_;
    cljs.analyzer._STAR_recur_frames_STAR_ = cljs.core.cons(null, cljs.analyzer._STAR_recur_frames_STAR_);
    try {
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(_STAR_recur_frames_STAR_9665, val, expr_env) {
        return function(p1__9661_SHARP_) {
          return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env, p1__9661_SHARP_) : cljs.analyzer.analyze.call(null, expr_env, p1__9661_SHARP_);
        };
      }(_STAR_recur_frames_STAR_9665, val, expr_env), val));
    } finally {
      cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR_9665;
    }
  }();
  return new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$op, cljs.core.cst$kw$js_DASH_value, cljs.core.cst$kw$js_DASH_type, cljs.core.map_QMARK_(val) ? cljs.core.cst$kw$object : cljs.core.cst$kw$array, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form, cljs.core.cst$kw$items, items, cljs.core.cst$kw$children, items, cljs.core.cst$kw$tag, cljs.core.map_QMARK_(val) ? cljs.core.cst$sym$object : cljs.core.cst$sym$array], null);
};
cljs.analyzer.elide_reader_meta = function cljs$analyzer$elide_reader_meta(m) {
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(m, cljs.core.cst$kw$file, cljs.core.array_seq([cljs.core.cst$kw$line, cljs.core.cst$kw$column, cljs.core.cst$kw$end_DASH_column, cljs.core.cst$kw$end_DASH_line, cljs.core.cst$kw$source], 0));
};
cljs.analyzer.analyze_wrap_meta = function cljs$analyzer$analyze_wrap_meta(expr) {
  var form = cljs.core.cst$kw$form.cljs$core$IFn$_invoke$arity$1(expr);
  var m = cljs.analyzer.elide_reader_meta(cljs.core.meta(form));
  if (cljs.core.seq(m)) {
    var env = cljs.core.cst$kw$env.cljs$core$IFn$_invoke$arity$1(expr);
    var expr__$1 = cljs.core.assoc_in(expr, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$env, cljs.core.cst$kw$context], null), cljs.core.cst$kw$expr);
    var meta_expr = cljs.analyzer.analyze_map(cljs.core.cst$kw$env.cljs$core$IFn$_invoke$arity$1(expr__$1), m);
    return new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$op, cljs.core.cst$kw$meta, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form, cljs.core.cst$kw$meta, meta_expr, cljs.core.cst$kw$expr, expr__$1, cljs.core.cst$kw$children, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [meta_expr, expr__$1], null)], null);
  } else {
    return expr;
  }
};
cljs.analyzer.infer_type = function cljs$analyzer$infer_type(env, ast, _) {
  var tag = cljs.core.cst$kw$tag.cljs$core$IFn$_invoke$arity$1(ast);
  if (tag == null) {
    var tag__$1 = cljs.analyzer.infer_tag(env, ast);
    if (!(tag__$1 == null)) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ast, cljs.core.cst$kw$tag, tag__$1);
    } else {
      return ast;
    }
  } else {
    return ast;
  }
};
cljs.analyzer._STAR_passes_STAR_ = null;
cljs.analyzer.analyze_form = function cljs$analyzer$analyze_form(env, form, name, opts) {
  if (form instanceof cljs.core.Symbol) {
    return cljs.analyzer.analyze_symbol(env, form);
  } else {
    if (cljs.analyzer.cljs_seq_QMARK_(form) && cljs.core.seq(form)) {
      return cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4(env, form, name, opts);
    } else {
      if (cljs.analyzer.cljs_map_QMARK_(form)) {
        return cljs.analyzer.analyze_map(env, form);
      } else {
        if (cljs.analyzer.cljs_vector_QMARK_(form)) {
          return cljs.analyzer.analyze_vector(env, form);
        } else {
          if (cljs.analyzer.cljs_set_QMARK_(form)) {
            return cljs.analyzer.analyze_set(env, form);
          } else {
            if (form instanceof cljs.core.Keyword) {
              return cljs.analyzer.analyze_keyword(env, form);
            } else {
              if (form instanceof cljs.tagged_literals.JSValue) {
                return cljs.analyzer.analyze_js_value(env, form);
              } else {
                if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.List.EMPTY, form)) {
                  return cljs.analyzer.analyze_list(env, form);
                } else {
                  var tag = form == null ? cljs.analyzer.CLJ_NIL_SYM : typeof form === "number" ? cljs.analyzer.NUMBER_SYM : typeof form === "string" ? cljs.analyzer.STRING_SYM : form === true ? cljs.analyzer.BOOLEAN_SYM : form === false ? cljs.analyzer.BOOLEAN_SYM : null;
                  var G__9667 = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$op, cljs.core.cst$kw$constant, cljs.core.cst$kw$env, env, cljs.core.cst$kw$form, form], null);
                  var G__9667__$1 = tag ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__9667, cljs.core.cst$kw$tag, tag) : G__9667;
                  return G__9667__$1;
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.analyzer.analyze_STAR_ = function cljs$analyzer$analyze_STAR_(env, form, name, opts) {
  var passes = cljs.analyzer._STAR_passes_STAR_;
  var passes__$1 = passes == null ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.infer_type], null) : passes;
  var form__$1 = form instanceof cljs.core.LazySeq ? cljs.core.seq(form) ? form : cljs.core.List.EMPTY : form;
  var ast = cljs.analyzer.analyze_form(env, form__$1, name, opts);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(passes, passes__$1, form__$1, ast) {
    return function(ast__$1, pass) {
      return pass.cljs$core$IFn$_invoke$arity$3 ? pass.cljs$core$IFn$_invoke$arity$3(env, ast__$1, opts) : pass.call(null, env, ast__$1, opts);
    };
  }(passes, passes__$1, form__$1, ast), ast, passes__$1);
};
cljs.analyzer.analyze = function cljs$analyzer$analyze() {
  var args9668 = [];
  var len__5350__auto___9673 = arguments.length;
  var i__5351__auto___9674 = 0;
  while (true) {
    if (i__5351__auto___9674 < len__5350__auto___9673) {
      args9668.push(arguments[i__5351__auto___9674]);
      var G__9675 = i__5351__auto___9674 + 1;
      i__5351__auto___9674 = G__9675;
      continue;
    } else {
    }
    break;
  }
  var G__9670 = args9668.length;
  switch(G__9670) {
    case 2:
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9668.length)].join(""));;
  }
};
cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 = function(env, form) {
  return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3(env, form, null);
};
cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3 = function(env, form, name) {
  return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(env, form, name, null);
};
cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4 = function(env, form, name, opts) {
  var val__5746__auto__ = cljs.env._STAR_compiler_STAR_;
  if (val__5746__auto__ == null) {
    cljs.env._STAR_compiler_STAR_ = cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0();
  } else {
  }
  try {
    try {
      var _STAR_alias_map_STAR_9672 = cljs.tools.reader._STAR_alias_map_STAR_;
      cljs.tools.reader._STAR_alias_map_STAR_ = function() {
        var or__4311__auto__ = cljs.tools.reader._STAR_alias_map_STAR_;
        if (or__4311__auto__) {
          return or__4311__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }();
      try {
        return cljs.analyzer.analyze_STAR_(env, form, name, opts);
      } finally {
        cljs.tools.reader._STAR_alias_map_STAR_ = _STAR_alias_map_STAR_9672;
      }
    } catch (e9671) {
      var err__5782__auto__ = e9671;
      if (cljs.analyzer.analysis_error_QMARK_(err__5782__auto__)) {
        throw err__5782__auto__;
      } else {
        throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env, err__5782__auto__.message, err__5782__auto__);
      }
    }
  } finally {
    if (val__5746__auto__ == null) {
      cljs.env._STAR_compiler_STAR_ = null;
    } else {
    }
  }
};
cljs.analyzer.analyze.cljs$lang$maxFixedArity = 4;
cljs.analyzer.resolve_symbol = function cljs$analyzer$resolve_symbol(s) {
  return cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$ns, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, cljs.analyzer._STAR_cljs_ns_STAR_], null)], null), s));
};
goog.provide("cljs.source_map.base64");
goog.require("cljs.core");
cljs.source_map.base64.chars64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
cljs.source_map.base64.char__GT_int = cljs.core.zipmap(cljs.source_map.base64.chars64, cljs.core.range.cljs$core$IFn$_invoke$arity$2(0, 64));
cljs.source_map.base64.int__GT_char = cljs.core.zipmap(cljs.core.range.cljs$core$IFn$_invoke$arity$2(0, 64), cljs.source_map.base64.chars64);
cljs.source_map.base64.encode = function cljs$source_map$base64$encode(n) {
  var e = cljs.core.find(cljs.source_map.base64.int__GT_char, n);
  if (e) {
    return cljs.core.second(e);
  } else {
    throw new Error([cljs.core.str("Must be between 0 and 63: "), cljs.core.str(n)].join(""));
  }
};
cljs.source_map.base64.decode = function cljs$source_map$base64$decode(c) {
  var e = cljs.core.find(cljs.source_map.base64.char__GT_int, c);
  if (e) {
    return cljs.core.second(e);
  } else {
    throw new Error([cljs.core.str("Not a valid base 64 digit: "), cljs.core.str(c)].join(""));
  }
};
goog.provide("cljs.source_map.base64_vlq");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("cljs.source_map.base64");
goog.require("goog.string.StringBuffer");
cljs.source_map.base64_vlq.vlq_base_shift = 5;
cljs.source_map.base64_vlq.vlq_base = 1 << cljs.source_map.base64_vlq.vlq_base_shift;
cljs.source_map.base64_vlq.vlq_base_mask = cljs.source_map.base64_vlq.vlq_base - 1;
cljs.source_map.base64_vlq.vlq_continuation_bit = cljs.source_map.base64_vlq.vlq_base;
cljs.source_map.base64_vlq.to_vlq_signed = function cljs$source_map$base64_vlq$to_vlq_signed(v) {
  if (v < 0) {
    return (-v << 1) + 1;
  } else {
    return (v << 1) + 0;
  }
};
cljs.source_map.base64_vlq.from_vlq_signed = function cljs$source_map$base64_vlq$from_vlq_signed(v) {
  var neg_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v & 1, 1);
  var shifted = v >> 1;
  if (neg_QMARK_) {
    return -shifted;
  } else {
    return shifted;
  }
};
cljs.source_map.base64_vlq.encode_val = function cljs$source_map$base64_vlq$encode_val(n) {
  var sb = new goog.string.StringBuffer;
  var vlq = cljs.source_map.base64_vlq.to_vlq_signed(n);
  var digit_12073 = vlq & cljs.source_map.base64_vlq.vlq_base_mask;
  var vlq_12074__$1 = vlq >>> cljs.source_map.base64_vlq.vlq_base_shift;
  while (true) {
    if (vlq_12074__$1 > 0) {
      var digit_12075__$1 = digit_12073 | cljs.source_map.base64_vlq.vlq_continuation_bit;
      sb.append(cljs.source_map.base64.encode(digit_12075__$1));
      var G__12076 = vlq_12074__$1 & cljs.source_map.base64_vlq.vlq_base_mask;
      var G__12077 = vlq_12074__$1 >>> cljs.source_map.base64_vlq.vlq_base_shift;
      digit_12073 = G__12076;
      vlq_12074__$1 = G__12077;
      continue;
    } else {
      sb.append(cljs.source_map.base64.encode(digit_12073));
    }
    break;
  }
  return [cljs.core.str(sb)].join("");
};
cljs.source_map.base64_vlq.encode = function cljs$source_map$base64_vlq$encode(v) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.source_map.base64_vlq.encode_val, v));
};
cljs.source_map.base64_vlq.decode = function cljs$source_map$base64_vlq$decode(s) {
  var l = s.length;
  var i = 0;
  var result = 0;
  var shift = 0;
  while (true) {
    if (i >= l) {
      throw new Error("Expected more digits in base 64 VLQ value.");
    } else {
    }
    var digit = cljs.source_map.base64.decode(s.charAt(i));
    var i__$1 = i + 1;
    var continuation_QMARK_ = (digit & cljs.source_map.base64_vlq.vlq_continuation_bit) > 0;
    var digit__$1 = digit & cljs.source_map.base64_vlq.vlq_base_mask;
    var result__$1 = result + (digit__$1 << shift);
    var shift__$1 = shift + cljs.source_map.base64_vlq.vlq_base_shift;
    if (continuation_QMARK_) {
      var G__12078 = i__$1;
      var G__12079 = result__$1;
      var G__12080 = shift__$1;
      i = G__12078;
      result = G__12079;
      shift = G__12080;
      continue;
    } else {
      return new cljs.core.LazySeq(null, function(i, result, shift, i__$1, continuation_QMARK_, digit__$1, result__$1, shift__$1, digit, l) {
        return function() {
          return cljs.core.cons(cljs.source_map.base64_vlq.from_vlq_signed(result__$1), function() {
            var s__$1 = s.substring(i__$1);
            if (clojure.string.blank_QMARK_(s__$1)) {
              return null;
            } else {
              return cljs$source_map$base64_vlq$decode(s__$1);
            }
          }());
        };
      }(i, result, shift, i__$1, continuation_QMARK_, digit__$1, result__$1, shift__$1, digit, l), null, null);
    }
    break;
  }
};
goog.provide("cljs.source_map");
goog.require("cljs.core");
goog.require("goog.object");
goog.require("clojure.string");
goog.require("clojure.set");
goog.require("cljs.source_map.base64_vlq");
cljs.source_map.indexed_sources = function cljs$source_map$indexed_sources(sources) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(m, p__11390) {
    var vec__11391 = p__11390;
    var i = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11391, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11391, 1, null);
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, v, i);
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(function(a, b) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b], null);
  }, sources));
};
cljs.source_map.source_compare = function cljs$source_map$source_compare(sources) {
  var sources__$1 = cljs.source_map.indexed_sources(sources);
  return function(sources__$1) {
    return function(a, b) {
      return cljs.core.compare(sources__$1.cljs$core$IFn$_invoke$arity$1 ? sources__$1.cljs$core$IFn$_invoke$arity$1(a) : sources__$1.call(null, a), sources__$1.cljs$core$IFn$_invoke$arity$1 ? sources__$1.cljs$core$IFn$_invoke$arity$1(b) : sources__$1.call(null, b));
    };
  }(sources__$1);
};
cljs.source_map.seg__GT_map = function cljs$source_map$seg__GT_map(seg, source_map) {
  var vec__11393 = seg;
  var gcol = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11393, 0, null);
  var source = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11393, 1, null);
  var line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11393, 2, null);
  var col = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11393, 3, null);
  var name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11393, 4, null);
  return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$gcol, gcol, cljs.core.cst$kw$source, goog.object.get(source_map, "sources")[source], cljs.core.cst$kw$line, line, cljs.core.cst$kw$col, col, cljs.core.cst$kw$name, function() {
    var temp__4425__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(seg));
    if (temp__4425__auto__) {
      var name__$1 = temp__4425__auto__;
      return goog.object.get(source_map, "names")[name__$1];
    } else {
      return null;
    }
  }()], null);
};
cljs.source_map.seg_combine = function cljs$source_map$seg_combine(seg, relseg) {
  var vec__11396 = seg;
  var gcol = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11396, 0, null);
  var source = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11396, 1, null);
  var line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11396, 2, null);
  var col = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11396, 3, null);
  var name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11396, 4, null);
  var vec__11397 = relseg;
  var rgcol = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11397, 0, null);
  var rsource = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11397, 1, null);
  var rline = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11397, 2, null);
  var rcol = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11397, 3, null);
  var rname = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11397, 4, null);
  var nseg = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [gcol + rgcol, function() {
    var or__4311__auto__ = source;
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return 0;
    }
  }() + rsource, function() {
    var or__4311__auto__ = line;
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return 0;
    }
  }() + rline, function() {
    var or__4311__auto__ = col;
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return 0;
    }
  }() + rcol, function() {
    var or__4311__auto__ = name;
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return 0;
    }
  }() + rname], null);
  if (name) {
    return cljs.core.with_meta(nseg, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, name + rname], null));
  } else {
    return nseg;
  }
};
cljs.source_map.update_reverse_result = function cljs$source_map$update_reverse_result(result, segmap, gline) {
  var map__11400 = segmap;
  var map__11400__$1 = (!(map__11400 == null) ? map__11400.cljs$lang$protocol_mask$partition0$ & 64 || map__11400.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__11400) : map__11400;
  var gcol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11400__$1, cljs.core.cst$kw$gcol);
  var source = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11400__$1, cljs.core.cst$kw$source);
  var line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11400__$1, cljs.core.cst$kw$line);
  var col = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11400__$1, cljs.core.cst$kw$col);
  var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11400__$1, cljs.core.cst$kw$name);
  var d = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$gline, gline, cljs.core.cst$kw$gcol, gcol], null);
  var d__$1 = name ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(d, cljs.core.cst$kw$name, name) : d;
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(result, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [source], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(map__11400, map__11400__$1, gcol, source, line, col, name, d, d__$1) {
    return function(m) {
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(m, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [line], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(map__11400, map__11400__$1, gcol, source, line, col, name, d, d__$1) {
        return function(m__$1) {
          return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(m__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [col], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(map__11400, map__11400__$1, gcol, source, line, col, name, d, d__$1) {
            return function(v) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(v, d__$1);
            };
          }(map__11400, map__11400__$1, gcol, source, line, col, name, d, d__$1), cljs.core.PersistentVector.EMPTY));
        };
      }(map__11400, map__11400__$1, gcol, source, line, col, name, d, d__$1), cljs.core.sorted_map()));
    };
  }(map__11400, map__11400__$1, gcol, source, line, col, name, d, d__$1), cljs.core.sorted_map()));
};
cljs.source_map.decode_reverse = function cljs$source_map$decode_reverse() {
  var args11402 = [];
  var len__5350__auto___11406 = arguments.length;
  var i__5351__auto___11407 = 0;
  while (true) {
    if (i__5351__auto___11407 < len__5350__auto___11406) {
      args11402.push(arguments[i__5351__auto___11407]);
      var G__11408 = i__5351__auto___11407 + 1;
      i__5351__auto___11407 = G__11408;
      continue;
    } else {
    }
    break;
  }
  var G__11404 = args11402.length;
  switch(G__11404) {
    case 1:
      return cljs.source_map.decode_reverse.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.source_map.decode_reverse.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11402.length)].join(""));;
  }
};
cljs.source_map.decode_reverse.cljs$core$IFn$_invoke$arity$1 = function(source_map) {
  return cljs.source_map.decode_reverse.cljs$core$IFn$_invoke$arity$2(goog.object.get(source_map, "mappings"), source_map);
};
cljs.source_map.decode_reverse.cljs$core$IFn$_invoke$arity$2 = function(mappings, source_map) {
  var sources = goog.object.get(source_map, "sources");
  var relseg_init = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0], null);
  var lines = cljs.core.seq(clojure.string.split.cljs$core$IFn$_invoke$arity$2(mappings, /;/));
  var gline = 0;
  var lines__$1 = lines;
  var relseg = relseg_init;
  var result = cljs.core.sorted_map_by(cljs.source_map.source_compare(sources));
  while (true) {
    if (lines__$1) {
      var line = cljs.core.first(lines__$1);
      var vec__11405 = clojure.string.blank_QMARK_(line) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [result, relseg], null) : function() {
        var segs = cljs.core.seq(clojure.string.split.cljs$core$IFn$_invoke$arity$2(line, /,/));
        var segs__$1 = segs;
        var relseg__$1 = relseg;
        var result__$1 = result;
        while (true) {
          if (segs__$1) {
            var seg = cljs.core.first(segs__$1);
            var nrelseg = cljs.source_map.seg_combine(cljs.source_map.base64_vlq.decode(seg), relseg__$1);
            var G__11410 = cljs.core.next(segs__$1);
            var G__11411 = nrelseg;
            var G__11412 = cljs.source_map.update_reverse_result(result__$1, cljs.source_map.seg__GT_map(nrelseg, source_map), gline);
            segs__$1 = G__11410;
            relseg__$1 = G__11411;
            result__$1 = G__11412;
            continue;
          } else {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [result__$1, relseg__$1], null);
          }
          break;
        }
      }();
      var result__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11405, 0, null);
      var relseg__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11405, 1, null);
      var G__11413 = gline + 1;
      var G__11414 = cljs.core.next(lines__$1);
      var G__11415 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(relseg__$1, 0, 0);
      var G__11416 = result__$1;
      gline = G__11413;
      lines__$1 = G__11414;
      relseg = G__11415;
      result = G__11416;
      continue;
    } else {
      return result;
    }
    break;
  }
};
cljs.source_map.decode_reverse.cljs$lang$maxFixedArity = 2;
cljs.source_map.update_result = function cljs$source_map$update_result(result, segmap, gline) {
  var map__11420 = segmap;
  var map__11420__$1 = (!(map__11420 == null) ? map__11420.cljs$lang$protocol_mask$partition0$ & 64 || map__11420.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__11420) : map__11420;
  var gcol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11420__$1, cljs.core.cst$kw$gcol);
  var source = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11420__$1, cljs.core.cst$kw$source);
  var line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11420__$1, cljs.core.cst$kw$line);
  var col = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11420__$1, cljs.core.cst$kw$col);
  var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11420__$1, cljs.core.cst$kw$name);
  var d = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$line, line, cljs.core.cst$kw$col, col, cljs.core.cst$kw$source, source], null);
  var d__$1 = name ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(d, cljs.core.cst$kw$name, name) : d;
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(result, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [gline], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(map__11420, map__11420__$1, gcol, source, line, col, name, d, d__$1) {
    return function(m) {
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(m, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [gcol], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(map__11420, map__11420__$1, gcol, source, line, col, name, d, d__$1) {
        return function(p1__11417_SHARP_) {
          return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11417_SHARP_, d__$1);
        };
      }(map__11420, map__11420__$1, gcol, source, line, col, name, d, d__$1), cljs.core.PersistentVector.EMPTY));
    };
  }(map__11420, map__11420__$1, gcol, source, line, col, name, d, d__$1), cljs.core.sorted_map()));
};
cljs.source_map.decode = function cljs$source_map$decode() {
  var args11422 = [];
  var len__5350__auto___11426 = arguments.length;
  var i__5351__auto___11427 = 0;
  while (true) {
    if (i__5351__auto___11427 < len__5350__auto___11426) {
      args11422.push(arguments[i__5351__auto___11427]);
      var G__11428 = i__5351__auto___11427 + 1;
      i__5351__auto___11427 = G__11428;
      continue;
    } else {
    }
    break;
  }
  var G__11424 = args11422.length;
  switch(G__11424) {
    case 1:
      return cljs.source_map.decode.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.source_map.decode.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11422.length)].join(""));;
  }
};
cljs.source_map.decode.cljs$core$IFn$_invoke$arity$1 = function(source_map) {
  return cljs.source_map.decode.cljs$core$IFn$_invoke$arity$2(goog.object.get(source_map, "mappings"), source_map);
};
cljs.source_map.decode.cljs$core$IFn$_invoke$arity$2 = function(mappings, source_map) {
  var sources = goog.object.get(source_map, "sources");
  var relseg_init = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0], null);
  var lines = cljs.core.seq(clojure.string.split.cljs$core$IFn$_invoke$arity$2(mappings, /;/));
  var gline = 0;
  var lines__$1 = lines;
  var relseg = relseg_init;
  var result = cljs.core.PersistentArrayMap.EMPTY;
  while (true) {
    if (lines__$1) {
      var line = cljs.core.first(lines__$1);
      var vec__11425 = clojure.string.blank_QMARK_(line) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [result, relseg], null) : function() {
        var segs = cljs.core.seq(clojure.string.split.cljs$core$IFn$_invoke$arity$2(line, /,/));
        var segs__$1 = segs;
        var relseg__$1 = relseg;
        var result__$1 = result;
        while (true) {
          if (segs__$1) {
            var seg = cljs.core.first(segs__$1);
            var nrelseg = cljs.source_map.seg_combine(cljs.source_map.base64_vlq.decode(seg), relseg__$1);
            var G__11430 = cljs.core.next(segs__$1);
            var G__11431 = nrelseg;
            var G__11432 = cljs.source_map.update_result(result__$1, cljs.source_map.seg__GT_map(nrelseg, source_map), gline);
            segs__$1 = G__11430;
            relseg__$1 = G__11431;
            result__$1 = G__11432;
            continue;
          } else {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [result__$1, relseg__$1], null);
          }
          break;
        }
      }();
      var result__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11425, 0, null);
      var relseg__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11425, 1, null);
      var G__11433 = gline + 1;
      var G__11434 = cljs.core.next(lines__$1);
      var G__11435 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(relseg__$1, 0, 0);
      var G__11436 = result__$1;
      gline = G__11433;
      lines__$1 = G__11434;
      relseg = G__11435;
      result = G__11436;
      continue;
    } else {
      return result;
    }
    break;
  }
};
cljs.source_map.decode.cljs$lang$maxFixedArity = 2;
cljs.source_map.lines__GT_segs = function cljs$source_map$lines__GT_segs(lines) {
  var relseg = function() {
    var G__11444 = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 0, 0, 0, 0], null);
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11444) : cljs.core.atom.call(null, G__11444);
  }();
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(relseg) {
    return function(segs, cols) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(relseg, function(relseg) {
        return function(p__11445) {
          var vec__11446 = p__11445;
          var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11446, 0, null);
          var source = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11446, 1, null);
          var line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11446, 2, null);
          var col = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11446, 3, null);
          var name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11446, 4, null);
          return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, source, line, col, name], null);
        };
      }(relseg));
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(segs, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(relseg) {
        return function(cols__$1, p__11447) {
          var vec__11448 = p__11447;
          var gcol = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11448, 0, null);
          var sidx = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11448, 1, null);
          var line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11448, 2, null);
          var col = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11448, 3, null);
          var name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11448, 4, null);
          var seg = vec__11448;
          var offset = cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core._, seg, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(relseg) : cljs.core.deref.call(null, relseg));
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(relseg, function(offset, vec__11448, gcol, sidx, line, col, name, seg, relseg) {
            return function(p__11449) {
              var vec__11450 = p__11449;
              var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11450, 0, null);
              var ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11450, 1, null);
              var ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11450, 2, null);
              var ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11450, 3, null);
              var lname = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11450, 4, null);
              return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [gcol, sidx, line, col, function() {
                var or__4311__auto__ = name;
                if (or__4311__auto__) {
                  return or__4311__auto__;
                } else {
                  return lname;
                }
              }()], null);
            };
          }(offset, vec__11448, gcol, sidx, line, col, name, seg, relseg));
          return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cols__$1, cljs.source_map.base64_vlq.encode(offset));
        };
      }(relseg), cljs.core.PersistentVector.EMPTY, cols));
    };
  }(relseg), cljs.core.PersistentVector.EMPTY, lines);
};
cljs.source_map.encode = function cljs$source_map$encode(m, opts) {
  var lines = function() {
    var G__11509 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY], null);
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11509) : cljs.core.atom.call(null, G__11509);
  }();
  var names__GT_idx = function() {
    var G__11510 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11510) : cljs.core.atom.call(null, G__11510);
  }();
  var name_idx = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0) : cljs.core.atom.call(null, 0);
  var preamble_lines = cljs.core.take.cljs$core$IFn$_invoke$arity$2(function() {
    var or__4311__auto__ = cljs.core.cst$kw$preamble_DASH_line_DASH_count.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return 0;
    }
  }(), cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY));
  var info__GT_segv = function(lines, names__GT_idx, name_idx, preamble_lines) {
    return function(info, source_idx, line, col) {
      var segv = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$gcol.cljs$core$IFn$_invoke$arity$1(info), source_idx, line, col], null);
      var temp__4423__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(info);
      if (temp__4423__auto__) {
        var name = temp__4423__auto__;
        var idx = function() {
          var temp__4423__auto____$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(names__GT_idx) : cljs.core.deref.call(null, names__GT_idx), name);
          if (temp__4423__auto____$1) {
            var idx = temp__4423__auto____$1;
            return idx;
          } else {
            var cidx = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(name_idx) : cljs.core.deref.call(null, name_idx);
            cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(names__GT_idx, cljs.core.assoc, name, cidx);
            cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(name_idx, cljs.core.inc);
            return cidx;
          }
        }();
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(segv, idx);
      } else {
        return segv;
      }
    };
  }(lines, names__GT_idx, name_idx, preamble_lines);
  var encode_cols = function(lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv) {
    return function(infos, source_idx, line, col) {
      var seq__11511 = cljs.core.seq(infos);
      var chunk__11512 = null;
      var count__11513 = 0;
      var i__11514 = 0;
      while (true) {
        if (i__11514 < count__11513) {
          var info = chunk__11512.cljs$core$IIndexed$_nth$arity$2(null, i__11514);
          var segv_11564 = info__GT_segv(info, source_idx, line, col);
          var gline_11565 = cljs.core.cst$kw$gline.cljs$core$IFn$_invoke$arity$1(info);
          var lc_11566 = cljs.core.count(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(lines) : cljs.core.deref.call(null, lines));
          if (gline_11565 > lc_11566 - 1) {
            cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(lines, function(seq__11511, chunk__11512, count__11513, i__11514, segv_11564, gline_11565, lc_11566, info, lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv) {
              return function(lines__$1) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.into.cljs$core$IFn$_invoke$arity$2(lines__$1, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(gline_11565 - (lc_11566 - 1) - 1, cljs.core.PersistentVector.EMPTY)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [segv_11564], null));
              };
            }(seq__11511, chunk__11512, count__11513, i__11514, segv_11564, gline_11565, lc_11566, info, lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv));
          } else {
            cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(lines, function(seq__11511, chunk__11512, count__11513, i__11514, segv_11564, gline_11565, lc_11566, info, lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv) {
              return function(lines__$1) {
                return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(lines__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [gline_11565], null), cljs.core.conj, segv_11564);
              };
            }(seq__11511, chunk__11512, count__11513, i__11514, segv_11564, gline_11565, lc_11566, info, lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv));
          }
          var G__11567 = seq__11511;
          var G__11568 = chunk__11512;
          var G__11569 = count__11513;
          var G__11570 = i__11514 + 1;
          seq__11511 = G__11567;
          chunk__11512 = G__11568;
          count__11513 = G__11569;
          i__11514 = G__11570;
          continue;
        } else {
          var temp__4425__auto__ = cljs.core.seq(seq__11511);
          if (temp__4425__auto__) {
            var seq__11511__$1 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_(seq__11511__$1)) {
              var c__5095__auto__ = cljs.core.chunk_first(seq__11511__$1);
              var G__11571 = cljs.core.chunk_rest(seq__11511__$1);
              var G__11572 = c__5095__auto__;
              var G__11573 = cljs.core.count(c__5095__auto__);
              var G__11574 = 0;
              seq__11511 = G__11571;
              chunk__11512 = G__11572;
              count__11513 = G__11573;
              i__11514 = G__11574;
              continue;
            } else {
              var info = cljs.core.first(seq__11511__$1);
              var segv_11575 = info__GT_segv(info, source_idx, line, col);
              var gline_11576 = cljs.core.cst$kw$gline.cljs$core$IFn$_invoke$arity$1(info);
              var lc_11577 = cljs.core.count(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(lines) : cljs.core.deref.call(null, lines));
              if (gline_11576 > lc_11577 - 1) {
                cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(lines, function(seq__11511, chunk__11512, count__11513, i__11514, segv_11575, gline_11576, lc_11577, info, seq__11511__$1, temp__4425__auto__, lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv) {
                  return function(lines__$1) {
                    return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.into.cljs$core$IFn$_invoke$arity$2(lines__$1, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(gline_11576 - (lc_11577 - 1) - 1, cljs.core.PersistentVector.EMPTY)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [segv_11575], null));
                  };
                }(seq__11511, chunk__11512, count__11513, i__11514, segv_11575, gline_11576, lc_11577, info, seq__11511__$1, temp__4425__auto__, lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv));
              } else {
                cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(lines, function(seq__11511, chunk__11512, count__11513, i__11514, segv_11575, gline_11576, lc_11577, info, seq__11511__$1, temp__4425__auto__, lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv) {
                  return function(lines__$1) {
                    return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(lines__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [gline_11576], null), cljs.core.conj, segv_11575);
                  };
                }(seq__11511, chunk__11512, count__11513, i__11514, segv_11575, gline_11576, lc_11577, info, seq__11511__$1, temp__4425__auto__, lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv));
              }
              var G__11578 = cljs.core.next(seq__11511__$1);
              var G__11579 = null;
              var G__11580 = 0;
              var G__11581 = 0;
              seq__11511 = G__11578;
              chunk__11512 = G__11579;
              count__11513 = G__11580;
              i__11514 = G__11581;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    };
  }(lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv);
  var seq__11515_11582 = cljs.core.seq(cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(function(lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv, encode_cols) {
    return function(i, v) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, v], null);
    };
  }(lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv, encode_cols), m));
  var chunk__11516_11583 = null;
  var count__11517_11584 = 0;
  var i__11518_11585 = 0;
  while (true) {
    if (i__11518_11585 < count__11517_11584) {
      var vec__11519_11586 = chunk__11516_11583.cljs$core$IIndexed$_nth$arity$2(null, i__11518_11585);
      var source_idx_11587 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11519_11586, 0, null);
      var vec__11520_11588 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11519_11586, 1, null);
      var __11589 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11520_11588, 0, null);
      var lines_11590__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11520_11588, 1, null);
      var seq__11521_11591 = cljs.core.seq(lines_11590__$1);
      var chunk__11522_11592 = null;
      var count__11523_11593 = 0;
      var i__11524_11594 = 0;
      while (true) {
        if (i__11524_11594 < count__11523_11593) {
          var vec__11525_11595 = chunk__11522_11592.cljs$core$IIndexed$_nth$arity$2(null, i__11524_11594);
          var line_11596 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11525_11595, 0, null);
          var cols_11597 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11525_11595, 1, null);
          var seq__11526_11598 = cljs.core.seq(cols_11597);
          var chunk__11527_11599 = null;
          var count__11528_11600 = 0;
          var i__11529_11601 = 0;
          while (true) {
            if (i__11529_11601 < count__11528_11600) {
              var vec__11530_11602 = chunk__11527_11599.cljs$core$IIndexed$_nth$arity$2(null, i__11529_11601);
              var col_11603 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11530_11602, 0, null);
              var infos_11604 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11530_11602, 1, null);
              encode_cols(infos_11604, source_idx_11587, line_11596, col_11603);
              var G__11605 = seq__11526_11598;
              var G__11606 = chunk__11527_11599;
              var G__11607 = count__11528_11600;
              var G__11608 = i__11529_11601 + 1;
              seq__11526_11598 = G__11605;
              chunk__11527_11599 = G__11606;
              count__11528_11600 = G__11607;
              i__11529_11601 = G__11608;
              continue;
            } else {
              var temp__4425__auto___11609 = cljs.core.seq(seq__11526_11598);
              if (temp__4425__auto___11609) {
                var seq__11526_11610__$1 = temp__4425__auto___11609;
                if (cljs.core.chunked_seq_QMARK_(seq__11526_11610__$1)) {
                  var c__5095__auto___11611 = cljs.core.chunk_first(seq__11526_11610__$1);
                  var G__11612 = cljs.core.chunk_rest(seq__11526_11610__$1);
                  var G__11613 = c__5095__auto___11611;
                  var G__11614 = cljs.core.count(c__5095__auto___11611);
                  var G__11615 = 0;
                  seq__11526_11598 = G__11612;
                  chunk__11527_11599 = G__11613;
                  count__11528_11600 = G__11614;
                  i__11529_11601 = G__11615;
                  continue;
                } else {
                  var vec__11531_11616 = cljs.core.first(seq__11526_11610__$1);
                  var col_11617 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11531_11616, 0, null);
                  var infos_11618 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11531_11616, 1, null);
                  encode_cols(infos_11618, source_idx_11587, line_11596, col_11617);
                  var G__11619 = cljs.core.next(seq__11526_11610__$1);
                  var G__11620 = null;
                  var G__11621 = 0;
                  var G__11622 = 0;
                  seq__11526_11598 = G__11619;
                  chunk__11527_11599 = G__11620;
                  count__11528_11600 = G__11621;
                  i__11529_11601 = G__11622;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__11623 = seq__11521_11591;
          var G__11624 = chunk__11522_11592;
          var G__11625 = count__11523_11593;
          var G__11626 = i__11524_11594 + 1;
          seq__11521_11591 = G__11623;
          chunk__11522_11592 = G__11624;
          count__11523_11593 = G__11625;
          i__11524_11594 = G__11626;
          continue;
        } else {
          var temp__4425__auto___11627 = cljs.core.seq(seq__11521_11591);
          if (temp__4425__auto___11627) {
            var seq__11521_11628__$1 = temp__4425__auto___11627;
            if (cljs.core.chunked_seq_QMARK_(seq__11521_11628__$1)) {
              var c__5095__auto___11629 = cljs.core.chunk_first(seq__11521_11628__$1);
              var G__11630 = cljs.core.chunk_rest(seq__11521_11628__$1);
              var G__11631 = c__5095__auto___11629;
              var G__11632 = cljs.core.count(c__5095__auto___11629);
              var G__11633 = 0;
              seq__11521_11591 = G__11630;
              chunk__11522_11592 = G__11631;
              count__11523_11593 = G__11632;
              i__11524_11594 = G__11633;
              continue;
            } else {
              var vec__11532_11634 = cljs.core.first(seq__11521_11628__$1);
              var line_11635 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11532_11634, 0, null);
              var cols_11636 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11532_11634, 1, null);
              var seq__11533_11637 = cljs.core.seq(cols_11636);
              var chunk__11534_11638 = null;
              var count__11535_11639 = 0;
              var i__11536_11640 = 0;
              while (true) {
                if (i__11536_11640 < count__11535_11639) {
                  var vec__11537_11641 = chunk__11534_11638.cljs$core$IIndexed$_nth$arity$2(null, i__11536_11640);
                  var col_11642 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11537_11641, 0, null);
                  var infos_11643 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11537_11641, 1, null);
                  encode_cols(infos_11643, source_idx_11587, line_11635, col_11642);
                  var G__11644 = seq__11533_11637;
                  var G__11645 = chunk__11534_11638;
                  var G__11646 = count__11535_11639;
                  var G__11647 = i__11536_11640 + 1;
                  seq__11533_11637 = G__11644;
                  chunk__11534_11638 = G__11645;
                  count__11535_11639 = G__11646;
                  i__11536_11640 = G__11647;
                  continue;
                } else {
                  var temp__4425__auto___11648__$1 = cljs.core.seq(seq__11533_11637);
                  if (temp__4425__auto___11648__$1) {
                    var seq__11533_11649__$1 = temp__4425__auto___11648__$1;
                    if (cljs.core.chunked_seq_QMARK_(seq__11533_11649__$1)) {
                      var c__5095__auto___11650 = cljs.core.chunk_first(seq__11533_11649__$1);
                      var G__11651 = cljs.core.chunk_rest(seq__11533_11649__$1);
                      var G__11652 = c__5095__auto___11650;
                      var G__11653 = cljs.core.count(c__5095__auto___11650);
                      var G__11654 = 0;
                      seq__11533_11637 = G__11651;
                      chunk__11534_11638 = G__11652;
                      count__11535_11639 = G__11653;
                      i__11536_11640 = G__11654;
                      continue;
                    } else {
                      var vec__11538_11655 = cljs.core.first(seq__11533_11649__$1);
                      var col_11656 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11538_11655, 0, null);
                      var infos_11657 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11538_11655, 1, null);
                      encode_cols(infos_11657, source_idx_11587, line_11635, col_11656);
                      var G__11658 = cljs.core.next(seq__11533_11649__$1);
                      var G__11659 = null;
                      var G__11660 = 0;
                      var G__11661 = 0;
                      seq__11533_11637 = G__11658;
                      chunk__11534_11638 = G__11659;
                      count__11535_11639 = G__11660;
                      i__11536_11640 = G__11661;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              var G__11662 = cljs.core.next(seq__11521_11628__$1);
              var G__11663 = null;
              var G__11664 = 0;
              var G__11665 = 0;
              seq__11521_11591 = G__11662;
              chunk__11522_11592 = G__11663;
              count__11523_11593 = G__11664;
              i__11524_11594 = G__11665;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__11666 = seq__11515_11582;
      var G__11667 = chunk__11516_11583;
      var G__11668 = count__11517_11584;
      var G__11669 = i__11518_11585 + 1;
      seq__11515_11582 = G__11666;
      chunk__11516_11583 = G__11667;
      count__11517_11584 = G__11668;
      i__11518_11585 = G__11669;
      continue;
    } else {
      var temp__4425__auto___11670 = cljs.core.seq(seq__11515_11582);
      if (temp__4425__auto___11670) {
        var seq__11515_11671__$1 = temp__4425__auto___11670;
        if (cljs.core.chunked_seq_QMARK_(seq__11515_11671__$1)) {
          var c__5095__auto___11672 = cljs.core.chunk_first(seq__11515_11671__$1);
          var G__11673 = cljs.core.chunk_rest(seq__11515_11671__$1);
          var G__11674 = c__5095__auto___11672;
          var G__11675 = cljs.core.count(c__5095__auto___11672);
          var G__11676 = 0;
          seq__11515_11582 = G__11673;
          chunk__11516_11583 = G__11674;
          count__11517_11584 = G__11675;
          i__11518_11585 = G__11676;
          continue;
        } else {
          var vec__11539_11677 = cljs.core.first(seq__11515_11671__$1);
          var source_idx_11678 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11539_11677, 0, null);
          var vec__11540_11679 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11539_11677, 1, null);
          var __11680 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11540_11679, 0, null);
          var lines_11681__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11540_11679, 1, null);
          var seq__11541_11682 = cljs.core.seq(lines_11681__$1);
          var chunk__11542_11683 = null;
          var count__11543_11684 = 0;
          var i__11544_11685 = 0;
          while (true) {
            if (i__11544_11685 < count__11543_11684) {
              var vec__11545_11686 = chunk__11542_11683.cljs$core$IIndexed$_nth$arity$2(null, i__11544_11685);
              var line_11687 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11545_11686, 0, null);
              var cols_11688 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11545_11686, 1, null);
              var seq__11546_11689 = cljs.core.seq(cols_11688);
              var chunk__11547_11690 = null;
              var count__11548_11691 = 0;
              var i__11549_11692 = 0;
              while (true) {
                if (i__11549_11692 < count__11548_11691) {
                  var vec__11550_11693 = chunk__11547_11690.cljs$core$IIndexed$_nth$arity$2(null, i__11549_11692);
                  var col_11694 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11550_11693, 0, null);
                  var infos_11695 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11550_11693, 1, null);
                  encode_cols(infos_11695, source_idx_11678, line_11687, col_11694);
                  var G__11696 = seq__11546_11689;
                  var G__11697 = chunk__11547_11690;
                  var G__11698 = count__11548_11691;
                  var G__11699 = i__11549_11692 + 1;
                  seq__11546_11689 = G__11696;
                  chunk__11547_11690 = G__11697;
                  count__11548_11691 = G__11698;
                  i__11549_11692 = G__11699;
                  continue;
                } else {
                  var temp__4425__auto___11700__$1 = cljs.core.seq(seq__11546_11689);
                  if (temp__4425__auto___11700__$1) {
                    var seq__11546_11701__$1 = temp__4425__auto___11700__$1;
                    if (cljs.core.chunked_seq_QMARK_(seq__11546_11701__$1)) {
                      var c__5095__auto___11702 = cljs.core.chunk_first(seq__11546_11701__$1);
                      var G__11703 = cljs.core.chunk_rest(seq__11546_11701__$1);
                      var G__11704 = c__5095__auto___11702;
                      var G__11705 = cljs.core.count(c__5095__auto___11702);
                      var G__11706 = 0;
                      seq__11546_11689 = G__11703;
                      chunk__11547_11690 = G__11704;
                      count__11548_11691 = G__11705;
                      i__11549_11692 = G__11706;
                      continue;
                    } else {
                      var vec__11551_11707 = cljs.core.first(seq__11546_11701__$1);
                      var col_11708 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11551_11707, 0, null);
                      var infos_11709 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11551_11707, 1, null);
                      encode_cols(infos_11709, source_idx_11678, line_11687, col_11708);
                      var G__11710 = cljs.core.next(seq__11546_11701__$1);
                      var G__11711 = null;
                      var G__11712 = 0;
                      var G__11713 = 0;
                      seq__11546_11689 = G__11710;
                      chunk__11547_11690 = G__11711;
                      count__11548_11691 = G__11712;
                      i__11549_11692 = G__11713;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              var G__11714 = seq__11541_11682;
              var G__11715 = chunk__11542_11683;
              var G__11716 = count__11543_11684;
              var G__11717 = i__11544_11685 + 1;
              seq__11541_11682 = G__11714;
              chunk__11542_11683 = G__11715;
              count__11543_11684 = G__11716;
              i__11544_11685 = G__11717;
              continue;
            } else {
              var temp__4425__auto___11718__$1 = cljs.core.seq(seq__11541_11682);
              if (temp__4425__auto___11718__$1) {
                var seq__11541_11719__$1 = temp__4425__auto___11718__$1;
                if (cljs.core.chunked_seq_QMARK_(seq__11541_11719__$1)) {
                  var c__5095__auto___11720 = cljs.core.chunk_first(seq__11541_11719__$1);
                  var G__11721 = cljs.core.chunk_rest(seq__11541_11719__$1);
                  var G__11722 = c__5095__auto___11720;
                  var G__11723 = cljs.core.count(c__5095__auto___11720);
                  var G__11724 = 0;
                  seq__11541_11682 = G__11721;
                  chunk__11542_11683 = G__11722;
                  count__11543_11684 = G__11723;
                  i__11544_11685 = G__11724;
                  continue;
                } else {
                  var vec__11552_11725 = cljs.core.first(seq__11541_11719__$1);
                  var line_11726 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11552_11725, 0, null);
                  var cols_11727 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11552_11725, 1, null);
                  var seq__11553_11728 = cljs.core.seq(cols_11727);
                  var chunk__11554_11729 = null;
                  var count__11555_11730 = 0;
                  var i__11556_11731 = 0;
                  while (true) {
                    if (i__11556_11731 < count__11555_11730) {
                      var vec__11557_11732 = chunk__11554_11729.cljs$core$IIndexed$_nth$arity$2(null, i__11556_11731);
                      var col_11733 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11557_11732, 0, null);
                      var infos_11734 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11557_11732, 1, null);
                      encode_cols(infos_11734, source_idx_11678, line_11726, col_11733);
                      var G__11735 = seq__11553_11728;
                      var G__11736 = chunk__11554_11729;
                      var G__11737 = count__11555_11730;
                      var G__11738 = i__11556_11731 + 1;
                      seq__11553_11728 = G__11735;
                      chunk__11554_11729 = G__11736;
                      count__11555_11730 = G__11737;
                      i__11556_11731 = G__11738;
                      continue;
                    } else {
                      var temp__4425__auto___11739__$2 = cljs.core.seq(seq__11553_11728);
                      if (temp__4425__auto___11739__$2) {
                        var seq__11553_11740__$1 = temp__4425__auto___11739__$2;
                        if (cljs.core.chunked_seq_QMARK_(seq__11553_11740__$1)) {
                          var c__5095__auto___11741 = cljs.core.chunk_first(seq__11553_11740__$1);
                          var G__11742 = cljs.core.chunk_rest(seq__11553_11740__$1);
                          var G__11743 = c__5095__auto___11741;
                          var G__11744 = cljs.core.count(c__5095__auto___11741);
                          var G__11745 = 0;
                          seq__11553_11728 = G__11742;
                          chunk__11554_11729 = G__11743;
                          count__11555_11730 = G__11744;
                          i__11556_11731 = G__11745;
                          continue;
                        } else {
                          var vec__11558_11746 = cljs.core.first(seq__11553_11740__$1);
                          var col_11747 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11558_11746, 0, null);
                          var infos_11748 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11558_11746, 1, null);
                          encode_cols(infos_11748, source_idx_11678, line_11726, col_11747);
                          var G__11749 = cljs.core.next(seq__11553_11740__$1);
                          var G__11750 = null;
                          var G__11751 = 0;
                          var G__11752 = 0;
                          seq__11553_11728 = G__11749;
                          chunk__11554_11729 = G__11750;
                          count__11555_11730 = G__11751;
                          i__11556_11731 = G__11752;
                          continue;
                        }
                      } else {
                      }
                    }
                    break;
                  }
                  var G__11753 = cljs.core.next(seq__11541_11719__$1);
                  var G__11754 = null;
                  var G__11755 = 0;
                  var G__11756 = 0;
                  seq__11541_11682 = G__11753;
                  chunk__11542_11683 = G__11754;
                  count__11543_11684 = G__11755;
                  i__11544_11685 = G__11756;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__11757 = cljs.core.next(seq__11515_11671__$1);
          var G__11758 = null;
          var G__11759 = 0;
          var G__11760 = 0;
          seq__11515_11582 = G__11757;
          chunk__11516_11583 = G__11758;
          count__11517_11584 = G__11759;
          i__11518_11585 = G__11760;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var source_map_file_contents = function() {
    var G__11559 = {"version":3, "file":cljs.core.cst$kw$file.cljs$core$IFn$_invoke$arity$1(opts), "sources":function() {
      var paths = cljs.core.keys(m);
      var f = cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$source_DASH_map_DASH_timestamp.cljs$core$IFn$_invoke$arity$1(opts) === true ? function(paths, lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv, encode_cols) {
        return function(p1__11451_SHARP_) {
          return [cljs.core.str(p1__11451_SHARP_), cljs.core.str("?rel="), cljs.core.str((new Date).valueOf())].join("");
        };
      }(paths, lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv, encode_cols) : cljs.core.identity, function(paths, lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv, encode_cols) {
        return function(p1__11452_SHARP_) {
          return cljs.core.last(clojure.string.split.cljs$core$IFn$_invoke$arity$2(p1__11452_SHARP_, /\//));
        };
      }(paths, lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv, encode_cols));
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, paths));
    }(), "lineCount":cljs.core.cst$kw$lines.cljs$core$IFn$_invoke$arity$1(opts), "mappings":clojure.string.join.cljs$core$IFn$_invoke$arity$2(";", cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv, encode_cols) {
      return function(p1__11453_SHARP_) {
        return clojure.string.join.cljs$core$IFn$_invoke$arity$2(",", p1__11453_SHARP_);
      };
    }(lines, names__GT_idx, name_idx, preamble_lines, info__GT_segv, encode_cols), cljs.source_map.lines__GT_segs(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(preamble_lines, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(lines) : cljs.core.deref.call(null, lines))))), "names":cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clojure.set.map_invert(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(names__GT_idx) : 
    cljs.core.deref.call(null, names__GT_idx)), cljs.core.range.cljs$core$IFn$_invoke$arity$1(cljs.core.count(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(names__GT_idx) : cljs.core.deref.call(null, names__GT_idx)))))};
    var G__11559__$1 = cljs.core.cst$kw$sources_DASH_content.cljs$core$IFn$_invoke$arity$1(opts) ? function() {
      var G__11560 = G__11559;
      var G__11561_11761 = G__11560;
      var G__11562_11762 = "sourcesContent";
      var G__11563_11763 = cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$sources_DASH_content.cljs$core$IFn$_invoke$arity$1(opts));
      goog.object.set(G__11561_11761, G__11562_11762, G__11563_11763);
      return G__11560;
    }() : G__11559;
    return G__11559__$1;
  }();
  return JSON.stringify(source_map_file_contents);
};
cljs.source_map.merge_source_maps = function cljs$source_map$merge_source_maps(cljs_map, js_map) {
  var line_map_seq = cljs.core.seq(cljs_map);
  var new_lines = cljs.core.sorted_map();
  while (true) {
    if (line_map_seq) {
      var vec__11769 = cljs.core.first(line_map_seq);
      var line = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11769, 0, null);
      var col_map = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11769, 1, null);
      var new_cols = function() {
        var col_map_seq = cljs.core.seq(col_map);
        var new_cols = cljs.core.sorted_map();
        while (true) {
          if (col_map_seq) {
            var vec__11770 = cljs.core.first(col_map_seq);
            var col = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11770, 0, null);
            var infos = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11770, 1, null);
            var G__11774 = cljs.core.next(col_map_seq);
            var G__11775 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new_cols, col, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(col_map_seq, new_cols, line_map_seq, new_lines, vec__11770, col, infos, vec__11769, line, col_map) {
              return function(v, p__11771) {
                var map__11772 = p__11771;
                var map__11772__$1 = (!(map__11772 == null) ? map__11772.cljs$lang$protocol_mask$partition0$ & 64 || map__11772.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__11772) : map__11772;
                var gline = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11772__$1, cljs.core.cst$kw$gline);
                var gcol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11772__$1, cljs.core.cst$kw$gcol);
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(v, cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(js_map, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [gline, gcol], null)));
              };
            }(col_map_seq, new_cols, line_map_seq, new_lines, vec__11770, col, infos, vec__11769, line, col_map), cljs.core.PersistentVector.EMPTY, infos));
            col_map_seq = G__11774;
            new_cols = G__11775;
            continue;
          } else {
            return new_cols;
          }
          break;
        }
      }();
      var G__11776 = cljs.core.next(line_map_seq);
      var G__11777 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new_lines, line, new_cols);
      line_map_seq = G__11776;
      new_lines = G__11777;
      continue;
    } else {
      return new_lines;
    }
    break;
  }
};
cljs.source_map.invert_reverse_map = function cljs$source_map$invert_reverse_map(reverse_map) {
  var inverted = function() {
    var G__11829 = cljs.core.sorted_map();
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11829) : cljs.core.atom.call(null, G__11829);
  }();
  var seq__11830_11880 = cljs.core.seq(reverse_map);
  var chunk__11831_11881 = null;
  var count__11832_11882 = 0;
  var i__11833_11883 = 0;
  while (true) {
    if (i__11833_11883 < count__11832_11882) {
      var vec__11834_11884 = chunk__11831_11881.cljs$core$IIndexed$_nth$arity$2(null, i__11833_11883);
      var line_11885 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11834_11884, 0, null);
      var columns_11886 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11834_11884, 1, null);
      var seq__11835_11887 = cljs.core.seq(columns_11886);
      var chunk__11836_11888 = null;
      var count__11837_11889 = 0;
      var i__11838_11890 = 0;
      while (true) {
        if (i__11838_11890 < count__11837_11889) {
          var vec__11839_11891 = chunk__11836_11888.cljs$core$IIndexed$_nth$arity$2(null, i__11838_11890);
          var column_11892 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11839_11891, 0, null);
          var column_info_11893 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11839_11891, 1, null);
          var seq__11840_11894 = cljs.core.seq(column_info_11893);
          var chunk__11841_11895 = null;
          var count__11842_11896 = 0;
          var i__11843_11897 = 0;
          while (true) {
            if (i__11843_11897 < count__11842_11896) {
              var map__11844_11898 = chunk__11841_11895.cljs$core$IIndexed$_nth$arity$2(null, i__11843_11897);
              var map__11844_11899__$1 = (!(map__11844_11898 == null) ? map__11844_11898.cljs$lang$protocol_mask$partition0$ & 64 || map__11844_11898.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__11844_11898) : map__11844_11898;
              var gline_11900 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11844_11899__$1, cljs.core.cst$kw$gline);
              var gcol_11901 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11844_11899__$1, cljs.core.cst$kw$gcol);
              var name_11902 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11844_11899__$1, cljs.core.cst$kw$name);
              cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(inverted, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [gline_11900], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(seq__11840_11894, chunk__11841_11895, count__11842_11896, i__11843_11897, seq__11835_11887, chunk__11836_11888, count__11837_11889, i__11838_11890, seq__11830_11880, chunk__11831_11881, count__11832_11882, i__11833_11883, map__11844_11898, map__11844_11899__$1, 
              gline_11900, gcol_11901, name_11902, vec__11839_11891, column_11892, column_info_11893, vec__11834_11884, line_11885, columns_11886, inverted) {
                return function(columns__$1) {
                  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(columns__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [column_11892], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$line, line_11885, cljs.core.cst$kw$col, column_11892, cljs.core.cst$kw$name, name_11902], null));
                };
              }(seq__11840_11894, chunk__11841_11895, count__11842_11896, i__11843_11897, seq__11835_11887, chunk__11836_11888, count__11837_11889, i__11838_11890, seq__11830_11880, chunk__11831_11881, count__11832_11882, i__11833_11883, map__11844_11898, map__11844_11899__$1, gline_11900, gcol_11901, name_11902, vec__11839_11891, column_11892, column_info_11893, vec__11834_11884, line_11885, columns_11886, inverted), cljs.core.sorted_map()));
              var G__11903 = seq__11840_11894;
              var G__11904 = chunk__11841_11895;
              var G__11905 = count__11842_11896;
              var G__11906 = i__11843_11897 + 1;
              seq__11840_11894 = G__11903;
              chunk__11841_11895 = G__11904;
              count__11842_11896 = G__11905;
              i__11843_11897 = G__11906;
              continue;
            } else {
              var temp__4425__auto___11907 = cljs.core.seq(seq__11840_11894);
              if (temp__4425__auto___11907) {
                var seq__11840_11908__$1 = temp__4425__auto___11907;
                if (cljs.core.chunked_seq_QMARK_(seq__11840_11908__$1)) {
                  var c__5095__auto___11909 = cljs.core.chunk_first(seq__11840_11908__$1);
                  var G__11910 = cljs.core.chunk_rest(seq__11840_11908__$1);
                  var G__11911 = c__5095__auto___11909;
                  var G__11912 = cljs.core.count(c__5095__auto___11909);
                  var G__11913 = 0;
                  seq__11840_11894 = G__11910;
                  chunk__11841_11895 = G__11911;
                  count__11842_11896 = G__11912;
                  i__11843_11897 = G__11913;
                  continue;
                } else {
                  var map__11846_11914 = cljs.core.first(seq__11840_11908__$1);
                  var map__11846_11915__$1 = (!(map__11846_11914 == null) ? map__11846_11914.cljs$lang$protocol_mask$partition0$ & 64 || map__11846_11914.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__11846_11914) : map__11846_11914;
                  var gline_11916 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11846_11915__$1, cljs.core.cst$kw$gline);
                  var gcol_11917 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11846_11915__$1, cljs.core.cst$kw$gcol);
                  var name_11918 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11846_11915__$1, cljs.core.cst$kw$name);
                  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(inverted, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [gline_11916], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(seq__11840_11894, chunk__11841_11895, count__11842_11896, i__11843_11897, seq__11835_11887, chunk__11836_11888, count__11837_11889, i__11838_11890, seq__11830_11880, chunk__11831_11881, count__11832_11882, i__11833_11883, map__11846_11914, map__11846_11915__$1, 
                  gline_11916, gcol_11917, name_11918, seq__11840_11908__$1, temp__4425__auto___11907, vec__11839_11891, column_11892, column_info_11893, vec__11834_11884, line_11885, columns_11886, inverted) {
                    return function(columns__$1) {
                      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(columns__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [column_11892], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$line, line_11885, cljs.core.cst$kw$col, column_11892, cljs.core.cst$kw$name, name_11918], null));
                    };
                  }(seq__11840_11894, chunk__11841_11895, count__11842_11896, i__11843_11897, seq__11835_11887, chunk__11836_11888, count__11837_11889, i__11838_11890, seq__11830_11880, chunk__11831_11881, count__11832_11882, i__11833_11883, map__11846_11914, map__11846_11915__$1, gline_11916, gcol_11917, name_11918, seq__11840_11908__$1, temp__4425__auto___11907, vec__11839_11891, column_11892, column_info_11893, vec__11834_11884, line_11885, columns_11886, inverted), cljs.core.sorted_map()));
                  var G__11919 = cljs.core.next(seq__11840_11908__$1);
                  var G__11920 = null;
                  var G__11921 = 0;
                  var G__11922 = 0;
                  seq__11840_11894 = G__11919;
                  chunk__11841_11895 = G__11920;
                  count__11842_11896 = G__11921;
                  i__11843_11897 = G__11922;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__11923 = seq__11835_11887;
          var G__11924 = chunk__11836_11888;
          var G__11925 = count__11837_11889;
          var G__11926 = i__11838_11890 + 1;
          seq__11835_11887 = G__11923;
          chunk__11836_11888 = G__11924;
          count__11837_11889 = G__11925;
          i__11838_11890 = G__11926;
          continue;
        } else {
          var temp__4425__auto___11927 = cljs.core.seq(seq__11835_11887);
          if (temp__4425__auto___11927) {
            var seq__11835_11928__$1 = temp__4425__auto___11927;
            if (cljs.core.chunked_seq_QMARK_(seq__11835_11928__$1)) {
              var c__5095__auto___11929 = cljs.core.chunk_first(seq__11835_11928__$1);
              var G__11930 = cljs.core.chunk_rest(seq__11835_11928__$1);
              var G__11931 = c__5095__auto___11929;
              var G__11932 = cljs.core.count(c__5095__auto___11929);
              var G__11933 = 0;
              seq__11835_11887 = G__11930;
              chunk__11836_11888 = G__11931;
              count__11837_11889 = G__11932;
              i__11838_11890 = G__11933;
              continue;
            } else {
              var vec__11848_11934 = cljs.core.first(seq__11835_11928__$1);
              var column_11935 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11848_11934, 0, null);
              var column_info_11936 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11848_11934, 1, null);
              var seq__11849_11937 = cljs.core.seq(column_info_11936);
              var chunk__11850_11938 = null;
              var count__11851_11939 = 0;
              var i__11852_11940 = 0;
              while (true) {
                if (i__11852_11940 < count__11851_11939) {
                  var map__11853_11941 = chunk__11850_11938.cljs$core$IIndexed$_nth$arity$2(null, i__11852_11940);
                  var map__11853_11942__$1 = (!(map__11853_11941 == null) ? map__11853_11941.cljs$lang$protocol_mask$partition0$ & 64 || map__11853_11941.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__11853_11941) : map__11853_11941;
                  var gline_11943 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11853_11942__$1, cljs.core.cst$kw$gline);
                  var gcol_11944 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11853_11942__$1, cljs.core.cst$kw$gcol);
                  var name_11945 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11853_11942__$1, cljs.core.cst$kw$name);
                  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(inverted, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [gline_11943], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(seq__11849_11937, chunk__11850_11938, count__11851_11939, i__11852_11940, seq__11835_11887, chunk__11836_11888, count__11837_11889, i__11838_11890, seq__11830_11880, chunk__11831_11881, count__11832_11882, i__11833_11883, map__11853_11941, map__11853_11942__$1, 
                  gline_11943, gcol_11944, name_11945, vec__11848_11934, column_11935, column_info_11936, seq__11835_11928__$1, temp__4425__auto___11927, vec__11834_11884, line_11885, columns_11886, inverted) {
                    return function(columns__$1) {
                      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(columns__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [column_11935], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$line, line_11885, cljs.core.cst$kw$col, column_11935, cljs.core.cst$kw$name, name_11945], null));
                    };
                  }(seq__11849_11937, chunk__11850_11938, count__11851_11939, i__11852_11940, seq__11835_11887, chunk__11836_11888, count__11837_11889, i__11838_11890, seq__11830_11880, chunk__11831_11881, count__11832_11882, i__11833_11883, map__11853_11941, map__11853_11942__$1, gline_11943, gcol_11944, name_11945, vec__11848_11934, column_11935, column_info_11936, seq__11835_11928__$1, temp__4425__auto___11927, vec__11834_11884, line_11885, columns_11886, inverted), cljs.core.sorted_map()));
                  var G__11946 = seq__11849_11937;
                  var G__11947 = chunk__11850_11938;
                  var G__11948 = count__11851_11939;
                  var G__11949 = i__11852_11940 + 1;
                  seq__11849_11937 = G__11946;
                  chunk__11850_11938 = G__11947;
                  count__11851_11939 = G__11948;
                  i__11852_11940 = G__11949;
                  continue;
                } else {
                  var temp__4425__auto___11950__$1 = cljs.core.seq(seq__11849_11937);
                  if (temp__4425__auto___11950__$1) {
                    var seq__11849_11951__$1 = temp__4425__auto___11950__$1;
                    if (cljs.core.chunked_seq_QMARK_(seq__11849_11951__$1)) {
                      var c__5095__auto___11952 = cljs.core.chunk_first(seq__11849_11951__$1);
                      var G__11953 = cljs.core.chunk_rest(seq__11849_11951__$1);
                      var G__11954 = c__5095__auto___11952;
                      var G__11955 = cljs.core.count(c__5095__auto___11952);
                      var G__11956 = 0;
                      seq__11849_11937 = G__11953;
                      chunk__11850_11938 = G__11954;
                      count__11851_11939 = G__11955;
                      i__11852_11940 = G__11956;
                      continue;
                    } else {
                      var map__11855_11957 = cljs.core.first(seq__11849_11951__$1);
                      var map__11855_11958__$1 = (!(map__11855_11957 == null) ? map__11855_11957.cljs$lang$protocol_mask$partition0$ & 64 || map__11855_11957.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__11855_11957) : map__11855_11957;
                      var gline_11959 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11855_11958__$1, cljs.core.cst$kw$gline);
                      var gcol_11960 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11855_11958__$1, cljs.core.cst$kw$gcol);
                      var name_11961 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11855_11958__$1, cljs.core.cst$kw$name);
                      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(inverted, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [gline_11959], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(seq__11849_11937, chunk__11850_11938, count__11851_11939, i__11852_11940, seq__11835_11887, chunk__11836_11888, count__11837_11889, i__11838_11890, seq__11830_11880, chunk__11831_11881, count__11832_11882, i__11833_11883, map__11855_11957, 
                      map__11855_11958__$1, gline_11959, gcol_11960, name_11961, seq__11849_11951__$1, temp__4425__auto___11950__$1, vec__11848_11934, column_11935, column_info_11936, seq__11835_11928__$1, temp__4425__auto___11927, vec__11834_11884, line_11885, columns_11886, inverted) {
                        return function(columns__$1) {
                          return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(columns__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [column_11935], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$line, line_11885, cljs.core.cst$kw$col, column_11935, cljs.core.cst$kw$name, name_11961], null));
                        };
                      }(seq__11849_11937, chunk__11850_11938, count__11851_11939, i__11852_11940, seq__11835_11887, chunk__11836_11888, count__11837_11889, i__11838_11890, seq__11830_11880, chunk__11831_11881, count__11832_11882, i__11833_11883, map__11855_11957, map__11855_11958__$1, gline_11959, gcol_11960, name_11961, seq__11849_11951__$1, temp__4425__auto___11950__$1, vec__11848_11934, column_11935, column_info_11936, seq__11835_11928__$1, temp__4425__auto___11927, vec__11834_11884, line_11885, 
                      columns_11886, inverted), cljs.core.sorted_map()));
                      var G__11962 = cljs.core.next(seq__11849_11951__$1);
                      var G__11963 = null;
                      var G__11964 = 0;
                      var G__11965 = 0;
                      seq__11849_11937 = G__11962;
                      chunk__11850_11938 = G__11963;
                      count__11851_11939 = G__11964;
                      i__11852_11940 = G__11965;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              var G__11966 = cljs.core.next(seq__11835_11928__$1);
              var G__11967 = null;
              var G__11968 = 0;
              var G__11969 = 0;
              seq__11835_11887 = G__11966;
              chunk__11836_11888 = G__11967;
              count__11837_11889 = G__11968;
              i__11838_11890 = G__11969;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__11970 = seq__11830_11880;
      var G__11971 = chunk__11831_11881;
      var G__11972 = count__11832_11882;
      var G__11973 = i__11833_11883 + 1;
      seq__11830_11880 = G__11970;
      chunk__11831_11881 = G__11971;
      count__11832_11882 = G__11972;
      i__11833_11883 = G__11973;
      continue;
    } else {
      var temp__4425__auto___11974 = cljs.core.seq(seq__11830_11880);
      if (temp__4425__auto___11974) {
        var seq__11830_11975__$1 = temp__4425__auto___11974;
        if (cljs.core.chunked_seq_QMARK_(seq__11830_11975__$1)) {
          var c__5095__auto___11976 = cljs.core.chunk_first(seq__11830_11975__$1);
          var G__11977 = cljs.core.chunk_rest(seq__11830_11975__$1);
          var G__11978 = c__5095__auto___11976;
          var G__11979 = cljs.core.count(c__5095__auto___11976);
          var G__11980 = 0;
          seq__11830_11880 = G__11977;
          chunk__11831_11881 = G__11978;
          count__11832_11882 = G__11979;
          i__11833_11883 = G__11980;
          continue;
        } else {
          var vec__11857_11981 = cljs.core.first(seq__11830_11975__$1);
          var line_11982 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11857_11981, 0, null);
          var columns_11983 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11857_11981, 1, null);
          var seq__11858_11984 = cljs.core.seq(columns_11983);
          var chunk__11859_11985 = null;
          var count__11860_11986 = 0;
          var i__11861_11987 = 0;
          while (true) {
            if (i__11861_11987 < count__11860_11986) {
              var vec__11862_11988 = chunk__11859_11985.cljs$core$IIndexed$_nth$arity$2(null, i__11861_11987);
              var column_11989 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11862_11988, 0, null);
              var column_info_11990 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11862_11988, 1, null);
              var seq__11863_11991 = cljs.core.seq(column_info_11990);
              var chunk__11864_11992 = null;
              var count__11865_11993 = 0;
              var i__11866_11994 = 0;
              while (true) {
                if (i__11866_11994 < count__11865_11993) {
                  var map__11867_11995 = chunk__11864_11992.cljs$core$IIndexed$_nth$arity$2(null, i__11866_11994);
                  var map__11867_11996__$1 = (!(map__11867_11995 == null) ? map__11867_11995.cljs$lang$protocol_mask$partition0$ & 64 || map__11867_11995.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__11867_11995) : map__11867_11995;
                  var gline_11997 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11867_11996__$1, cljs.core.cst$kw$gline);
                  var gcol_11998 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11867_11996__$1, cljs.core.cst$kw$gcol);
                  var name_11999 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11867_11996__$1, cljs.core.cst$kw$name);
                  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(inverted, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [gline_11997], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(seq__11863_11991, chunk__11864_11992, count__11865_11993, i__11866_11994, seq__11858_11984, chunk__11859_11985, count__11860_11986, i__11861_11987, seq__11830_11880, chunk__11831_11881, count__11832_11882, i__11833_11883, map__11867_11995, map__11867_11996__$1, 
                  gline_11997, gcol_11998, name_11999, vec__11862_11988, column_11989, column_info_11990, vec__11857_11981, line_11982, columns_11983, seq__11830_11975__$1, temp__4425__auto___11974, inverted) {
                    return function(columns__$1) {
                      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(columns__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [column_11989], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$line, line_11982, cljs.core.cst$kw$col, column_11989, cljs.core.cst$kw$name, name_11999], null));
                    };
                  }(seq__11863_11991, chunk__11864_11992, count__11865_11993, i__11866_11994, seq__11858_11984, chunk__11859_11985, count__11860_11986, i__11861_11987, seq__11830_11880, chunk__11831_11881, count__11832_11882, i__11833_11883, map__11867_11995, map__11867_11996__$1, gline_11997, gcol_11998, name_11999, vec__11862_11988, column_11989, column_info_11990, vec__11857_11981, line_11982, columns_11983, seq__11830_11975__$1, temp__4425__auto___11974, inverted), cljs.core.sorted_map()));
                  var G__12000 = seq__11863_11991;
                  var G__12001 = chunk__11864_11992;
                  var G__12002 = count__11865_11993;
                  var G__12003 = i__11866_11994 + 1;
                  seq__11863_11991 = G__12000;
                  chunk__11864_11992 = G__12001;
                  count__11865_11993 = G__12002;
                  i__11866_11994 = G__12003;
                  continue;
                } else {
                  var temp__4425__auto___12004__$1 = cljs.core.seq(seq__11863_11991);
                  if (temp__4425__auto___12004__$1) {
                    var seq__11863_12005__$1 = temp__4425__auto___12004__$1;
                    if (cljs.core.chunked_seq_QMARK_(seq__11863_12005__$1)) {
                      var c__5095__auto___12006 = cljs.core.chunk_first(seq__11863_12005__$1);
                      var G__12007 = cljs.core.chunk_rest(seq__11863_12005__$1);
                      var G__12008 = c__5095__auto___12006;
                      var G__12009 = cljs.core.count(c__5095__auto___12006);
                      var G__12010 = 0;
                      seq__11863_11991 = G__12007;
                      chunk__11864_11992 = G__12008;
                      count__11865_11993 = G__12009;
                      i__11866_11994 = G__12010;
                      continue;
                    } else {
                      var map__11869_12011 = cljs.core.first(seq__11863_12005__$1);
                      var map__11869_12012__$1 = (!(map__11869_12011 == null) ? map__11869_12011.cljs$lang$protocol_mask$partition0$ & 64 || map__11869_12011.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__11869_12011) : map__11869_12011;
                      var gline_12013 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11869_12012__$1, cljs.core.cst$kw$gline);
                      var gcol_12014 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11869_12012__$1, cljs.core.cst$kw$gcol);
                      var name_12015 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11869_12012__$1, cljs.core.cst$kw$name);
                      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(inverted, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [gline_12013], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(seq__11863_11991, chunk__11864_11992, count__11865_11993, i__11866_11994, seq__11858_11984, chunk__11859_11985, count__11860_11986, i__11861_11987, seq__11830_11880, chunk__11831_11881, count__11832_11882, i__11833_11883, map__11869_12011, 
                      map__11869_12012__$1, gline_12013, gcol_12014, name_12015, seq__11863_12005__$1, temp__4425__auto___12004__$1, vec__11862_11988, column_11989, column_info_11990, vec__11857_11981, line_11982, columns_11983, seq__11830_11975__$1, temp__4425__auto___11974, inverted) {
                        return function(columns__$1) {
                          return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(columns__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [column_11989], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$line, line_11982, cljs.core.cst$kw$col, column_11989, cljs.core.cst$kw$name, name_12015], null));
                        };
                      }(seq__11863_11991, chunk__11864_11992, count__11865_11993, i__11866_11994, seq__11858_11984, chunk__11859_11985, count__11860_11986, i__11861_11987, seq__11830_11880, chunk__11831_11881, count__11832_11882, i__11833_11883, map__11869_12011, map__11869_12012__$1, gline_12013, gcol_12014, name_12015, seq__11863_12005__$1, temp__4425__auto___12004__$1, vec__11862_11988, column_11989, column_info_11990, vec__11857_11981, line_11982, columns_11983, seq__11830_11975__$1, temp__4425__auto___11974, 
                      inverted), cljs.core.sorted_map()));
                      var G__12016 = cljs.core.next(seq__11863_12005__$1);
                      var G__12017 = null;
                      var G__12018 = 0;
                      var G__12019 = 0;
                      seq__11863_11991 = G__12016;
                      chunk__11864_11992 = G__12017;
                      count__11865_11993 = G__12018;
                      i__11866_11994 = G__12019;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              var G__12020 = seq__11858_11984;
              var G__12021 = chunk__11859_11985;
              var G__12022 = count__11860_11986;
              var G__12023 = i__11861_11987 + 1;
              seq__11858_11984 = G__12020;
              chunk__11859_11985 = G__12021;
              count__11860_11986 = G__12022;
              i__11861_11987 = G__12023;
              continue;
            } else {
              var temp__4425__auto___12024__$1 = cljs.core.seq(seq__11858_11984);
              if (temp__4425__auto___12024__$1) {
                var seq__11858_12025__$1 = temp__4425__auto___12024__$1;
                if (cljs.core.chunked_seq_QMARK_(seq__11858_12025__$1)) {
                  var c__5095__auto___12026 = cljs.core.chunk_first(seq__11858_12025__$1);
                  var G__12027 = cljs.core.chunk_rest(seq__11858_12025__$1);
                  var G__12028 = c__5095__auto___12026;
                  var G__12029 = cljs.core.count(c__5095__auto___12026);
                  var G__12030 = 0;
                  seq__11858_11984 = G__12027;
                  chunk__11859_11985 = G__12028;
                  count__11860_11986 = G__12029;
                  i__11861_11987 = G__12030;
                  continue;
                } else {
                  var vec__11871_12031 = cljs.core.first(seq__11858_12025__$1);
                  var column_12032 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11871_12031, 0, null);
                  var column_info_12033 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11871_12031, 1, null);
                  var seq__11872_12034 = cljs.core.seq(column_info_12033);
                  var chunk__11873_12035 = null;
                  var count__11874_12036 = 0;
                  var i__11875_12037 = 0;
                  while (true) {
                    if (i__11875_12037 < count__11874_12036) {
                      var map__11876_12038 = chunk__11873_12035.cljs$core$IIndexed$_nth$arity$2(null, i__11875_12037);
                      var map__11876_12039__$1 = (!(map__11876_12038 == null) ? map__11876_12038.cljs$lang$protocol_mask$partition0$ & 64 || map__11876_12038.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__11876_12038) : map__11876_12038;
                      var gline_12040 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11876_12039__$1, cljs.core.cst$kw$gline);
                      var gcol_12041 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11876_12039__$1, cljs.core.cst$kw$gcol);
                      var name_12042 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11876_12039__$1, cljs.core.cst$kw$name);
                      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(inverted, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [gline_12040], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(seq__11872_12034, chunk__11873_12035, count__11874_12036, i__11875_12037, seq__11858_11984, chunk__11859_11985, count__11860_11986, i__11861_11987, seq__11830_11880, chunk__11831_11881, count__11832_11882, i__11833_11883, map__11876_12038, 
                      map__11876_12039__$1, gline_12040, gcol_12041, name_12042, vec__11871_12031, column_12032, column_info_12033, seq__11858_12025__$1, temp__4425__auto___12024__$1, vec__11857_11981, line_11982, columns_11983, seq__11830_11975__$1, temp__4425__auto___11974, inverted) {
                        return function(columns__$1) {
                          return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(columns__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [column_12032], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$line, line_11982, cljs.core.cst$kw$col, column_12032, cljs.core.cst$kw$name, name_12042], null));
                        };
                      }(seq__11872_12034, chunk__11873_12035, count__11874_12036, i__11875_12037, seq__11858_11984, chunk__11859_11985, count__11860_11986, i__11861_11987, seq__11830_11880, chunk__11831_11881, count__11832_11882, i__11833_11883, map__11876_12038, map__11876_12039__$1, gline_12040, gcol_12041, name_12042, vec__11871_12031, column_12032, column_info_12033, seq__11858_12025__$1, temp__4425__auto___12024__$1, vec__11857_11981, line_11982, columns_11983, seq__11830_11975__$1, temp__4425__auto___11974, 
                      inverted), cljs.core.sorted_map()));
                      var G__12043 = seq__11872_12034;
                      var G__12044 = chunk__11873_12035;
                      var G__12045 = count__11874_12036;
                      var G__12046 = i__11875_12037 + 1;
                      seq__11872_12034 = G__12043;
                      chunk__11873_12035 = G__12044;
                      count__11874_12036 = G__12045;
                      i__11875_12037 = G__12046;
                      continue;
                    } else {
                      var temp__4425__auto___12047__$2 = cljs.core.seq(seq__11872_12034);
                      if (temp__4425__auto___12047__$2) {
                        var seq__11872_12048__$1 = temp__4425__auto___12047__$2;
                        if (cljs.core.chunked_seq_QMARK_(seq__11872_12048__$1)) {
                          var c__5095__auto___12049 = cljs.core.chunk_first(seq__11872_12048__$1);
                          var G__12050 = cljs.core.chunk_rest(seq__11872_12048__$1);
                          var G__12051 = c__5095__auto___12049;
                          var G__12052 = cljs.core.count(c__5095__auto___12049);
                          var G__12053 = 0;
                          seq__11872_12034 = G__12050;
                          chunk__11873_12035 = G__12051;
                          count__11874_12036 = G__12052;
                          i__11875_12037 = G__12053;
                          continue;
                        } else {
                          var map__11878_12054 = cljs.core.first(seq__11872_12048__$1);
                          var map__11878_12055__$1 = (!(map__11878_12054 == null) ? map__11878_12054.cljs$lang$protocol_mask$partition0$ & 64 || map__11878_12054.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__11878_12054) : map__11878_12054;
                          var gline_12056 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11878_12055__$1, cljs.core.cst$kw$gline);
                          var gcol_12057 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11878_12055__$1, cljs.core.cst$kw$gcol);
                          var name_12058 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11878_12055__$1, cljs.core.cst$kw$name);
                          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(inverted, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [gline_12056], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(seq__11872_12034, chunk__11873_12035, count__11874_12036, i__11875_12037, seq__11858_11984, chunk__11859_11985, count__11860_11986, i__11861_11987, seq__11830_11880, chunk__11831_11881, count__11832_11882, i__11833_11883, map__11878_12054, 
                          map__11878_12055__$1, gline_12056, gcol_12057, name_12058, seq__11872_12048__$1, temp__4425__auto___12047__$2, vec__11871_12031, column_12032, column_info_12033, seq__11858_12025__$1, temp__4425__auto___12024__$1, vec__11857_11981, line_11982, columns_11983, seq__11830_11975__$1, temp__4425__auto___11974, inverted) {
                            return function(columns__$1) {
                              return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(columns__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [column_12032], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$line, line_11982, cljs.core.cst$kw$col, column_12032, cljs.core.cst$kw$name, name_12058], null));
                            };
                          }(seq__11872_12034, chunk__11873_12035, count__11874_12036, i__11875_12037, seq__11858_11984, chunk__11859_11985, count__11860_11986, i__11861_11987, seq__11830_11880, chunk__11831_11881, count__11832_11882, i__11833_11883, map__11878_12054, map__11878_12055__$1, gline_12056, gcol_12057, name_12058, seq__11872_12048__$1, temp__4425__auto___12047__$2, vec__11871_12031, column_12032, column_info_12033, seq__11858_12025__$1, temp__4425__auto___12024__$1, vec__11857_11981, line_11982, 
                          columns_11983, seq__11830_11975__$1, temp__4425__auto___11974, inverted), cljs.core.sorted_map()));
                          var G__12059 = cljs.core.next(seq__11872_12048__$1);
                          var G__12060 = null;
                          var G__12061 = 0;
                          var G__12062 = 0;
                          seq__11872_12034 = G__12059;
                          chunk__11873_12035 = G__12060;
                          count__11874_12036 = G__12061;
                          i__11875_12037 = G__12062;
                          continue;
                        }
                      } else {
                      }
                    }
                    break;
                  }
                  var G__12063 = cljs.core.next(seq__11858_12025__$1);
                  var G__12064 = null;
                  var G__12065 = 0;
                  var G__12066 = 0;
                  seq__11858_11984 = G__12063;
                  chunk__11859_11985 = G__12064;
                  count__11860_11986 = G__12065;
                  i__11861_11987 = G__12066;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__12067 = cljs.core.next(seq__11830_11975__$1);
          var G__12068 = null;
          var G__12069 = 0;
          var G__12070 = 0;
          seq__11830_11880 = G__12067;
          chunk__11831_11881 = G__12068;
          count__11832_11882 = G__12069;
          i__11833_11883 = G__12070;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(inverted) : cljs.core.deref.call(null, inverted);
};
goog.provide("cljs.compiler");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("cljs.tools.reader");
goog.require("cljs.env");
goog.require("cljs.analyzer");
goog.require("cljs.source_map");
goog.require("goog.string.StringBuffer");
goog.require("clojure.string");
cljs.compiler.js_reserved = cljs.analyzer.js_reserved;
cljs.compiler._STAR_dependents_STAR_ = null;
cljs.compiler._STAR_inputs_STAR_ = null;
cljs.compiler._STAR_source_map_data_STAR_ = null;
cljs.compiler._STAR_lexical_renames_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
cljs.compiler.cljs_reserved_file_names = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["deps.cljs", null], null), null);
cljs.compiler.ns_first_segments = function cljs$compiler$ns_first_segments() {
  var get_first_ns_segment = function cljs$compiler$ns_first_segments_$_get_first_ns_segment(ns) {
    return cljs.core.first(clojure.string.split.cljs$core$IFn$_invoke$arity$2([cljs.core.str(ns)].join(""), /\./));
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(get_first_ns_segment, cljs.core.keys(cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces.cljs$core$IFn$_invoke$arity$1(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_))));
};
cljs.compiler.shadow_depth = function cljs$compiler$shadow_depth(s) {
  var map__12093 = s;
  var map__12093__$1 = (!(map__12093 == null) ? map__12093.cljs$lang$protocol_mask$partition0$ & 64 || map__12093.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12093) : map__12093;
  var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12093__$1, cljs.core.cst$kw$name);
  var info = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12093__$1, cljs.core.cst$kw$info);
  var d = 0;
  var G__12096 = info;
  var map__12097 = G__12096;
  var map__12097__$1 = (!(map__12097 == null) ? map__12097.cljs$lang$protocol_mask$partition0$ & 64 || map__12097.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12097) : map__12097;
  var shadow = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12097__$1, cljs.core.cst$kw$shadow);
  var d__$1 = d;
  var G__12096__$1 = G__12096;
  while (true) {
    var d__$2 = d__$1;
    var map__12099 = G__12096__$1;
    var map__12099__$1 = (!(map__12099 == null) ? map__12099.cljs$lang$protocol_mask$partition0$ & 64 || map__12099.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12099) : map__12099;
    var shadow__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12099__$1, cljs.core.cst$kw$shadow);
    if (shadow__$1) {
      var G__12101 = d__$2 + 1;
      var G__12102 = shadow__$1;
      d__$1 = G__12101;
      G__12096__$1 = G__12102;
      continue;
    } else {
      if (cljs.core.some(cljs.core.PersistentHashSet.fromArray([[cljs.core.str(name)].join("")], true), cljs.compiler.ns_first_segments())) {
        return d__$2 + 1;
      } else {
        return d__$2;
      }
    }
    break;
  }
};
cljs.compiler.fn_self_name = function cljs$compiler$fn_self_name(p__12103) {
  var map__12109 = p__12103;
  var map__12109__$1 = (!(map__12109 == null) ? map__12109.cljs$lang$protocol_mask$partition0$ & 64 || map__12109.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12109) : map__12109;
  var name_var = map__12109__$1;
  var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12109__$1, cljs.core.cst$kw$name);
  var info = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12109__$1, cljs.core.cst$kw$info);
  var name__$1 = clojure.string.replace([cljs.core.str(name)].join(""), "..", "_DOT__DOT_");
  var map__12111 = info;
  var map__12111__$1 = (!(map__12111 == null) ? map__12111.cljs$lang$protocol_mask$partition0$ & 64 || map__12111.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12111) : map__12111;
  var ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12111__$1, cljs.core.cst$kw$ns);
  var fn_scope = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12111__$1, cljs.core.cst$kw$fn_DASH_scope);
  var scoped_name = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.interpose.cljs$core$IFn$_invoke$arity$2("_$_", cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.cst$kw$name), fn_scope), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [name__$1], null))));
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(function() {
    var G__12113 = [cljs.core.str(clojure.string.replace([cljs.core.str(ns)].join(""), ".", "$")), cljs.core.str("$"), cljs.core.str(scoped_name)].join("");
    return cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1 ? cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(G__12113) : cljs.compiler.munge.call(null, G__12113);
  }());
};
cljs.compiler.munge_reserved = function cljs$compiler$munge_reserved(reserved) {
  return function(s) {
    if (!(cljs.core.get.cljs$core$IFn$_invoke$arity$2(reserved, s) == null)) {
      return [cljs.core.str(s), cljs.core.str("$")].join("");
    } else {
      return s;
    }
  };
};
cljs.compiler.munge = function cljs$compiler$munge() {
  var args12114 = [];
  var len__5350__auto___12117 = arguments.length;
  var i__5351__auto___12118 = 0;
  while (true) {
    if (i__5351__auto___12118 < len__5350__auto___12117) {
      args12114.push(arguments[i__5351__auto___12118]);
      var G__12119 = i__5351__auto___12118 + 1;
      i__5351__auto___12118 = G__12119;
      continue;
    } else {
    }
    break;
  }
  var G__12116 = args12114.length;
  switch(G__12116) {
    case 1:
      return cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.compiler.munge.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args12114.length)].join(""));;
  }
};
cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.compiler.munge.cljs$core$IFn$_invoke$arity$2(s, cljs.compiler.js_reserved);
};
cljs.compiler.munge.cljs$core$IFn$_invoke$arity$2 = function(s, reserved) {
  if (cljs.analyzer.cljs_map_QMARK_(s)) {
    var name_var = s;
    var name = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(name_var);
    var field = cljs.core.cst$kw$field.cljs$core$IFn$_invoke$arity$1(name_var);
    var info = cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(name_var);
    if (!(cljs.core.cst$kw$fn_DASH_self_DASH_name.cljs$core$IFn$_invoke$arity$1(info) == null)) {
      return cljs.compiler.fn_self_name(s);
    } else {
      var depth = cljs.compiler.shadow_depth(s);
      var code = cljs.core._hash(name);
      var renamed = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.compiler._STAR_lexical_renames_STAR_, code);
      var name__$1 = field === true ? [cljs.core.str("self__."), cljs.core.str(name)].join("") : !(renamed == null) ? renamed : name;
      var munged_name = cljs.compiler.munge.cljs$core$IFn$_invoke$arity$2(name__$1, reserved);
      if (field === true || depth === 0) {
        return munged_name;
      } else {
        return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(munged_name), cljs.core.str("__$"), cljs.core.str(depth)].join(""));
      }
    }
  } else {
    var ss = clojure.string.replace([cljs.core.str(s)].join(""), "..", "_DOT__DOT_");
    var ss__$1 = clojure.string.replace(ss, new RegExp("\\/(.)"), ".$1");
    var rf = cljs.compiler.munge_reserved(reserved);
    var ss__$2 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(rf, clojure.string.split.cljs$core$IFn$_invoke$arity$2(ss__$1, /\./));
    var ss__$3 = clojure.string.join.cljs$core$IFn$_invoke$arity$2(".", ss__$2);
    var ms = cljs.core.munge(ss__$3);
    if (s instanceof cljs.core.Symbol) {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(ms);
    } else {
      return ms;
    }
  }
};
cljs.compiler.munge.cljs$lang$maxFixedArity = 2;
cljs.compiler.comma_sep = function cljs$compiler$comma_sep(xs) {
  return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(",", xs);
};
cljs.compiler.escape_char = function cljs$compiler$escape_char(c) {
  var cp = goog.string.hashCode(c);
  var G__12122 = cp;
  switch(G__12122) {
    case 34:
      return '\\"';
      break;
    case 92:
      return "\\\\";
      break;
    case 8:
      return "\\b";
      break;
    case 12:
      return "\\f";
      break;
    case 10:
      return "\\n";
      break;
    case 13:
      return "\\r";
      break;
    case 9:
      return "\\t";
      break;
    default:
      if (31 < cp && cp < 127) {
        return c;
      } else {
        return [cljs.core.str("\\u"), cljs.core.str(cp.toString(16))].join("");
      }
    ;
  }
};
cljs.compiler.escape_string = function cljs$compiler$escape_string(s) {
  var sb = new goog.string.StringBuffer;
  var seq__12128_12132 = cljs.core.seq(s);
  var chunk__12129_12133 = null;
  var count__12130_12134 = 0;
  var i__12131_12135 = 0;
  while (true) {
    if (i__12131_12135 < count__12130_12134) {
      var c_12136 = chunk__12129_12133.cljs$core$IIndexed$_nth$arity$2(null, i__12131_12135);
      sb.append(cljs.compiler.escape_char(c_12136));
      var G__12137 = seq__12128_12132;
      var G__12138 = chunk__12129_12133;
      var G__12139 = count__12130_12134;
      var G__12140 = i__12131_12135 + 1;
      seq__12128_12132 = G__12137;
      chunk__12129_12133 = G__12138;
      count__12130_12134 = G__12139;
      i__12131_12135 = G__12140;
      continue;
    } else {
      var temp__4425__auto___12141 = cljs.core.seq(seq__12128_12132);
      if (temp__4425__auto___12141) {
        var seq__12128_12142__$1 = temp__4425__auto___12141;
        if (cljs.core.chunked_seq_QMARK_(seq__12128_12142__$1)) {
          var c__5095__auto___12143 = cljs.core.chunk_first(seq__12128_12142__$1);
          var G__12144 = cljs.core.chunk_rest(seq__12128_12142__$1);
          var G__12145 = c__5095__auto___12143;
          var G__12146 = cljs.core.count(c__5095__auto___12143);
          var G__12147 = 0;
          seq__12128_12132 = G__12144;
          chunk__12129_12133 = G__12145;
          count__12130_12134 = G__12146;
          i__12131_12135 = G__12147;
          continue;
        } else {
          var c_12148 = cljs.core.first(seq__12128_12142__$1);
          sb.append(cljs.compiler.escape_char(c_12148));
          var G__12149 = cljs.core.next(seq__12128_12142__$1);
          var G__12150 = null;
          var G__12151 = 0;
          var G__12152 = 0;
          seq__12128_12132 = G__12149;
          chunk__12129_12133 = G__12150;
          count__12130_12134 = G__12151;
          i__12131_12135 = G__12152;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return sb.toString();
};
cljs.compiler.wrap_in_double_quotes = function cljs$compiler$wrap_in_double_quotes(x) {
  return [cljs.core.str('"'), cljs.core.str(x), cljs.core.str('"')].join("");
};
if (typeof cljs.compiler.emit_STAR_ !== "undefined") {
} else {
  cljs.compiler.emit_STAR_ = function() {
    var method_table__5205__auto__ = function() {
      var G__12153 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__12153) : cljs.core.atom.call(null, G__12153);
    }();
    var prefer_table__5206__auto__ = function() {
      var G__12154 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__12154) : cljs.core.atom.call(null, G__12154);
    }();
    var method_cache__5207__auto__ = function() {
      var G__12155 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__12155) : cljs.core.atom.call(null, G__12155);
    }();
    var cached_hierarchy__5208__auto__ = function() {
      var G__12156 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__12156) : cljs.core.atom.call(null, G__12156);
    }();
    var hierarchy__5209__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY, cljs.core.cst$kw$hierarchy, cljs.core.get_global_hierarchy());
    return new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("cljs.compiler", "emit*"), cljs.core.cst$kw$op, cljs.core.cst$kw$default, hierarchy__5209__auto__, method_table__5205__auto__, prefer_table__5206__auto__, method_cache__5207__auto__, cached_hierarchy__5208__auto__);
  }();
}
cljs.compiler.emit = function cljs$compiler$emit(ast) {
  var val__5746__auto__ = cljs.env._STAR_compiler_STAR_;
  if (val__5746__auto__ == null) {
    cljs.env._STAR_compiler_STAR_ = cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0();
  } else {
  }
  try {
    if (cljs.compiler._STAR_source_map_data_STAR_) {
      var map__12162_12167 = ast;
      var map__12162_12168__$1 = (!(map__12162_12167 == null) ? map__12162_12167.cljs$lang$protocol_mask$partition0$ & 64 || map__12162_12167.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12162_12167) : map__12162_12167;
      var env_12169 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12162_12168__$1, cljs.core.cst$kw$env);
      if (cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1(env_12169)) {
        var map__12164_12170 = env_12169;
        var map__12164_12171__$1 = (!(map__12164_12170 == null) ? map__12164_12170.cljs$lang$protocol_mask$partition0$ & 64 || map__12164_12170.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12164_12170) : map__12164_12170;
        var line_12172 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12164_12171__$1, cljs.core.cst$kw$line);
        var column_12173 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12164_12171__$1, cljs.core.cst$kw$column);
        cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.compiler._STAR_source_map_data_STAR_, function(map__12164_12170, map__12164_12171__$1, line_12172, column_12173, map__12162_12167, map__12162_12168__$1, env_12169, val__5746__auto__) {
          return function(m) {
            var minfo = function() {
              var G__12166 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$gcol, cljs.core.cst$kw$gen_DASH_col.cljs$core$IFn$_invoke$arity$1(m), cljs.core.cst$kw$gline, cljs.core.cst$kw$gen_DASH_line.cljs$core$IFn$_invoke$arity$1(m)], null);
              var G__12166__$1 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(ast), cljs.core.cst$kw$var) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__12166, cljs.core.cst$kw$name, [cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(ast)))].join("")) : G__12166;
              return G__12166__$1;
            }();
            return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(m, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$source_DASH_map, line_12172 - 1], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(minfo, map__12164_12170, map__12164_12171__$1, line_12172, column_12173, map__12162_12167, map__12162_12168__$1, env_12169, val__5746__auto__) {
              return function(line__$1) {
                return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(line__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [column_12173 ? column_12173 - 1 : 0], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(function(minfo, map__12164_12170, map__12164_12171__$1, line_12172, column_12173, map__12162_12167, map__12162_12168__$1, env_12169, val__5746__auto__) {
                  return function(column__$1) {
                    return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(column__$1, minfo);
                  };
                }(minfo, map__12164_12170, map__12164_12171__$1, line_12172, column_12173, map__12162_12167, map__12162_12168__$1, env_12169, val__5746__auto__), cljs.core.PersistentVector.EMPTY));
              };
            }(minfo, map__12164_12170, map__12164_12171__$1, line_12172, column_12173, map__12162_12167, map__12162_12168__$1, env_12169, val__5746__auto__), cljs.core.sorted_map()));
          };
        }(map__12164_12170, map__12164_12171__$1, line_12172, column_12173, map__12162_12167, map__12162_12168__$1, env_12169, val__5746__auto__));
      } else {
      }
    } else {
    }
    return cljs.compiler.emit_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.compiler.emit_STAR_.cljs$core$IFn$_invoke$arity$1(ast) : cljs.compiler.emit_STAR_.call(null, ast);
  } finally {
    if (val__5746__auto__ == null) {
      cljs.env._STAR_compiler_STAR_ = null;
    } else {
    }
  }
};
cljs.compiler.emits = function cljs$compiler$emits() {
  var args__5357__auto__ = [];
  var len__5350__auto___12180 = arguments.length;
  var i__5351__auto___12181 = 0;
  while (true) {
    if (i__5351__auto___12181 < len__5350__auto___12180) {
      args__5357__auto__.push(arguments[i__5351__auto___12181]);
      var G__12182 = i__5351__auto___12181 + 1;
      i__5351__auto___12181 = G__12182;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 0 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(0), 0) : null;
  return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(argseq__5358__auto__);
};
cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var seq__12176_12183 = cljs.core.seq(xs);
  var chunk__12177_12184 = null;
  var count__12178_12185 = 0;
  var i__12179_12186 = 0;
  while (true) {
    if (i__12179_12186 < count__12178_12185) {
      var x_12187 = chunk__12177_12184.cljs$core$IIndexed$_nth$arity$2(null, i__12179_12186);
      if (x_12187 == null) {
      } else {
        if (cljs.analyzer.cljs_map_QMARK_(x_12187)) {
          cljs.compiler.emit(x_12187);
        } else {
          if (cljs.analyzer.cljs_seq_QMARK_(x_12187)) {
            cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.compiler.emits, x_12187);
          } else {
            if (goog.isFunction(x_12187)) {
              x_12187.cljs$core$IFn$_invoke$arity$0 ? x_12187.cljs$core$IFn$_invoke$arity$0() : x_12187.call(null);
            } else {
              var s_12188 = cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([x_12187], 0));
              if (cljs.compiler._STAR_source_map_data_STAR_ == null) {
              } else {
                cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.compiler._STAR_source_map_data_STAR_, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$gen_DASH_col], null), function(seq__12176_12183, chunk__12177_12184, count__12178_12185, i__12179_12186, s_12188, x_12187) {
                  return function(p1__12174_SHARP_) {
                    return p1__12174_SHARP_ + cljs.core.count(s_12188);
                  };
                }(seq__12176_12183, chunk__12177_12184, count__12178_12185, i__12179_12186, s_12188, x_12187));
              }
              cljs.core.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([s_12188], 0));
            }
          }
        }
      }
      var G__12189 = seq__12176_12183;
      var G__12190 = chunk__12177_12184;
      var G__12191 = count__12178_12185;
      var G__12192 = i__12179_12186 + 1;
      seq__12176_12183 = G__12189;
      chunk__12177_12184 = G__12190;
      count__12178_12185 = G__12191;
      i__12179_12186 = G__12192;
      continue;
    } else {
      var temp__4425__auto___12193 = cljs.core.seq(seq__12176_12183);
      if (temp__4425__auto___12193) {
        var seq__12176_12194__$1 = temp__4425__auto___12193;
        if (cljs.core.chunked_seq_QMARK_(seq__12176_12194__$1)) {
          var c__5095__auto___12195 = cljs.core.chunk_first(seq__12176_12194__$1);
          var G__12196 = cljs.core.chunk_rest(seq__12176_12194__$1);
          var G__12197 = c__5095__auto___12195;
          var G__12198 = cljs.core.count(c__5095__auto___12195);
          var G__12199 = 0;
          seq__12176_12183 = G__12196;
          chunk__12177_12184 = G__12197;
          count__12178_12185 = G__12198;
          i__12179_12186 = G__12199;
          continue;
        } else {
          var x_12200 = cljs.core.first(seq__12176_12194__$1);
          if (x_12200 == null) {
          } else {
            if (cljs.analyzer.cljs_map_QMARK_(x_12200)) {
              cljs.compiler.emit(x_12200);
            } else {
              if (cljs.analyzer.cljs_seq_QMARK_(x_12200)) {
                cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.compiler.emits, x_12200);
              } else {
                if (goog.isFunction(x_12200)) {
                  x_12200.cljs$core$IFn$_invoke$arity$0 ? x_12200.cljs$core$IFn$_invoke$arity$0() : x_12200.call(null);
                } else {
                  var s_12201 = cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([x_12200], 0));
                  if (cljs.compiler._STAR_source_map_data_STAR_ == null) {
                  } else {
                    cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.compiler._STAR_source_map_data_STAR_, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$gen_DASH_col], null), function(seq__12176_12183, chunk__12177_12184, count__12178_12185, i__12179_12186, s_12201, x_12200, seq__12176_12194__$1, temp__4425__auto___12193) {
                      return function(p1__12174_SHARP_) {
                        return p1__12174_SHARP_ + cljs.core.count(s_12201);
                      };
                    }(seq__12176_12183, chunk__12177_12184, count__12178_12185, i__12179_12186, s_12201, x_12200, seq__12176_12194__$1, temp__4425__auto___12193));
                  }
                  cljs.core.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([s_12201], 0));
                }
              }
            }
          }
          var G__12202 = cljs.core.next(seq__12176_12194__$1);
          var G__12203 = null;
          var G__12204 = 0;
          var G__12205 = 0;
          seq__12176_12183 = G__12202;
          chunk__12177_12184 = G__12203;
          count__12178_12185 = G__12204;
          i__12179_12186 = G__12205;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return null;
};
cljs.compiler.emits.cljs$lang$maxFixedArity = 0;
cljs.compiler.emits.cljs$lang$applyTo = function(seq12175) {
  return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12175));
};
cljs.compiler.emitln = function cljs$compiler$emitln() {
  var args__5357__auto__ = [];
  var len__5350__auto___12210 = arguments.length;
  var i__5351__auto___12211 = 0;
  while (true) {
    if (i__5351__auto___12211 < len__5350__auto___12210) {
      args__5357__auto__.push(arguments[i__5351__auto___12211]);
      var G__12212 = i__5351__auto___12211 + 1;
      i__5351__auto___12211 = G__12212;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 0 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(0), 0) : null;
  return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(argseq__5358__auto__);
};
cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.compiler.emits, xs);
  cljs.core.println();
  if (cljs.compiler._STAR_source_map_data_STAR_) {
    cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.compiler._STAR_source_map_data_STAR_, function(p__12207) {
      var map__12208 = p__12207;
      var map__12208__$1 = (!(map__12208 == null) ? map__12208.cljs$lang$protocol_mask$partition0$ & 64 || map__12208.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12208) : map__12208;
      var m = map__12208__$1;
      var gen_line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12208__$1, cljs.core.cst$kw$gen_DASH_line);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(m, cljs.core.cst$kw$gen_DASH_line, gen_line + 1, cljs.core.array_seq([cljs.core.cst$kw$gen_DASH_col, 0], 0));
    });
  } else {
  }
  return null;
};
cljs.compiler.emitln.cljs$lang$maxFixedArity = 0;
cljs.compiler.emitln.cljs$lang$applyTo = function(seq12206) {
  return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12206));
};
cljs.compiler.emit_str = function cljs$compiler$emit_str(expr) {
  var sb__5266__auto__ = new goog.string.StringBuffer;
  var _STAR_print_newline_STAR_12215_12217 = cljs.core._STAR_print_newline_STAR_;
  var _STAR_print_fn_STAR_12216_12218 = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_newline_STAR_ = true;
  cljs.core._STAR_print_fn_STAR_ = function(_STAR_print_newline_STAR_12215_12217, _STAR_print_fn_STAR_12216_12218, sb__5266__auto__) {
    return function(x__5267__auto__) {
      return sb__5266__auto__.append(x__5267__auto__);
    };
  }(_STAR_print_newline_STAR_12215_12217, _STAR_print_fn_STAR_12216_12218, sb__5266__auto__);
  try {
    cljs.compiler.emit(expr);
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_12216_12218;
    cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_12215_12217;
  }
  return [cljs.core.str(sb__5266__auto__)].join("");
};
if (typeof cljs.compiler.emit_constant !== "undefined") {
} else {
  cljs.compiler.emit_constant = function() {
    var method_table__5205__auto__ = function() {
      var G__12219 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__12219) : cljs.core.atom.call(null, G__12219);
    }();
    var prefer_table__5206__auto__ = function() {
      var G__12220 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__12220) : cljs.core.atom.call(null, G__12220);
    }();
    var method_cache__5207__auto__ = function() {
      var G__12221 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__12221) : cljs.core.atom.call(null, G__12221);
    }();
    var cached_hierarchy__5208__auto__ = function() {
      var G__12222 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__12222) : cljs.core.atom.call(null, G__12222);
    }();
    var hierarchy__5209__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY, cljs.core.cst$kw$hierarchy, cljs.core.get_global_hierarchy());
    return new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("cljs.compiler", "emit-constant"), cljs.core.type, cljs.core.cst$kw$default, hierarchy__5209__auto__, method_table__5205__auto__, prefer_table__5206__auto__, method_cache__5207__auto__, cached_hierarchy__5208__auto__);
  }();
}
cljs.compiler.emit_constant.cljs$core$IMultiFn$_add_method$arity$3(null, null, function(x) {
  return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["null"], 0));
});
cljs.compiler.emit_constant.cljs$core$IMultiFn$_add_method$arity$3(null, Number, function(x) {
  return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([x], 0));
});
cljs.compiler.emit_constant.cljs$core$IMultiFn$_add_method$arity$3(null, String, function(x) {
  return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.compiler.wrap_in_double_quotes(cljs.compiler.escape_string(x))], 0));
});
cljs.compiler.emit_constant.cljs$core$IMultiFn$_add_method$arity$3(null, Boolean, function(x) {
  return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([x ? "true" : "false"], 0));
});
cljs.compiler.emit_constant.cljs$core$IMultiFn$_add_method$arity$3(null, RegExp, function(x) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2("", [cljs.core.str(x)].join(""))) {
    return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(['(new RegExp(""))'], 0));
  } else {
    var vec__12223 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/, [cljs.core.str(x)].join(""));
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12223, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12223, 1, null);
    var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12223, 2, null);
    return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([pattern], 0));
  }
});
cljs.compiler.emits_keyword = function cljs$compiler$emits_keyword(kw) {
  var ns = cljs.core.namespace(kw);
  var name = cljs.core.name(kw);
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["new cljs.core.Keyword("], 0));
  cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1 ? cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1(ns) : cljs.compiler.emit_constant.call(null, ns);
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
  cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1 ? cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1(name) : cljs.compiler.emit_constant.call(null, name);
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
  var G__12226_12228 = ns ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1 ? cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1(G__12226_12228) : cljs.compiler.emit_constant.call(null, G__12226_12228);
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
  var G__12227_12229 = cljs.core.hash(kw);
  cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1 ? cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1(G__12227_12229) : cljs.compiler.emit_constant.call(null, G__12227_12229);
  return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([")"], 0));
};
cljs.compiler.emits_symbol = function cljs$compiler$emits_symbol(sym) {
  var ns = cljs.core.namespace(sym);
  var name = cljs.core.name(sym);
  var symstr = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["new cljs.core.Symbol("], 0));
  cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1 ? cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1(ns) : cljs.compiler.emit_constant.call(null, ns);
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
  cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1 ? cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1(name) : cljs.compiler.emit_constant.call(null, name);
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
  cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1 ? cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1(symstr) : cljs.compiler.emit_constant.call(null, symstr);
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
  var G__12231_12232 = cljs.core.hash(sym);
  cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1 ? cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1(G__12231_12232) : cljs.compiler.emit_constant.call(null, G__12231_12232);
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
  cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1 ? cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1(null) : cljs.compiler.emit_constant.call(null, null);
  return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([")"], 0));
};
cljs.compiler.emit_constant.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.Keyword, function(x) {
  if (cljs.core.cst$kw$emit_DASH_constants.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$options.cljs$core$IFn$_invoke$arity$1(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_)))) {
    var value = function() {
      var G__12233 = cljs.core.cst$kw$cljs$analyzer_SLASH_constant_DASH_table.cljs$core$IFn$_invoke$arity$1(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_));
      return x.cljs$core$IFn$_invoke$arity$1 ? x.cljs$core$IFn$_invoke$arity$1(G__12233) : x.call(null, G__12233);
    }();
    return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cljs.core.", value], 0));
  } else {
    return cljs.compiler.emits_keyword(x);
  }
});
cljs.compiler.emit_constant.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.Symbol, function(x) {
  if (cljs.core.cst$kw$emit_DASH_constants.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$options.cljs$core$IFn$_invoke$arity$1(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_)))) {
    var value = function() {
      var G__12234 = cljs.core.cst$kw$cljs$analyzer_SLASH_constant_DASH_table.cljs$core$IFn$_invoke$arity$1(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_));
      return x.cljs$core$IFn$_invoke$arity$1 ? x.cljs$core$IFn$_invoke$arity$1(G__12234) : x.call(null, G__12234);
    }();
    return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cljs.core.", value], 0));
  } else {
    return cljs.compiler.emits_symbol(x);
  }
});
cljs.compiler.emit_constant.cljs$core$IMultiFn$_add_method$arity$3(null, Date, function(date) {
  return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["new Date(", date.getTime(), ")"], 0));
});
cljs.compiler.emit_constant.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.UUID, function(uuid) {
  return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(['new cljs.core.UUID("', uuid.toString(), '")'], 0));
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$no_DASH_op, function(m) {
  return null;
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$var, function(p__12236) {
  var map__12237 = p__12236;
  var map__12237__$1 = (!(map__12237 == null) ? map__12237.cljs$lang$protocol_mask$partition0$ & 64 || map__12237.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12237) : map__12237;
  var arg = map__12237__$1;
  var info = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12237__$1, cljs.core.cst$kw$info);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12237__$1, cljs.core.cst$kw$env);
  var form = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12237__$1, cljs.core.cst$kw$form);
  var var_name = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(info);
  var info__$1 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(var_name), "js") ? function() {
    var js_module_name = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$js_DASH_module_DASH_index, cljs.core.name(var_name)], null));
    var or__4311__auto__ = js_module_name;
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return cljs.core.name(var_name);
    }
  }() : info;
  if (cljs.core.cst$kw$binding_DASH_form_QMARK_.cljs$core$IFn$_invoke$arity$1(arg)) {
    return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(arg)], 0));
  } else {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$statement, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
      return null;
    } else {
      var env__6652__auto__ = env;
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
        cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
      } else {
      }
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([function() {
        var G__12239 = info__$1;
        var G__12239__$1 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(form, cljs.core.cst$sym$js_SLASH__DASH_Infinity) ? cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(G__12239) : G__12239;
        return G__12239__$1;
      }()], 0));
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
        return null;
      } else {
        return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
      }
    }
  }
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$var_DASH_special, function(p__12240) {
  var map__12241 = p__12240;
  var map__12241__$1 = (!(map__12241 == null) ? map__12241.cljs$lang$protocol_mask$partition0$ & 64 || map__12241.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12241) : map__12241;
  var arg = map__12241__$1;
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12241__$1, cljs.core.cst$kw$env);
  var var$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12241__$1, cljs.core.cst$kw$var);
  var sym = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12241__$1, cljs.core.cst$kw$sym);
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12241__$1, cljs.core.cst$kw$meta);
  if (cljs.analyzer.ast_QMARK_(sym)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$ana_SLASH_ast_QMARK_, cljs.core.cst$sym$sym)], 0)))].join(""));
  }
  if (cljs.analyzer.ast_QMARK_(meta)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$ana_SLASH_ast_QMARK_, cljs.core.cst$sym$meta)], 0)))].join(""));
  }
  var map__12243 = cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(var$);
  var map__12243__$1 = (!(map__12243 == null) ? map__12243.cljs$lang$protocol_mask$partition0$ & 64 || map__12243.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12243) : map__12243;
  var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12243__$1, cljs.core.cst$kw$name);
  var env__6652__auto__ = env;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
  } else {
  }
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["new cljs.core.Var(function(){return ", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(name), ";},", sym, ",", meta, ")"], 0));
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    return null;
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$meta, function(p__12245) {
  var map__12246 = p__12245;
  var map__12246__$1 = (!(map__12246 == null) ? map__12246.cljs$lang$protocol_mask$partition0$ & 64 || map__12246.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12246) : map__12246;
  var expr = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12246__$1, cljs.core.cst$kw$expr);
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12246__$1, cljs.core.cst$kw$meta);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12246__$1, cljs.core.cst$kw$env);
  var env__6652__auto__ = env;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
  } else {
  }
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cljs.core.with_meta(", expr, ",", meta, ")"], 0));
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    return null;
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
});
cljs.compiler.array_map_threshold = 8;
cljs.compiler.distinct_keys_QMARK_ = function cljs$compiler$distinct_keys_QMARK_(keys) {
  return cljs.core.every_QMARK_(function(p1__12248_SHARP_) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(p1__12248_SHARP_), cljs.core.cst$kw$constant);
  }, keys) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY, keys)), cljs.core.count(keys));
};
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$map, function(p__12249) {
  var map__12250 = p__12249;
  var map__12250__$1 = (!(map__12250 == null) ? map__12250.cljs$lang$protocol_mask$partition0$ & 64 || map__12250.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12250) : map__12250;
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12250__$1, cljs.core.cst$kw$env);
  var keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12250__$1, cljs.core.cst$kw$keys);
  var vals = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12250__$1, cljs.core.cst$kw$vals);
  var env__6652__auto__ = env;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
  } else {
  }
  if (cljs.core.count(keys) === 0) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cljs.core.PersistentArrayMap.EMPTY"], 0));
  } else {
    if (cljs.core.count(keys) <= cljs.compiler.array_map_threshold) {
      if (cljs.compiler.distinct_keys_QMARK_(keys)) {
        cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["new cljs.core.PersistentArrayMap(null, ", cljs.core.count(keys), ", [", cljs.compiler.comma_sep(cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(keys, vals)), "], null)"], 0));
      } else {
        cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["new cljs.core.PersistentArrayMap.fromArray([", cljs.compiler.comma_sep(cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(keys, vals)), "], true, false)"], 0));
      }
    } else {
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cljs.core.PersistentHashMap.fromArrays([", cljs.compiler.comma_sep(keys), "],[", cljs.compiler.comma_sep(vals), "])"], 0));
    }
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    return null;
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$list, function(p__12252) {
  var map__12253 = p__12252;
  var map__12253__$1 = (!(map__12253 == null) ? map__12253.cljs$lang$protocol_mask$partition0$ & 64 || map__12253.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12253) : map__12253;
  var items = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12253__$1, cljs.core.cst$kw$items);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12253__$1, cljs.core.cst$kw$env);
  var env__6652__auto__ = env;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
  } else {
  }
  if (cljs.core.empty_QMARK_(items)) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cljs.core.List.EMPTY"], 0));
  } else {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cljs.core.list(", cljs.compiler.comma_sep(items), ")"], 0));
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    return null;
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$vector, function(p__12255) {
  var map__12256 = p__12255;
  var map__12256__$1 = (!(map__12256 == null) ? map__12256.cljs$lang$protocol_mask$partition0$ & 64 || map__12256.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12256) : map__12256;
  var items = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12256__$1, cljs.core.cst$kw$items);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12256__$1, cljs.core.cst$kw$env);
  var env__6652__auto__ = env;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
  } else {
  }
  if (cljs.core.empty_QMARK_(items)) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cljs.core.PersistentVector.EMPTY"], 0));
  } else {
    var cnt_12258 = cljs.core.count(items);
    if (cnt_12258 < 32) {
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["new cljs.core.PersistentVector(null, ", cnt_12258, ", 5, cljs.core.PersistentVector.EMPTY_NODE, [", cljs.compiler.comma_sep(items), "], null)"], 0));
    } else {
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cljs.core.PersistentVector.fromArray([", cljs.compiler.comma_sep(items), "], true)"], 0));
    }
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    return null;
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
});
cljs.compiler.distinct_constants_QMARK_ = function cljs$compiler$distinct_constants_QMARK_(items) {
  return cljs.core.every_QMARK_(function(p1__12259_SHARP_) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(p1__12259_SHARP_), cljs.core.cst$kw$constant);
  }, items) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY, items)), cljs.core.count(items));
};
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$set, function(p__12260) {
  var map__12261 = p__12260;
  var map__12261__$1 = (!(map__12261 == null) ? map__12261.cljs$lang$protocol_mask$partition0$ & 64 || map__12261.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12261) : map__12261;
  var items = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12261__$1, cljs.core.cst$kw$items);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12261__$1, cljs.core.cst$kw$env);
  var env__6652__auto__ = env;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
  } else {
  }
  if (cljs.core.empty_QMARK_(items)) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cljs.core.PersistentHashSet.EMPTY"], 0));
  } else {
    if (cljs.compiler.distinct_constants_QMARK_(items)) {
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, ", cljs.core.count(items), ", [", cljs.compiler.comma_sep(cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(items, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1("null"))), "], null), null)"], 0));
    } else {
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cljs.core.PersistentHashSet.fromArray([", cljs.compiler.comma_sep(items), "], true)"], 0));
    }
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    return null;
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$js_DASH_value, function(p__12263) {
  var map__12264 = p__12263;
  var map__12264__$1 = (!(map__12264 == null) ? map__12264.cljs$lang$protocol_mask$partition0$ & 64 || map__12264.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12264) : map__12264;
  var items = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12264__$1, cljs.core.cst$kw$items);
  var js_type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12264__$1, cljs.core.cst$kw$js_DASH_type);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12264__$1, cljs.core.cst$kw$env);
  var env__6652__auto__ = env;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
  } else {
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(js_type, cljs.core.cst$kw$object)) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["{"], 0));
    var temp__4425__auto___12274 = cljs.core.seq(items);
    if (temp__4425__auto___12274) {
      var items_12275__$1 = temp__4425__auto___12274;
      var vec__12266_12276 = items_12275__$1;
      var vec__12267_12277 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12266_12276, 0, null);
      var k_12278 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12267_12277, 0, null);
      var v_12279 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12267_12277, 1, null);
      var r_12280 = cljs.core.nthnext(vec__12266_12276, 1);
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(['"', cljs.core.name(k_12278), '": ', v_12279], 0));
      var seq__12268_12281 = cljs.core.seq(r_12280);
      var chunk__12269_12282 = null;
      var count__12270_12283 = 0;
      var i__12271_12284 = 0;
      while (true) {
        if (i__12271_12284 < count__12270_12283) {
          var vec__12272_12285 = chunk__12269_12282.cljs$core$IIndexed$_nth$arity$2(null, i__12271_12284);
          var k_12286__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12272_12285, 0, null);
          var v_12287__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12272_12285, 1, null);
          cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([', "', cljs.core.name(k_12286__$1), '": ', v_12287__$1], 0));
          var G__12288 = seq__12268_12281;
          var G__12289 = chunk__12269_12282;
          var G__12290 = count__12270_12283;
          var G__12291 = i__12271_12284 + 1;
          seq__12268_12281 = G__12288;
          chunk__12269_12282 = G__12289;
          count__12270_12283 = G__12290;
          i__12271_12284 = G__12291;
          continue;
        } else {
          var temp__4425__auto___12292__$1 = cljs.core.seq(seq__12268_12281);
          if (temp__4425__auto___12292__$1) {
            var seq__12268_12293__$1 = temp__4425__auto___12292__$1;
            if (cljs.core.chunked_seq_QMARK_(seq__12268_12293__$1)) {
              var c__5095__auto___12294 = cljs.core.chunk_first(seq__12268_12293__$1);
              var G__12295 = cljs.core.chunk_rest(seq__12268_12293__$1);
              var G__12296 = c__5095__auto___12294;
              var G__12297 = cljs.core.count(c__5095__auto___12294);
              var G__12298 = 0;
              seq__12268_12281 = G__12295;
              chunk__12269_12282 = G__12296;
              count__12270_12283 = G__12297;
              i__12271_12284 = G__12298;
              continue;
            } else {
              var vec__12273_12299 = cljs.core.first(seq__12268_12293__$1);
              var k_12300__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12273_12299, 0, null);
              var v_12301__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12273_12299, 1, null);
              cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([', "', cljs.core.name(k_12300__$1), '": ', v_12301__$1], 0));
              var G__12302 = cljs.core.next(seq__12268_12293__$1);
              var G__12303 = null;
              var G__12304 = 0;
              var G__12305 = 0;
              seq__12268_12281 = G__12302;
              chunk__12269_12282 = G__12303;
              count__12270_12283 = G__12304;
              i__12271_12284 = G__12305;
              continue;
            }
          } else {
          }
        }
        break;
      }
    } else {
    }
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["}"], 0));
  } else {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["[", cljs.compiler.comma_sep(items), "]"], 0));
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    return null;
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$constant, function(p__12306) {
  var map__12307 = p__12306;
  var map__12307__$1 = (!(map__12307 == null) ? map__12307.cljs$lang$protocol_mask$partition0$ & 64 || map__12307.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12307) : map__12307;
  var form = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12307__$1, cljs.core.cst$kw$form);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12307__$1, cljs.core.cst$kw$env);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$statement, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
    return null;
  } else {
    var env__6652__auto__ = env;
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
    } else {
    }
    cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1 ? cljs.compiler.emit_constant.cljs$core$IFn$_invoke$arity$1(form) : cljs.compiler.emit_constant.call(null, form);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
      return null;
    } else {
      return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
    }
  }
});
cljs.compiler.truthy_constant_QMARK_ = function cljs$compiler$truthy_constant_QMARK_(p__12309) {
  var map__12312 = p__12309;
  var map__12312__$1 = (!(map__12312 == null) ? map__12312.cljs$lang$protocol_mask$partition0$ & 64 || map__12312.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12312) : map__12312;
  var op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12312__$1, cljs.core.cst$kw$op);
  var form = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12312__$1, cljs.core.cst$kw$form);
  var and__4299__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(op, cljs.core.cst$kw$constant);
  if (and__4299__auto__) {
    var and__4299__auto____$1 = form;
    if (and__4299__auto____$1) {
      return !(typeof form === "string" && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(form, "") || typeof form === "number" && form === 0);
    } else {
      return and__4299__auto____$1;
    }
  } else {
    return and__4299__auto__;
  }
};
cljs.compiler.falsey_constant_QMARK_ = function cljs$compiler$falsey_constant_QMARK_(p__12314) {
  var map__12317 = p__12314;
  var map__12317__$1 = (!(map__12317 == null) ? map__12317.cljs$lang$protocol_mask$partition0$ & 64 || map__12317.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12317) : map__12317;
  var op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12317__$1, cljs.core.cst$kw$op);
  var form = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12317__$1, cljs.core.cst$kw$form);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(op, cljs.core.cst$kw$constant) && (form === false || form == null);
};
cljs.compiler.safe_test_QMARK_ = function cljs$compiler$safe_test_QMARK_(env, e) {
  var tag = cljs.analyzer.infer_tag(env, e);
  var or__4311__auto__ = (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$sym$seq, null, cljs.core.cst$sym$boolean, null], null), null)).call(null, tag);
  if (or__4311__auto__) {
    return or__4311__auto__;
  } else {
    return cljs.compiler.truthy_constant_QMARK_(e);
  }
};
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$if, function(p__12319) {
  var map__12320 = p__12319;
  var map__12320__$1 = (!(map__12320 == null) ? map__12320.cljs$lang$protocol_mask$partition0$ & 64 || map__12320.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12320) : map__12320;
  var test = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12320__$1, cljs.core.cst$kw$test);
  var then = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12320__$1, cljs.core.cst$kw$then);
  var else$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12320__$1, cljs.core.cst$kw$else);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12320__$1, cljs.core.cst$kw$env);
  var unchecked = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12320__$1, cljs.core.cst$kw$unchecked);
  var context = cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env);
  var checked = cljs.core.not(function() {
    var or__4311__auto__ = unchecked;
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return cljs.compiler.safe_test_QMARK_(env, test);
    }
  }());
  if (cljs.compiler.truthy_constant_QMARK_(test)) {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([then], 0));
  } else {
    if (cljs.compiler.falsey_constant_QMARK_(test)) {
      return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([else$], 0));
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, context)) {
        return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(", checked ? "cljs.core.truth_" : null, "(", test, ")?", then, ":", else$, ")"], 0));
      } else {
        if (checked) {
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["if(cljs.core.truth_(", test, ")){"], 0));
        } else {
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["if(", test, "){"], 0));
        }
        cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([then, "} else {"], 0));
        return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([else$, "}"], 0));
      }
    }
  }
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$case_STAR_, function(p__12322) {
  var map__12323 = p__12322;
  var map__12323__$1 = (!(map__12323 == null) ? map__12323.cljs$lang$protocol_mask$partition0$ & 64 || map__12323.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12323) : map__12323;
  var v = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12323__$1, cljs.core.cst$kw$v);
  var tests = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12323__$1, cljs.core.cst$kw$tests);
  var thens = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12323__$1, cljs.core.cst$kw$thens);
  var default$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12323__$1, cljs.core.cst$kw$default);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12323__$1, cljs.core.cst$kw$env);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env), cljs.core.cst$kw$expr)) {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(function(){"], 0));
  } else {
  }
  var gs = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("caseval__");
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var ", gs, ";"], 0));
  } else {
  }
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["switch (", v, ") {"], 0));
  var seq__12325_12339 = cljs.core.seq(cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(tests, thens)));
  var chunk__12326_12340 = null;
  var count__12327_12341 = 0;
  var i__12328_12342 = 0;
  while (true) {
    if (i__12328_12342 < count__12327_12341) {
      var vec__12329_12343 = chunk__12326_12340.cljs$core$IIndexed$_nth$arity$2(null, i__12328_12342);
      var ts_12344 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12329_12343, 0, null);
      var then_12345 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12329_12343, 1, null);
      var seq__12330_12346 = cljs.core.seq(ts_12344);
      var chunk__12331_12347 = null;
      var count__12332_12348 = 0;
      var i__12333_12349 = 0;
      while (true) {
        if (i__12333_12349 < count__12332_12348) {
          var test_12350 = chunk__12331_12347.cljs$core$IIndexed$_nth$arity$2(null, i__12333_12349);
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["case ", test_12350, ":"], 0));
          var G__12351 = seq__12330_12346;
          var G__12352 = chunk__12331_12347;
          var G__12353 = count__12332_12348;
          var G__12354 = i__12333_12349 + 1;
          seq__12330_12346 = G__12351;
          chunk__12331_12347 = G__12352;
          count__12332_12348 = G__12353;
          i__12333_12349 = G__12354;
          continue;
        } else {
          var temp__4425__auto___12355 = cljs.core.seq(seq__12330_12346);
          if (temp__4425__auto___12355) {
            var seq__12330_12356__$1 = temp__4425__auto___12355;
            if (cljs.core.chunked_seq_QMARK_(seq__12330_12356__$1)) {
              var c__5095__auto___12357 = cljs.core.chunk_first(seq__12330_12356__$1);
              var G__12358 = cljs.core.chunk_rest(seq__12330_12356__$1);
              var G__12359 = c__5095__auto___12357;
              var G__12360 = cljs.core.count(c__5095__auto___12357);
              var G__12361 = 0;
              seq__12330_12346 = G__12358;
              chunk__12331_12347 = G__12359;
              count__12332_12348 = G__12360;
              i__12333_12349 = G__12361;
              continue;
            } else {
              var test_12362 = cljs.core.first(seq__12330_12356__$1);
              cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["case ", test_12362, ":"], 0));
              var G__12363 = cljs.core.next(seq__12330_12356__$1);
              var G__12364 = null;
              var G__12365 = 0;
              var G__12366 = 0;
              seq__12330_12346 = G__12363;
              chunk__12331_12347 = G__12364;
              count__12332_12348 = G__12365;
              i__12333_12349 = G__12366;
              continue;
            }
          } else {
          }
        }
        break;
      }
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
        cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([gs, "=", then_12345], 0));
      } else {
        cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([then_12345], 0));
      }
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["break;"], 0));
      var G__12367 = seq__12325_12339;
      var G__12368 = chunk__12326_12340;
      var G__12369 = count__12327_12341;
      var G__12370 = i__12328_12342 + 1;
      seq__12325_12339 = G__12367;
      chunk__12326_12340 = G__12368;
      count__12327_12341 = G__12369;
      i__12328_12342 = G__12370;
      continue;
    } else {
      var temp__4425__auto___12371 = cljs.core.seq(seq__12325_12339);
      if (temp__4425__auto___12371) {
        var seq__12325_12372__$1 = temp__4425__auto___12371;
        if (cljs.core.chunked_seq_QMARK_(seq__12325_12372__$1)) {
          var c__5095__auto___12373 = cljs.core.chunk_first(seq__12325_12372__$1);
          var G__12374 = cljs.core.chunk_rest(seq__12325_12372__$1);
          var G__12375 = c__5095__auto___12373;
          var G__12376 = cljs.core.count(c__5095__auto___12373);
          var G__12377 = 0;
          seq__12325_12339 = G__12374;
          chunk__12326_12340 = G__12375;
          count__12327_12341 = G__12376;
          i__12328_12342 = G__12377;
          continue;
        } else {
          var vec__12334_12378 = cljs.core.first(seq__12325_12372__$1);
          var ts_12379 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12334_12378, 0, null);
          var then_12380 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12334_12378, 1, null);
          var seq__12335_12381 = cljs.core.seq(ts_12379);
          var chunk__12336_12382 = null;
          var count__12337_12383 = 0;
          var i__12338_12384 = 0;
          while (true) {
            if (i__12338_12384 < count__12337_12383) {
              var test_12385 = chunk__12336_12382.cljs$core$IIndexed$_nth$arity$2(null, i__12338_12384);
              cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["case ", test_12385, ":"], 0));
              var G__12386 = seq__12335_12381;
              var G__12387 = chunk__12336_12382;
              var G__12388 = count__12337_12383;
              var G__12389 = i__12338_12384 + 1;
              seq__12335_12381 = G__12386;
              chunk__12336_12382 = G__12387;
              count__12337_12383 = G__12388;
              i__12338_12384 = G__12389;
              continue;
            } else {
              var temp__4425__auto___12390__$1 = cljs.core.seq(seq__12335_12381);
              if (temp__4425__auto___12390__$1) {
                var seq__12335_12391__$1 = temp__4425__auto___12390__$1;
                if (cljs.core.chunked_seq_QMARK_(seq__12335_12391__$1)) {
                  var c__5095__auto___12392 = cljs.core.chunk_first(seq__12335_12391__$1);
                  var G__12393 = cljs.core.chunk_rest(seq__12335_12391__$1);
                  var G__12394 = c__5095__auto___12392;
                  var G__12395 = cljs.core.count(c__5095__auto___12392);
                  var G__12396 = 0;
                  seq__12335_12381 = G__12393;
                  chunk__12336_12382 = G__12394;
                  count__12337_12383 = G__12395;
                  i__12338_12384 = G__12396;
                  continue;
                } else {
                  var test_12397 = cljs.core.first(seq__12335_12391__$1);
                  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["case ", test_12397, ":"], 0));
                  var G__12398 = cljs.core.next(seq__12335_12391__$1);
                  var G__12399 = null;
                  var G__12400 = 0;
                  var G__12401 = 0;
                  seq__12335_12381 = G__12398;
                  chunk__12336_12382 = G__12399;
                  count__12337_12383 = G__12400;
                  i__12338_12384 = G__12401;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([gs, "=", then_12380], 0));
          } else {
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([then_12380], 0));
          }
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["break;"], 0));
          var G__12402 = cljs.core.next(seq__12325_12372__$1);
          var G__12403 = null;
          var G__12404 = 0;
          var G__12405 = 0;
          seq__12325_12339 = G__12402;
          chunk__12326_12340 = G__12403;
          count__12327_12341 = G__12404;
          i__12328_12342 = G__12405;
          continue;
        }
      } else {
      }
    }
    break;
  }
  if (default$) {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["default:"], 0));
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([gs, "=", default$], 0));
    } else {
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([default$], 0));
    }
  } else {
  }
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["}"], 0));
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return ", gs, ";})()"], 0));
  } else {
    return null;
  }
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$throw, function(p__12406) {
  var map__12407 = p__12406;
  var map__12407__$1 = (!(map__12407 == null) ? map__12407.cljs$lang$protocol_mask$partition0$ & 64 || map__12407.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12407) : map__12407;
  var throw$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12407__$1, cljs.core.cst$kw$throw);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12407__$1, cljs.core.cst$kw$env);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
    return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(function(){throw ", throw$, "})()"], 0));
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["throw ", throw$, ";"], 0));
  }
});
cljs.compiler.emit_comment = function cljs$compiler$emit_comment(doc, jsdoc) {
  var docs = doc ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [doc], null) : null;
  var docs__$1 = jsdoc ? cljs.core.concat.cljs$core$IFn$_invoke$arity$2(docs, jsdoc) : docs;
  var docs__$2 = cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_, docs__$1);
  var print_comment_lines = function(docs, docs__$1, docs__$2) {
    return function cljs$compiler$emit_comment_$_print_comment_lines(e) {
      var seq__12441 = cljs.core.seq(clojure.string.split_lines(e));
      var chunk__12442 = null;
      var count__12443 = 0;
      var i__12444 = 0;
      while (true) {
        if (i__12444 < count__12443) {
          var next_line = chunk__12442.cljs$core$IIndexed$_nth$arity$2(null, i__12444);
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" * ", clojure.string.replace(clojure.string.trim(next_line), "*/", "* /")], 0));
          var G__12449 = seq__12441;
          var G__12450 = chunk__12442;
          var G__12451 = count__12443;
          var G__12452 = i__12444 + 1;
          seq__12441 = G__12449;
          chunk__12442 = G__12450;
          count__12443 = G__12451;
          i__12444 = G__12452;
          continue;
        } else {
          var temp__4425__auto__ = cljs.core.seq(seq__12441);
          if (temp__4425__auto__) {
            var seq__12441__$1 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_(seq__12441__$1)) {
              var c__5095__auto__ = cljs.core.chunk_first(seq__12441__$1);
              var G__12453 = cljs.core.chunk_rest(seq__12441__$1);
              var G__12454 = c__5095__auto__;
              var G__12455 = cljs.core.count(c__5095__auto__);
              var G__12456 = 0;
              seq__12441 = G__12453;
              chunk__12442 = G__12454;
              count__12443 = G__12455;
              i__12444 = G__12456;
              continue;
            } else {
              var next_line = cljs.core.first(seq__12441__$1);
              cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" * ", clojure.string.replace(clojure.string.trim(next_line), "*/", "* /")], 0));
              var G__12457 = cljs.core.next(seq__12441__$1);
              var G__12458 = null;
              var G__12459 = 0;
              var G__12460 = 0;
              seq__12441 = G__12457;
              chunk__12442 = G__12458;
              count__12443 = G__12459;
              i__12444 = G__12460;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    };
  }(docs, docs__$1, docs__$2);
  if (cljs.core.seq(docs__$2)) {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["/**"], 0));
    var seq__12445_12461 = cljs.core.seq(docs__$2);
    var chunk__12446_12462 = null;
    var count__12447_12463 = 0;
    var i__12448_12464 = 0;
    while (true) {
      if (i__12448_12464 < count__12447_12463) {
        var e_12465 = chunk__12446_12462.cljs$core$IIndexed$_nth$arity$2(null, i__12448_12464);
        if (e_12465) {
          print_comment_lines(e_12465);
        } else {
        }
        var G__12466 = seq__12445_12461;
        var G__12467 = chunk__12446_12462;
        var G__12468 = count__12447_12463;
        var G__12469 = i__12448_12464 + 1;
        seq__12445_12461 = G__12466;
        chunk__12446_12462 = G__12467;
        count__12447_12463 = G__12468;
        i__12448_12464 = G__12469;
        continue;
      } else {
        var temp__4425__auto___12470 = cljs.core.seq(seq__12445_12461);
        if (temp__4425__auto___12470) {
          var seq__12445_12471__$1 = temp__4425__auto___12470;
          if (cljs.core.chunked_seq_QMARK_(seq__12445_12471__$1)) {
            var c__5095__auto___12472 = cljs.core.chunk_first(seq__12445_12471__$1);
            var G__12473 = cljs.core.chunk_rest(seq__12445_12471__$1);
            var G__12474 = c__5095__auto___12472;
            var G__12475 = cljs.core.count(c__5095__auto___12472);
            var G__12476 = 0;
            seq__12445_12461 = G__12473;
            chunk__12446_12462 = G__12474;
            count__12447_12463 = G__12475;
            i__12448_12464 = G__12476;
            continue;
          } else {
            var e_12477 = cljs.core.first(seq__12445_12471__$1);
            if (e_12477) {
              print_comment_lines(e_12477);
            } else {
            }
            var G__12478 = cljs.core.next(seq__12445_12471__$1);
            var G__12479 = null;
            var G__12480 = 0;
            var G__12481 = 0;
            seq__12445_12461 = G__12478;
            chunk__12446_12462 = G__12479;
            count__12447_12463 = G__12480;
            i__12448_12464 = G__12481;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" */"], 0));
  } else {
    return null;
  }
};
cljs.compiler.valid_define_value_QMARK_ = function cljs$compiler$valid_define_value_QMARK_(x) {
  return typeof x === "string" || x === true || x === false || typeof x === "number";
};
cljs.compiler.get_define = function cljs$compiler$get_define(mname, jsdoc) {
  var opts = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), cljs.core.cst$kw$options);
  var and__4299__auto__ = cljs.core.some(function(opts) {
    return function(p1__12483_SHARP_) {
      return goog.string.startsWith(p1__12483_SHARP_, "@define");
    };
  }(opts), jsdoc);
  if (and__4299__auto__) {
    var and__4299__auto____$1 = opts;
    if (and__4299__auto____$1) {
      var and__4299__auto____$2 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$optimizations.cljs$core$IFn$_invoke$arity$1(opts), cljs.core.cst$kw$none);
      if (and__4299__auto____$2) {
        var define = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$closure_DASH_defines, [cljs.core.str(mname)].join("")], null));
        if (cljs.compiler.valid_define_value_QMARK_(define)) {
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([define], 0));
        } else {
          return null;
        }
      } else {
        return and__4299__auto____$2;
      }
    } else {
      return and__4299__auto____$1;
    }
  } else {
    return and__4299__auto__;
  }
};
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$def, function(p__12484) {
  var map__12485 = p__12484;
  var map__12485__$1 = (!(map__12485 == null) ? map__12485.cljs$lang$protocol_mask$partition0$ & 64 || map__12485.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12485) : map__12485;
  var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12485__$1, cljs.core.cst$kw$name);
  var var$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12485__$1, cljs.core.cst$kw$var);
  var init = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12485__$1, cljs.core.cst$kw$init);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12485__$1, cljs.core.cst$kw$env);
  var doc = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12485__$1, cljs.core.cst$kw$doc);
  var jsdoc = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12485__$1, cljs.core.cst$kw$jsdoc);
  var export$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12485__$1, cljs.core.cst$kw$export);
  var test = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12485__$1, cljs.core.cst$kw$test);
  var var_ast = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12485__$1, cljs.core.cst$kw$var_DASH_ast);
  var mname = cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(name);
  if (init) {
    cljs.compiler.emit_comment(doc, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(jsdoc, cljs.core.cst$kw$jsdoc.cljs$core$IFn$_invoke$arity$1(init)));
    if (cljs.core.cst$kw$def_DASH_emits_DASH_var.cljs$core$IFn$_invoke$arity$1(env)) {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
        cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return ("], 0));
      } else {
      }
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(function (){"], 0));
    } else {
    }
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([var$], 0));
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" = ", function() {
      var temp__4423__auto__ = cljs.compiler.get_define(mname, jsdoc);
      if (temp__4423__auto__) {
        var define = temp__4423__auto__;
        return define;
      } else {
        return init;
      }
    }()], 0));
    if (cljs.core.cst$kw$def_DASH_emits_DASH_var.cljs$core$IFn$_invoke$arity$1(env)) {
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["; return ("], 0));
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$op, cljs.core.cst$kw$var_DASH_special, cljs.core.cst$kw$env, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env, cljs.core.cst$kw$context, cljs.core.cst$kw$expr)], null), var_ast], 0))], 0));
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([");})()"], 0));
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
        cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([")"], 0));
      } else {
      }
    } else {
    }
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
    } else {
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
    }
    if (export$) {
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["goog.exportSymbol('", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(export$), "', ", mname, ");"], 0));
    } else {
    }
    if (function() {
      var and__4299__auto__ = cljs.analyzer._STAR_load_tests_STAR_;
      if (and__4299__auto__) {
        return test;
      } else {
        return and__4299__auto__;
      }
    }()) {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
        cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
      } else {
      }
      return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([var$, ".cljs$lang$test = ", test, ";"], 0));
    } else {
      return null;
    }
  } else {
    return null;
  }
});
cljs.compiler.emit_apply_to = function cljs$compiler$emit_apply_to(p__12487) {
  var map__12504 = p__12487;
  var map__12504__$1 = (!(map__12504 == null) ? map__12504.cljs$lang$protocol_mask$partition0$ & 64 || map__12504.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12504) : map__12504;
  var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12504__$1, cljs.core.cst$kw$name);
  var params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12504__$1, cljs.core.cst$kw$params);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12504__$1, cljs.core.cst$kw$env);
  var arglist = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("arglist__");
  var delegate_name = [cljs.core.str(cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(name)), cljs.core.str("__delegate")].join("");
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(function (", arglist, "){"], 0));
  var seq__12506_12520 = cljs.core.seq(cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(cljs.core.vector, cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(2, params)));
  var chunk__12507_12521 = null;
  var count__12508_12522 = 0;
  var i__12509_12523 = 0;
  while (true) {
    if (i__12509_12523 < count__12508_12522) {
      var vec__12510_12524 = chunk__12507_12521.cljs$core$IIndexed$_nth$arity$2(null, i__12509_12523);
      var i_12525 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12510_12524, 0, null);
      var param_12526 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12510_12524, 1, null);
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var "], 0));
      cljs.compiler.emit(param_12526);
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" = cljs.core.first("], 0));
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([arglist, ");"], 0));
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([arglist, " = cljs.core.next(", arglist, ");"], 0));
      var G__12527 = seq__12506_12520;
      var G__12528 = chunk__12507_12521;
      var G__12529 = count__12508_12522;
      var G__12530 = i__12509_12523 + 1;
      seq__12506_12520 = G__12527;
      chunk__12507_12521 = G__12528;
      count__12508_12522 = G__12529;
      i__12509_12523 = G__12530;
      continue;
    } else {
      var temp__4425__auto___12531 = cljs.core.seq(seq__12506_12520);
      if (temp__4425__auto___12531) {
        var seq__12506_12532__$1 = temp__4425__auto___12531;
        if (cljs.core.chunked_seq_QMARK_(seq__12506_12532__$1)) {
          var c__5095__auto___12533 = cljs.core.chunk_first(seq__12506_12532__$1);
          var G__12534 = cljs.core.chunk_rest(seq__12506_12532__$1);
          var G__12535 = c__5095__auto___12533;
          var G__12536 = cljs.core.count(c__5095__auto___12533);
          var G__12537 = 0;
          seq__12506_12520 = G__12534;
          chunk__12507_12521 = G__12535;
          count__12508_12522 = G__12536;
          i__12509_12523 = G__12537;
          continue;
        } else {
          var vec__12511_12538 = cljs.core.first(seq__12506_12532__$1);
          var i_12539 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12511_12538, 0, null);
          var param_12540 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12511_12538, 1, null);
          cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var "], 0));
          cljs.compiler.emit(param_12540);
          cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" = cljs.core.first("], 0));
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([arglist, ");"], 0));
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([arglist, " = cljs.core.next(", arglist, ");"], 0));
          var G__12541 = cljs.core.next(seq__12506_12532__$1);
          var G__12542 = null;
          var G__12543 = 0;
          var G__12544 = 0;
          seq__12506_12520 = G__12541;
          chunk__12507_12521 = G__12542;
          count__12508_12522 = G__12543;
          i__12509_12523 = G__12544;
          continue;
        }
      } else {
      }
    }
    break;
  }
  if (1 < cljs.core.count(params)) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var "], 0));
    cljs.compiler.emit(cljs.core.last(cljs.core.butlast(params)));
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" = cljs.core.first(", arglist, ");"], 0));
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var "], 0));
    cljs.compiler.emit(cljs.core.last(params));
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" = cljs.core.rest(", arglist, ");"], 0));
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return ", delegate_name, "("], 0));
    var seq__12512_12545 = cljs.core.seq(params);
    var chunk__12513_12546 = null;
    var count__12514_12547 = 0;
    var i__12515_12548 = 0;
    while (true) {
      if (i__12515_12548 < count__12514_12547) {
        var param_12549 = chunk__12513_12546.cljs$core$IIndexed$_nth$arity$2(null, i__12515_12548);
        cljs.compiler.emit(param_12549);
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(param_12549, cljs.core.last(params))) {
        } else {
          cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
        }
        var G__12550 = seq__12512_12545;
        var G__12551 = chunk__12513_12546;
        var G__12552 = count__12514_12547;
        var G__12553 = i__12515_12548 + 1;
        seq__12512_12545 = G__12550;
        chunk__12513_12546 = G__12551;
        count__12514_12547 = G__12552;
        i__12515_12548 = G__12553;
        continue;
      } else {
        var temp__4425__auto___12554 = cljs.core.seq(seq__12512_12545);
        if (temp__4425__auto___12554) {
          var seq__12512_12555__$1 = temp__4425__auto___12554;
          if (cljs.core.chunked_seq_QMARK_(seq__12512_12555__$1)) {
            var c__5095__auto___12556 = cljs.core.chunk_first(seq__12512_12555__$1);
            var G__12557 = cljs.core.chunk_rest(seq__12512_12555__$1);
            var G__12558 = c__5095__auto___12556;
            var G__12559 = cljs.core.count(c__5095__auto___12556);
            var G__12560 = 0;
            seq__12512_12545 = G__12557;
            chunk__12513_12546 = G__12558;
            count__12514_12547 = G__12559;
            i__12515_12548 = G__12560;
            continue;
          } else {
            var param_12561 = cljs.core.first(seq__12512_12555__$1);
            cljs.compiler.emit(param_12561);
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(param_12561, cljs.core.last(params))) {
            } else {
              cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
            }
            var G__12562 = cljs.core.next(seq__12512_12555__$1);
            var G__12563 = null;
            var G__12564 = 0;
            var G__12565 = 0;
            seq__12512_12545 = G__12562;
            chunk__12513_12546 = G__12563;
            count__12514_12547 = G__12564;
            i__12515_12548 = G__12565;
            continue;
          }
        } else {
        }
      }
      break;
    }
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([");"], 0));
  } else {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var "], 0));
    cljs.compiler.emit(cljs.core.last(params));
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" = cljs.core.seq(", arglist, ");"], 0));
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return ", delegate_name, "("], 0));
    var seq__12516_12566 = cljs.core.seq(params);
    var chunk__12517_12567 = null;
    var count__12518_12568 = 0;
    var i__12519_12569 = 0;
    while (true) {
      if (i__12519_12569 < count__12518_12568) {
        var param_12570 = chunk__12517_12567.cljs$core$IIndexed$_nth$arity$2(null, i__12519_12569);
        cljs.compiler.emit(param_12570);
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(param_12570, cljs.core.last(params))) {
        } else {
          cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
        }
        var G__12571 = seq__12516_12566;
        var G__12572 = chunk__12517_12567;
        var G__12573 = count__12518_12568;
        var G__12574 = i__12519_12569 + 1;
        seq__12516_12566 = G__12571;
        chunk__12517_12567 = G__12572;
        count__12518_12568 = G__12573;
        i__12519_12569 = G__12574;
        continue;
      } else {
        var temp__4425__auto___12575 = cljs.core.seq(seq__12516_12566);
        if (temp__4425__auto___12575) {
          var seq__12516_12576__$1 = temp__4425__auto___12575;
          if (cljs.core.chunked_seq_QMARK_(seq__12516_12576__$1)) {
            var c__5095__auto___12577 = cljs.core.chunk_first(seq__12516_12576__$1);
            var G__12578 = cljs.core.chunk_rest(seq__12516_12576__$1);
            var G__12579 = c__5095__auto___12577;
            var G__12580 = cljs.core.count(c__5095__auto___12577);
            var G__12581 = 0;
            seq__12516_12566 = G__12578;
            chunk__12517_12567 = G__12579;
            count__12518_12568 = G__12580;
            i__12519_12569 = G__12581;
            continue;
          } else {
            var param_12582 = cljs.core.first(seq__12516_12576__$1);
            cljs.compiler.emit(param_12582);
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(param_12582, cljs.core.last(params))) {
            } else {
              cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
            }
            var G__12583 = cljs.core.next(seq__12516_12576__$1);
            var G__12584 = null;
            var G__12585 = 0;
            var G__12586 = 0;
            seq__12516_12566 = G__12583;
            chunk__12517_12567 = G__12584;
            count__12518_12568 = G__12585;
            i__12519_12569 = G__12586;
            continue;
          }
        } else {
        }
      }
      break;
    }
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([");"], 0));
  }
  return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["})"], 0));
};
cljs.compiler.emit_fn_params = function cljs$compiler$emit_fn_params(params) {
  var seq__12591 = cljs.core.seq(params);
  var chunk__12592 = null;
  var count__12593 = 0;
  var i__12594 = 0;
  while (true) {
    if (i__12594 < count__12593) {
      var param = chunk__12592.cljs$core$IIndexed$_nth$arity$2(null, i__12594);
      cljs.compiler.emit(param);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(param, cljs.core.last(params))) {
      } else {
        cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
      }
      var G__12595 = seq__12591;
      var G__12596 = chunk__12592;
      var G__12597 = count__12593;
      var G__12598 = i__12594 + 1;
      seq__12591 = G__12595;
      chunk__12592 = G__12596;
      count__12593 = G__12597;
      i__12594 = G__12598;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__12591);
      if (temp__4425__auto__) {
        var seq__12591__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__12591__$1)) {
          var c__5095__auto__ = cljs.core.chunk_first(seq__12591__$1);
          var G__12599 = cljs.core.chunk_rest(seq__12591__$1);
          var G__12600 = c__5095__auto__;
          var G__12601 = cljs.core.count(c__5095__auto__);
          var G__12602 = 0;
          seq__12591 = G__12599;
          chunk__12592 = G__12600;
          count__12593 = G__12601;
          i__12594 = G__12602;
          continue;
        } else {
          var param = cljs.core.first(seq__12591__$1);
          cljs.compiler.emit(param);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(param, cljs.core.last(params))) {
          } else {
            cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
          }
          var G__12603 = cljs.core.next(seq__12591__$1);
          var G__12604 = null;
          var G__12605 = 0;
          var G__12606 = 0;
          seq__12591 = G__12603;
          chunk__12592 = G__12604;
          count__12593 = G__12605;
          i__12594 = G__12606;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.compiler.emit_fn_method = function cljs$compiler$emit_fn_method(p__12607) {
  var map__12610 = p__12607;
  var map__12610__$1 = (!(map__12610 == null) ? map__12610.cljs$lang$protocol_mask$partition0$ & 64 || map__12610.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12610) : map__12610;
  var type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12610__$1, cljs.core.cst$kw$type);
  var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12610__$1, cljs.core.cst$kw$name);
  var variadic = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12610__$1, cljs.core.cst$kw$variadic);
  var params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12610__$1, cljs.core.cst$kw$params);
  var expr = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12610__$1, cljs.core.cst$kw$expr);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12610__$1, cljs.core.cst$kw$env);
  var recurs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12610__$1, cljs.core.cst$kw$recurs);
  var max_fixed_arity = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12610__$1, cljs.core.cst$kw$max_DASH_fixed_DASH_arity);
  var env__6652__auto__ = env;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
  } else {
  }
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(function ", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(name), "("], 0));
  cljs.compiler.emit_fn_params(params);
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["){"], 0));
  if (type) {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var self__ = this;"], 0));
  } else {
  }
  if (recurs) {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["while(true){"], 0));
  } else {
  }
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([expr], 0));
  if (recurs) {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["break;"], 0));
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["}"], 0));
  } else {
  }
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["})"], 0));
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    return null;
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
};
cljs.compiler.emit_arguments_to_array = function cljs$compiler$emit_arguments_to_array(startslice) {
  if (startslice >= 0 && cljs.core.integer_QMARK_(startslice)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$and, cljs.core.list(cljs.core.cst$sym$_GT__EQ_, cljs.core.cst$sym$startslice, 0), cljs.core.list(cljs.core.cst$sym$integer_QMARK_, cljs.core.cst$sym$startslice))], 0)))].join(""));
  }
  var mname = cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym.cljs$core$IFn$_invoke$arity$0());
  var i = [cljs.core.str(mname), cljs.core.str("__i")].join("");
  var a = [cljs.core.str(mname), cljs.core.str("__a")].join("");
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var ", i, " = 0, ", a, " = new Array(arguments.length -  ", startslice, ");"], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["while (", i, " < ", a, ".length) {", a, "[", i, "] = arguments[", i, " + ", startslice, "]; ++", i, ";}"], 0));
  return a;
};
cljs.compiler.emit_variadic_fn_method = function cljs$compiler$emit_variadic_fn_method(p__12612) {
  var map__12623 = p__12612;
  var map__12623__$1 = (!(map__12623 == null) ? map__12623.cljs$lang$protocol_mask$partition0$ & 64 || map__12623.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12623) : map__12623;
  var f = map__12623__$1;
  var type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12623__$1, cljs.core.cst$kw$type);
  var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12623__$1, cljs.core.cst$kw$name);
  var variadic = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12623__$1, cljs.core.cst$kw$variadic);
  var params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12623__$1, cljs.core.cst$kw$params);
  var expr = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12623__$1, cljs.core.cst$kw$expr);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12623__$1, cljs.core.cst$kw$env);
  var recurs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12623__$1, cljs.core.cst$kw$recurs);
  var max_fixed_arity = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12623__$1, cljs.core.cst$kw$max_DASH_fixed_DASH_arity);
  var env__6652__auto__ = env;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
  } else {
  }
  var name_12633__$1 = function() {
    var or__4311__auto__ = name;
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
    }
  }();
  var mname_12634 = cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(name_12633__$1);
  var delegate_name_12635 = [cljs.core.str(mname_12634), cljs.core.str("__delegate")].join("");
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(function() { "], 0));
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var ", delegate_name_12635, " = function ("], 0));
  var seq__12625_12636 = cljs.core.seq(params);
  var chunk__12626_12637 = null;
  var count__12627_12638 = 0;
  var i__12628_12639 = 0;
  while (true) {
    if (i__12628_12639 < count__12627_12638) {
      var param_12640 = chunk__12626_12637.cljs$core$IIndexed$_nth$arity$2(null, i__12628_12639);
      cljs.compiler.emit(param_12640);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(param_12640, cljs.core.last(params))) {
      } else {
        cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
      }
      var G__12641 = seq__12625_12636;
      var G__12642 = chunk__12626_12637;
      var G__12643 = count__12627_12638;
      var G__12644 = i__12628_12639 + 1;
      seq__12625_12636 = G__12641;
      chunk__12626_12637 = G__12642;
      count__12627_12638 = G__12643;
      i__12628_12639 = G__12644;
      continue;
    } else {
      var temp__4425__auto___12645 = cljs.core.seq(seq__12625_12636);
      if (temp__4425__auto___12645) {
        var seq__12625_12646__$1 = temp__4425__auto___12645;
        if (cljs.core.chunked_seq_QMARK_(seq__12625_12646__$1)) {
          var c__5095__auto___12647 = cljs.core.chunk_first(seq__12625_12646__$1);
          var G__12648 = cljs.core.chunk_rest(seq__12625_12646__$1);
          var G__12649 = c__5095__auto___12647;
          var G__12650 = cljs.core.count(c__5095__auto___12647);
          var G__12651 = 0;
          seq__12625_12636 = G__12648;
          chunk__12626_12637 = G__12649;
          count__12627_12638 = G__12650;
          i__12628_12639 = G__12651;
          continue;
        } else {
          var param_12652 = cljs.core.first(seq__12625_12646__$1);
          cljs.compiler.emit(param_12652);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(param_12652, cljs.core.last(params))) {
          } else {
            cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
          }
          var G__12653 = cljs.core.next(seq__12625_12646__$1);
          var G__12654 = null;
          var G__12655 = 0;
          var G__12656 = 0;
          seq__12625_12636 = G__12653;
          chunk__12626_12637 = G__12654;
          count__12627_12638 = G__12655;
          i__12628_12639 = G__12656;
          continue;
        }
      } else {
      }
    }
    break;
  }
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["){"], 0));
  if (recurs) {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["while(true){"], 0));
  } else {
  }
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([expr], 0));
  if (recurs) {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["break;"], 0));
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["}"], 0));
  } else {
  }
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["};"], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var ", mname_12634, " = function (", cljs.compiler.comma_sep(variadic ? cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.butlast(params), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$var_args], null)) : params), "){"], 0));
  if (type) {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var self__ = this;"], 0));
  } else {
  }
  if (variadic) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var "], 0));
    cljs.compiler.emit(cljs.core.last(params));
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" = null;"], 0));
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["if (arguments.length > ", cljs.core.count(params) - 1, ") {"], 0));
    var a_12657 = cljs.compiler.emit_arguments_to_array(cljs.core.count(params) - 1);
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["  ", cljs.core.last(params), " = new cljs.core.IndexedSeq(", a_12657, ",0);"], 0));
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["} "], 0));
  } else {
  }
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return ", delegate_name_12635, ".call(this,"], 0));
  var seq__12629_12658 = cljs.core.seq(params);
  var chunk__12630_12659 = null;
  var count__12631_12660 = 0;
  var i__12632_12661 = 0;
  while (true) {
    if (i__12632_12661 < count__12631_12660) {
      var param_12662 = chunk__12630_12659.cljs$core$IIndexed$_nth$arity$2(null, i__12632_12661);
      cljs.compiler.emit(param_12662);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(param_12662, cljs.core.last(params))) {
      } else {
        cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
      }
      var G__12663 = seq__12629_12658;
      var G__12664 = chunk__12630_12659;
      var G__12665 = count__12631_12660;
      var G__12666 = i__12632_12661 + 1;
      seq__12629_12658 = G__12663;
      chunk__12630_12659 = G__12664;
      count__12631_12660 = G__12665;
      i__12632_12661 = G__12666;
      continue;
    } else {
      var temp__4425__auto___12667 = cljs.core.seq(seq__12629_12658);
      if (temp__4425__auto___12667) {
        var seq__12629_12668__$1 = temp__4425__auto___12667;
        if (cljs.core.chunked_seq_QMARK_(seq__12629_12668__$1)) {
          var c__5095__auto___12669 = cljs.core.chunk_first(seq__12629_12668__$1);
          var G__12670 = cljs.core.chunk_rest(seq__12629_12668__$1);
          var G__12671 = c__5095__auto___12669;
          var G__12672 = cljs.core.count(c__5095__auto___12669);
          var G__12673 = 0;
          seq__12629_12658 = G__12670;
          chunk__12630_12659 = G__12671;
          count__12631_12660 = G__12672;
          i__12632_12661 = G__12673;
          continue;
        } else {
          var param_12674 = cljs.core.first(seq__12629_12668__$1);
          cljs.compiler.emit(param_12674);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(param_12674, cljs.core.last(params))) {
          } else {
            cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([","], 0));
          }
          var G__12675 = cljs.core.next(seq__12629_12668__$1);
          var G__12676 = null;
          var G__12677 = 0;
          var G__12678 = 0;
          seq__12629_12658 = G__12675;
          chunk__12630_12659 = G__12676;
          count__12631_12660 = G__12677;
          i__12632_12661 = G__12678;
          continue;
        }
      } else {
      }
    }
    break;
  }
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([");"], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["};"], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([mname_12634, ".cljs$lang$maxFixedArity = ", max_fixed_arity, ";"], 0));
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([mname_12634, ".cljs$lang$applyTo = "], 0));
  cljs.compiler.emit_apply_to(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(f, cljs.core.cst$kw$name, name_12633__$1));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([mname_12634, ".cljs$core$IFn$_invoke$arity$variadic = ", delegate_name_12635, ";"], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return ", mname_12634, ";"], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["})()"], 0));
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    return null;
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
};
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$fn, function(p__12682) {
  var map__12683 = p__12682;
  var map__12683__$1 = (!(map__12683 == null) ? map__12683.cljs$lang$protocol_mask$partition0$ & 64 || map__12683.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12683) : map__12683;
  var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12683__$1, cljs.core.cst$kw$name);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12683__$1, cljs.core.cst$kw$env);
  var methods$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12683__$1, cljs.core.cst$kw$methods);
  var max_fixed_arity = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12683__$1, cljs.core.cst$kw$max_DASH_fixed_DASH_arity);
  var variadic = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12683__$1, cljs.core.cst$kw$variadic);
  var recur_frames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12683__$1, cljs.core.cst$kw$recur_DASH_frames);
  var loop_lets = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12683__$1, cljs.core.cst$kw$loop_DASH_lets);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$statement, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
    return null;
  } else {
    var loop_locals = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.compiler.munge, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.cst$kw$params, cljs.core.array_seq([cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(map__12683, map__12683__$1, name, env, methods$, max_fixed_arity, variadic, recur_frames, loop_lets) {
      return function(p1__12679_SHARP_) {
        var and__4299__auto__ = p1__12679_SHARP_;
        if (and__4299__auto__) {
          var G__12685 = cljs.core.cst$kw$flag.cljs$core$IFn$_invoke$arity$1(p1__12679_SHARP_);
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__12685) : cljs.core.deref.call(null, G__12685);
        } else {
          return and__4299__auto__;
        }
      };
    }(map__12683, map__12683__$1, name, env, methods$, max_fixed_arity, variadic, recur_frames, loop_lets), recur_frames)], 0)), cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.cst$kw$params, cljs.core.array_seq([loop_lets], 0)))));
    if (loop_locals) {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
        cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
      } else {
      }
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["((function (", cljs.compiler.comma_sep(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.compiler.munge, loop_locals)), "){"], 0));
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
      } else {
        cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
      }
    } else {
    }
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, cljs.core.count(methods$))) {
      if (variadic) {
        cljs.compiler.emit_variadic_fn_method(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.first(methods$), cljs.core.cst$kw$name, name));
      } else {
        cljs.compiler.emit_fn_method(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.first(methods$), cljs.core.cst$kw$name, name));
      }
    } else {
      var name_12705__$1 = function() {
        var or__4311__auto__ = name;
        if (or__4311__auto__) {
          return or__4311__auto__;
        } else {
          return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
        }
      }();
      var mname_12706 = cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(name_12705__$1);
      var maxparams_12707 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.max_key, cljs.core.count, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$params, methods$));
      var mmap_12708 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(name_12705__$1, mname_12706, maxparams_12707, loop_locals, map__12683, map__12683__$1, name, env, methods$, max_fixed_arity, variadic, recur_frames, loop_lets) {
        return function(method) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(mname_12706), cljs.core.str("__"), cljs.core.str(cljs.core.count(cljs.core.cst$kw$params.cljs$core$IFn$_invoke$arity$1(method)))].join(""))), method], null);
        };
      }(name_12705__$1, mname_12706, maxparams_12707, loop_locals, map__12683, map__12683__$1, name, env, methods$, max_fixed_arity, variadic, recur_frames, loop_lets), methods$));
      var ms_12709 = cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(function(name_12705__$1, mname_12706, maxparams_12707, mmap_12708, loop_locals, map__12683, map__12683__$1, name, env, methods$, max_fixed_arity, variadic, recur_frames, loop_lets) {
        return function(p1__12680_SHARP_) {
          return cljs.core.count(cljs.core.cst$kw$params.cljs$core$IFn$_invoke$arity$1(cljs.core.second(p1__12680_SHARP_)));
        };
      }(name_12705__$1, mname_12706, maxparams_12707, mmap_12708, loop_locals, map__12683, map__12683__$1, name, env, methods$, max_fixed_arity, variadic, recur_frames, loop_lets), cljs.core.seq(mmap_12708));
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env))) {
        cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
      } else {
      }
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(function() {"], 0));
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var ", mname_12706, " = null;"], 0));
      var seq__12686_12710 = cljs.core.seq(ms_12709);
      var chunk__12687_12711 = null;
      var count__12688_12712 = 0;
      var i__12689_12713 = 0;
      while (true) {
        if (i__12689_12713 < count__12688_12712) {
          var vec__12690_12714 = chunk__12687_12711.cljs$core$IIndexed$_nth$arity$2(null, i__12689_12713);
          var n_12715 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12690_12714, 0, null);
          var meth_12716 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12690_12714, 1, null);
          cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var ", n_12715, " = "], 0));
          if (cljs.core.cst$kw$variadic.cljs$core$IFn$_invoke$arity$1(meth_12716)) {
            cljs.compiler.emit_variadic_fn_method(meth_12716);
          } else {
            cljs.compiler.emit_fn_method(meth_12716);
          }
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
          var G__12717 = seq__12686_12710;
          var G__12718 = chunk__12687_12711;
          var G__12719 = count__12688_12712;
          var G__12720 = i__12689_12713 + 1;
          seq__12686_12710 = G__12717;
          chunk__12687_12711 = G__12718;
          count__12688_12712 = G__12719;
          i__12689_12713 = G__12720;
          continue;
        } else {
          var temp__4425__auto___12721 = cljs.core.seq(seq__12686_12710);
          if (temp__4425__auto___12721) {
            var seq__12686_12722__$1 = temp__4425__auto___12721;
            if (cljs.core.chunked_seq_QMARK_(seq__12686_12722__$1)) {
              var c__5095__auto___12723 = cljs.core.chunk_first(seq__12686_12722__$1);
              var G__12724 = cljs.core.chunk_rest(seq__12686_12722__$1);
              var G__12725 = c__5095__auto___12723;
              var G__12726 = cljs.core.count(c__5095__auto___12723);
              var G__12727 = 0;
              seq__12686_12710 = G__12724;
              chunk__12687_12711 = G__12725;
              count__12688_12712 = G__12726;
              i__12689_12713 = G__12727;
              continue;
            } else {
              var vec__12691_12728 = cljs.core.first(seq__12686_12722__$1);
              var n_12729 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12691_12728, 0, null);
              var meth_12730 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12691_12728, 1, null);
              cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var ", n_12729, " = "], 0));
              if (cljs.core.cst$kw$variadic.cljs$core$IFn$_invoke$arity$1(meth_12730)) {
                cljs.compiler.emit_variadic_fn_method(meth_12730);
              } else {
                cljs.compiler.emit_fn_method(meth_12730);
              }
              cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
              var G__12731 = cljs.core.next(seq__12686_12722__$1);
              var G__12732 = null;
              var G__12733 = 0;
              var G__12734 = 0;
              seq__12686_12710 = G__12731;
              chunk__12687_12711 = G__12732;
              count__12688_12712 = G__12733;
              i__12689_12713 = G__12734;
              continue;
            }
          } else {
          }
        }
        break;
      }
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([mname_12706, " = function(", cljs.compiler.comma_sep(variadic ? cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.butlast(maxparams_12707), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$var_args], null)) : maxparams_12707), "){"], 0));
      if (variadic) {
        cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var "], 0));
        cljs.compiler.emit(cljs.core.last(maxparams_12707));
        cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" = var_args;"], 0));
      } else {
      }
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["switch(arguments.length){"], 0));
      var seq__12692_12735 = cljs.core.seq(ms_12709);
      var chunk__12693_12736 = null;
      var count__12694_12737 = 0;
      var i__12695_12738 = 0;
      while (true) {
        if (i__12695_12738 < count__12694_12737) {
          var vec__12696_12739 = chunk__12693_12736.cljs$core$IIndexed$_nth$arity$2(null, i__12695_12738);
          var n_12740 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12696_12739, 0, null);
          var meth_12741 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12696_12739, 1, null);
          if (cljs.core.cst$kw$variadic.cljs$core$IFn$_invoke$arity$1(meth_12741)) {
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["default:"], 0));
            var restarg_12742 = cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym.cljs$core$IFn$_invoke$arity$0());
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var ", restarg_12742, " = null;"], 0));
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["if (arguments.length > ", max_fixed_arity, ") {"], 0));
            var a_12743 = cljs.compiler.emit_arguments_to_array(max_fixed_arity);
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([restarg_12742, " = new cljs.core.IndexedSeq(", a_12743, ",0);"], 0));
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["}"], 0));
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return ", n_12740, ".cljs$core$IFn$_invoke$arity$variadic(", cljs.compiler.comma_sep(cljs.core.butlast(maxparams_12707)), cljs.core.count(maxparams_12707) > 1 ? ", " : null, restarg_12742, ");"], 0));
          } else {
            var pcnt_12744 = cljs.core.count(cljs.core.cst$kw$params.cljs$core$IFn$_invoke$arity$1(meth_12741));
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["case ", pcnt_12744, ":"], 0));
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return ", n_12740, ".call(this", pcnt_12744 === 0 ? null : cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.compiler.comma_sep(cljs.core.take.cljs$core$IFn$_invoke$arity$2(pcnt_12744, maxparams_12707))), ","), ");"], 0));
          }
          var G__12745 = seq__12692_12735;
          var G__12746 = chunk__12693_12736;
          var G__12747 = count__12694_12737;
          var G__12748 = i__12695_12738 + 1;
          seq__12692_12735 = G__12745;
          chunk__12693_12736 = G__12746;
          count__12694_12737 = G__12747;
          i__12695_12738 = G__12748;
          continue;
        } else {
          var temp__4425__auto___12749 = cljs.core.seq(seq__12692_12735);
          if (temp__4425__auto___12749) {
            var seq__12692_12750__$1 = temp__4425__auto___12749;
            if (cljs.core.chunked_seq_QMARK_(seq__12692_12750__$1)) {
              var c__5095__auto___12751 = cljs.core.chunk_first(seq__12692_12750__$1);
              var G__12752 = cljs.core.chunk_rest(seq__12692_12750__$1);
              var G__12753 = c__5095__auto___12751;
              var G__12754 = cljs.core.count(c__5095__auto___12751);
              var G__12755 = 0;
              seq__12692_12735 = G__12752;
              chunk__12693_12736 = G__12753;
              count__12694_12737 = G__12754;
              i__12695_12738 = G__12755;
              continue;
            } else {
              var vec__12697_12756 = cljs.core.first(seq__12692_12750__$1);
              var n_12757 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12697_12756, 0, null);
              var meth_12758 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12697_12756, 1, null);
              if (cljs.core.cst$kw$variadic.cljs$core$IFn$_invoke$arity$1(meth_12758)) {
                cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["default:"], 0));
                var restarg_12759 = cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym.cljs$core$IFn$_invoke$arity$0());
                cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var ", restarg_12759, " = null;"], 0));
                cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["if (arguments.length > ", max_fixed_arity, ") {"], 0));
                var a_12760 = cljs.compiler.emit_arguments_to_array(max_fixed_arity);
                cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([restarg_12759, " = new cljs.core.IndexedSeq(", a_12760, ",0);"], 0));
                cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["}"], 0));
                cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return ", n_12757, ".cljs$core$IFn$_invoke$arity$variadic(", cljs.compiler.comma_sep(cljs.core.butlast(maxparams_12707)), cljs.core.count(maxparams_12707) > 1 ? ", " : null, restarg_12759, ");"], 0));
              } else {
                var pcnt_12761 = cljs.core.count(cljs.core.cst$kw$params.cljs$core$IFn$_invoke$arity$1(meth_12758));
                cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["case ", pcnt_12761, ":"], 0));
                cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return ", n_12757, ".call(this", pcnt_12761 === 0 ? null : cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.compiler.comma_sep(cljs.core.take.cljs$core$IFn$_invoke$arity$2(pcnt_12761, maxparams_12707))), ","), ");"], 0));
              }
              var G__12762 = cljs.core.next(seq__12692_12750__$1);
              var G__12763 = null;
              var G__12764 = 0;
              var G__12765 = 0;
              seq__12692_12735 = G__12762;
              chunk__12693_12736 = G__12763;
              count__12694_12737 = G__12764;
              i__12695_12738 = G__12765;
              continue;
            }
          } else {
          }
        }
        break;
      }
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["}"], 0));
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["throw(new Error('Invalid arity: ' + arguments.length));"], 0));
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["};"], 0));
      if (variadic) {
        cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([mname_12706, ".cljs$lang$maxFixedArity = ", max_fixed_arity, ";"], 0));
        cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([mname_12706, ".cljs$lang$applyTo = ", cljs.core.some(function(name_12705__$1, mname_12706, maxparams_12707, mmap_12708, ms_12709, loop_locals, map__12683, map__12683__$1, name, env, methods$, max_fixed_arity, variadic, recur_frames, loop_lets) {
          return function(p1__12681_SHARP_) {
            var vec__12698 = p1__12681_SHARP_;
            var n = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12698, 0, null);
            var m = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12698, 1, null);
            if (cljs.core.cst$kw$variadic.cljs$core$IFn$_invoke$arity$1(m)) {
              return n;
            } else {
              return null;
            }
          };
        }(name_12705__$1, mname_12706, maxparams_12707, mmap_12708, ms_12709, loop_locals, map__12683, map__12683__$1, name, env, methods$, max_fixed_arity, variadic, recur_frames, loop_lets), ms_12709), ".cljs$lang$applyTo;"], 0));
      } else {
      }
      var seq__12699_12766 = cljs.core.seq(ms_12709);
      var chunk__12700_12767 = null;
      var count__12701_12768 = 0;
      var i__12702_12769 = 0;
      while (true) {
        if (i__12702_12769 < count__12701_12768) {
          var vec__12703_12770 = chunk__12700_12767.cljs$core$IIndexed$_nth$arity$2(null, i__12702_12769);
          var n_12771 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12703_12770, 0, null);
          var meth_12772 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12703_12770, 1, null);
          var c_12773 = cljs.core.count(cljs.core.cst$kw$params.cljs$core$IFn$_invoke$arity$1(meth_12772));
          if (cljs.core.cst$kw$variadic.cljs$core$IFn$_invoke$arity$1(meth_12772)) {
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([mname_12706, ".cljs$core$IFn$_invoke$arity$variadic = ", n_12771, ".cljs$core$IFn$_invoke$arity$variadic;"], 0));
          } else {
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([mname_12706, ".cljs$core$IFn$_invoke$arity$", c_12773, " = ", n_12771, ";"], 0));
          }
          var G__12774 = seq__12699_12766;
          var G__12775 = chunk__12700_12767;
          var G__12776 = count__12701_12768;
          var G__12777 = i__12702_12769 + 1;
          seq__12699_12766 = G__12774;
          chunk__12700_12767 = G__12775;
          count__12701_12768 = G__12776;
          i__12702_12769 = G__12777;
          continue;
        } else {
          var temp__4425__auto___12778 = cljs.core.seq(seq__12699_12766);
          if (temp__4425__auto___12778) {
            var seq__12699_12779__$1 = temp__4425__auto___12778;
            if (cljs.core.chunked_seq_QMARK_(seq__12699_12779__$1)) {
              var c__5095__auto___12780 = cljs.core.chunk_first(seq__12699_12779__$1);
              var G__12781 = cljs.core.chunk_rest(seq__12699_12779__$1);
              var G__12782 = c__5095__auto___12780;
              var G__12783 = cljs.core.count(c__5095__auto___12780);
              var G__12784 = 0;
              seq__12699_12766 = G__12781;
              chunk__12700_12767 = G__12782;
              count__12701_12768 = G__12783;
              i__12702_12769 = G__12784;
              continue;
            } else {
              var vec__12704_12785 = cljs.core.first(seq__12699_12779__$1);
              var n_12786 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12704_12785, 0, null);
              var meth_12787 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12704_12785, 1, null);
              var c_12788 = cljs.core.count(cljs.core.cst$kw$params.cljs$core$IFn$_invoke$arity$1(meth_12787));
              if (cljs.core.cst$kw$variadic.cljs$core$IFn$_invoke$arity$1(meth_12787)) {
                cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([mname_12706, ".cljs$core$IFn$_invoke$arity$variadic = ", n_12786, ".cljs$core$IFn$_invoke$arity$variadic;"], 0));
              } else {
                cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([mname_12706, ".cljs$core$IFn$_invoke$arity$", c_12788, " = ", n_12786, ";"], 0));
              }
              var G__12789 = cljs.core.next(seq__12699_12779__$1);
              var G__12790 = null;
              var G__12791 = 0;
              var G__12792 = 0;
              seq__12699_12766 = G__12789;
              chunk__12700_12767 = G__12790;
              count__12701_12768 = G__12791;
              i__12702_12769 = G__12792;
              continue;
            }
          } else {
          }
        }
        break;
      }
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return ", mname_12706, ";"], 0));
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["})()"], 0));
    }
    if (loop_locals) {
      return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";})(", cljs.compiler.comma_sep(loop_locals), "))"], 0));
    } else {
      return null;
    }
  }
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$do, function(p__12793) {
  var map__12794 = p__12793;
  var map__12794__$1 = (!(map__12794 == null) ? map__12794.cljs$lang$protocol_mask$partition0$ & 64 || map__12794.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12794) : map__12794;
  var statements = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12794__$1, cljs.core.cst$kw$statements);
  var ret = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12794__$1, cljs.core.cst$kw$ret);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12794__$1, cljs.core.cst$kw$env);
  var context = cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env);
  if (function() {
    var and__4299__auto__ = statements;
    if (and__4299__auto__) {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, context);
    } else {
      return and__4299__auto__;
    }
  }()) {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(function (){"], 0));
  } else {
  }
  var seq__12796_12800 = cljs.core.seq(statements);
  var chunk__12797_12801 = null;
  var count__12798_12802 = 0;
  var i__12799_12803 = 0;
  while (true) {
    if (i__12799_12803 < count__12798_12802) {
      var s_12804 = chunk__12797_12801.cljs$core$IIndexed$_nth$arity$2(null, i__12799_12803);
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([s_12804], 0));
      var G__12805 = seq__12796_12800;
      var G__12806 = chunk__12797_12801;
      var G__12807 = count__12798_12802;
      var G__12808 = i__12799_12803 + 1;
      seq__12796_12800 = G__12805;
      chunk__12797_12801 = G__12806;
      count__12798_12802 = G__12807;
      i__12799_12803 = G__12808;
      continue;
    } else {
      var temp__4425__auto___12809 = cljs.core.seq(seq__12796_12800);
      if (temp__4425__auto___12809) {
        var seq__12796_12810__$1 = temp__4425__auto___12809;
        if (cljs.core.chunked_seq_QMARK_(seq__12796_12810__$1)) {
          var c__5095__auto___12811 = cljs.core.chunk_first(seq__12796_12810__$1);
          var G__12812 = cljs.core.chunk_rest(seq__12796_12810__$1);
          var G__12813 = c__5095__auto___12811;
          var G__12814 = cljs.core.count(c__5095__auto___12811);
          var G__12815 = 0;
          seq__12796_12800 = G__12812;
          chunk__12797_12801 = G__12813;
          count__12798_12802 = G__12814;
          i__12799_12803 = G__12815;
          continue;
        } else {
          var s_12816 = cljs.core.first(seq__12796_12810__$1);
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([s_12816], 0));
          var G__12817 = cljs.core.next(seq__12796_12810__$1);
          var G__12818 = null;
          var G__12819 = 0;
          var G__12820 = 0;
          seq__12796_12800 = G__12817;
          chunk__12797_12801 = G__12818;
          count__12798_12802 = G__12819;
          i__12799_12803 = G__12820;
          continue;
        }
      } else {
      }
    }
    break;
  }
  cljs.compiler.emit(ret);
  if (function() {
    var and__4299__auto__ = statements;
    if (and__4299__auto__) {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, context);
    } else {
      return and__4299__auto__;
    }
  }()) {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["})()"], 0));
  } else {
    return null;
  }
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$try, function(p__12821) {
  var map__12822 = p__12821;
  var map__12822__$1 = (!(map__12822 == null) ? map__12822.cljs$lang$protocol_mask$partition0$ & 64 || map__12822.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12822) : map__12822;
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12822__$1, cljs.core.cst$kw$env);
  var try$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12822__$1, cljs.core.cst$kw$try);
  var catch$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12822__$1, cljs.core.cst$kw$catch);
  var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12822__$1, cljs.core.cst$kw$name);
  var finally$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12822__$1, cljs.core.cst$kw$finally);
  var context = cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env);
  if (function() {
    var or__4311__auto__ = name;
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return finally$;
    }
  }()) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, context)) {
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(function (){"], 0));
    } else {
    }
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["try{", try$, "}"], 0));
    if (name) {
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["catch (", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(name), "){", catch$, "}"], 0));
    } else {
    }
    if (finally$) {
      if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$constant, cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(finally$))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("finally block cannot contain constant"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$not_EQ_, cljs.core.cst$kw$constant, cljs.core.list(cljs.core.cst$kw$op, cljs.core.cst$sym$finally))], 0)))].join(""));
      }
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["finally {", finally$, "}"], 0));
    } else {
    }
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, context)) {
      return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["})()"], 0));
    } else {
      return null;
    }
  } else {
    return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([try$], 0));
  }
});
cljs.compiler.emit_let = function cljs$compiler$emit_let(p__12824, is_loop) {
  var map__12836 = p__12824;
  var map__12836__$1 = (!(map__12836 == null) ? map__12836.cljs$lang$protocol_mask$partition0$ & 64 || map__12836.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12836) : map__12836;
  var bindings = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12836__$1, cljs.core.cst$kw$bindings);
  var expr = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12836__$1, cljs.core.cst$kw$expr);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12836__$1, cljs.core.cst$kw$env);
  var context = cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, context)) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(function (){"], 0));
  } else {
  }
  var _STAR_lexical_renames_STAR_12838_12847 = cljs.compiler._STAR_lexical_renames_STAR_;
  cljs.compiler._STAR_lexical_renames_STAR_ = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.compiler._STAR_lexical_renames_STAR_, cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$statement, context) ? cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(_STAR_lexical_renames_STAR_12838_12847, context, map__12836, map__12836__$1, bindings, expr, env) {
    return function(binding) {
      var name = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(binding);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._hash(name), cljs.core.gensym.cljs$core$IFn$_invoke$arity$1([cljs.core.str(name), cljs.core.str("-")].join(""))], null);
    };
  }(_STAR_lexical_renames_STAR_12838_12847, context, map__12836, map__12836__$1, bindings, expr, env), bindings) : null);
  try {
    var seq__12839_12848 = cljs.core.seq(bindings);
    var chunk__12840_12849 = null;
    var count__12841_12850 = 0;
    var i__12842_12851 = 0;
    while (true) {
      if (i__12842_12851 < count__12841_12850) {
        var map__12843_12852 = chunk__12840_12849.cljs$core$IIndexed$_nth$arity$2(null, i__12842_12851);
        var map__12843_12853__$1 = (!(map__12843_12852 == null) ? map__12843_12852.cljs$lang$protocol_mask$partition0$ & 64 || map__12843_12852.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12843_12852) : map__12843_12852;
        var binding_12854 = map__12843_12853__$1;
        var init_12855 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12843_12853__$1, cljs.core.cst$kw$init);
        cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var "], 0));
        cljs.compiler.emit(binding_12854);
        cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" = ", init_12855, ";"], 0));
        var G__12856 = seq__12839_12848;
        var G__12857 = chunk__12840_12849;
        var G__12858 = count__12841_12850;
        var G__12859 = i__12842_12851 + 1;
        seq__12839_12848 = G__12856;
        chunk__12840_12849 = G__12857;
        count__12841_12850 = G__12858;
        i__12842_12851 = G__12859;
        continue;
      } else {
        var temp__4425__auto___12860 = cljs.core.seq(seq__12839_12848);
        if (temp__4425__auto___12860) {
          var seq__12839_12861__$1 = temp__4425__auto___12860;
          if (cljs.core.chunked_seq_QMARK_(seq__12839_12861__$1)) {
            var c__5095__auto___12862 = cljs.core.chunk_first(seq__12839_12861__$1);
            var G__12863 = cljs.core.chunk_rest(seq__12839_12861__$1);
            var G__12864 = c__5095__auto___12862;
            var G__12865 = cljs.core.count(c__5095__auto___12862);
            var G__12866 = 0;
            seq__12839_12848 = G__12863;
            chunk__12840_12849 = G__12864;
            count__12841_12850 = G__12865;
            i__12842_12851 = G__12866;
            continue;
          } else {
            var map__12845_12867 = cljs.core.first(seq__12839_12861__$1);
            var map__12845_12868__$1 = (!(map__12845_12867 == null) ? map__12845_12867.cljs$lang$protocol_mask$partition0$ & 64 || map__12845_12867.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12845_12867) : map__12845_12867;
            var binding_12869 = map__12845_12868__$1;
            var init_12870 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12845_12868__$1, cljs.core.cst$kw$init);
            cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var "], 0));
            cljs.compiler.emit(binding_12869);
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" = ", init_12870, ";"], 0));
            var G__12871 = cljs.core.next(seq__12839_12861__$1);
            var G__12872 = null;
            var G__12873 = 0;
            var G__12874 = 0;
            seq__12839_12848 = G__12871;
            chunk__12840_12849 = G__12872;
            count__12841_12850 = G__12873;
            i__12842_12851 = G__12874;
            continue;
          }
        } else {
        }
      }
      break;
    }
    if (is_loop) {
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["while(true){"], 0));
    } else {
    }
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([expr], 0));
    if (is_loop) {
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["break;"], 0));
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["}"], 0));
    } else {
    }
  } finally {
    cljs.compiler._STAR_lexical_renames_STAR_ = _STAR_lexical_renames_STAR_12838_12847;
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, context)) {
    return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["})()"], 0));
  } else {
    return null;
  }
};
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$let, function(ast) {
  return cljs.compiler.emit_let(ast, false);
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$loop, function(ast) {
  return cljs.compiler.emit_let(ast, true);
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$recur, function(p__12875) {
  var map__12876 = p__12875;
  var map__12876__$1 = (!(map__12876 == null) ? map__12876.cljs$lang$protocol_mask$partition0$ & 64 || map__12876.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12876) : map__12876;
  var frame = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12876__$1, cljs.core.cst$kw$frame);
  var exprs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12876__$1, cljs.core.cst$kw$exprs);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12876__$1, cljs.core.cst$kw$env);
  var temps = cljs.core.vec(cljs.core.take.cljs$core$IFn$_invoke$arity$2(cljs.core.count(exprs), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym)));
  var params = cljs.core.cst$kw$params.cljs$core$IFn$_invoke$arity$1(frame);
  var n__5195__auto___12878 = cljs.core.count(exprs);
  var i_12879 = 0;
  while (true) {
    if (i_12879 < n__5195__auto___12878) {
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var ", temps.cljs$core$IFn$_invoke$arity$1 ? temps.cljs$core$IFn$_invoke$arity$1(i_12879) : temps.call(null, i_12879), " = ", exprs.cljs$core$IFn$_invoke$arity$1 ? exprs.cljs$core$IFn$_invoke$arity$1(i_12879) : exprs.call(null, i_12879), ";"], 0));
      var G__12880 = i_12879 + 1;
      i_12879 = G__12880;
      continue;
    } else {
    }
    break;
  }
  var n__5195__auto___12881 = cljs.core.count(exprs);
  var i_12882 = 0;
  while (true) {
    if (i_12882 < n__5195__auto___12881) {
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(params.cljs$core$IFn$_invoke$arity$1 ? params.cljs$core$IFn$_invoke$arity$1(i_12882) : params.call(null, i_12882)), " = ", temps.cljs$core$IFn$_invoke$arity$1 ? temps.cljs$core$IFn$_invoke$arity$1(i_12882) : temps.call(null, i_12882), ";"], 0));
      var G__12883 = i_12882 + 1;
      i_12882 = G__12883;
      continue;
    } else {
    }
    break;
  }
  return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["continue;"], 0));
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$letfn, function(p__12884) {
  var map__12885 = p__12884;
  var map__12885__$1 = (!(map__12885 == null) ? map__12885.cljs$lang$protocol_mask$partition0$ & 64 || map__12885.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12885) : map__12885;
  var bindings = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12885__$1, cljs.core.cst$kw$bindings);
  var expr = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12885__$1, cljs.core.cst$kw$expr);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12885__$1, cljs.core.cst$kw$env);
  var context = cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, context)) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(function (){"], 0));
  } else {
  }
  var seq__12887_12895 = cljs.core.seq(bindings);
  var chunk__12888_12896 = null;
  var count__12889_12897 = 0;
  var i__12890_12898 = 0;
  while (true) {
    if (i__12890_12898 < count__12889_12897) {
      var map__12891_12899 = chunk__12888_12896.cljs$core$IIndexed$_nth$arity$2(null, i__12890_12898);
      var map__12891_12900__$1 = (!(map__12891_12899 == null) ? map__12891_12899.cljs$lang$protocol_mask$partition0$ & 64 || map__12891_12899.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12891_12899) : map__12891_12899;
      var binding_12901 = map__12891_12900__$1;
      var init_12902 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12891_12900__$1, cljs.core.cst$kw$init);
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var ", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(binding_12901), " = ", init_12902, ";"], 0));
      var G__12903 = seq__12887_12895;
      var G__12904 = chunk__12888_12896;
      var G__12905 = count__12889_12897;
      var G__12906 = i__12890_12898 + 1;
      seq__12887_12895 = G__12903;
      chunk__12888_12896 = G__12904;
      count__12889_12897 = G__12905;
      i__12890_12898 = G__12906;
      continue;
    } else {
      var temp__4425__auto___12907 = cljs.core.seq(seq__12887_12895);
      if (temp__4425__auto___12907) {
        var seq__12887_12908__$1 = temp__4425__auto___12907;
        if (cljs.core.chunked_seq_QMARK_(seq__12887_12908__$1)) {
          var c__5095__auto___12909 = cljs.core.chunk_first(seq__12887_12908__$1);
          var G__12910 = cljs.core.chunk_rest(seq__12887_12908__$1);
          var G__12911 = c__5095__auto___12909;
          var G__12912 = cljs.core.count(c__5095__auto___12909);
          var G__12913 = 0;
          seq__12887_12895 = G__12910;
          chunk__12888_12896 = G__12911;
          count__12889_12897 = G__12912;
          i__12890_12898 = G__12913;
          continue;
        } else {
          var map__12893_12914 = cljs.core.first(seq__12887_12908__$1);
          var map__12893_12915__$1 = (!(map__12893_12914 == null) ? map__12893_12914.cljs$lang$protocol_mask$partition0$ & 64 || map__12893_12914.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12893_12914) : map__12893_12914;
          var binding_12916 = map__12893_12915__$1;
          var init_12917 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12893_12915__$1, cljs.core.cst$kw$init);
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["var ", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(binding_12916), " = ", init_12917, ";"], 0));
          var G__12918 = cljs.core.next(seq__12887_12908__$1);
          var G__12919 = null;
          var G__12920 = 0;
          var G__12921 = 0;
          seq__12887_12895 = G__12918;
          chunk__12888_12896 = G__12919;
          count__12889_12897 = G__12920;
          i__12890_12898 = G__12921;
          continue;
        }
      } else {
      }
    }
    break;
  }
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([expr], 0));
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, context)) {
    return cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["})()"], 0));
  } else {
    return null;
  }
});
cljs.compiler.protocol_prefix = function cljs$compiler$protocol_prefix(psym) {
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str([cljs.core.str(psym)].join("").replace(".", "$").replace("/", "$")), cljs.core.str("$")].join(""));
};
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$invoke, function(p__12924) {
  var map__12925 = p__12924;
  var map__12925__$1 = (!(map__12925 == null) ? map__12925.cljs$lang$protocol_mask$partition0$ & 64 || map__12925.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12925) : map__12925;
  var expr = map__12925__$1;
  var f = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12925__$1, cljs.core.cst$kw$f);
  var args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12925__$1, cljs.core.cst$kw$args);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12925__$1, cljs.core.cst$kw$env);
  var info = cljs.core.cst$kw$info.cljs$core$IFn$_invoke$arity$1(f);
  var fn_QMARK_ = function() {
    var and__4299__auto__ = cljs.analyzer._STAR_cljs_static_fns_STAR_;
    if (and__4299__auto__) {
      var and__4299__auto____$1 = cljs.core.not(cljs.core.cst$kw$dynamic.cljs$core$IFn$_invoke$arity$1(info));
      if (and__4299__auto____$1) {
        return cljs.core.cst$kw$fn_DASH_var.cljs$core$IFn$_invoke$arity$1(info);
      } else {
        return and__4299__auto____$1;
      }
    } else {
      return and__4299__auto__;
    }
  }();
  var protocol = cljs.core.cst$kw$protocol.cljs$core$IFn$_invoke$arity$1(info);
  var tag = cljs.analyzer.infer_tag(env, cljs.core.first(cljs.core.cst$kw$args.cljs$core$IFn$_invoke$arity$1(expr)));
  var proto_QMARK_ = function() {
    var and__4299__auto__ = protocol;
    if (and__4299__auto__) {
      var and__4299__auto____$1 = tag;
      if (and__4299__auto____$1) {
        var or__4311__auto__ = function() {
          var and__4299__auto____$2 = cljs.analyzer._STAR_cljs_static_fns_STAR_;
          if (and__4299__auto____$2) {
            var and__4299__auto____$3 = protocol;
            if (and__4299__auto____$3) {
              return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(tag, cljs.core.cst$sym$not_DASH_native);
            } else {
              return and__4299__auto____$3;
            }
          } else {
            return and__4299__auto____$2;
          }
        }();
        if (or__4311__auto__) {
          return or__4311__auto__;
        } else {
          var and__4299__auto____$2 = function() {
            var or__4311__auto____$1 = cljs.analyzer._STAR_cljs_static_fns_STAR_;
            if (or__4311__auto____$1) {
              return or__4311__auto____$1;
            } else {
              return cljs.core.cst$kw$protocol_DASH_inline.cljs$core$IFn$_invoke$arity$1(env);
            }
          }();
          if (and__4299__auto____$2) {
            var or__4311__auto____$1 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(protocol, tag);
            if (or__4311__auto____$1) {
              return or__4311__auto____$1;
            } else {
              var and__4299__auto____$3 = !cljs.core.set_QMARK_(tag);
              if (and__4299__auto____$3) {
                var and__4299__auto____$4 = cljs.core.not((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$sym$clj, null, cljs.core.cst$sym$any, null, cljs.core.cst$sym$clj_DASH_or_DASH_nil, null], null), null)).call(null, tag));
                if (and__4299__auto____$4) {
                  var temp__4425__auto__ = cljs.core.cst$kw$protocols.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_existing_var(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env, cljs.core.cst$kw$locals), tag));
                  if (temp__4425__auto__) {
                    var ps = temp__4425__auto__;
                    return ps.cljs$core$IFn$_invoke$arity$1 ? ps.cljs$core$IFn$_invoke$arity$1(protocol) : ps.call(null, protocol);
                  } else {
                    return null;
                  }
                } else {
                  return and__4299__auto____$4;
                }
              } else {
                return and__4299__auto____$3;
              }
            }
          } else {
            return and__4299__auto____$2;
          }
        }
      } else {
        return and__4299__auto____$1;
      }
    } else {
      return and__4299__auto__;
    }
  }();
  var opt_not_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(info), cljs.core.cst$sym$cljs$core_SLASH_not) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.infer_tag(env, cljs.core.first(cljs.core.cst$kw$args.cljs$core$IFn$_invoke$arity$1(expr))), cljs.core.cst$sym$boolean);
  var ns = cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(info);
  var js_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns, cljs.core.cst$sym$js) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns, cljs.core.cst$sym$Math);
  var goog_QMARK_ = ns ? function() {
    var or__4311__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns, cljs.core.cst$sym$goog);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      var temp__4425__auto__ = [cljs.core.str(ns)].join("");
      if (temp__4425__auto__) {
        var ns_str = temp__4425__auto__;
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(clojure.string.split.cljs$core$IFn$_invoke$arity$2(ns_str, /\./), 0, null), "goog");
      } else {
        return null;
      }
    }
  }() : null;
  var keyword_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cst$kw$constant) && cljs.core.cst$kw$form.cljs$core$IFn$_invoke$arity$1(f) instanceof cljs.core.Keyword;
  var vec__12927 = fn_QMARK_ ? function() {
    var arity = cljs.core.count(args);
    var variadic_QMARK_ = cljs.core.cst$kw$variadic.cljs$core$IFn$_invoke$arity$1(info);
    var mps = cljs.core.cst$kw$method_DASH_params.cljs$core$IFn$_invoke$arity$1(info);
    var mfa = cljs.core.cst$kw$max_DASH_fixed_DASH_arity.cljs$core$IFn$_invoke$arity$1(info);
    if (cljs.core.not(variadic_QMARK_) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(mps), 1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, null], null);
    } else {
      if (function() {
        var and__4299__auto__ = variadic_QMARK_;
        if (and__4299__auto__) {
          return arity > mfa;
        } else {
          return and__4299__auto__;
        }
      }()) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(f, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$info], null), function(arity, variadic_QMARK_, mps, mfa, info, fn_QMARK_, protocol, tag, proto_QMARK_, opt_not_QMARK_, ns, js_QMARK_, goog_QMARK_, keyword_QMARK_, map__12925, map__12925__$1, expr, f, args, env) {
          return function(info__$1) {
            return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(info__$1, cljs.core.cst$kw$name, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(info__$1)), cljs.core.str(".cljs$core$IFn$_invoke$arity$variadic")].join(""))), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$info], null), function(arity, variadic_QMARK_, mps, mfa, info, 
            fn_QMARK_, protocol, tag, proto_QMARK_, opt_not_QMARK_, ns, js_QMARK_, goog_QMARK_, keyword_QMARK_, map__12925, map__12925__$1, expr, f, args, env) {
              return function(p1__12922_SHARP_) {
                return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(p1__12922_SHARP_, cljs.core.cst$kw$shadow), cljs.core.cst$kw$fn_DASH_self_DASH_name);
              };
            }(arity, variadic_QMARK_, mps, mfa, info, fn_QMARK_, protocol, tag, proto_QMARK_, opt_not_QMARK_, ns, js_QMARK_, goog_QMARK_, keyword_QMARK_, map__12925, map__12925__$1, expr, f, args, env));
          };
        }(arity, variadic_QMARK_, mps, mfa, info, fn_QMARK_, protocol, tag, proto_QMARK_, opt_not_QMARK_, ns, js_QMARK_, goog_QMARK_, keyword_QMARK_, map__12925, map__12925__$1, expr, f, args, env)), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$max_DASH_fixed_DASH_arity, mfa], null)], null);
      } else {
        var arities = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.count, mps);
        if (cljs.core.some(cljs.core.PersistentHashSet.fromArray([arity], true), arities)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(f, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$info], null), function(arities, arity, variadic_QMARK_, mps, mfa, info, fn_QMARK_, protocol, tag, proto_QMARK_, opt_not_QMARK_, ns, js_QMARK_, goog_QMARK_, keyword_QMARK_, map__12925, map__12925__$1, expr, f, args, env) {
            return function(info__$1) {
              return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(info__$1, cljs.core.cst$kw$name, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(info__$1)), cljs.core.str(".cljs$core$IFn$_invoke$arity$"), cljs.core.str(arity)].join(""))), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$info], null), function(arities, arity, variadic_QMARK_, 
              mps, mfa, info, fn_QMARK_, protocol, tag, proto_QMARK_, opt_not_QMARK_, ns, js_QMARK_, goog_QMARK_, keyword_QMARK_, map__12925, map__12925__$1, expr, f, args, env) {
                return function(p1__12923_SHARP_) {
                  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(p1__12923_SHARP_, cljs.core.cst$kw$shadow), cljs.core.cst$kw$fn_DASH_self_DASH_name);
                };
              }(arities, arity, variadic_QMARK_, mps, mfa, info, fn_QMARK_, protocol, tag, proto_QMARK_, opt_not_QMARK_, ns, js_QMARK_, goog_QMARK_, keyword_QMARK_, map__12925, map__12925__$1, expr, f, args, env));
            };
          }(arities, arity, variadic_QMARK_, mps, mfa, info, fn_QMARK_, protocol, tag, proto_QMARK_, opt_not_QMARK_, ns, js_QMARK_, goog_QMARK_, keyword_QMARK_, map__12925, map__12925__$1, expr, f, args, env)), null], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, null], null);
        }
      }
    }
  }() : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, null], null);
  var f__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12927, 0, null);
  var variadic_invoke = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12927, 1, null);
  var env__6652__auto__ = env;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
  } else {
  }
  if (opt_not_QMARK_) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["!(", cljs.core.first(args), ")"], 0));
  } else {
    if (proto_QMARK_) {
      var pimpl_12928 = [cljs.core.str(cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(cljs.compiler.protocol_prefix(protocol))), cljs.core.str(cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(cljs.core.name(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(info)))), cljs.core.str("$arity$"), cljs.core.str(cljs.core.count(args))].join("");
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.first(args), ".", pimpl_12928, "(", cljs.compiler.comma_sep(cljs.core.cons("null", cljs.core.rest(args))), ")"], 0));
    } else {
      if (keyword_QMARK_) {
        cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([f__$1, ".cljs$core$IFn$_invoke$arity$", cljs.core.count(args), "(", cljs.compiler.comma_sep(args), ")"], 0));
      } else {
        if (variadic_invoke) {
          var mfa_12929 = cljs.core.cst$kw$max_DASH_fixed_DASH_arity.cljs$core$IFn$_invoke$arity$1(variadic_invoke);
          cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([f__$1, "(", cljs.compiler.comma_sep(cljs.core.take.cljs$core$IFn$_invoke$arity$2(mfa_12929, args)), mfa_12929 === 0 ? null : ",", "cljs.core.array_seq([", cljs.compiler.comma_sep(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(mfa_12929, args)), "], 0))"], 0));
        } else {
          if (function() {
            var or__4311__auto__ = fn_QMARK_;
            if (or__4311__auto__) {
              return or__4311__auto__;
            } else {
              var or__4311__auto____$1 = js_QMARK_;
              if (or__4311__auto____$1) {
                return or__4311__auto____$1;
              } else {
                return goog_QMARK_;
              }
            }
          }()) {
            cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([f__$1, "(", cljs.compiler.comma_sep(args), ")"], 0));
          } else {
            if (function() {
              var and__4299__auto__ = cljs.analyzer._STAR_cljs_static_fns_STAR_;
              if (and__4299__auto__) {
                return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(f__$1), cljs.core.cst$kw$var);
              } else {
                return and__4299__auto__;
              }
            }()) {
              var fprop_12930 = [cljs.core.str(".cljs$core$IFn$_invoke$arity$"), cljs.core.str(cljs.core.count(args))].join("");
              cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(", f__$1, fprop_12930, " ? ", f__$1, fprop_12930, "(", cljs.compiler.comma_sep(args), ") : ", f__$1, ".call(", cljs.compiler.comma_sep(cljs.core.cons("null", args)), "))"], 0));
            } else {
              cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([f__$1, ".call(", cljs.compiler.comma_sep(cljs.core.cons("null", args)), ")"], 0));
            }
          }
        }
      }
    }
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    return null;
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$new, function(p__12931) {
  var map__12932 = p__12931;
  var map__12932__$1 = (!(map__12932 == null) ? map__12932.cljs$lang$protocol_mask$partition0$ & 64 || map__12932.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12932) : map__12932;
  var ctor = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12932__$1, cljs.core.cst$kw$ctor);
  var args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12932__$1, cljs.core.cst$kw$args);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12932__$1, cljs.core.cst$kw$env);
  var env__6652__auto__ = env;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
  } else {
  }
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["(new ", ctor, "(", cljs.compiler.comma_sep(args), "))"], 0));
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    return null;
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$set_BANG_, function(p__12934) {
  var map__12935 = p__12934;
  var map__12935__$1 = (!(map__12935 == null) ? map__12935.cljs$lang$protocol_mask$partition0$ & 64 || map__12935.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12935) : map__12935;
  var target = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12935__$1, cljs.core.cst$kw$target);
  var val = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12935__$1, cljs.core.cst$kw$val);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12935__$1, cljs.core.cst$kw$env);
  var env__6652__auto__ = env;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
  } else {
  }
  cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([target, " = ", val], 0));
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    return null;
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
});
cljs.compiler.load_libs = function cljs$compiler$load_libs(libs, seen, reloads) {
  var loaded_libs = cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$sym$cljs$core$_STAR_loaded_DASH_libs_STAR_);
  var loaded_libs_temp = cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$sym$cljs$core$_STAR_loaded_DASH_libs_STAR_));
  if (cljs.core.cst$kw$reload_DASH_all.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(libs))) {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["if(!COMPILED) ", loaded_libs_temp, " = ", loaded_libs, " || cljs.core.set();"], 0));
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["if(!COMPILED) ", loaded_libs, " = cljs.core.set();"], 0));
  } else {
  }
  var seq__12941_12945 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.set(cljs.core.vals(seen)), cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.vals(libs))));
  var chunk__12942_12946 = null;
  var count__12943_12947 = 0;
  var i__12944_12948 = 0;
  while (true) {
    if (i__12944_12948 < count__12943_12947) {
      var lib_12949 = chunk__12942_12946.cljs$core$IIndexed$_nth$arity$2(null, i__12944_12948);
      if (function() {
        var or__4311__auto__ = cljs.core.cst$kw$reload.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(libs));
        if (or__4311__auto__) {
          return or__4311__auto__;
        } else {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(reloads, lib_12949), cljs.core.cst$kw$reload);
        }
      }()) {
        cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["goog.require('", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(lib_12949), "', 'reload');"], 0));
      } else {
        if (function() {
          var or__4311__auto__ = cljs.core.cst$kw$reload_DASH_all.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(libs));
          if (or__4311__auto__) {
            return or__4311__auto__;
          } else {
            return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(reloads, lib_12949), cljs.core.cst$kw$reload_DASH_all);
          }
        }()) {
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["goog.require('", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(lib_12949), "', 'reload-all');"], 0));
        } else {
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["goog.require('", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(lib_12949), "');"], 0));
        }
      }
      var G__12950 = seq__12941_12945;
      var G__12951 = chunk__12942_12946;
      var G__12952 = count__12943_12947;
      var G__12953 = i__12944_12948 + 1;
      seq__12941_12945 = G__12950;
      chunk__12942_12946 = G__12951;
      count__12943_12947 = G__12952;
      i__12944_12948 = G__12953;
      continue;
    } else {
      var temp__4425__auto___12954 = cljs.core.seq(seq__12941_12945);
      if (temp__4425__auto___12954) {
        var seq__12941_12955__$1 = temp__4425__auto___12954;
        if (cljs.core.chunked_seq_QMARK_(seq__12941_12955__$1)) {
          var c__5095__auto___12956 = cljs.core.chunk_first(seq__12941_12955__$1);
          var G__12957 = cljs.core.chunk_rest(seq__12941_12955__$1);
          var G__12958 = c__5095__auto___12956;
          var G__12959 = cljs.core.count(c__5095__auto___12956);
          var G__12960 = 0;
          seq__12941_12945 = G__12957;
          chunk__12942_12946 = G__12958;
          count__12943_12947 = G__12959;
          i__12944_12948 = G__12960;
          continue;
        } else {
          var lib_12961 = cljs.core.first(seq__12941_12955__$1);
          if (function() {
            var or__4311__auto__ = cljs.core.cst$kw$reload.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(libs));
            if (or__4311__auto__) {
              return or__4311__auto__;
            } else {
              return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(reloads, lib_12961), cljs.core.cst$kw$reload);
            }
          }()) {
            cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["goog.require('", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(lib_12961), "', 'reload');"], 0));
          } else {
            if (function() {
              var or__4311__auto__ = cljs.core.cst$kw$reload_DASH_all.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(libs));
              if (or__4311__auto__) {
                return or__4311__auto__;
              } else {
                return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(reloads, lib_12961), cljs.core.cst$kw$reload_DASH_all);
              }
            }()) {
              cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["goog.require('", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(lib_12961), "', 'reload-all');"], 0));
            } else {
              cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["goog.require('", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(lib_12961), "');"], 0));
            }
          }
          var G__12962 = cljs.core.next(seq__12941_12955__$1);
          var G__12963 = null;
          var G__12964 = 0;
          var G__12965 = 0;
          seq__12941_12945 = G__12962;
          chunk__12942_12946 = G__12963;
          count__12943_12947 = G__12964;
          i__12944_12948 = G__12965;
          continue;
        }
      } else {
      }
    }
    break;
  }
  if (cljs.core.cst$kw$reload_DASH_all.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(libs))) {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["if(!COMPILED) ", loaded_libs, " = cljs.core.into(", loaded_libs_temp, ", ", loaded_libs, ");"], 0));
  } else {
    return null;
  }
};
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$ns, function(p__12966) {
  var map__12967 = p__12966;
  var map__12967__$1 = (!(map__12967 == null) ? map__12967.cljs$lang$protocol_mask$partition0$ & 64 || map__12967.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12967) : map__12967;
  var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12967__$1, cljs.core.cst$kw$name);
  var requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12967__$1, cljs.core.cst$kw$requires);
  var uses = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12967__$1, cljs.core.cst$kw$uses);
  var require_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12967__$1, cljs.core.cst$kw$require_DASH_macros);
  var reloads = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12967__$1, cljs.core.cst$kw$reloads);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12967__$1, cljs.core.cst$kw$env);
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["goog.provide('", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(name), "');"], 0));
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(name, cljs.core.cst$sym$cljs$core)) {
  } else {
    cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["goog.require('cljs.core');"], 0));
  }
  cljs.compiler.load_libs(requires, null, cljs.core.cst$kw$require.cljs$core$IFn$_invoke$arity$1(reloads));
  return cljs.compiler.load_libs(uses, requires, cljs.core.cst$kw$use.cljs$core$IFn$_invoke$arity$1(reloads));
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$deftype_STAR_, function(p__12969) {
  var map__12970 = p__12969;
  var map__12970__$1 = (!(map__12970 == null) ? map__12970.cljs$lang$protocol_mask$partition0$ & 64 || map__12970.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12970) : map__12970;
  var t = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12970__$1, cljs.core.cst$kw$t);
  var fields = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12970__$1, cljs.core.cst$kw$fields);
  var pmasks = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12970__$1, cljs.core.cst$kw$pmasks);
  var body = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12970__$1, cljs.core.cst$kw$body);
  var fields__$1 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.compiler.munge, fields);
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([""], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["/**"], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["* @constructor"], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["*/"], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(t), " = (function (", cljs.compiler.comma_sep(fields__$1), "){"], 0));
  var seq__12972_12982 = cljs.core.seq(fields__$1);
  var chunk__12973_12983 = null;
  var count__12974_12984 = 0;
  var i__12975_12985 = 0;
  while (true) {
    if (i__12975_12985 < count__12974_12984) {
      var fld_12986 = chunk__12973_12983.cljs$core$IIndexed$_nth$arity$2(null, i__12975_12985);
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["this.", fld_12986, " = ", fld_12986, ";"], 0));
      var G__12987 = seq__12972_12982;
      var G__12988 = chunk__12973_12983;
      var G__12989 = count__12974_12984;
      var G__12990 = i__12975_12985 + 1;
      seq__12972_12982 = G__12987;
      chunk__12973_12983 = G__12988;
      count__12974_12984 = G__12989;
      i__12975_12985 = G__12990;
      continue;
    } else {
      var temp__4425__auto___12991 = cljs.core.seq(seq__12972_12982);
      if (temp__4425__auto___12991) {
        var seq__12972_12992__$1 = temp__4425__auto___12991;
        if (cljs.core.chunked_seq_QMARK_(seq__12972_12992__$1)) {
          var c__5095__auto___12993 = cljs.core.chunk_first(seq__12972_12992__$1);
          var G__12994 = cljs.core.chunk_rest(seq__12972_12992__$1);
          var G__12995 = c__5095__auto___12993;
          var G__12996 = cljs.core.count(c__5095__auto___12993);
          var G__12997 = 0;
          seq__12972_12982 = G__12994;
          chunk__12973_12983 = G__12995;
          count__12974_12984 = G__12996;
          i__12975_12985 = G__12997;
          continue;
        } else {
          var fld_12998 = cljs.core.first(seq__12972_12992__$1);
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["this.", fld_12998, " = ", fld_12998, ";"], 0));
          var G__12999 = cljs.core.next(seq__12972_12992__$1);
          var G__13000 = null;
          var G__13001 = 0;
          var G__13002 = 0;
          seq__12972_12982 = G__12999;
          chunk__12973_12983 = G__13000;
          count__12974_12984 = G__13001;
          i__12975_12985 = G__13002;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var seq__12976_13003 = cljs.core.seq(pmasks);
  var chunk__12977_13004 = null;
  var count__12978_13005 = 0;
  var i__12979_13006 = 0;
  while (true) {
    if (i__12979_13006 < count__12978_13005) {
      var vec__12980_13007 = chunk__12977_13004.cljs$core$IIndexed$_nth$arity$2(null, i__12979_13006);
      var pno_13008 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12980_13007, 0, null);
      var pmask_13009 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12980_13007, 1, null);
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["this.cljs$lang$protocol_mask$partition", pno_13008, "$ = ", pmask_13009, ";"], 0));
      var G__13010 = seq__12976_13003;
      var G__13011 = chunk__12977_13004;
      var G__13012 = count__12978_13005;
      var G__13013 = i__12979_13006 + 1;
      seq__12976_13003 = G__13010;
      chunk__12977_13004 = G__13011;
      count__12978_13005 = G__13012;
      i__12979_13006 = G__13013;
      continue;
    } else {
      var temp__4425__auto___13014 = cljs.core.seq(seq__12976_13003);
      if (temp__4425__auto___13014) {
        var seq__12976_13015__$1 = temp__4425__auto___13014;
        if (cljs.core.chunked_seq_QMARK_(seq__12976_13015__$1)) {
          var c__5095__auto___13016 = cljs.core.chunk_first(seq__12976_13015__$1);
          var G__13017 = cljs.core.chunk_rest(seq__12976_13015__$1);
          var G__13018 = c__5095__auto___13016;
          var G__13019 = cljs.core.count(c__5095__auto___13016);
          var G__13020 = 0;
          seq__12976_13003 = G__13017;
          chunk__12977_13004 = G__13018;
          count__12978_13005 = G__13019;
          i__12979_13006 = G__13020;
          continue;
        } else {
          var vec__12981_13021 = cljs.core.first(seq__12976_13015__$1);
          var pno_13022 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12981_13021, 0, null);
          var pmask_13023 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12981_13021, 1, null);
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["this.cljs$lang$protocol_mask$partition", pno_13022, "$ = ", pmask_13023, ";"], 0));
          var G__13024 = cljs.core.next(seq__12976_13015__$1);
          var G__13025 = null;
          var G__13026 = 0;
          var G__13027 = 0;
          seq__12976_13003 = G__13024;
          chunk__12977_13004 = G__13025;
          count__12978_13005 = G__13026;
          i__12979_13006 = G__13027;
          continue;
        }
      } else {
      }
    }
    break;
  }
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["})"], 0));
  return cljs.compiler.emit(body);
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$defrecord_STAR_, function(p__13028) {
  var map__13029 = p__13028;
  var map__13029__$1 = (!(map__13029 == null) ? map__13029.cljs$lang$protocol_mask$partition0$ & 64 || map__13029.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__13029) : map__13029;
  var t = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13029__$1, cljs.core.cst$kw$t);
  var fields = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13029__$1, cljs.core.cst$kw$fields);
  var pmasks = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13029__$1, cljs.core.cst$kw$pmasks);
  var body = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13029__$1, cljs.core.cst$kw$body);
  var fields__$1 = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.compiler.munge, fields), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$__meta, cljs.core.cst$sym$__extmap, cljs.core.cst$sym$__hash], null));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([""], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["/**"], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["* @constructor"], 0));
  var seq__13031_13045 = cljs.core.seq(fields__$1);
  var chunk__13032_13046 = null;
  var count__13033_13047 = 0;
  var i__13034_13048 = 0;
  while (true) {
    if (i__13034_13048 < count__13033_13047) {
      var fld_13049 = chunk__13032_13046.cljs$core$IIndexed$_nth$arity$2(null, i__13034_13048);
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["* @param {*} ", fld_13049], 0));
      var G__13050 = seq__13031_13045;
      var G__13051 = chunk__13032_13046;
      var G__13052 = count__13033_13047;
      var G__13053 = i__13034_13048 + 1;
      seq__13031_13045 = G__13050;
      chunk__13032_13046 = G__13051;
      count__13033_13047 = G__13052;
      i__13034_13048 = G__13053;
      continue;
    } else {
      var temp__4425__auto___13054 = cljs.core.seq(seq__13031_13045);
      if (temp__4425__auto___13054) {
        var seq__13031_13055__$1 = temp__4425__auto___13054;
        if (cljs.core.chunked_seq_QMARK_(seq__13031_13055__$1)) {
          var c__5095__auto___13056 = cljs.core.chunk_first(seq__13031_13055__$1);
          var G__13057 = cljs.core.chunk_rest(seq__13031_13055__$1);
          var G__13058 = c__5095__auto___13056;
          var G__13059 = cljs.core.count(c__5095__auto___13056);
          var G__13060 = 0;
          seq__13031_13045 = G__13057;
          chunk__13032_13046 = G__13058;
          count__13033_13047 = G__13059;
          i__13034_13048 = G__13060;
          continue;
        } else {
          var fld_13061 = cljs.core.first(seq__13031_13055__$1);
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["* @param {*} ", fld_13061], 0));
          var G__13062 = cljs.core.next(seq__13031_13055__$1);
          var G__13063 = null;
          var G__13064 = 0;
          var G__13065 = 0;
          seq__13031_13045 = G__13062;
          chunk__13032_13046 = G__13063;
          count__13033_13047 = G__13064;
          i__13034_13048 = G__13065;
          continue;
        }
      } else {
      }
    }
    break;
  }
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["* @param {*=} __meta "], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["* @param {*=} __extmap"], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["* @param {number|null} __hash"], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["*/"], 0));
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(t), " = (function (", cljs.compiler.comma_sep(fields__$1), "){"], 0));
  var seq__13035_13066 = cljs.core.seq(fields__$1);
  var chunk__13036_13067 = null;
  var count__13037_13068 = 0;
  var i__13038_13069 = 0;
  while (true) {
    if (i__13038_13069 < count__13037_13068) {
      var fld_13070 = chunk__13036_13067.cljs$core$IIndexed$_nth$arity$2(null, i__13038_13069);
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["this.", fld_13070, " = ", fld_13070, ";"], 0));
      var G__13071 = seq__13035_13066;
      var G__13072 = chunk__13036_13067;
      var G__13073 = count__13037_13068;
      var G__13074 = i__13038_13069 + 1;
      seq__13035_13066 = G__13071;
      chunk__13036_13067 = G__13072;
      count__13037_13068 = G__13073;
      i__13038_13069 = G__13074;
      continue;
    } else {
      var temp__4425__auto___13075 = cljs.core.seq(seq__13035_13066);
      if (temp__4425__auto___13075) {
        var seq__13035_13076__$1 = temp__4425__auto___13075;
        if (cljs.core.chunked_seq_QMARK_(seq__13035_13076__$1)) {
          var c__5095__auto___13077 = cljs.core.chunk_first(seq__13035_13076__$1);
          var G__13078 = cljs.core.chunk_rest(seq__13035_13076__$1);
          var G__13079 = c__5095__auto___13077;
          var G__13080 = cljs.core.count(c__5095__auto___13077);
          var G__13081 = 0;
          seq__13035_13066 = G__13078;
          chunk__13036_13067 = G__13079;
          count__13037_13068 = G__13080;
          i__13038_13069 = G__13081;
          continue;
        } else {
          var fld_13082 = cljs.core.first(seq__13035_13076__$1);
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["this.", fld_13082, " = ", fld_13082, ";"], 0));
          var G__13083 = cljs.core.next(seq__13035_13076__$1);
          var G__13084 = null;
          var G__13085 = 0;
          var G__13086 = 0;
          seq__13035_13066 = G__13083;
          chunk__13036_13067 = G__13084;
          count__13037_13068 = G__13085;
          i__13038_13069 = G__13086;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var seq__13039_13087 = cljs.core.seq(pmasks);
  var chunk__13040_13088 = null;
  var count__13041_13089 = 0;
  var i__13042_13090 = 0;
  while (true) {
    if (i__13042_13090 < count__13041_13089) {
      var vec__13043_13091 = chunk__13040_13088.cljs$core$IIndexed$_nth$arity$2(null, i__13042_13090);
      var pno_13092 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13043_13091, 0, null);
      var pmask_13093 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13043_13091, 1, null);
      cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["this.cljs$lang$protocol_mask$partition", pno_13092, "$ = ", pmask_13093, ";"], 0));
      var G__13094 = seq__13039_13087;
      var G__13095 = chunk__13040_13088;
      var G__13096 = count__13041_13089;
      var G__13097 = i__13042_13090 + 1;
      seq__13039_13087 = G__13094;
      chunk__13040_13088 = G__13095;
      count__13041_13089 = G__13096;
      i__13042_13090 = G__13097;
      continue;
    } else {
      var temp__4425__auto___13098 = cljs.core.seq(seq__13039_13087);
      if (temp__4425__auto___13098) {
        var seq__13039_13099__$1 = temp__4425__auto___13098;
        if (cljs.core.chunked_seq_QMARK_(seq__13039_13099__$1)) {
          var c__5095__auto___13100 = cljs.core.chunk_first(seq__13039_13099__$1);
          var G__13101 = cljs.core.chunk_rest(seq__13039_13099__$1);
          var G__13102 = c__5095__auto___13100;
          var G__13103 = cljs.core.count(c__5095__auto___13100);
          var G__13104 = 0;
          seq__13039_13087 = G__13101;
          chunk__13040_13088 = G__13102;
          count__13041_13089 = G__13103;
          i__13042_13090 = G__13104;
          continue;
        } else {
          var vec__13044_13105 = cljs.core.first(seq__13039_13099__$1);
          var pno_13106 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13044_13105, 0, null);
          var pmask_13107 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13044_13105, 1, null);
          cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["this.cljs$lang$protocol_mask$partition", pno_13106, "$ = ", pmask_13107, ";"], 0));
          var G__13108 = cljs.core.next(seq__13039_13099__$1);
          var G__13109 = null;
          var G__13110 = 0;
          var G__13111 = 0;
          seq__13039_13087 = G__13108;
          chunk__13040_13088 = G__13109;
          count__13041_13089 = G__13110;
          i__13042_13090 = G__13111;
          continue;
        }
      } else {
      }
    }
    break;
  }
  cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["})"], 0));
  return cljs.compiler.emit(body);
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$dot, function(p__13112) {
  var map__13113 = p__13112;
  var map__13113__$1 = (!(map__13113 == null) ? map__13113.cljs$lang$protocol_mask$partition0$ & 64 || map__13113.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__13113) : map__13113;
  var target = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13113__$1, cljs.core.cst$kw$target);
  var field = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13113__$1, cljs.core.cst$kw$field);
  var method = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13113__$1, cljs.core.cst$kw$method);
  var args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13113__$1, cljs.core.cst$kw$args);
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13113__$1, cljs.core.cst$kw$env);
  var env__6652__auto__ = env;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
  } else {
  }
  if (field) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([target, ".", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$2(field, cljs.core.PersistentHashSet.EMPTY)], 0));
  } else {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([target, ".", cljs.compiler.munge.cljs$core$IFn$_invoke$arity$2(method, cljs.core.PersistentHashSet.EMPTY), "(", cljs.compiler.comma_sep(args), ")"], 0));
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    return null;
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
});
cljs.compiler.emit_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$js, function(p__13115) {
  var map__13116 = p__13115;
  var map__13116__$1 = (!(map__13116 == null) ? map__13116.cljs$lang$protocol_mask$partition0$ & 64 || map__13116.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__13116) : map__13116;
  var env = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13116__$1, cljs.core.cst$kw$env);
  var code = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13116__$1, cljs.core.cst$kw$code);
  var segs = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13116__$1, cljs.core.cst$kw$segs);
  var args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13116__$1, cljs.core.cst$kw$args);
  var env__6652__auto__ = env;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$return, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["return "], 0));
  } else {
  }
  if (code) {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([code], 0));
  } else {
    cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(segs, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(null)), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(args, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [null], null)))], 0));
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$expr, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(env__6652__auto__))) {
    return null;
  } else {
    return cljs.compiler.emitln.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";"], 0));
  }
});
cljs.compiler.build_affecting_options = function cljs$compiler$build_affecting_options(opts) {
  return cljs.core.select_keys(opts, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$static_DASH_fns, cljs.core.cst$kw$optimize_DASH_constants, cljs.core.cst$kw$elide_DASH_asserts, cljs.core.cst$kw$target], null));
};
cljs.compiler.emit_constants_table = function cljs$compiler$emit_constants_table(table) {
  var seq__13126 = cljs.core.seq(table);
  var chunk__13127 = null;
  var count__13128 = 0;
  var i__13129 = 0;
  while (true) {
    if (i__13129 < count__13128) {
      var vec__13130 = chunk__13127.cljs$core$IIndexed$_nth$arity$2(null, i__13129);
      var sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13130, 0, null);
      var value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13130, 1, null);
      var ns_13132 = cljs.core.namespace(sym);
      var name_13133 = cljs.core.name(sym);
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cljs.core.", value, " = "], 0));
      if (sym instanceof cljs.core.Keyword) {
        cljs.compiler.emits_keyword(sym);
      } else {
        if (sym instanceof cljs.core.Symbol) {
          cljs.compiler.emits_symbol(sym);
        } else {
          throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([cljs.core.str("Cannot emit constant for type "), cljs.core.str(cljs.core.type(sym))].join(""), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$error, cljs.core.cst$kw$invalid_DASH_constant_DASH_type], null));
        }
      }
      cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";\n"], 0));
      var G__13134 = seq__13126;
      var G__13135 = chunk__13127;
      var G__13136 = count__13128;
      var G__13137 = i__13129 + 1;
      seq__13126 = G__13134;
      chunk__13127 = G__13135;
      count__13128 = G__13136;
      i__13129 = G__13137;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__13126);
      if (temp__4425__auto__) {
        var seq__13126__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__13126__$1)) {
          var c__5095__auto__ = cljs.core.chunk_first(seq__13126__$1);
          var G__13138 = cljs.core.chunk_rest(seq__13126__$1);
          var G__13139 = c__5095__auto__;
          var G__13140 = cljs.core.count(c__5095__auto__);
          var G__13141 = 0;
          seq__13126 = G__13138;
          chunk__13127 = G__13139;
          count__13128 = G__13140;
          i__13129 = G__13141;
          continue;
        } else {
          var vec__13131 = cljs.core.first(seq__13126__$1);
          var sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13131, 0, null);
          var value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13131, 1, null);
          var ns_13142 = cljs.core.namespace(sym);
          var name_13143 = cljs.core.name(sym);
          cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["cljs.core.", value, " = "], 0));
          if (sym instanceof cljs.core.Keyword) {
            cljs.compiler.emits_keyword(sym);
          } else {
            if (sym instanceof cljs.core.Symbol) {
              cljs.compiler.emits_symbol(sym);
            } else {
              throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([cljs.core.str("Cannot emit constant for type "), cljs.core.str(cljs.core.type(sym))].join(""), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$error, cljs.core.cst$kw$invalid_DASH_constant_DASH_type], null));
            }
          }
          cljs.compiler.emits.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([";\n"], 0));
          var G__13144 = cljs.core.next(seq__13126__$1);
          var G__13145 = null;
          var G__13146 = 0;
          var G__13147 = 0;
          seq__13126 = G__13144;
          chunk__13127 = G__13145;
          count__13128 = G__13146;
          i__13129 = G__13147;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function clojure$walk$walk(inner, outer, form) {
  if (cljs.core.list_QMARK_(form)) {
    var G__11371 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.list, cljs.core.map.cljs$core$IFn$_invoke$arity$2(inner, form));
    return outer.cljs$core$IFn$_invoke$arity$1 ? outer.cljs$core$IFn$_invoke$arity$1(G__11371) : outer.call(null, G__11371);
  } else {
    if (!(form == null) ? form.cljs$lang$protocol_mask$partition0$ & 2048 || form.cljs$core$IMapEntry$ ? true : !form.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, form) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, form)) {
      var G__11373 = cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(inner, form));
      return outer.cljs$core$IFn$_invoke$arity$1 ? outer.cljs$core$IFn$_invoke$arity$1(G__11373) : outer.call(null, G__11373);
    } else {
      if (cljs.core.seq_QMARK_(form)) {
        var G__11374 = cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(inner, form));
        return outer.cljs$core$IFn$_invoke$arity$1 ? outer.cljs$core$IFn$_invoke$arity$1(G__11374) : outer.call(null, G__11374);
      } else {
        if (!(form == null) ? form.cljs$lang$protocol_mask$partition0$ & 67108864 || form.cljs$core$IRecord$ ? true : !form.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, form) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, form)) {
          var G__11376 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(r, x) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(r, inner.cljs$core$IFn$_invoke$arity$1 ? inner.cljs$core$IFn$_invoke$arity$1(x) : inner.call(null, x));
          }, form, form);
          return outer.cljs$core$IFn$_invoke$arity$1 ? outer.cljs$core$IFn$_invoke$arity$1(G__11376) : outer.call(null, G__11376);
        } else {
          if (cljs.core.coll_QMARK_(form)) {
            var G__11377 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(form), cljs.core.map.cljs$core$IFn$_invoke$arity$2(inner, form));
            return outer.cljs$core$IFn$_invoke$arity$1 ? outer.cljs$core$IFn$_invoke$arity$1(G__11377) : outer.call(null, G__11377);
          } else {
            return outer.cljs$core$IFn$_invoke$arity$1 ? outer.cljs$core$IFn$_invoke$arity$1(form) : outer.call(null, form);
          }
        }
      }
    }
  }
};
clojure.walk.postwalk = function clojure$walk$postwalk(f, form) {
  return clojure.walk.walk(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(clojure$walk$postwalk, f), f, form);
};
clojure.walk.prewalk = function clojure$walk$prewalk(f, form) {
  return clojure.walk.walk(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(clojure$walk$prewalk, f), cljs.core.identity, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(form) : f.call(null, form));
};
clojure.walk.keywordize_keys = function clojure$walk$keywordize_keys(m) {
  var f = function(p__11380) {
    var vec__11381 = p__11380;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11381, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11381, 1, null);
    if (typeof k === "string") {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk(function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_(x)) {
        return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.stringify_keys = function clojure$walk$stringify_keys(m) {
  var f = function(p__11384) {
    var vec__11385 = p__11384;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11385, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11385, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name(k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk(function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_(x)) {
        return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.prewalk_replace = function clojure$walk$prewalk_replace(smap, form) {
  return clojure.walk.prewalk(function(x) {
    if (cljs.core.contains_QMARK_(smap, x)) {
      return smap.cljs$core$IFn$_invoke$arity$1 ? smap.cljs$core$IFn$_invoke$arity$1(x) : smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
clojure.walk.postwalk_replace = function clojure$walk$postwalk_replace(smap, form) {
  return clojure.walk.postwalk(function(x) {
    if (cljs.core.contains_QMARK_(smap, x)) {
      return smap.cljs$core$IFn$_invoke$arity$1 ? smap.cljs$core$IFn$_invoke$arity$1(x) : smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
goog.provide("cljs.core$macros");
goog.require("cljs.core");
goog.require("clojure.walk");
goog.require("clojure.set");
goog.require("cljs.compiler");
goog.require("cljs.env");
goog.require("cljs.core");
goog.require("cljs.analyzer");
cljs.core$macros.__GT_ = function cljs$core$macros$__GT_() {
  var args__5357__auto__ = [];
  var len__5350__auto___10149 = arguments.length;
  var i__5351__auto___10150 = 0;
  while (true) {
    if (i__5351__auto___10150 < len__5350__auto___10149) {
      args__5357__auto__.push(arguments[i__5351__auto___10150]);
      var G__10151 = i__5351__auto___10150 + 1;
      i__5351__auto___10150 = G__10151;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.__GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.__GT_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, forms) {
  var x__$1 = x;
  var forms__$1 = forms;
  while (true) {
    if (forms__$1) {
      var form = cljs.core.first(forms__$1);
      var threaded = cljs.core.seq_QMARK_(form) ? cljs.core.with_meta(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.first(form)), cljs.core._conj(cljs.core.List.EMPTY, x__$1), cljs.core.array_seq([cljs.core.next(form)], 0)))), cljs.core.meta(form)) : cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, x__$1), form);
      var G__10152 = threaded;
      var G__10153 = cljs.core.next(forms__$1);
      x__$1 = G__10152;
      forms__$1 = G__10153;
      continue;
    } else {
      return x__$1;
    }
    break;
  }
};
cljs.core$macros.__GT_.cljs$lang$maxFixedArity = 3;
cljs.core$macros.__GT_.cljs$lang$applyTo = function(seq10145) {
  var G__10146 = cljs.core.first(seq10145);
  var seq10145__$1 = cljs.core.next(seq10145);
  var G__10147 = cljs.core.first(seq10145__$1);
  var seq10145__$2 = cljs.core.next(seq10145__$1);
  var G__10148 = cljs.core.first(seq10145__$2);
  var seq10145__$3 = cljs.core.next(seq10145__$2);
  return cljs.core$macros.__GT_.cljs$core$IFn$_invoke$arity$variadic(G__10146, G__10147, G__10148, seq10145__$3);
};
cljs.core$macros.__GT_.cljs$lang$macro = true;
cljs.core$macros.__GT__GT_ = function cljs$core$macros$__GT__GT_() {
  var args__5357__auto__ = [];
  var len__5350__auto___10158 = arguments.length;
  var i__5351__auto___10159 = 0;
  while (true) {
    if (i__5351__auto___10159 < len__5350__auto___10158) {
      args__5357__auto__.push(arguments[i__5351__auto___10159]);
      var G__10160 = i__5351__auto___10159 + 1;
      i__5351__auto___10159 = G__10160;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.__GT__GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.__GT__GT_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, forms) {
  var x__$1 = x;
  var forms__$1 = forms;
  while (true) {
    if (forms__$1) {
      var form = cljs.core.first(forms__$1);
      var threaded = cljs.core.seq_QMARK_(form) ? cljs.core.with_meta(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.first(form)), cljs.core.next(form), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, x__$1)], 0)))), cljs.core.meta(form)) : cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, x__$1), form);
      var G__10161 = threaded;
      var G__10162 = cljs.core.next(forms__$1);
      x__$1 = G__10161;
      forms__$1 = G__10162;
      continue;
    } else {
      return x__$1;
    }
    break;
  }
};
cljs.core$macros.__GT__GT_.cljs$lang$maxFixedArity = 3;
cljs.core$macros.__GT__GT_.cljs$lang$applyTo = function(seq10154) {
  var G__10155 = cljs.core.first(seq10154);
  var seq10154__$1 = cljs.core.next(seq10154);
  var G__10156 = cljs.core.first(seq10154__$1);
  var seq10154__$2 = cljs.core.next(seq10154__$1);
  var G__10157 = cljs.core.first(seq10154__$2);
  var seq10154__$3 = cljs.core.next(seq10154__$2);
  return cljs.core$macros.__GT__GT_.cljs$core$IFn$_invoke$arity$variadic(G__10155, G__10156, G__10157, seq10154__$3);
};
cljs.core$macros.__GT__GT_.cljs$lang$macro = true;
cljs.core$macros._DOT__DOT_ = function cljs$core$macros$_DOT__DOT_() {
  var args10163 = [];
  var len__5350__auto___10171 = arguments.length;
  var i__5351__auto___10172 = 0;
  while (true) {
    if (i__5351__auto___10172 < len__5350__auto___10171) {
      args10163.push(arguments[i__5351__auto___10172]);
      var G__10173 = i__5351__auto___10172 + 1;
      i__5351__auto___10172 = G__10173;
      continue;
    } else {
    }
    break;
  }
  var G__10170 = args10163.length;
  switch(G__10170) {
    case 4:
      return cljs.core$macros._DOT__DOT_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args10163.slice(4), 0);
      return cljs.core$macros._DOT__DOT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5369__auto__);
  }
};
cljs.core$macros._DOT__DOT_.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, form) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, form)], 0))));
};
cljs.core$macros._DOT__DOT_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, form, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$$), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  form)], 0))))), cljs.core.array_seq([more], 0))));
};
cljs.core$macros._DOT__DOT_.cljs$lang$applyTo = function(seq10164) {
  var G__10165 = cljs.core.first(seq10164);
  var seq10164__$1 = cljs.core.next(seq10164);
  var G__10166 = cljs.core.first(seq10164__$1);
  var seq10164__$2 = cljs.core.next(seq10164__$1);
  var G__10167 = cljs.core.first(seq10164__$2);
  var seq10164__$3 = cljs.core.next(seq10164__$2);
  var G__10168 = cljs.core.first(seq10164__$3);
  var seq10164__$4 = cljs.core.next(seq10164__$3);
  return cljs.core$macros._DOT__DOT_.cljs$core$IFn$_invoke$arity$variadic(G__10165, G__10166, G__10167, G__10168, seq10164__$4);
};
cljs.core$macros._DOT__DOT_.cljs$lang$maxFixedArity = 4;
cljs.core$macros._DOT__DOT_.cljs$lang$macro = true;
cljs.core$macros.comment = function cljs$core$macros$comment() {
  var args__5357__auto__ = [];
  var len__5350__auto___10178 = arguments.length;
  var i__5351__auto___10179 = 0;
  while (true) {
    if (i__5351__auto___10179 < len__5350__auto___10178) {
      args__5357__auto__.push(arguments[i__5351__auto___10179]);
      var G__10180 = i__5351__auto___10179 + 1;
      i__5351__auto___10179 = G__10180;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 2 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(2), 0) : null;
  return cljs.core$macros.comment.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
};
cljs.core$macros.comment.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return null;
};
cljs.core$macros.comment.cljs$lang$maxFixedArity = 2;
cljs.core$macros.comment.cljs$lang$applyTo = function(seq10175) {
  var G__10176 = cljs.core.first(seq10175);
  var seq10175__$1 = cljs.core.next(seq10175);
  var G__10177 = cljs.core.first(seq10175__$1);
  var seq10175__$2 = cljs.core.next(seq10175__$1);
  return cljs.core$macros.comment.cljs$core$IFn$_invoke$arity$variadic(G__10176, G__10177, seq10175__$2);
};
cljs.core$macros.comment.cljs$lang$macro = true;
cljs.core$macros.cond = function cljs$core$macros$cond() {
  var args__5357__auto__ = [];
  var len__5350__auto___10184 = arguments.length;
  var i__5351__auto___10185 = 0;
  while (true) {
    if (i__5351__auto___10185 < len__5350__auto___10184) {
      args__5357__auto__.push(arguments[i__5351__auto___10185]);
      var G__10186 = i__5351__auto___10185 + 1;
      i__5351__auto___10185 = G__10186;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 2 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(2), 0) : null;
  return cljs.core$macros.cond.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
};
cljs.core$macros.cond.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, clauses) {
  if (clauses) {
    return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cons(cljs.core.cst$sym$cljs$core_SLASH_cond, cljs.core.next(cljs.core.next(clauses)))), cljs.core.next(clauses) ? cljs.core.second(clauses) : function() {
      throw new Error("cond requires an even number of forms");
    }()), cljs.core.first(clauses)), cljs.core.cst$sym$if);
  } else {
    return null;
  }
};
cljs.core$macros.cond.cljs$lang$maxFixedArity = 2;
cljs.core$macros.cond.cljs$lang$applyTo = function(seq10181) {
  var G__10182 = cljs.core.first(seq10181);
  var seq10181__$1 = cljs.core.next(seq10181);
  var G__10183 = cljs.core.first(seq10181__$1);
  var seq10181__$2 = cljs.core.next(seq10181__$1);
  return cljs.core$macros.cond.cljs$core$IFn$_invoke$arity$variadic(G__10182, G__10183, seq10181__$2);
};
cljs.core$macros.cond.cljs$lang$macro = true;
cljs.core$macros.declare = function cljs$core$macros$declare() {
  var args__5357__auto__ = [];
  var len__5350__auto___10191 = arguments.length;
  var i__5351__auto___10192 = 0;
  while (true) {
    if (i__5351__auto___10192 < len__5350__auto___10191) {
      args__5357__auto__.push(arguments[i__5351__auto___10192]);
      var G__10193 = i__5351__auto___10192 + 1;
      i__5351__auto___10192 = G__10193;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 2 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(2), 0) : null;
  return cljs.core$macros.declare.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
};
cljs.core$macros.declare.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, names) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__10187_SHARP_) {
    return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(p1__10187_SHARP_, cljs.core.assoc, cljs.core.cst$kw$declared, true)), cljs.core.cst$sym$def);
  }, names))));
};
cljs.core$macros.declare.cljs$lang$maxFixedArity = 2;
cljs.core$macros.declare.cljs$lang$applyTo = function(seq10188) {
  var G__10189 = cljs.core.first(seq10188);
  var seq10188__$1 = cljs.core.next(seq10188);
  var G__10190 = cljs.core.first(seq10188__$1);
  var seq10188__$2 = cljs.core.next(seq10188__$1);
  return cljs.core$macros.declare.cljs$core$IFn$_invoke$arity$variadic(G__10189, G__10190, seq10188__$2);
};
cljs.core$macros.declare.cljs$lang$macro = true;
cljs.core$macros.doto = function cljs$core$macros$doto() {
  var args__5357__auto__ = [];
  var len__5350__auto___10198 = arguments.length;
  var i__5351__auto___10199 = 0;
  while (true) {
    if (i__5351__auto___10199 < len__5350__auto___10198) {
      args__5357__auto__.push(arguments[i__5351__auto___10199]);
      var G__10200 = i__5351__auto___10199 + 1;
      i__5351__auto___10199 = G__10200;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.doto.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.doto.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, forms) {
  var gx = cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, gx), cljs.core._conj(cljs.core.List.EMPTY, x)))))), cljs.core.array_seq([cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(gx) {
    return function(f) {
      if (cljs.core.seq_QMARK_(f)) {
        return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.first(f)), cljs.core._conj(cljs.core.List.EMPTY, gx), cljs.core.array_seq([cljs.core.next(f)], 0))));
      } else {
        return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, f), cljs.core._conj(cljs.core.List.EMPTY, gx))));
      }
    };
  }(gx), forms), cljs.core._conj(cljs.core.List.EMPTY, gx)], 0))));
};
cljs.core$macros.doto.cljs$lang$maxFixedArity = 3;
cljs.core$macros.doto.cljs$lang$applyTo = function(seq10194) {
  var G__10195 = cljs.core.first(seq10194);
  var seq10194__$1 = cljs.core.next(seq10194);
  var G__10196 = cljs.core.first(seq10194__$1);
  var seq10194__$2 = cljs.core.next(seq10194__$1);
  var G__10197 = cljs.core.first(seq10194__$2);
  var seq10194__$3 = cljs.core.next(seq10194__$2);
  return cljs.core$macros.doto.cljs$core$IFn$_invoke$arity$variadic(G__10195, G__10196, G__10197, seq10194__$3);
};
cljs.core$macros.doto.cljs$lang$macro = true;
cljs.core$macros.parse_impls = function cljs$core$macros$parse_impls(specs) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var s = specs;
  while (true) {
    if (cljs.core.seq(s)) {
      var G__10201 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_, cljs.core.next(s)));
      var G__10202 = cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_, cljs.core.next(s));
      ret = G__10201;
      s = G__10202;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core$macros.emit_extend_protocol = function cljs$core$macros$emit_extend_protocol(p, specs) {
  var impls = cljs.core$macros.parse_impls(specs);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(impls) {
    return function(p__10205) {
      var vec__10206 = p__10205;
      var t = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10206, 0, null);
      var fs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10206, 1, null);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_extend_DASH_type), cljs.core._conj(cljs.core.List.EMPTY, t), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, p), fs], 0))));
    };
  }(impls), impls))));
};
cljs.core$macros.extend_protocol = function cljs$core$macros$extend_protocol() {
  var args__5357__auto__ = [];
  var len__5350__auto___10211 = arguments.length;
  var i__5351__auto___10212 = 0;
  while (true) {
    if (i__5351__auto___10212 < len__5350__auto___10211) {
      args__5357__auto__.push(arguments[i__5351__auto___10212]);
      var G__10213 = i__5351__auto___10212 + 1;
      i__5351__auto___10212 = G__10213;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.extend_protocol.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.extend_protocol.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p, specs) {
  return cljs.core$macros.emit_extend_protocol(p, specs);
};
cljs.core$macros.extend_protocol.cljs$lang$maxFixedArity = 3;
cljs.core$macros.extend_protocol.cljs$lang$applyTo = function(seq10207) {
  var G__10208 = cljs.core.first(seq10207);
  var seq10207__$1 = cljs.core.next(seq10207);
  var G__10209 = cljs.core.first(seq10207__$1);
  var seq10207__$2 = cljs.core.next(seq10207__$1);
  var G__10210 = cljs.core.first(seq10207__$2);
  var seq10207__$3 = cljs.core.next(seq10207__$2);
  return cljs.core$macros.extend_protocol.cljs$core$IFn$_invoke$arity$variadic(G__10208, G__10209, G__10210, seq10207__$3);
};
cljs.core$macros.extend_protocol.cljs$lang$macro = true;
cljs.core$macros.maybe_destructured = function cljs$core$macros$maybe_destructured(params, body) {
  if (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_, params)) {
    return cljs.core.cons(params, body);
  } else {
    var params__$1 = params;
    var new_params = cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, cljs.core.meta(params__$1));
    var lets = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (params__$1) {
        if (cljs.core.first(params__$1) instanceof cljs.core.Symbol) {
          var G__10214 = cljs.core.next(params__$1);
          var G__10215 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new_params, cljs.core.first(params__$1));
          var G__10216 = lets;
          params__$1 = G__10214;
          new_params = G__10215;
          lets = G__10216;
          continue;
        } else {
          var gparam = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("p__");
          var G__10217 = cljs.core.next(params__$1);
          var G__10218 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new_params, gparam);
          var G__10219 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(lets, cljs.core.first(params__$1)), gparam);
          params__$1 = G__10217;
          new_params = G__10218;
          lets = G__10219;
          continue;
        }
      } else {
        return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, new_params), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, lets), cljs.core.array_seq([body], 0))))))));
      }
      break;
    }
  }
};
cljs.core$macros.fn = function cljs$core$macros$fn() {
  var args__5357__auto__ = [];
  var len__5350__auto___10224 = arguments.length;
  var i__5351__auto___10225 = 0;
  while (true) {
    if (i__5351__auto___10225 < len__5350__auto___10224) {
      args__5357__auto__.push(arguments[i__5351__auto___10225]);
      var G__10226 = i__5351__auto___10225 + 1;
      i__5351__auto___10225 = G__10226;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 2 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(2), 0) : null;
  return cljs.core$macros.fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
};
cljs.core$macros.fn.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, sigs) {
  var name = cljs.core.first(sigs) instanceof cljs.core.Symbol ? cljs.core.first(sigs) : null;
  var sigs__$1 = name ? cljs.core.next(sigs) : sigs;
  var sigs__$2 = cljs.core.vector_QMARK_(cljs.core.first(sigs__$1)) ? cljs.core._conj(cljs.core.List.EMPTY, sigs__$1) : cljs.core.seq_QMARK_(cljs.core.first(sigs__$1)) ? sigs__$1 : function() {
    throw new Error(cljs.core.seq(sigs__$1) ? [cljs.core.str("Parameter declaration "), cljs.core.str(cljs.core.first(sigs__$1)), cljs.core.str(" should be a vector")].join("") : [cljs.core.str("Parameter declaration missing")].join(""));
  }();
  var psig = function(name, sigs__$1, sigs__$2) {
    return function(sig) {
      if (!cljs.core.seq_QMARK_(sig)) {
        throw new Error([cljs.core.str("Invalid signature "), cljs.core.str(sig), cljs.core.str(" should be a list")].join(""));
      } else {
      }
      var vec__10223 = sig;
      var params = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10223, 0, null);
      var body = cljs.core.nthnext(vec__10223, 1);
      var _ = !cljs.core.vector_QMARK_(params) ? function() {
        throw new Error(cljs.core.seq_QMARK_(cljs.core.first(sigs__$2)) ? [cljs.core.str("Parameter declaration "), cljs.core.str(params), cljs.core.str(" should be a vector")].join("") : [cljs.core.str("Invalid signature "), cljs.core.str(sig), cljs.core.str(" should be a list")].join(""));
      }() : null;
      var conds = cljs.core.next(body) && cljs.core.map_QMARK_(cljs.core.first(body)) ? cljs.core.first(body) : null;
      var body__$1 = conds ? cljs.core.next(body) : body;
      var conds__$1 = function() {
        var or__4311__auto__ = conds;
        if (or__4311__auto__) {
          return or__4311__auto__;
        } else {
          return cljs.core.meta(params);
        }
      }();
      var pre = cljs.core.cst$kw$pre.cljs$core$IFn$_invoke$arity$1(conds__$1);
      var post = cljs.core.cst$kw$post.cljs$core$IFn$_invoke$arity$1(conds__$1);
      var body__$2 = post ? cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$_PERCENT_), cljs.core._conj(cljs.core.List.EMPTY, 1 < cljs.core.count(body__$1) ? cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), body__$1))) : cljs.core.first(body__$1))))))), cljs.core.array_seq([cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(vec__10223, params, body, _, conds, body__$1, conds__$1, pre, post, name, sigs__$1, sigs__$2) {
        return function(c) {
          return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_assert), cljs.core._conj(cljs.core.List.EMPTY, c))));
        };
      }(vec__10223, params, body, _, conds, body__$1, conds__$1, pre, post, name, sigs__$1, sigs__$2), post), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_PERCENT_)], 0)))))))) : body__$1;
      var body__$3 = pre ? cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(vec__10223, params, body, _, conds, body__$1, conds__$1, pre, post, body__$2, name, sigs__$1, sigs__$2) {
        return function(c) {
          return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_assert), cljs.core._conj(cljs.core.List.EMPTY, c))));
        };
      }(vec__10223, params, body, _, conds, body__$1, conds__$1, pre, post, body__$2, name, sigs__$1, sigs__$2), pre), body__$2) : body__$2;
      return cljs.core$macros.maybe_destructured(params, body__$3);
    };
  }(name, sigs__$1, sigs__$2);
  var new_sigs = cljs.core.map.cljs$core$IFn$_invoke$arity$2(psig, sigs__$2);
  return cljs.core.with_meta(name ? cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.cst$sym$fn_STAR_, name, new_sigs) : cljs.core.cons(cljs.core.cst$sym$fn_STAR_, new_sigs), cljs.core.meta(_AMPERSAND_form));
};
cljs.core$macros.fn.cljs$lang$maxFixedArity = 2;
cljs.core$macros.fn.cljs$lang$applyTo = function(seq10220) {
  var G__10221 = cljs.core.first(seq10220);
  var seq10220__$1 = cljs.core.next(seq10220);
  var G__10222 = cljs.core.first(seq10220__$1);
  var seq10220__$2 = cljs.core.next(seq10220__$1);
  return cljs.core$macros.fn.cljs$core$IFn$_invoke$arity$variadic(G__10221, G__10222, seq10220__$2);
};
cljs.core$macros.fn.cljs$lang$macro = true;
cljs.core$macros.defn_ = function cljs$core$macros$defn_() {
  var args__5357__auto__ = [];
  var len__5350__auto___10231 = arguments.length;
  var i__5351__auto___10232 = 0;
  while (true) {
    if (i__5351__auto___10232 < len__5350__auto___10231) {
      args__5357__auto__.push(arguments[i__5351__auto___10232]);
      var G__10233 = i__5351__auto___10232 + 1;
      i__5351__auto___10232 = G__10233;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.defn_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.defn_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, name, decls) {
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.cst$sym$cljs$core$macros_SLASH_defn, cljs.core.with_meta(name, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.meta(name), cljs.core.cst$kw$private, true)), decls);
};
cljs.core$macros.defn_.cljs$lang$maxFixedArity = 3;
cljs.core$macros.defn_.cljs$lang$applyTo = function(seq10227) {
  var G__10228 = cljs.core.first(seq10227);
  var seq10227__$1 = cljs.core.next(seq10227);
  var G__10229 = cljs.core.first(seq10227__$1);
  var seq10227__$2 = cljs.core.next(seq10227__$1);
  var G__10230 = cljs.core.first(seq10227__$2);
  var seq10227__$3 = cljs.core.next(seq10227__$2);
  return cljs.core$macros.defn_.cljs$core$IFn$_invoke$arity$variadic(G__10228, G__10229, G__10230, seq10227__$3);
};
cljs.core$macros.defn_.cljs$lang$macro = true;
cljs.core$macros.if_let = function cljs$core$macros$if_let() {
  var args10235 = [];
  var len__5350__auto___10244 = arguments.length;
  var i__5351__auto___10245 = 0;
  while (true) {
    if (i__5351__auto___10245 < len__5350__auto___10244) {
      args10235.push(arguments[i__5351__auto___10245]);
      var G__10246 = i__5351__auto___10245 + 1;
      i__5351__auto___10245 = G__10246;
      continue;
    } else {
    }
    break;
  }
  var G__10243 = args10235.length;
  switch(G__10243) {
    case 4:
      return cljs.core$macros.if_let.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args10235.slice(5), 0);
      return cljs.core$macros.if_let.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__5369__auto__);
  }
};
cljs.core$macros.if_let.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, bindings, then) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_if_DASH_let), cljs.core._conj(cljs.core.List.EMPTY, bindings), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, then), cljs.core._conj(cljs.core.List.EMPTY, null)], 0))));
};
cljs.core$macros.if_let.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, bindings, then, else$, oldform) {
  var form = bindings.cljs$core$IFn$_invoke$arity$1 ? bindings.cljs$core$IFn$_invoke$arity$1(0) : bindings.call(null, 0);
  var tst = bindings.cljs$core$IFn$_invoke$arity$1 ? bindings.cljs$core$IFn$_invoke$arity$1(1) : bindings.call(null, 1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$temp__10234__auto__), cljs.core._conj(cljs.core.List.EMPTY, tst)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$temp__10234__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, form), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$temp__10234__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, then)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, else$)], 0)))))], 0))));
};
cljs.core$macros.if_let.cljs$lang$applyTo = function(seq10236) {
  var G__10237 = cljs.core.first(seq10236);
  var seq10236__$1 = cljs.core.next(seq10236);
  var G__10238 = cljs.core.first(seq10236__$1);
  var seq10236__$2 = cljs.core.next(seq10236__$1);
  var G__10239 = cljs.core.first(seq10236__$2);
  var seq10236__$3 = cljs.core.next(seq10236__$2);
  var G__10240 = cljs.core.first(seq10236__$3);
  var seq10236__$4 = cljs.core.next(seq10236__$3);
  var G__10241 = cljs.core.first(seq10236__$4);
  var seq10236__$5 = cljs.core.next(seq10236__$4);
  return cljs.core$macros.if_let.cljs$core$IFn$_invoke$arity$variadic(G__10237, G__10238, G__10239, G__10240, G__10241, seq10236__$5);
};
cljs.core$macros.if_let.cljs$lang$maxFixedArity = 5;
cljs.core$macros.if_let.cljs$lang$macro = true;
cljs.core$macros.if_not = function cljs$core$macros$if_not() {
  var args10248 = [];
  var len__5350__auto___10251 = arguments.length;
  var i__5351__auto___10252 = 0;
  while (true) {
    if (i__5351__auto___10252 < len__5350__auto___10251) {
      args10248.push(arguments[i__5351__auto___10252]);
      var G__10253 = i__5351__auto___10252 + 1;
      i__5351__auto___10252 = G__10253;
      continue;
    } else {
    }
    break;
  }
  var G__10250 = args10248.length;
  switch(G__10250) {
    case 4:
      return cljs.core$macros.if_not.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core$macros.if_not.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10248.length)].join(""));;
  }
};
cljs.core$macros.if_not.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, test, then) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_if_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, test), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, then), cljs.core._conj(cljs.core.List.EMPTY, null)], 0))));
};
cljs.core$macros.if_not.cljs$core$IFn$_invoke$arity$5 = function(_AMPERSAND_form, _AMPERSAND_env, test, then, else$) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_not), cljs.core._conj(cljs.core.List.EMPTY, test))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  then), cljs.core._conj(cljs.core.List.EMPTY, else$)], 0))));
};
cljs.core$macros.if_not.cljs$lang$maxFixedArity = 5;
cljs.core$macros.if_not.cljs$lang$macro = true;
cljs.core$macros.letfn = function cljs$core$macros$letfn() {
  var args__5357__auto__ = [];
  var len__5350__auto___10260 = arguments.length;
  var i__5351__auto___10261 = 0;
  while (true) {
    if (i__5351__auto___10261 < len__5350__auto___10260) {
      args__5357__auto__.push(arguments[i__5351__auto___10261]);
      var G__10262 = i__5351__auto___10261 + 1;
      i__5351__auto___10261 = G__10262;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.letfn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.letfn.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, fnspecs, body) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$letfn_STAR_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, fnspecs), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__10255_SHARP_) {
    return cljs.core.cons(cljs.core.cst$sym$cljs$core$macros_SLASH_fn, p1__10255_SHARP_);
  }, fnspecs)))), cljs.core.array_seq([body], 0))));
};
cljs.core$macros.letfn.cljs$lang$maxFixedArity = 3;
cljs.core$macros.letfn.cljs$lang$applyTo = function(seq10256) {
  var G__10257 = cljs.core.first(seq10256);
  var seq10256__$1 = cljs.core.next(seq10256);
  var G__10258 = cljs.core.first(seq10256__$1);
  var seq10256__$2 = cljs.core.next(seq10256__$1);
  var G__10259 = cljs.core.first(seq10256__$2);
  var seq10256__$3 = cljs.core.next(seq10256__$2);
  return cljs.core$macros.letfn.cljs$core$IFn$_invoke$arity$variadic(G__10257, G__10258, G__10259, seq10256__$3);
};
cljs.core$macros.letfn.cljs$lang$macro = true;
cljs.core$macros.memfn = function cljs$core$macros$memfn() {
  var args__5357__auto__ = [];
  var len__5350__auto___10267 = arguments.length;
  var i__5351__auto___10268 = 0;
  while (true) {
    if (i__5351__auto___10268 < len__5350__auto___10267) {
      args__5357__auto__.push(arguments[i__5351__auto___10268]);
      var G__10269 = i__5351__auto___10268 + 1;
      i__5351__auto___10268 = G__10269;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.memfn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.memfn.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, name, args) {
  var t = cljs.core.with_meta(cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("target"), cljs.core.meta(name));
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, t), args))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, t), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, name), args))))], 0)))))], 0))));
};
cljs.core$macros.memfn.cljs$lang$maxFixedArity = 3;
cljs.core$macros.memfn.cljs$lang$applyTo = function(seq10263) {
  var G__10264 = cljs.core.first(seq10263);
  var seq10263__$1 = cljs.core.next(seq10263);
  var G__10265 = cljs.core.first(seq10263__$1);
  var seq10263__$2 = cljs.core.next(seq10263__$1);
  var G__10266 = cljs.core.first(seq10263__$2);
  var seq10263__$3 = cljs.core.next(seq10263__$2);
  return cljs.core$macros.memfn.cljs$core$IFn$_invoke$arity$variadic(G__10264, G__10265, G__10266, seq10263__$3);
};
cljs.core$macros.memfn.cljs$lang$macro = true;
cljs.core$macros.when = function cljs$core$macros$when() {
  var args__5357__auto__ = [];
  var len__5350__auto___10274 = arguments.length;
  var i__5351__auto___10275 = 0;
  while (true) {
    if (i__5351__auto___10275 < len__5350__auto___10274) {
      args__5357__auto__.push(arguments[i__5351__auto___10275]);
      var G__10276 = i__5351__auto___10275 + 1;
      i__5351__auto___10275 = G__10276;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.when.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.when.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, test, body) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cons(cljs.core.cst$sym$do, body)), test), cljs.core.cst$sym$if);
};
cljs.core$macros.when.cljs$lang$maxFixedArity = 3;
cljs.core$macros.when.cljs$lang$applyTo = function(seq10270) {
  var G__10271 = cljs.core.first(seq10270);
  var seq10270__$1 = cljs.core.next(seq10270);
  var G__10272 = cljs.core.first(seq10270__$1);
  var seq10270__$2 = cljs.core.next(seq10270__$1);
  var G__10273 = cljs.core.first(seq10270__$2);
  var seq10270__$3 = cljs.core.next(seq10270__$2);
  return cljs.core$macros.when.cljs$core$IFn$_invoke$arity$variadic(G__10271, G__10272, G__10273, seq10270__$3);
};
cljs.core$macros.when.cljs$lang$macro = true;
cljs.core$macros.when_first = function cljs$core$macros$when_first() {
  var args__5357__auto__ = [];
  var len__5350__auto___10283 = arguments.length;
  var i__5351__auto___10284 = 0;
  while (true) {
    if (i__5351__auto___10284 < len__5350__auto___10283) {
      args__5357__auto__.push(arguments[i__5351__auto___10284]);
      var G__10285 = i__5351__auto___10284 + 1;
      i__5351__auto___10284 = G__10285;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.when_first.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.when_first.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, bindings, body) {
  var vec__10282 = bindings;
  var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10282, 0, null);
  var xs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10282, 1, null);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when_DASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$xs__10277__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH_seq), cljs.core._conj(cljs.core.List.EMPTY, xs)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  x), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_first), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$xs__10277__auto__)))))))))), cljs.core.array_seq([body], 0)))))], 0))));
};
cljs.core$macros.when_first.cljs$lang$maxFixedArity = 3;
cljs.core$macros.when_first.cljs$lang$applyTo = function(seq10278) {
  var G__10279 = cljs.core.first(seq10278);
  var seq10278__$1 = cljs.core.next(seq10278);
  var G__10280 = cljs.core.first(seq10278__$1);
  var seq10278__$2 = cljs.core.next(seq10278__$1);
  var G__10281 = cljs.core.first(seq10278__$2);
  var seq10278__$3 = cljs.core.next(seq10278__$2);
  return cljs.core$macros.when_first.cljs$core$IFn$_invoke$arity$variadic(G__10279, G__10280, G__10281, seq10278__$3);
};
cljs.core$macros.when_first.cljs$lang$macro = true;
cljs.core$macros.when_let = function cljs$core$macros$when_let() {
  var args__5357__auto__ = [];
  var len__5350__auto___10291 = arguments.length;
  var i__5351__auto___10292 = 0;
  while (true) {
    if (i__5351__auto___10292 < len__5350__auto___10291) {
      args__5357__auto__.push(arguments[i__5351__auto___10292]);
      var G__10293 = i__5351__auto___10292 + 1;
      i__5351__auto___10292 = G__10293;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.when_let.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.when_let.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, bindings, body) {
  var form = bindings.cljs$core$IFn$_invoke$arity$1 ? bindings.cljs$core$IFn$_invoke$arity$1(0) : bindings.call(null, 0);
  var tst = bindings.cljs$core$IFn$_invoke$arity$1 ? bindings.cljs$core$IFn$_invoke$arity$1(1) : bindings.call(null, 1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$temp__10286__auto__), cljs.core._conj(cljs.core.List.EMPTY, tst)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$temp__10286__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, form), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$temp__10286__auto__)))))), cljs.core.array_seq([body], 0)))))], 0)))))], 0))));
};
cljs.core$macros.when_let.cljs$lang$maxFixedArity = 3;
cljs.core$macros.when_let.cljs$lang$applyTo = function(seq10287) {
  var G__10288 = cljs.core.first(seq10287);
  var seq10287__$1 = cljs.core.next(seq10287);
  var G__10289 = cljs.core.first(seq10287__$1);
  var seq10287__$2 = cljs.core.next(seq10287__$1);
  var G__10290 = cljs.core.first(seq10287__$2);
  var seq10287__$3 = cljs.core.next(seq10287__$2);
  return cljs.core$macros.when_let.cljs$core$IFn$_invoke$arity$variadic(G__10288, G__10289, G__10290, seq10287__$3);
};
cljs.core$macros.when_let.cljs$lang$macro = true;
cljs.core$macros.when_not = function cljs$core$macros$when_not() {
  var args__5357__auto__ = [];
  var len__5350__auto___10298 = arguments.length;
  var i__5351__auto___10299 = 0;
  while (true) {
    if (i__5351__auto___10299 < len__5350__auto___10298) {
      args__5357__auto__.push(arguments[i__5351__auto___10299]);
      var G__10300 = i__5351__auto___10299 + 1;
      i__5351__auto___10299 = G__10300;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.when_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.when_not.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, test, body) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cons(cljs.core.cst$sym$do, body)), null), test), cljs.core.cst$sym$if);
};
cljs.core$macros.when_not.cljs$lang$maxFixedArity = 3;
cljs.core$macros.when_not.cljs$lang$applyTo = function(seq10294) {
  var G__10295 = cljs.core.first(seq10294);
  var seq10294__$1 = cljs.core.next(seq10294);
  var G__10296 = cljs.core.first(seq10294__$1);
  var seq10294__$2 = cljs.core.next(seq10294__$1);
  var G__10297 = cljs.core.first(seq10294__$2);
  var seq10294__$3 = cljs.core.next(seq10294__$2);
  return cljs.core$macros.when_not.cljs$core$IFn$_invoke$arity$variadic(G__10295, G__10296, G__10297, seq10294__$3);
};
cljs.core$macros.when_not.cljs$lang$macro = true;
cljs.core$macros.while$ = function cljs$core$macros$while() {
  var args__5357__auto__ = [];
  var len__5350__auto___10305 = arguments.length;
  var i__5351__auto___10306 = 0;
  while (true) {
    if (i__5351__auto___10306 < len__5350__auto___10305) {
      args__5357__auto__.push(arguments[i__5351__auto___10306]);
      var G__10307 = i__5351__auto___10306 + 1;
      i__5351__auto___10306 = G__10307;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.while$.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.while$.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, test, body) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_loop), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_when), cljs.core._conj(cljs.core.List.EMPTY, test), cljs.core.array_seq([body, cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$recur)))))], 0)))))], 0))));
};
cljs.core$macros.while$.cljs$lang$maxFixedArity = 3;
cljs.core$macros.while$.cljs$lang$applyTo = function(seq10301) {
  var G__10302 = cljs.core.first(seq10301);
  var seq10301__$1 = cljs.core.next(seq10301);
  var G__10303 = cljs.core.first(seq10301__$1);
  var seq10301__$2 = cljs.core.next(seq10301__$1);
  var G__10304 = cljs.core.first(seq10301__$2);
  var seq10301__$3 = cljs.core.next(seq10301__$2);
  return cljs.core$macros.while$.cljs$core$IFn$_invoke$arity$variadic(G__10302, G__10303, G__10304, seq10301__$3);
};
cljs.core$macros.while$.cljs$lang$macro = true;
cljs.core$macros.cond__GT_ = function cljs$core$macros$cond__GT_() {
  var args__5357__auto__ = [];
  var len__5350__auto___10314 = arguments.length;
  var i__5351__auto___10315 = 0;
  while (true) {
    if (i__5351__auto___10315 < len__5350__auto___10314) {
      args__5357__auto__.push(arguments[i__5351__auto___10315]);
      var G__10316 = i__5351__auto___10315 + 1;
      i__5351__auto___10315 = G__10316;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.cond__GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.cond__GT_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, expr, clauses) {
  if (cljs.core.even_QMARK_(cljs.core.count(clauses))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$even_QMARK_, cljs.core.list(cljs.core.cst$sym$count, cljs.core.cst$sym$clauses))], 0)))].join(""));
  }
  var g = cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
  var pstep = function(g) {
    return function(p__10312) {
      var vec__10313 = p__10312;
      var test = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10313, 0, null);
      var step = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10313, 1, null);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, test), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__DASH__GT_), 
      cljs.core._conj(cljs.core.List.EMPTY, g), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, step)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, g)], 0))));
    };
  }(g);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, g), cljs.core._conj(cljs.core.List.EMPTY, expr), cljs.core.array_seq([cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(g), 
  cljs.core.map.cljs$core$IFn$_invoke$arity$2(pstep, cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, clauses)))], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, g)], 0))));
};
cljs.core$macros.cond__GT_.cljs$lang$maxFixedArity = 3;
cljs.core$macros.cond__GT_.cljs$lang$applyTo = function(seq10308) {
  var G__10309 = cljs.core.first(seq10308);
  var seq10308__$1 = cljs.core.next(seq10308);
  var G__10310 = cljs.core.first(seq10308__$1);
  var seq10308__$2 = cljs.core.next(seq10308__$1);
  var G__10311 = cljs.core.first(seq10308__$2);
  var seq10308__$3 = cljs.core.next(seq10308__$2);
  return cljs.core$macros.cond__GT_.cljs$core$IFn$_invoke$arity$variadic(G__10309, G__10310, G__10311, seq10308__$3);
};
cljs.core$macros.cond__GT_.cljs$lang$macro = true;
cljs.core$macros.cond__GT__GT_ = function cljs$core$macros$cond__GT__GT_() {
  var args__5357__auto__ = [];
  var len__5350__auto___10323 = arguments.length;
  var i__5351__auto___10324 = 0;
  while (true) {
    if (i__5351__auto___10324 < len__5350__auto___10323) {
      args__5357__auto__.push(arguments[i__5351__auto___10324]);
      var G__10325 = i__5351__auto___10324 + 1;
      i__5351__auto___10324 = G__10325;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.cond__GT__GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.cond__GT__GT_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, expr, clauses) {
  if (cljs.core.even_QMARK_(cljs.core.count(clauses))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$even_QMARK_, cljs.core.list(cljs.core.cst$sym$count, cljs.core.cst$sym$clauses))], 0)))].join(""));
  }
  var g = cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
  var pstep = function(g) {
    return function(p__10321) {
      var vec__10322 = p__10321;
      var test = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10322, 0, null);
      var step = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10322, 1, null);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, test), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__DASH__GT__GT_), 
      cljs.core._conj(cljs.core.List.EMPTY, g), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, step)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, g)], 0))));
    };
  }(g);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, g), cljs.core._conj(cljs.core.List.EMPTY, expr), cljs.core.array_seq([cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(g), 
  cljs.core.map.cljs$core$IFn$_invoke$arity$2(pstep, cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, clauses)))], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, g)], 0))));
};
cljs.core$macros.cond__GT__GT_.cljs$lang$maxFixedArity = 3;
cljs.core$macros.cond__GT__GT_.cljs$lang$applyTo = function(seq10317) {
  var G__10318 = cljs.core.first(seq10317);
  var seq10317__$1 = cljs.core.next(seq10317);
  var G__10319 = cljs.core.first(seq10317__$1);
  var seq10317__$2 = cljs.core.next(seq10317__$1);
  var G__10320 = cljs.core.first(seq10317__$2);
  var seq10317__$3 = cljs.core.next(seq10317__$2);
  return cljs.core$macros.cond__GT__GT_.cljs$core$IFn$_invoke$arity$variadic(G__10318, G__10319, G__10320, seq10317__$3);
};
cljs.core$macros.cond__GT__GT_.cljs$lang$macro = true;
cljs.core$macros.as__GT_ = function cljs$core$macros$as__GT_() {
  var args__5357__auto__ = [];
  var len__5350__auto___10331 = arguments.length;
  var i__5351__auto___10332 = 0;
  while (true) {
    if (i__5351__auto___10332 < len__5350__auto___10331) {
      args__5357__auto__.push(arguments[i__5351__auto___10332]);
      var G__10333 = i__5351__auto___10332 + 1;
      i__5351__auto___10332 = G__10333;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 4 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(4), 0) : null;
  return cljs.core$macros.as__GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5358__auto__);
};
cljs.core$macros.as__GT_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, expr, name, forms) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, name), cljs.core._conj(cljs.core.List.EMPTY, expr), cljs.core.array_seq([cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(name), 
  forms)], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, name)], 0))));
};
cljs.core$macros.as__GT_.cljs$lang$maxFixedArity = 4;
cljs.core$macros.as__GT_.cljs$lang$applyTo = function(seq10326) {
  var G__10327 = cljs.core.first(seq10326);
  var seq10326__$1 = cljs.core.next(seq10326);
  var G__10328 = cljs.core.first(seq10326__$1);
  var seq10326__$2 = cljs.core.next(seq10326__$1);
  var G__10329 = cljs.core.first(seq10326__$2);
  var seq10326__$3 = cljs.core.next(seq10326__$2);
  var G__10330 = cljs.core.first(seq10326__$3);
  var seq10326__$4 = cljs.core.next(seq10326__$3);
  return cljs.core$macros.as__GT_.cljs$core$IFn$_invoke$arity$variadic(G__10327, G__10328, G__10329, G__10330, seq10326__$4);
};
cljs.core$macros.as__GT_.cljs$lang$macro = true;
cljs.core$macros.some__GT_ = function cljs$core$macros$some__GT_() {
  var args__5357__auto__ = [];
  var len__5350__auto___10338 = arguments.length;
  var i__5351__auto___10339 = 0;
  while (true) {
    if (i__5351__auto___10339 < len__5350__auto___10338) {
      args__5357__auto__.push(arguments[i__5351__auto___10339]);
      var G__10340 = i__5351__auto___10339 + 1;
      i__5351__auto___10339 = G__10340;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.some__GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.some__GT_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, expr, forms) {
  var g = cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
  var pstep = function(g) {
    return function(step) {
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_nil_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, g))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
      null), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__DASH__GT_), cljs.core._conj(cljs.core.List.EMPTY, g), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, step)], 0)))))], 0))));
    };
  }(g);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, g), cljs.core._conj(cljs.core.List.EMPTY, expr), cljs.core.array_seq([cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(g), 
  cljs.core.map.cljs$core$IFn$_invoke$arity$2(pstep, forms))], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, g)], 0))));
};
cljs.core$macros.some__GT_.cljs$lang$maxFixedArity = 3;
cljs.core$macros.some__GT_.cljs$lang$applyTo = function(seq10334) {
  var G__10335 = cljs.core.first(seq10334);
  var seq10334__$1 = cljs.core.next(seq10334);
  var G__10336 = cljs.core.first(seq10334__$1);
  var seq10334__$2 = cljs.core.next(seq10334__$1);
  var G__10337 = cljs.core.first(seq10334__$2);
  var seq10334__$3 = cljs.core.next(seq10334__$2);
  return cljs.core$macros.some__GT_.cljs$core$IFn$_invoke$arity$variadic(G__10335, G__10336, G__10337, seq10334__$3);
};
cljs.core$macros.some__GT_.cljs$lang$macro = true;
cljs.core$macros.some__GT__GT_ = function cljs$core$macros$some__GT__GT_() {
  var args__5357__auto__ = [];
  var len__5350__auto___10345 = arguments.length;
  var i__5351__auto___10346 = 0;
  while (true) {
    if (i__5351__auto___10346 < len__5350__auto___10345) {
      args__5357__auto__.push(arguments[i__5351__auto___10346]);
      var G__10347 = i__5351__auto___10346 + 1;
      i__5351__auto___10346 = G__10347;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.some__GT__GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.some__GT__GT_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, expr, forms) {
  var g = cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
  var pstep = function(g) {
    return function(step) {
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_nil_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, g))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
      null), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__DASH__GT__GT_), cljs.core._conj(cljs.core.List.EMPTY, g), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, step)], 0)))))], 0))));
    };
  }(g);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, g), cljs.core._conj(cljs.core.List.EMPTY, expr), cljs.core.array_seq([cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(g), 
  cljs.core.map.cljs$core$IFn$_invoke$arity$2(pstep, forms))], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, g)], 0))));
};
cljs.core$macros.some__GT__GT_.cljs$lang$maxFixedArity = 3;
cljs.core$macros.some__GT__GT_.cljs$lang$applyTo = function(seq10341) {
  var G__10342 = cljs.core.first(seq10341);
  var seq10341__$1 = cljs.core.next(seq10341);
  var G__10343 = cljs.core.first(seq10341__$1);
  var seq10341__$2 = cljs.core.next(seq10341__$1);
  var G__10344 = cljs.core.first(seq10341__$2);
  var seq10341__$3 = cljs.core.next(seq10341__$2);
  return cljs.core$macros.some__GT__GT_.cljs$core$IFn$_invoke$arity$variadic(G__10342, G__10343, G__10344, seq10341__$3);
};
cljs.core$macros.some__GT__GT_.cljs$lang$macro = true;
cljs.core$macros.if_some = function cljs$core$macros$if_some() {
  var args10349 = [];
  var len__5350__auto___10358 = arguments.length;
  var i__5351__auto___10359 = 0;
  while (true) {
    if (i__5351__auto___10359 < len__5350__auto___10358) {
      args10349.push(arguments[i__5351__auto___10359]);
      var G__10360 = i__5351__auto___10359 + 1;
      i__5351__auto___10359 = G__10360;
      continue;
    } else {
    }
    break;
  }
  var G__10357 = args10349.length;
  switch(G__10357) {
    case 4:
      return cljs.core$macros.if_some.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args10349.slice(5), 0);
      return cljs.core$macros.if_some.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__5369__auto__);
  }
};
cljs.core$macros.if_some.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, bindings, then) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_if_DASH_some), cljs.core._conj(cljs.core.List.EMPTY, bindings), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, then), cljs.core._conj(cljs.core.List.EMPTY, null)], 0))));
};
cljs.core$macros.if_some.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, bindings, then, else$, oldform) {
  var form = bindings.cljs$core$IFn$_invoke$arity$1 ? bindings.cljs$core$IFn$_invoke$arity$1(0) : bindings.call(null, 0);
  var tst = bindings.cljs$core$IFn$_invoke$arity$1 ? bindings.cljs$core$IFn$_invoke$arity$1(1) : bindings.call(null, 1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$temp__10348__auto__), cljs.core._conj(cljs.core.List.EMPTY, tst)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_nil_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$temp__10348__auto__))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  else$), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, form), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$temp__10348__auto__)))))), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, then)], 0)))))], 0)))))], 0))));
};
cljs.core$macros.if_some.cljs$lang$applyTo = function(seq10350) {
  var G__10351 = cljs.core.first(seq10350);
  var seq10350__$1 = cljs.core.next(seq10350);
  var G__10352 = cljs.core.first(seq10350__$1);
  var seq10350__$2 = cljs.core.next(seq10350__$1);
  var G__10353 = cljs.core.first(seq10350__$2);
  var seq10350__$3 = cljs.core.next(seq10350__$2);
  var G__10354 = cljs.core.first(seq10350__$3);
  var seq10350__$4 = cljs.core.next(seq10350__$3);
  var G__10355 = cljs.core.first(seq10350__$4);
  var seq10350__$5 = cljs.core.next(seq10350__$4);
  return cljs.core$macros.if_some.cljs$core$IFn$_invoke$arity$variadic(G__10351, G__10352, G__10353, G__10354, G__10355, seq10350__$5);
};
cljs.core$macros.if_some.cljs$lang$maxFixedArity = 5;
cljs.core$macros.if_some.cljs$lang$macro = true;
cljs.core$macros.when_some = function cljs$core$macros$when_some() {
  var args__5357__auto__ = [];
  var len__5350__auto___10367 = arguments.length;
  var i__5351__auto___10368 = 0;
  while (true) {
    if (i__5351__auto___10368 < len__5350__auto___10367) {
      args__5357__auto__.push(arguments[i__5351__auto___10368]);
      var G__10369 = i__5351__auto___10368 + 1;
      i__5351__auto___10368 = G__10369;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.when_some.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.when_some.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, bindings, body) {
  var form = bindings.cljs$core$IFn$_invoke$arity$1 ? bindings.cljs$core$IFn$_invoke$arity$1(0) : bindings.call(null, 0);
  var tst = bindings.cljs$core$IFn$_invoke$arity$1 ? bindings.cljs$core$IFn$_invoke$arity$1(1) : bindings.call(null, 1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$temp__10362__auto__), cljs.core._conj(cljs.core.List.EMPTY, tst)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_nil_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$temp__10362__auto__))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  null), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, form), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$temp__10362__auto__)))))), 
  cljs.core.array_seq([body], 0)))))], 0)))))], 0))));
};
cljs.core$macros.when_some.cljs$lang$maxFixedArity = 3;
cljs.core$macros.when_some.cljs$lang$applyTo = function(seq10363) {
  var G__10364 = cljs.core.first(seq10363);
  var seq10363__$1 = cljs.core.next(seq10363);
  var G__10365 = cljs.core.first(seq10363__$1);
  var seq10363__$2 = cljs.core.next(seq10363__$1);
  var G__10366 = cljs.core.first(seq10363__$2);
  var seq10363__$3 = cljs.core.next(seq10363__$2);
  return cljs.core$macros.when_some.cljs$core$IFn$_invoke$arity$variadic(G__10364, G__10365, G__10366, seq10363__$3);
};
cljs.core$macros.when_some.cljs$lang$macro = true;
cljs.core$macros.assert_valid_fdecl = function cljs$core$macros$assert_valid_fdecl(fdecl) {
  if (cljs.core.empty_QMARK_(fdecl)) {
    throw new Error("Parameter declaration missing");
  } else {
  }
  var argdecls = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__10370_SHARP_) {
    if (cljs.core.seq_QMARK_(p1__10370_SHARP_)) {
      return cljs.core.first(p1__10370_SHARP_);
    } else {
      throw new Error(cljs.core.seq_QMARK_(cljs.core.first(fdecl)) ? [cljs.core.str('Invalid signature "'), cljs.core.str(p1__10370_SHARP_), cljs.core.str('" should be a list')].join("") : [cljs.core.str('Parameter declaration "'), cljs.core.str(p1__10370_SHARP_), cljs.core.str('" should be a vector')].join(""));
    }
  }, fdecl);
  var bad_args = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(function(argdecls) {
    return function(p1__10371_SHARP_) {
      return cljs.core.vector_QMARK_(p1__10371_SHARP_);
    };
  }(argdecls), argdecls));
  if (bad_args) {
    throw new Error([cljs.core.str('Parameter declaration "'), cljs.core.str(cljs.core.first(bad_args)), cljs.core.str('" should be a vector')].join(""));
  } else {
    return null;
  }
};
cljs.core$macros.sigs = function cljs$core$macros$sigs(fdecl) {
  cljs.core$macros.assert_valid_fdecl.cljs$core$IFn$_invoke$arity$1 ? cljs.core$macros.assert_valid_fdecl.cljs$core$IFn$_invoke$arity$1(fdecl) : cljs.core$macros.assert_valid_fdecl.call(null, fdecl);
  var asig = function(fdecl__$1) {
    var arglist = cljs.core.first(fdecl__$1);
    var arglist__$1 = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$_AMPERSAND_form, cljs.core.first(arglist)) ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arglist, 2, cljs.core.count(arglist)) : arglist;
    var body = cljs.core.next(fdecl__$1);
    if (cljs.core.map_QMARK_(cljs.core.first(body))) {
      if (cljs.core.next(body)) {
        return cljs.core.with_meta(arglist__$1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.meta(arglist__$1) ? cljs.core.meta(arglist__$1) : cljs.core.PersistentArrayMap.EMPTY, cljs.core.first(body)));
      } else {
        return arglist__$1;
      }
    } else {
      return arglist__$1;
    }
  };
  if (cljs.core.seq_QMARK_(cljs.core.first(fdecl))) {
    var ret = cljs.core.PersistentVector.EMPTY;
    var fdecls = fdecl;
    while (true) {
      if (fdecls) {
        var G__10372 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, asig(cljs.core.first(fdecls)));
        var G__10373 = cljs.core.next(fdecls);
        ret = G__10372;
        fdecls = G__10373;
        continue;
      } else {
        return cljs.core.seq(ret);
      }
      break;
    }
  } else {
    return cljs.core._conj(cljs.core.List.EMPTY, asig(fdecl));
  }
};
cljs.core$macros.defonce = function cljs$core$macros$defonce(_AMPERSAND_form, _AMPERSAND_env, x, init) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_exists_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, 
  x))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$def), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, init)], 0)))))], 0))));
};
cljs.core$macros.defonce.cljs$lang$macro = true;
cljs.core$macros.assert_args = function cljs$core$macros$assert_args() {
  var args__5357__auto__ = [];
  var len__5350__auto___10378 = arguments.length;
  var i__5351__auto___10379 = 0;
  while (true) {
    if (i__5351__auto___10379 < len__5350__auto___10378) {
      args__5357__auto__.push(arguments[i__5351__auto___10379]);
      var G__10380 = i__5351__auto___10379 + 1;
      i__5351__auto___10379 = G__10380;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.assert_args.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.assert_args.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, fnname, pairs) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.first(pairs)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$throw), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_SLASH_Error$), cljs.core._conj(cljs.core.List.EMPTY, [cljs.core.str(fnname), cljs.core.str(" requires "), cljs.core.str(cljs.core.second(pairs))].join(""))))))))))], 
  0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, function() {
    var more = cljs.core.nnext(pairs);
    if (more) {
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.cst$sym$cljs$core$macros_SLASH_assert_DASH_args, fnname, more);
    } else {
      return null;
    }
  }())], 0))));
};
cljs.core$macros.assert_args.cljs$lang$maxFixedArity = 3;
cljs.core$macros.assert_args.cljs$lang$applyTo = function(seq10374) {
  var G__10375 = cljs.core.first(seq10374);
  var seq10374__$1 = cljs.core.next(seq10374);
  var G__10376 = cljs.core.first(seq10374__$1);
  var seq10374__$2 = cljs.core.next(seq10374__$1);
  var G__10377 = cljs.core.first(seq10374__$2);
  var seq10374__$3 = cljs.core.next(seq10374__$2);
  return cljs.core$macros.assert_args.cljs$core$IFn$_invoke$arity$variadic(G__10375, G__10376, G__10377, seq10374__$3);
};
cljs.core$macros.assert_args.cljs$lang$macro = true;
cljs.core$macros.destructure = function cljs$core$macros$destructure(bindings) {
  var bents = cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, bindings);
  var pb = function(bents) {
    return function cljs$core$macros$destructure_$_pb(bvec, b, v) {
      var pvec = function(bents) {
        return function(bvec__$1, b__$1, val) {
          var gvec = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("vec__");
          var ret = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bvec__$1, gvec), val);
          var n = 0;
          var bs = b__$1;
          var seen_rest_QMARK_ = false;
          while (true) {
            if (cljs.core.seq(bs)) {
              var firstb = cljs.core.first(bs);
              if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(firstb, cljs.core.cst$sym$_AMPERSAND_)) {
                var G__10410 = cljs$core$macros$destructure_$_pb(ret, cljs.core.second(bs), cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, n), gvec), cljs.core.cst$sym$cljs$core_SLASH_nthnext));
                var G__10411 = n;
                var G__10412 = cljs.core.nnext(bs);
                var G__10413 = true;
                ret = G__10410;
                n = G__10411;
                bs = G__10412;
                seen_rest_QMARK_ = G__10413;
                continue;
              } else {
                if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(firstb, cljs.core.cst$kw$as)) {
                  return cljs$core$macros$destructure_$_pb(ret, cljs.core.second(bs), gvec);
                } else {
                  if (seen_rest_QMARK_) {
                    throw new Error("Unsupported binding form, only :as can follow & parameter");
                  } else {
                    var G__10414 = cljs$core$macros$destructure_$_pb(ret, firstb, cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, null), n), gvec), cljs.core.cst$sym$cljs$core_SLASH_nth));
                    var G__10415 = n + 1;
                    var G__10416 = cljs.core.next(bs);
                    var G__10417 = seen_rest_QMARK_;
                    ret = G__10414;
                    n = G__10415;
                    bs = G__10416;
                    seen_rest_QMARK_ = G__10417;
                    continue;
                  }
                }
              }
            } else {
              return ret;
            }
            break;
          }
        };
      }(bents);
      var pmap = function(pvec, bents) {
        return function(bvec__$1, b__$1, v__$1) {
          var gmap = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("map__");
          var defaults = cljs.core.cst$kw$or.cljs$core$IFn$_invoke$arity$1(b__$1);
          var ret = function(gmap, defaults, pvec, bents) {
            return function(ret) {
              if (cljs.core.cst$kw$as.cljs$core$IFn$_invoke$arity$1(b__$1)) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(ret, cljs.core.cst$kw$as.cljs$core$IFn$_invoke$arity$1(b__$1), cljs.core.array_seq([gmap], 0));
              } else {
                return ret;
              }
            };
          }(gmap, defaults, pvec, bents).call(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bvec__$1, gmap), v__$1), gmap), cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
          cljs.core.cst$sym$cljs$core$macros_SLASH_implements_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_ISeq), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, gmap)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_apply), cljs.core._conj(cljs.core.List.EMPTY, 
          cljs.core.cst$sym$cljs$core_SLASH_hash_DASH_map), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, gmap)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, gmap)], 0))))));
          var bes = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, gmap, defaults, pvec, bents) {
            return function(bes, entry) {
              return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, gmap, defaults, pvec, bents) {
                return function(p1__10381_SHARP_, p2__10382_SHARP_) {
                  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__10381_SHARP_, p2__10382_SHARP_, cljs.core.val(entry).call(null, p2__10382_SHARP_));
                };
              }(ret, gmap, defaults, pvec, bents), cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(bes, cljs.core.key(entry)), cljs.core.key(entry).call(null, bes));
            };
          }(ret, gmap, defaults, pvec, bents), cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(b__$1, cljs.core.cst$kw$as, cljs.core.array_seq([cljs.core.cst$kw$or], 0)), new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$keys, function(ret, gmap, defaults, pvec, bents) {
            return function(p1__10383_SHARP_) {
              if (p1__10383_SHARP_ instanceof cljs.core.Keyword) {
                return p1__10383_SHARP_;
              } else {
                return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1([cljs.core.str(p1__10383_SHARP_)].join(""));
              }
            };
          }(ret, gmap, defaults, pvec, bents), cljs.core.cst$kw$strs, cljs.core.str, cljs.core.cst$kw$syms, function(ret, gmap, defaults, pvec, bents) {
            return function(p1__10384_SHARP_) {
              return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, p1__10384_SHARP_), cljs.core.cst$sym$quote);
            };
          }(ret, gmap, defaults, pvec, bents)], null));
          while (true) {
            if (cljs.core.seq(bes)) {
              var bb = cljs.core.key(cljs.core.first(bes));
              var bk = cljs.core.val(cljs.core.first(bes));
              var has_default = cljs.core.contains_QMARK_(defaults, bb);
              var G__10418 = cljs$core$macros$destructure_$_pb(ret, bb, has_default ? cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, defaults.cljs$core$IFn$_invoke$arity$1 ? defaults.cljs$core$IFn$_invoke$arity$1(bb) : defaults.call(null, bb)), bk), gmap), cljs.core.cst$sym$cljs$core_SLASH_get) : cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, bk), gmap), cljs.core.cst$sym$cljs$core_SLASH_get));
              var G__10419 = cljs.core.next(bes);
              ret = G__10418;
              bes = G__10419;
              continue;
            } else {
              return ret;
            }
            break;
          }
        };
      }(pvec, bents);
      if (b instanceof cljs.core.Symbol) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bvec, cljs.core.namespace(b) ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(b)) : b), v);
      } else {
        if (b instanceof cljs.core.Keyword) {
          return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bvec, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(b))), v);
        } else {
          if (cljs.core.vector_QMARK_(b)) {
            return pvec(bvec, b, v);
          } else {
            if (cljs.core.map_QMARK_(b)) {
              return pmap(bvec, b, v);
            } else {
              throw new Error([cljs.core.str("Unsupported binding form: "), cljs.core.str(b)].join(""));
            }
          }
        }
      }
    };
  }(bents);
  var process_entry = function(bents, pb) {
    return function(bvec, b) {
      return pb(bvec, cljs.core.first(b), cljs.core.second(b));
    };
  }(bents, pb);
  if (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, bents))) {
    return bindings;
  } else {
    var temp__4423__auto__ = cljs.core.seq(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(bents, pb, process_entry) {
      return function(p1__10385_SHARP_) {
        return cljs.core.first(p1__10385_SHARP_) instanceof cljs.core.Keyword;
      };
    }(bents, pb, process_entry), bents));
    if (temp__4423__auto__) {
      var kwbs = temp__4423__auto__;
      throw new Error([cljs.core.str("Unsupported binding key: "), cljs.core.str(cljs.core.ffirst(kwbs))].join(""));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(process_entry, cljs.core.PersistentVector.EMPTY, bents);
    }
  }
};
cljs.core$macros.goog_define = function cljs$core$macros$goog_define(_AMPERSAND_form, _AMPERSAND_env, sym, default$) {
  cljs.core$macros.assert_args(cljs$core$macros$goog_define, typeof default$ === "string" || typeof default$ === "number" || default$ === true || default$ === false, "a string, number or boolean as default value");
  var defname = cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1([cljs.core.str(cljs.core._STAR_ns_STAR_), cljs.core.str("/"), cljs.core.str(sym)].join(""));
  var type = typeof default$ === "string" ? "string" : typeof default$ === "number" ? "number" : default$ === true || default$ === false ? "boolean" : null;
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_declare), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(sym)))))), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_STAR_), cljs.core._conj(cljs.core.List.EMPTY, [cljs.core.str("/** @define {"), cljs.core.str(type), cljs.core.str("} */")].join("")))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$goog_SLASH_define), cljs.core._conj(cljs.core.List.EMPTY, defname), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, default$)], 0)))))], 0))));
};
cljs.core$macros.goog_define.cljs$lang$macro = true;
cljs.core$macros.let$ = function cljs$core$macros$let() {
  var args__5357__auto__ = [];
  var len__5350__auto___10424 = arguments.length;
  var i__5351__auto___10425 = 0;
  while (true) {
    if (i__5351__auto___10425 < len__5350__auto___10424) {
      args__5357__auto__.push(arguments[i__5351__auto___10425]);
      var G__10426 = i__5351__auto___10425 + 1;
      i__5351__auto___10425 = G__10426;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.let$.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.let$.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, bindings, body) {
  cljs.core$macros.assert_args.cljs$core$IFn$_invoke$arity$variadic(cljs.core$macros.let$, cljs.core.vector_QMARK_(bindings), "a vector for its binding", cljs.core.array_seq([cljs.core.even_QMARK_(cljs.core.count(bindings)), "an even number of forms in binding vector"], 0));
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$let_STAR_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.destructure(bindings)), cljs.core.array_seq([body], 0))));
};
cljs.core$macros.let$.cljs$lang$maxFixedArity = 3;
cljs.core$macros.let$.cljs$lang$applyTo = function(seq10420) {
  var G__10421 = cljs.core.first(seq10420);
  var seq10420__$1 = cljs.core.next(seq10420);
  var G__10422 = cljs.core.first(seq10420__$1);
  var seq10420__$2 = cljs.core.next(seq10420__$1);
  var G__10423 = cljs.core.first(seq10420__$2);
  var seq10420__$3 = cljs.core.next(seq10420__$2);
  return cljs.core$macros.let$.cljs$core$IFn$_invoke$arity$variadic(G__10421, G__10422, G__10423, seq10420__$3);
};
cljs.core$macros.let$.cljs$lang$macro = true;
cljs.core$macros.loop = function cljs$core$macros$loop() {
  var args__5357__auto__ = [];
  var len__5350__auto___10433 = arguments.length;
  var i__5351__auto___10434 = 0;
  while (true) {
    if (i__5351__auto___10434 < len__5350__auto___10433) {
      args__5357__auto__.push(arguments[i__5351__auto___10434]);
      var G__10435 = i__5351__auto___10434 + 1;
      i__5351__auto___10434 = G__10435;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.loop.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.loop.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, bindings, body) {
  cljs.core$macros.assert_args.cljs$core$IFn$_invoke$arity$variadic(cljs.core$macros.loop, cljs.core.vector_QMARK_(bindings), "a vector for its binding", cljs.core.array_seq([cljs.core.even_QMARK_(cljs.core.count(bindings)), "an even number of forms in binding vector"], 0));
  var db = cljs.core$macros.destructure(bindings);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(db, bindings)) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$loop_STAR_), cljs.core._conj(cljs.core.List.EMPTY, bindings), cljs.core.array_seq([body], 0))));
  } else {
    var vs = cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(2, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, bindings));
    var bs = cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(2, bindings);
    var gs = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(vs, bs, db) {
      return function(b) {
        if (b instanceof cljs.core.Symbol) {
          return b;
        } else {
          return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
        }
      };
    }(vs, bs, db), bs);
    var bfs = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(vs, bs, gs, db) {
      return function(ret, p__10431) {
        var vec__10432 = p__10431;
        var b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10432, 0, null);
        var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10432, 1, null);
        var g = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10432, 2, null);
        if (b instanceof cljs.core.Symbol) {
          return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(ret, g, cljs.core.array_seq([v], 0));
        } else {
          return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(ret, g, cljs.core.array_seq([v, b, g], 0));
        }
      };
    }(vs, bs, gs, db), cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(cljs.core.vector, bs, vs, gs));
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, bfs), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$loop_STAR_), 
    cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(gs, gs))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(bs, gs))), cljs.core.array_seq([body], 
    0)))))], 0)))))], 0))));
  }
};
cljs.core$macros.loop.cljs$lang$maxFixedArity = 3;
cljs.core$macros.loop.cljs$lang$applyTo = function(seq10427) {
  var G__10428 = cljs.core.first(seq10427);
  var seq10427__$1 = cljs.core.next(seq10427);
  var G__10429 = cljs.core.first(seq10427__$1);
  var seq10427__$2 = cljs.core.next(seq10427__$1);
  var G__10430 = cljs.core.first(seq10427__$2);
  var seq10427__$3 = cljs.core.next(seq10427__$2);
  return cljs.core$macros.loop.cljs$core$IFn$_invoke$arity$variadic(G__10428, G__10429, G__10430, seq10427__$3);
};
cljs.core$macros.loop.cljs$lang$macro = true;
cljs.core$macros.fast_path_protocols = cljs.core.zipmap(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__10436_SHARP_) {
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("cljs.core", [cljs.core.str(p1__10436_SHARP_)].join(""));
}, cljs.core.PersistentVector.fromArray([cljs.core.cst$sym$IFn, cljs.core.cst$sym$ICounted, cljs.core.cst$sym$IEmptyableCollection, cljs.core.cst$sym$ICollection, cljs.core.cst$sym$IIndexed, cljs.core.cst$sym$ASeq, cljs.core.cst$sym$ISeq, cljs.core.cst$sym$INext, cljs.core.cst$sym$ILookup, cljs.core.cst$sym$IAssociative, cljs.core.cst$sym$IMap, cljs.core.cst$sym$IMapEntry, cljs.core.cst$sym$ISet, cljs.core.cst$sym$IStack, cljs.core.cst$sym$IVector, cljs.core.cst$sym$IDeref, cljs.core.cst$sym$IDerefWithTimeout, 
cljs.core.cst$sym$IMeta, cljs.core.cst$sym$IWithMeta, cljs.core.cst$sym$IReduce, cljs.core.cst$sym$IKVReduce, cljs.core.cst$sym$IEquiv, cljs.core.cst$sym$IHash, cljs.core.cst$sym$ISeqable, cljs.core.cst$sym$ISequential, cljs.core.cst$sym$IList, cljs.core.cst$sym$IRecord, cljs.core.cst$sym$IReversible, cljs.core.cst$sym$ISorted, cljs.core.cst$sym$IPrintWithWriter, cljs.core.cst$sym$IWriter, cljs.core.cst$sym$IPrintWithWriter, cljs.core.cst$sym$IPending, cljs.core.cst$sym$IWatchable, cljs.core.cst$sym$IEditableCollection, 
cljs.core.cst$sym$ITransientCollection, cljs.core.cst$sym$ITransientAssociative, cljs.core.cst$sym$ITransientMap, cljs.core.cst$sym$ITransientVector, cljs.core.cst$sym$ITransientSet, cljs.core.cst$sym$IMultiFn, cljs.core.cst$sym$IChunkedSeq, cljs.core.cst$sym$IChunkedNext, cljs.core.cst$sym$IComparable, cljs.core.cst$sym$INamed, cljs.core.cst$sym$ICloneable, cljs.core.cst$sym$IAtom, cljs.core.cst$sym$IReset, cljs.core.cst$sym$ISwap], true)), cljs.core.iterate(function(p__10437) {
  var vec__10438 = p__10437;
  var p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10438, 0, null);
  var b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10438, 1, null);
  if (2147483648 === b) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p + 1, 1], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p, b << 1], null);
  }
}, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, 1], null)));
cljs.core$macros.fast_path_protocol_partitions_count = function() {
  var c = cljs.core.count(cljs.core$macros.fast_path_protocols);
  var m = cljs.core.mod(c, 32);
  if (m === 0) {
    return cljs.core.quot(c, 32);
  } else {
    return cljs.core.quot(c, 32) + 1;
  }
}();
cljs.core$macros.str = function cljs$core$macros$str() {
  var args__5357__auto__ = [];
  var len__5350__auto___10442 = arguments.length;
  var i__5351__auto___10443 = 0;
  while (true) {
    if (i__5351__auto___10443 < len__5350__auto___10442) {
      args__5357__auto__.push(arguments[i__5351__auto___10443]);
      var G__10444 = i__5351__auto___10443 + 1;
      i__5351__auto___10443 = G__10444;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 2 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(2), 0) : null;
  return cljs.core$macros.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
};
cljs.core$macros.str.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, xs) {
  var strs = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(",", cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(cljs.core.count(xs), "cljs.core.str(~{})")));
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.cst$sym$js_STAR_, [cljs.core.str("["), cljs.core.str(strs), cljs.core.str("].join('')")].join(""), xs);
};
cljs.core$macros.str.cljs$lang$maxFixedArity = 2;
cljs.core$macros.str.cljs$lang$applyTo = function(seq10439) {
  var G__10440 = cljs.core.first(seq10439);
  var seq10439__$1 = cljs.core.next(seq10439);
  var G__10441 = cljs.core.first(seq10439__$1);
  var seq10439__$2 = cljs.core.next(seq10439__$1);
  return cljs.core$macros.str.cljs$core$IFn$_invoke$arity$variadic(G__10440, G__10441, seq10439__$2);
};
cljs.core$macros.str.cljs$lang$macro = true;
cljs.core$macros.bool_expr = function cljs$core$macros$bool_expr(e) {
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(e, cljs.core.assoc, cljs.core.cst$kw$tag, cljs.core.cst$sym$boolean);
};
cljs.core$macros.simple_test_expr_QMARK_ = function cljs$core$macros$simple_test_expr_QMARK_(env, ast) {
  var and__4299__auto__ = (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$js, null, cljs.core.cst$kw$constant, null, cljs.core.cst$kw$var, null, cljs.core.cst$kw$invoke, null, cljs.core.cst$kw$dot, null], null), null)).call(null, cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(ast));
  if (and__4299__auto__) {
    return (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$sym$seq, null, cljs.core.cst$sym$boolean, null], null), null)).call(null, cljs.analyzer.infer_tag(env, ast));
  } else {
    return and__4299__auto__;
  }
};
cljs.core$macros.and = function cljs$core$macros$and() {
  var args10448 = [];
  var len__5350__auto___10455 = arguments.length;
  var i__5351__auto___10456 = 0;
  while (true) {
    if (i__5351__auto___10456 < len__5350__auto___10455) {
      args10448.push(arguments[i__5351__auto___10456]);
      var G__10457 = i__5351__auto___10456 + 1;
      i__5351__auto___10456 = G__10457;
      continue;
    } else {
    }
    break;
  }
  var G__10454 = args10448.length;
  switch(G__10454) {
    case 2:
      return cljs.core$macros.and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core$macros.and.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args10448.slice(3), 0);
      return cljs.core$macros.and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5369__auto__);
  }
};
cljs.core$macros.and.cljs$core$IFn$_invoke$arity$2 = function(_AMPERSAND_form, _AMPERSAND_env) {
  return true;
};
cljs.core$macros.and.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros.and.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, next) {
  var forms = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [x], null), next);
  if (cljs.core.every_QMARK_(function(forms) {
    return function(p1__10445_SHARP_) {
      return cljs.core$macros.simple_test_expr_QMARK_(_AMPERSAND_env, p1__10445_SHARP_);
    };
  }(forms), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(forms) {
    return function(p1__10446_SHARP_) {
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_env, p1__10446_SHARP_);
    };
  }(forms), forms))) {
    var and_str = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(" && ", cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(cljs.core.count(forms), "(~{})")));
    return cljs.core$macros.bool_expr(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_STAR_), cljs.core._conj(cljs.core.List.EMPTY, and_str), cljs.core.array_seq([forms], 0)))));
  } else {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$and__10447__auto__), cljs.core._conj(cljs.core.List.EMPTY, x)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$and__10447__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_and), 
    next)))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$and__10447__auto__)], 0)))))], 0))));
  }
};
cljs.core$macros.and.cljs$lang$applyTo = function(seq10449) {
  var G__10450 = cljs.core.first(seq10449);
  var seq10449__$1 = cljs.core.next(seq10449);
  var G__10451 = cljs.core.first(seq10449__$1);
  var seq10449__$2 = cljs.core.next(seq10449__$1);
  var G__10452 = cljs.core.first(seq10449__$2);
  var seq10449__$3 = cljs.core.next(seq10449__$2);
  return cljs.core$macros.and.cljs$core$IFn$_invoke$arity$variadic(G__10450, G__10451, G__10452, seq10449__$3);
};
cljs.core$macros.and.cljs$lang$maxFixedArity = 3;
cljs.core$macros.and.cljs$lang$macro = true;
cljs.core$macros.or = function cljs$core$macros$or() {
  var args10462 = [];
  var len__5350__auto___10469 = arguments.length;
  var i__5351__auto___10470 = 0;
  while (true) {
    if (i__5351__auto___10470 < len__5350__auto___10469) {
      args10462.push(arguments[i__5351__auto___10470]);
      var G__10471 = i__5351__auto___10470 + 1;
      i__5351__auto___10470 = G__10471;
      continue;
    } else {
    }
    break;
  }
  var G__10468 = args10462.length;
  switch(G__10468) {
    case 2:
      return cljs.core$macros.or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core$macros.or.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args10462.slice(3), 0);
      return cljs.core$macros.or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5369__auto__);
  }
};
cljs.core$macros.or.cljs$core$IFn$_invoke$arity$2 = function(_AMPERSAND_form, _AMPERSAND_env) {
  return null;
};
cljs.core$macros.or.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros.or.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, next) {
  var forms = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [x], null), next);
  if (cljs.core.every_QMARK_(function(forms) {
    return function(p1__10459_SHARP_) {
      return cljs.core$macros.simple_test_expr_QMARK_(_AMPERSAND_env, p1__10459_SHARP_);
    };
  }(forms), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(forms) {
    return function(p1__10460_SHARP_) {
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_env, p1__10460_SHARP_);
    };
  }(forms), forms))) {
    var or_str = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(" || ", cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(cljs.core.count(forms), "(~{})")));
    return cljs.core$macros.bool_expr(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_STAR_), cljs.core._conj(cljs.core.List.EMPTY, or_str), cljs.core.array_seq([forms], 0)))));
  } else {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$or__10461__auto__), cljs.core._conj(cljs.core.List.EMPTY, x)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$or__10461__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$or__10461__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$cljs$core$macros_SLASH_or), next))))], 0)))))], 0))));
  }
};
cljs.core$macros.or.cljs$lang$applyTo = function(seq10463) {
  var G__10464 = cljs.core.first(seq10463);
  var seq10463__$1 = cljs.core.next(seq10463);
  var G__10465 = cljs.core.first(seq10463__$1);
  var seq10463__$2 = cljs.core.next(seq10463__$1);
  var G__10466 = cljs.core.first(seq10463__$2);
  var seq10463__$3 = cljs.core.next(seq10463__$2);
  return cljs.core$macros.or.cljs$core$IFn$_invoke$arity$variadic(G__10464, G__10465, G__10466, seq10463__$3);
};
cljs.core$macros.or.cljs$lang$maxFixedArity = 3;
cljs.core$macros.or.cljs$lang$macro = true;
cljs.core$macros.nil_QMARK_ = function cljs$core$macros$nil_QMARK_(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_coercive_DASH__EQ_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, null)], 0))));
};
cljs.core$macros.nil_QMARK_.cljs$lang$macro = true;
cljs.core$macros.coercive_not = function cljs$core$macros$coercive_not(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, x), "(!~{})"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros.coercive_not.cljs$lang$macro = true;
cljs.core$macros.coercive_not_EQ_ = function cljs$core$macros$coercive_not_EQ_(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} != ~{})"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros.coercive_not_EQ_.cljs$lang$macro = true;
cljs.core$macros.coercive__EQ_ = function cljs$core$macros$coercive__EQ_(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} == ~{})"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros.coercive__EQ_.cljs$lang$macro = true;
cljs.core$macros.coercive_boolean = function cljs$core$macros$coercive_boolean(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.with_meta(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, x), "~{}"), cljs.core.cst$sym$js_STAR_), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$tag, cljs.core.cst$sym$boolean], null));
};
cljs.core$macros.coercive_boolean.cljs$lang$macro = true;
cljs.core$macros.truth_ = function cljs$core$macros$truth_(_AMPERSAND_form, _AMPERSAND_env, x) {
  if (x instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("x is substituted twice"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$core_SLASH_symbol_QMARK_, cljs.core.cst$sym$x)], 0)))].join(""));
  }
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, x), x), "(~{} != null && ~{} !== false)"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.truth_.cljs$lang$macro = true;
cljs.core$macros.js_arguments = function cljs$core$macros$js_arguments(_AMPERSAND_form, _AMPERSAND_env) {
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, "arguments"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.js_arguments.cljs$lang$macro = true;
cljs.core$macros.js_delete = function cljs$core$macros$js_delete(_AMPERSAND_form, _AMPERSAND_env, obj, key) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, key), obj), "delete ~{}[~{}]"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.js_delete.cljs$lang$macro = true;
cljs.core$macros.js_in = function cljs$core$macros$js_in(_AMPERSAND_form, _AMPERSAND_env, key, obj) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, obj), key), "~{} in ~{}"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.js_in.cljs$lang$macro = true;
cljs.core$macros.js_debugger = function cljs$core$macros$js_debugger(_AMPERSAND_form, _AMPERSAND_env) {
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, "debugger;"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.js_debugger.cljs$lang$macro = true;
cljs.core$macros.true_QMARK_ = function cljs$core$macros$true_QMARK_(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, x), "~{} === true"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros.true_QMARK_.cljs$lang$macro = true;
cljs.core$macros.false_QMARK_ = function cljs$core$macros$false_QMARK_(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, x), "~{} === false"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros.false_QMARK_.cljs$lang$macro = true;
cljs.core$macros.string_QMARK_ = function cljs$core$macros$string_QMARK_(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, x), "typeof ~{} === 'string'"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros.string_QMARK_.cljs$lang$macro = true;
cljs.core$macros.exists_QMARK_ = function cljs$core$macros$exists_QMARK_(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(x, cljs.core.assoc, cljs.core.cst$kw$cljs$analyzer_SLASH_no_DASH_resolve, true)), "typeof ~{} !== 'undefined'"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros.exists_QMARK_.cljs$lang$macro = true;
cljs.core$macros.undefined_QMARK_ = function cljs$core$macros$undefined_QMARK_(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, x), "(void 0 === ~{})"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros.undefined_QMARK_.cljs$lang$macro = true;
cljs.core$macros.identical_QMARK_ = function cljs$core$macros$identical_QMARK_(_AMPERSAND_form, _AMPERSAND_env, a, b) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, b), a), "(~{} === ~{})"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros.identical_QMARK_.cljs$lang$macro = true;
cljs.core$macros.instance_QMARK_ = function cljs$core$macros$instance_QMARK_(_AMPERSAND_form, _AMPERSAND_env, t, o) {
  return cljs.core$macros.bool_expr(t instanceof cljs.core.Symbol ? cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, t), o), "(~{} instanceof ~{})"), cljs.core.cst$sym$js_STAR_) : cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$t__10473__auto__), cljs.core._conj(cljs.core.List.EMPTY, t), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$o__10474__auto__), cljs.core._conj(cljs.core.List.EMPTY, o)], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_STAR_), cljs.core._conj(cljs.core.List.EMPTY, 
  "(~{} instanceof ~{})"), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$o__10474__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$t__10473__auto__)], 0)))))], 0)))));
};
cljs.core$macros.instance_QMARK_.cljs$lang$macro = true;
cljs.core$macros.number_QMARK_ = function cljs$core$macros$number_QMARK_(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, x), "typeof ~{} === 'number'"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros.number_QMARK_.cljs$lang$macro = true;
cljs.core$macros.symbol_QMARK_ = function cljs$core$macros$symbol_QMARK_(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core$macros.bool_expr(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_instance_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_Symbol), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, x)], 0)))));
};
cljs.core$macros.symbol_QMARK_.cljs$lang$macro = true;
cljs.core$macros.keyword_QMARK_ = function cljs$core$macros$keyword_QMARK_(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core$macros.bool_expr(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_instance_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_Keyword), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, x)], 0)))));
};
cljs.core$macros.keyword_QMARK_.cljs$lang$macro = true;
cljs.core$macros.aget = function cljs$core$macros$aget() {
  var args10475 = [];
  var len__5350__auto___10483 = arguments.length;
  var i__5351__auto___10484 = 0;
  while (true) {
    if (i__5351__auto___10484 < len__5350__auto___10483) {
      args10475.push(arguments[i__5351__auto___10484]);
      var G__10485 = i__5351__auto___10484 + 1;
      i__5351__auto___10484 = G__10485;
      continue;
    } else {
    }
    break;
  }
  var G__10482 = args10475.length;
  switch(G__10482) {
    case 4:
      return cljs.core$macros.aget.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args10475.slice(4), 0);
      return cljs.core$macros.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5369__auto__);
  }
};
cljs.core$macros.aget.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, a, i) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, i), a), "(~{}[~{}])"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.aget.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, a, i, idxs) {
  var astr = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(cljs.core.count(idxs), "[~{}]"));
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_STAR_), cljs.core._conj(cljs.core.List.EMPTY, [cljs.core.str("(~{}[~{}]"), cljs.core.str(astr), cljs.core.str(")")].join("")), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, a), cljs.core._conj(cljs.core.List.EMPTY, i), idxs], 0))));
};
cljs.core$macros.aget.cljs$lang$applyTo = function(seq10476) {
  var G__10477 = cljs.core.first(seq10476);
  var seq10476__$1 = cljs.core.next(seq10476);
  var G__10478 = cljs.core.first(seq10476__$1);
  var seq10476__$2 = cljs.core.next(seq10476__$1);
  var G__10479 = cljs.core.first(seq10476__$2);
  var seq10476__$3 = cljs.core.next(seq10476__$2);
  var G__10480 = cljs.core.first(seq10476__$3);
  var seq10476__$4 = cljs.core.next(seq10476__$3);
  return cljs.core$macros.aget.cljs$core$IFn$_invoke$arity$variadic(G__10477, G__10478, G__10479, G__10480, seq10476__$4);
};
cljs.core$macros.aget.cljs$lang$maxFixedArity = 4;
cljs.core$macros.aget.cljs$lang$macro = true;
cljs.core$macros.aset = function cljs$core$macros$aset() {
  var args10487 = [];
  var len__5350__auto___10496 = arguments.length;
  var i__5351__auto___10497 = 0;
  while (true) {
    if (i__5351__auto___10497 < len__5350__auto___10496) {
      args10487.push(arguments[i__5351__auto___10497]);
      var G__10498 = i__5351__auto___10497 + 1;
      i__5351__auto___10497 = G__10498;
      continue;
    } else {
    }
    break;
  }
  var G__10495 = args10487.length;
  switch(G__10495) {
    case 5:
      return cljs.core$macros.aset.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args10487.slice(5), 0);
      return cljs.core$macros.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__5369__auto__);
  }
};
cljs.core$macros.aset.cljs$core$IFn$_invoke$arity$5 = function(_AMPERSAND_form, _AMPERSAND_env, a, i, v) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, v), i), a), "(~{}[~{}] = ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.aset.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, a, idx, idx2, idxv) {
  var n = cljs.core.count(idxv) - 1;
  var astr = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(n, "[~{}]"));
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_STAR_), cljs.core._conj(cljs.core.List.EMPTY, [cljs.core.str("(~{}[~{}][~{}]"), cljs.core.str(astr), cljs.core.str(" = ~{})")].join("")), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, a), cljs.core._conj(cljs.core.List.EMPTY, idx), cljs.core._conj(cljs.core.List.EMPTY, idx2), idxv], 0))));
};
cljs.core$macros.aset.cljs$lang$applyTo = function(seq10488) {
  var G__10489 = cljs.core.first(seq10488);
  var seq10488__$1 = cljs.core.next(seq10488);
  var G__10490 = cljs.core.first(seq10488__$1);
  var seq10488__$2 = cljs.core.next(seq10488__$1);
  var G__10491 = cljs.core.first(seq10488__$2);
  var seq10488__$3 = cljs.core.next(seq10488__$2);
  var G__10492 = cljs.core.first(seq10488__$3);
  var seq10488__$4 = cljs.core.next(seq10488__$3);
  var G__10493 = cljs.core.first(seq10488__$4);
  var seq10488__$5 = cljs.core.next(seq10488__$4);
  return cljs.core$macros.aset.cljs$core$IFn$_invoke$arity$variadic(G__10489, G__10490, G__10491, G__10492, G__10493, seq10488__$5);
};
cljs.core$macros.aset.cljs$lang$maxFixedArity = 5;
cljs.core$macros.aset.cljs$lang$macro = true;
cljs.core$macros._PLUS_ = function cljs$core$macros$_PLUS_() {
  var args10500 = [];
  var len__5350__auto___10508 = arguments.length;
  var i__5351__auto___10509 = 0;
  while (true) {
    if (i__5351__auto___10509 < len__5350__auto___10508) {
      args10500.push(arguments[i__5351__auto___10509]);
      var G__10510 = i__5351__auto___10509 + 1;
      i__5351__auto___10509 = G__10510;
      continue;
    } else {
    }
    break;
  }
  var G__10507 = args10500.length;
  switch(G__10507) {
    case 2:
      return cljs.core$macros._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core$macros._PLUS_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros._PLUS_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args10500.slice(4), 0);
      return cljs.core$macros._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5369__auto__);
  }
};
cljs.core$macros._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(_AMPERSAND_form, _AMPERSAND_env) {
  return 0;
};
cljs.core$macros._PLUS_.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros._PLUS_.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} + ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__PLUS_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__PLUS_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([more], 0))));
};
cljs.core$macros._PLUS_.cljs$lang$applyTo = function(seq10501) {
  var G__10502 = cljs.core.first(seq10501);
  var seq10501__$1 = cljs.core.next(seq10501);
  var G__10503 = cljs.core.first(seq10501__$1);
  var seq10501__$2 = cljs.core.next(seq10501__$1);
  var G__10504 = cljs.core.first(seq10501__$2);
  var seq10501__$3 = cljs.core.next(seq10501__$2);
  var G__10505 = cljs.core.first(seq10501__$3);
  var seq10501__$4 = cljs.core.next(seq10501__$3);
  return cljs.core$macros._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__10502, G__10503, G__10504, G__10505, seq10501__$4);
};
cljs.core$macros._PLUS_.cljs$lang$maxFixedArity = 4;
cljs.core$macros._PLUS_.cljs$lang$macro = true;
cljs.core$macros.byte$ = function cljs$core$macros$byte(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros.byte$.cljs$lang$macro = true;
cljs.core$macros.short$ = function cljs$core$macros$short(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros.short$.cljs$lang$macro = true;
cljs.core$macros.float$ = function cljs$core$macros$float(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros.float$.cljs$lang$macro = true;
cljs.core$macros.double$ = function cljs$core$macros$double(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros.double$.cljs$lang$macro = true;
cljs.core$macros.unchecked_byte = function cljs$core$macros$unchecked_byte(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros.unchecked_byte.cljs$lang$macro = true;
cljs.core$macros.unchecked_char = function cljs$core$macros$unchecked_char(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros.unchecked_char.cljs$lang$macro = true;
cljs.core$macros.unchecked_short = function cljs$core$macros$unchecked_short(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros.unchecked_short.cljs$lang$macro = true;
cljs.core$macros.unchecked_float = function cljs$core$macros$unchecked_float(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros.unchecked_float.cljs$lang$macro = true;
cljs.core$macros.unchecked_double = function cljs$core$macros$unchecked_double(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros.unchecked_double.cljs$lang$macro = true;
cljs.core$macros.unchecked_add = function cljs$core$macros$unchecked_add() {
  var args__5357__auto__ = [];
  var len__5350__auto___10515 = arguments.length;
  var i__5351__auto___10516 = 0;
  while (true) {
    if (i__5351__auto___10516 < len__5350__auto___10515) {
      args__5357__auto__.push(arguments[i__5351__auto___10516]);
      var G__10517 = i__5351__auto___10516 + 1;
      i__5351__auto___10516 = G__10517;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 2 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(2), 0) : null;
  return cljs.core$macros.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
};
cljs.core$macros.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, xs) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__PLUS_), xs)));
};
cljs.core$macros.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core$macros.unchecked_add.cljs$lang$applyTo = function(seq10512) {
  var G__10513 = cljs.core.first(seq10512);
  var seq10512__$1 = cljs.core.next(seq10512);
  var G__10514 = cljs.core.first(seq10512__$1);
  var seq10512__$2 = cljs.core.next(seq10512__$1);
  return cljs.core$macros.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__10513, G__10514, seq10512__$2);
};
cljs.core$macros.unchecked_add.cljs$lang$macro = true;
cljs.core$macros.unchecked_add_int = function cljs$core$macros$unchecked_add_int() {
  var args__5357__auto__ = [];
  var len__5350__auto___10521 = arguments.length;
  var i__5351__auto___10522 = 0;
  while (true) {
    if (i__5351__auto___10522 < len__5350__auto___10521) {
      args__5357__auto__.push(arguments[i__5351__auto___10522]);
      var G__10523 = i__5351__auto___10522 + 1;
      i__5351__auto___10522 = G__10523;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 2 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(2), 0) : null;
  return cljs.core$macros.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
};
cljs.core$macros.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, xs) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__PLUS_), xs)));
};
cljs.core$macros.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core$macros.unchecked_add_int.cljs$lang$applyTo = function(seq10518) {
  var G__10519 = cljs.core.first(seq10518);
  var seq10518__$1 = cljs.core.next(seq10518);
  var G__10520 = cljs.core.first(seq10518__$1);
  var seq10518__$2 = cljs.core.next(seq10518__$1);
  return cljs.core$macros.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__10519, G__10520, seq10518__$2);
};
cljs.core$macros.unchecked_add_int.cljs$lang$macro = true;
cljs.core$macros.unchecked_dec = function cljs$core$macros$unchecked_dec(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_dec), cljs.core._conj(cljs.core.List.EMPTY, x))));
};
cljs.core$macros.unchecked_dec.cljs$lang$macro = true;
cljs.core$macros.unchecked_dec_int = function cljs$core$macros$unchecked_dec_int(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_dec), cljs.core._conj(cljs.core.List.EMPTY, x))));
};
cljs.core$macros.unchecked_dec_int.cljs$lang$macro = true;
cljs.core$macros.unchecked_divide_int = function cljs$core$macros$unchecked_divide_int() {
  var args__5357__auto__ = [];
  var len__5350__auto___10527 = arguments.length;
  var i__5351__auto___10528 = 0;
  while (true) {
    if (i__5351__auto___10528 < len__5350__auto___10527) {
      args__5357__auto__.push(arguments[i__5351__auto___10528]);
      var G__10529 = i__5351__auto___10528 + 1;
      i__5351__auto___10528 = G__10529;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 2 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(2), 0) : null;
  return cljs.core$macros.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
};
cljs.core$macros.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, xs) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__SLASH_), xs)));
};
cljs.core$macros.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core$macros.unchecked_divide_int.cljs$lang$applyTo = function(seq10524) {
  var G__10525 = cljs.core.first(seq10524);
  var seq10524__$1 = cljs.core.next(seq10524);
  var G__10526 = cljs.core.first(seq10524__$1);
  var seq10524__$2 = cljs.core.next(seq10524__$1);
  return cljs.core$macros.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__10525, G__10526, seq10524__$2);
};
cljs.core$macros.unchecked_divide_int.cljs$lang$macro = true;
cljs.core$macros.unchecked_inc = function cljs$core$macros$unchecked_inc(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_inc), cljs.core._conj(cljs.core.List.EMPTY, x))));
};
cljs.core$macros.unchecked_inc.cljs$lang$macro = true;
cljs.core$macros.unchecked_inc_int = function cljs$core$macros$unchecked_inc_int(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_inc), cljs.core._conj(cljs.core.List.EMPTY, x))));
};
cljs.core$macros.unchecked_inc_int.cljs$lang$macro = true;
cljs.core$macros.unchecked_multiply = function cljs$core$macros$unchecked_multiply() {
  var args__5357__auto__ = [];
  var len__5350__auto___10533 = arguments.length;
  var i__5351__auto___10534 = 0;
  while (true) {
    if (i__5351__auto___10534 < len__5350__auto___10533) {
      args__5357__auto__.push(arguments[i__5351__auto___10534]);
      var G__10535 = i__5351__auto___10534 + 1;
      i__5351__auto___10534 = G__10535;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 2 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(2), 0) : null;
  return cljs.core$macros.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
};
cljs.core$macros.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, xs) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__STAR_), xs)));
};
cljs.core$macros.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core$macros.unchecked_multiply.cljs$lang$applyTo = function(seq10530) {
  var G__10531 = cljs.core.first(seq10530);
  var seq10530__$1 = cljs.core.next(seq10530);
  var G__10532 = cljs.core.first(seq10530__$1);
  var seq10530__$2 = cljs.core.next(seq10530__$1);
  return cljs.core$macros.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__10531, G__10532, seq10530__$2);
};
cljs.core$macros.unchecked_multiply.cljs$lang$macro = true;
cljs.core$macros.unchecked_multiply_int = function cljs$core$macros$unchecked_multiply_int() {
  var args__5357__auto__ = [];
  var len__5350__auto___10539 = arguments.length;
  var i__5351__auto___10540 = 0;
  while (true) {
    if (i__5351__auto___10540 < len__5350__auto___10539) {
      args__5357__auto__.push(arguments[i__5351__auto___10540]);
      var G__10541 = i__5351__auto___10540 + 1;
      i__5351__auto___10540 = G__10541;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 2 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(2), 0) : null;
  return cljs.core$macros.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
};
cljs.core$macros.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, xs) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__STAR_), xs)));
};
cljs.core$macros.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core$macros.unchecked_multiply_int.cljs$lang$applyTo = function(seq10536) {
  var G__10537 = cljs.core.first(seq10536);
  var seq10536__$1 = cljs.core.next(seq10536);
  var G__10538 = cljs.core.first(seq10536__$1);
  var seq10536__$2 = cljs.core.next(seq10536__$1);
  return cljs.core$macros.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__10537, G__10538, seq10536__$2);
};
cljs.core$macros.unchecked_multiply_int.cljs$lang$macro = true;
cljs.core$macros.unchecked_negate = function cljs$core$macros$unchecked_negate(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_), cljs.core._conj(cljs.core.List.EMPTY, x))));
};
cljs.core$macros.unchecked_negate.cljs$lang$macro = true;
cljs.core$macros.unchecked_negate_int = function cljs$core$macros$unchecked_negate_int(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_), cljs.core._conj(cljs.core.List.EMPTY, x))));
};
cljs.core$macros.unchecked_negate_int.cljs$lang$macro = true;
cljs.core$macros.unchecked_remainder_int = function cljs$core$macros$unchecked_remainder_int(_AMPERSAND_form, _AMPERSAND_env, x, n) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_mod), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, n)], 0))));
};
cljs.core$macros.unchecked_remainder_int.cljs$lang$macro = true;
cljs.core$macros.unchecked_subtract = function cljs$core$macros$unchecked_subtract() {
  var args__5357__auto__ = [];
  var len__5350__auto___10545 = arguments.length;
  var i__5351__auto___10546 = 0;
  while (true) {
    if (i__5351__auto___10546 < len__5350__auto___10545) {
      args__5357__auto__.push(arguments[i__5351__auto___10546]);
      var G__10547 = i__5351__auto___10546 + 1;
      i__5351__auto___10546 = G__10547;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 2 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(2), 0) : null;
  return cljs.core$macros.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
};
cljs.core$macros.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, xs) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_), xs)));
};
cljs.core$macros.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core$macros.unchecked_subtract.cljs$lang$applyTo = function(seq10542) {
  var G__10543 = cljs.core.first(seq10542);
  var seq10542__$1 = cljs.core.next(seq10542);
  var G__10544 = cljs.core.first(seq10542__$1);
  var seq10542__$2 = cljs.core.next(seq10542__$1);
  return cljs.core$macros.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__10543, G__10544, seq10542__$2);
};
cljs.core$macros.unchecked_subtract.cljs$lang$macro = true;
cljs.core$macros.unchecked_subtract_int = function cljs$core$macros$unchecked_subtract_int() {
  var args__5357__auto__ = [];
  var len__5350__auto___10551 = arguments.length;
  var i__5351__auto___10552 = 0;
  while (true) {
    if (i__5351__auto___10552 < len__5350__auto___10551) {
      args__5357__auto__.push(arguments[i__5351__auto___10552]);
      var G__10553 = i__5351__auto___10552 + 1;
      i__5351__auto___10552 = G__10553;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 2 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(2), 0) : null;
  return cljs.core$macros.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
};
cljs.core$macros.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, xs) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_), xs)));
};
cljs.core$macros.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core$macros.unchecked_subtract_int.cljs$lang$applyTo = function(seq10548) {
  var G__10549 = cljs.core.first(seq10548);
  var seq10548__$1 = cljs.core.next(seq10548);
  var G__10550 = cljs.core.first(seq10548__$1);
  var seq10548__$2 = cljs.core.next(seq10548__$1);
  return cljs.core$macros.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__10549, G__10550, seq10548__$2);
};
cljs.core$macros.unchecked_subtract_int.cljs$lang$macro = true;
cljs.core$macros._ = function cljs$core$macros$_() {
  var args10554 = [];
  var len__5350__auto___10562 = arguments.length;
  var i__5351__auto___10563 = 0;
  while (true) {
    if (i__5351__auto___10563 < len__5350__auto___10562) {
      args10554.push(arguments[i__5351__auto___10563]);
      var G__10564 = i__5351__auto___10563 + 1;
      i__5351__auto___10563 = G__10564;
      continue;
    } else {
    }
    break;
  }
  var G__10561 = args10554.length;
  switch(G__10561) {
    case 3:
      return cljs.core$macros._.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros._.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args10554.slice(4), 0);
      return cljs.core$macros._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5369__auto__);
  }
};
cljs.core$macros._.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, x), "(- ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros._.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} - ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros._.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([more], 0))));
};
cljs.core$macros._.cljs$lang$applyTo = function(seq10555) {
  var G__10556 = cljs.core.first(seq10555);
  var seq10555__$1 = cljs.core.next(seq10555);
  var G__10557 = cljs.core.first(seq10555__$1);
  var seq10555__$2 = cljs.core.next(seq10555__$1);
  var G__10558 = cljs.core.first(seq10555__$2);
  var seq10555__$3 = cljs.core.next(seq10555__$2);
  var G__10559 = cljs.core.first(seq10555__$3);
  var seq10555__$4 = cljs.core.next(seq10555__$3);
  return cljs.core$macros._.cljs$core$IFn$_invoke$arity$variadic(G__10556, G__10557, G__10558, G__10559, seq10555__$4);
};
cljs.core$macros._.cljs$lang$maxFixedArity = 4;
cljs.core$macros._.cljs$lang$macro = true;
cljs.core$macros._STAR_ = function cljs$core$macros$_STAR_() {
  var args10566 = [];
  var len__5350__auto___10574 = arguments.length;
  var i__5351__auto___10575 = 0;
  while (true) {
    if (i__5351__auto___10575 < len__5350__auto___10574) {
      args10566.push(arguments[i__5351__auto___10575]);
      var G__10576 = i__5351__auto___10575 + 1;
      i__5351__auto___10575 = G__10576;
      continue;
    } else {
    }
    break;
  }
  var G__10573 = args10566.length;
  switch(G__10573) {
    case 2:
      return cljs.core$macros._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core$macros._STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros._STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args10566.slice(4), 0);
      return cljs.core$macros._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5369__auto__);
  }
};
cljs.core$macros._STAR_.cljs$core$IFn$_invoke$arity$2 = function(_AMPERSAND_form, _AMPERSAND_env) {
  return 1;
};
cljs.core$macros._STAR_.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros._STAR_.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} * ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__STAR_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__STAR_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([more], 0))));
};
cljs.core$macros._STAR_.cljs$lang$applyTo = function(seq10567) {
  var G__10568 = cljs.core.first(seq10567);
  var seq10567__$1 = cljs.core.next(seq10567);
  var G__10569 = cljs.core.first(seq10567__$1);
  var seq10567__$2 = cljs.core.next(seq10567__$1);
  var G__10570 = cljs.core.first(seq10567__$2);
  var seq10567__$3 = cljs.core.next(seq10567__$2);
  var G__10571 = cljs.core.first(seq10567__$3);
  var seq10567__$4 = cljs.core.next(seq10567__$3);
  return cljs.core$macros._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__10568, G__10569, G__10570, G__10571, seq10567__$4);
};
cljs.core$macros._STAR_.cljs$lang$maxFixedArity = 4;
cljs.core$macros._STAR_.cljs$lang$macro = true;
cljs.core$macros._SLASH_ = function cljs$core$macros$_SLASH_() {
  var args10578 = [];
  var len__5350__auto___10586 = arguments.length;
  var i__5351__auto___10587 = 0;
  while (true) {
    if (i__5351__auto___10587 < len__5350__auto___10586) {
      args10578.push(arguments[i__5351__auto___10587]);
      var G__10588 = i__5351__auto___10587 + 1;
      i__5351__auto___10587 = G__10588;
      continue;
    } else {
    }
    break;
  }
  var G__10585 = args10578.length;
  switch(G__10585) {
    case 3:
      return cljs.core$macros._SLASH_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros._SLASH_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args10578.slice(4), 0);
      return cljs.core$macros._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5369__auto__);
  }
};
cljs.core$macros._SLASH_.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__SLASH_), cljs.core._conj(cljs.core.List.EMPTY, 1), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, x)], 0))));
};
cljs.core$macros._SLASH_.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} / ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__SLASH_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__SLASH_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([more], 0))));
};
cljs.core$macros._SLASH_.cljs$lang$applyTo = function(seq10579) {
  var G__10580 = cljs.core.first(seq10579);
  var seq10579__$1 = cljs.core.next(seq10579);
  var G__10581 = cljs.core.first(seq10579__$1);
  var seq10579__$2 = cljs.core.next(seq10579__$1);
  var G__10582 = cljs.core.first(seq10579__$2);
  var seq10579__$3 = cljs.core.next(seq10579__$2);
  var G__10583 = cljs.core.first(seq10579__$3);
  var seq10579__$4 = cljs.core.next(seq10579__$3);
  return cljs.core$macros._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__10580, G__10581, G__10582, G__10583, seq10579__$4);
};
cljs.core$macros._SLASH_.cljs$lang$maxFixedArity = 4;
cljs.core$macros._SLASH_.cljs$lang$macro = true;
cljs.core$macros.divide = function cljs$core$macros$divide() {
  var args10590 = [];
  var len__5350__auto___10598 = arguments.length;
  var i__5351__auto___10599 = 0;
  while (true) {
    if (i__5351__auto___10599 < len__5350__auto___10598) {
      args10590.push(arguments[i__5351__auto___10599]);
      var G__10600 = i__5351__auto___10599 + 1;
      i__5351__auto___10599 = G__10600;
      continue;
    } else {
    }
    break;
  }
  var G__10597 = args10590.length;
  switch(G__10597) {
    case 3:
      return cljs.core$macros.divide.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros.divide.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args10590.slice(4), 0);
      return cljs.core$macros.divide.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5369__auto__);
  }
};
cljs.core$macros.divide.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__SLASH_), cljs.core._conj(cljs.core.List.EMPTY, 1), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, x)], 0))));
};
cljs.core$macros.divide.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} / ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.divide.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__SLASH_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__SLASH_), cljs.core._conj(cljs.core.List.EMPTY, x), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, y)], 0))))), cljs.core.array_seq([more], 0))));
};
cljs.core$macros.divide.cljs$lang$applyTo = function(seq10591) {
  var G__10592 = cljs.core.first(seq10591);
  var seq10591__$1 = cljs.core.next(seq10591);
  var G__10593 = cljs.core.first(seq10591__$1);
  var seq10591__$2 = cljs.core.next(seq10591__$1);
  var G__10594 = cljs.core.first(seq10591__$2);
  var seq10591__$3 = cljs.core.next(seq10591__$2);
  var G__10595 = cljs.core.first(seq10591__$3);
  var seq10591__$4 = cljs.core.next(seq10591__$3);
  return cljs.core$macros.divide.cljs$core$IFn$_invoke$arity$variadic(G__10592, G__10593, G__10594, G__10595, seq10591__$4);
};
cljs.core$macros.divide.cljs$lang$maxFixedArity = 4;
cljs.core$macros.divide.cljs$lang$macro = true;
cljs.core$macros._LT_ = function cljs$core$macros$_LT_() {
  var args10602 = [];
  var len__5350__auto___10610 = arguments.length;
  var i__5351__auto___10611 = 0;
  while (true) {
    if (i__5351__auto___10611 < len__5350__auto___10610) {
      args10602.push(arguments[i__5351__auto___10611]);
      var G__10612 = i__5351__auto___10611 + 1;
      i__5351__auto___10611 = G__10612;
      continue;
    } else {
    }
    break;
  }
  var G__10609 = args10602.length;
  switch(G__10609) {
    case 3:
      return cljs.core$macros._LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros._LT_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args10602.slice(4), 0);
      return cljs.core$macros._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5369__auto__);
  }
};
cljs.core$macros._LT_.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return true;
};
cljs.core$macros._LT_.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} < ~{})"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros._LT_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_and), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__LT_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__LT_), cljs.core._conj(cljs.core.List.EMPTY, y), cljs.core.array_seq([more], 0)))))], 0))));
};
cljs.core$macros._LT_.cljs$lang$applyTo = function(seq10603) {
  var G__10604 = cljs.core.first(seq10603);
  var seq10603__$1 = cljs.core.next(seq10603);
  var G__10605 = cljs.core.first(seq10603__$1);
  var seq10603__$2 = cljs.core.next(seq10603__$1);
  var G__10606 = cljs.core.first(seq10603__$2);
  var seq10603__$3 = cljs.core.next(seq10603__$2);
  var G__10607 = cljs.core.first(seq10603__$3);
  var seq10603__$4 = cljs.core.next(seq10603__$3);
  return cljs.core$macros._LT_.cljs$core$IFn$_invoke$arity$variadic(G__10604, G__10605, G__10606, G__10607, seq10603__$4);
};
cljs.core$macros._LT_.cljs$lang$maxFixedArity = 4;
cljs.core$macros._LT_.cljs$lang$macro = true;
cljs.core$macros._LT__EQ_ = function cljs$core$macros$_LT__EQ_() {
  var args10614 = [];
  var len__5350__auto___10622 = arguments.length;
  var i__5351__auto___10623 = 0;
  while (true) {
    if (i__5351__auto___10623 < len__5350__auto___10622) {
      args10614.push(arguments[i__5351__auto___10623]);
      var G__10624 = i__5351__auto___10623 + 1;
      i__5351__auto___10623 = G__10624;
      continue;
    } else {
    }
    break;
  }
  var G__10621 = args10614.length;
  switch(G__10621) {
    case 3:
      return cljs.core$macros._LT__EQ_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros._LT__EQ_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args10614.slice(4), 0);
      return cljs.core$macros._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5369__auto__);
  }
};
cljs.core$macros._LT__EQ_.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return true;
};
cljs.core$macros._LT__EQ_.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} <= ~{})"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_and), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__LT__EQ_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__LT__EQ_), cljs.core._conj(cljs.core.List.EMPTY, y), cljs.core.array_seq([more], 0)))))], 0))));
};
cljs.core$macros._LT__EQ_.cljs$lang$applyTo = function(seq10615) {
  var G__10616 = cljs.core.first(seq10615);
  var seq10615__$1 = cljs.core.next(seq10615);
  var G__10617 = cljs.core.first(seq10615__$1);
  var seq10615__$2 = cljs.core.next(seq10615__$1);
  var G__10618 = cljs.core.first(seq10615__$2);
  var seq10615__$3 = cljs.core.next(seq10615__$2);
  var G__10619 = cljs.core.first(seq10615__$3);
  var seq10615__$4 = cljs.core.next(seq10615__$3);
  return cljs.core$macros._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__10616, G__10617, G__10618, G__10619, seq10615__$4);
};
cljs.core$macros._LT__EQ_.cljs$lang$maxFixedArity = 4;
cljs.core$macros._LT__EQ_.cljs$lang$macro = true;
cljs.core$macros._GT_ = function cljs$core$macros$_GT_() {
  var args10626 = [];
  var len__5350__auto___10634 = arguments.length;
  var i__5351__auto___10635 = 0;
  while (true) {
    if (i__5351__auto___10635 < len__5350__auto___10634) {
      args10626.push(arguments[i__5351__auto___10635]);
      var G__10636 = i__5351__auto___10635 + 1;
      i__5351__auto___10635 = G__10636;
      continue;
    } else {
    }
    break;
  }
  var G__10633 = args10626.length;
  switch(G__10633) {
    case 3:
      return cljs.core$macros._GT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros._GT_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args10626.slice(4), 0);
      return cljs.core$macros._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5369__auto__);
  }
};
cljs.core$macros._GT_.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return true;
};
cljs.core$macros._GT_.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} > ~{})"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros._GT_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_and), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__GT_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__GT_), cljs.core._conj(cljs.core.List.EMPTY, y), cljs.core.array_seq([more], 0)))))], 0))));
};
cljs.core$macros._GT_.cljs$lang$applyTo = function(seq10627) {
  var G__10628 = cljs.core.first(seq10627);
  var seq10627__$1 = cljs.core.next(seq10627);
  var G__10629 = cljs.core.first(seq10627__$1);
  var seq10627__$2 = cljs.core.next(seq10627__$1);
  var G__10630 = cljs.core.first(seq10627__$2);
  var seq10627__$3 = cljs.core.next(seq10627__$2);
  var G__10631 = cljs.core.first(seq10627__$3);
  var seq10627__$4 = cljs.core.next(seq10627__$3);
  return cljs.core$macros._GT_.cljs$core$IFn$_invoke$arity$variadic(G__10628, G__10629, G__10630, G__10631, seq10627__$4);
};
cljs.core$macros._GT_.cljs$lang$maxFixedArity = 4;
cljs.core$macros._GT_.cljs$lang$macro = true;
cljs.core$macros._GT__EQ_ = function cljs$core$macros$_GT__EQ_() {
  var args10638 = [];
  var len__5350__auto___10646 = arguments.length;
  var i__5351__auto___10647 = 0;
  while (true) {
    if (i__5351__auto___10647 < len__5350__auto___10646) {
      args10638.push(arguments[i__5351__auto___10647]);
      var G__10648 = i__5351__auto___10647 + 1;
      i__5351__auto___10647 = G__10648;
      continue;
    } else {
    }
    break;
  }
  var G__10645 = args10638.length;
  switch(G__10645) {
    case 3:
      return cljs.core$macros._GT__EQ_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros._GT__EQ_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args10638.slice(4), 0);
      return cljs.core$macros._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5369__auto__);
  }
};
cljs.core$macros._GT__EQ_.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return true;
};
cljs.core$macros._GT__EQ_.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} >= ~{})"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_and), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__GT__EQ_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__GT__EQ_), cljs.core._conj(cljs.core.List.EMPTY, y), cljs.core.array_seq([more], 0)))))], 0))));
};
cljs.core$macros._GT__EQ_.cljs$lang$applyTo = function(seq10639) {
  var G__10640 = cljs.core.first(seq10639);
  var seq10639__$1 = cljs.core.next(seq10639);
  var G__10641 = cljs.core.first(seq10639__$1);
  var seq10639__$2 = cljs.core.next(seq10639__$1);
  var G__10642 = cljs.core.first(seq10639__$2);
  var seq10639__$3 = cljs.core.next(seq10639__$2);
  var G__10643 = cljs.core.first(seq10639__$3);
  var seq10639__$4 = cljs.core.next(seq10639__$3);
  return cljs.core$macros._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__10640, G__10641, G__10642, G__10643, seq10639__$4);
};
cljs.core$macros._GT__EQ_.cljs$lang$maxFixedArity = 4;
cljs.core$macros._GT__EQ_.cljs$lang$macro = true;
cljs.core$macros._EQ__EQ_ = function cljs$core$macros$_EQ__EQ_() {
  var args10650 = [];
  var len__5350__auto___10658 = arguments.length;
  var i__5351__auto___10659 = 0;
  while (true) {
    if (i__5351__auto___10659 < len__5350__auto___10658) {
      args10650.push(arguments[i__5351__auto___10659]);
      var G__10660 = i__5351__auto___10659 + 1;
      i__5351__auto___10659 = G__10660;
      continue;
    } else {
    }
    break;
  }
  var G__10657 = args10650.length;
  switch(G__10657) {
    case 3:
      return cljs.core$macros._EQ__EQ_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros._EQ__EQ_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args10650.slice(4), 0);
      return cljs.core$macros._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5369__auto__);
  }
};
cljs.core$macros._EQ__EQ_.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return true;
};
cljs.core$macros._EQ__EQ_.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} === ~{})"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_and), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__EQ__EQ_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__EQ__EQ_), cljs.core._conj(cljs.core.List.EMPTY, y), cljs.core.array_seq([more], 0)))))], 0))));
};
cljs.core$macros._EQ__EQ_.cljs$lang$applyTo = function(seq10651) {
  var G__10652 = cljs.core.first(seq10651);
  var seq10651__$1 = cljs.core.next(seq10651);
  var G__10653 = cljs.core.first(seq10651__$1);
  var seq10651__$2 = cljs.core.next(seq10651__$1);
  var G__10654 = cljs.core.first(seq10651__$2);
  var seq10651__$3 = cljs.core.next(seq10651__$2);
  var G__10655 = cljs.core.first(seq10651__$3);
  var seq10651__$4 = cljs.core.next(seq10651__$3);
  return cljs.core$macros._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__10652, G__10653, G__10654, G__10655, seq10651__$4);
};
cljs.core$macros._EQ__EQ_.cljs$lang$maxFixedArity = 4;
cljs.core$macros._EQ__EQ_.cljs$lang$macro = true;
cljs.core$macros.dec = function cljs$core$macros$dec(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__DASH_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 1)], 0))));
};
cljs.core$macros.dec.cljs$lang$macro = true;
cljs.core$macros.inc = function cljs$core$macros$inc(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__PLUS_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 1)], 0))));
};
cljs.core$macros.inc.cljs$lang$macro = true;
cljs.core$macros.zero_QMARK_ = function cljs$core$macros$zero_QMARK_(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__EQ__EQ_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 0)], 0))));
};
cljs.core$macros.zero_QMARK_.cljs$lang$macro = true;
cljs.core$macros.pos_QMARK_ = function cljs$core$macros$pos_QMARK_(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__GT_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 0)], 0))));
};
cljs.core$macros.pos_QMARK_.cljs$lang$macro = true;
cljs.core$macros.neg_QMARK_ = function cljs$core$macros$neg_QMARK_(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__LT_), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 0)], 0))));
};
cljs.core$macros.neg_QMARK_.cljs$lang$macro = true;
cljs.core$macros.max = function cljs$core$macros$max() {
  var args10664 = [];
  var len__5350__auto___10672 = arguments.length;
  var i__5351__auto___10673 = 0;
  while (true) {
    if (i__5351__auto___10673 < len__5350__auto___10672) {
      args10664.push(arguments[i__5351__auto___10673]);
      var G__10674 = i__5351__auto___10673 + 1;
      i__5351__auto___10673 = G__10674;
      continue;
    } else {
    }
    break;
  }
  var G__10671 = args10664.length;
  switch(G__10671) {
    case 3:
      return cljs.core$macros.max.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros.max.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args10664.slice(4), 0);
      return cljs.core$macros.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5369__auto__);
  }
};
cljs.core$macros.max.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros.max.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$x__10662__auto__), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$y__10663__auto__), cljs.core._conj(cljs.core.List.EMPTY, y)], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_STAR_), cljs.core._conj(cljs.core.List.EMPTY, "((~{} > ~{}) ? ~{} : ~{})"), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$x__10662__auto__), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$y__10663__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$x__10662__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$y__10663__auto__)], 0)))))], 0))));
};
cljs.core$macros.max.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_max), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_max), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([more], 0))));
};
cljs.core$macros.max.cljs$lang$applyTo = function(seq10665) {
  var G__10666 = cljs.core.first(seq10665);
  var seq10665__$1 = cljs.core.next(seq10665);
  var G__10667 = cljs.core.first(seq10665__$1);
  var seq10665__$2 = cljs.core.next(seq10665__$1);
  var G__10668 = cljs.core.first(seq10665__$2);
  var seq10665__$3 = cljs.core.next(seq10665__$2);
  var G__10669 = cljs.core.first(seq10665__$3);
  var seq10665__$4 = cljs.core.next(seq10665__$3);
  return cljs.core$macros.max.cljs$core$IFn$_invoke$arity$variadic(G__10666, G__10667, G__10668, G__10669, seq10665__$4);
};
cljs.core$macros.max.cljs$lang$maxFixedArity = 4;
cljs.core$macros.max.cljs$lang$macro = true;
cljs.core$macros.min = function cljs$core$macros$min() {
  var args10678 = [];
  var len__5350__auto___10686 = arguments.length;
  var i__5351__auto___10687 = 0;
  while (true) {
    if (i__5351__auto___10687 < len__5350__auto___10686) {
      args10678.push(arguments[i__5351__auto___10687]);
      var G__10688 = i__5351__auto___10687 + 1;
      i__5351__auto___10687 = G__10688;
      continue;
    } else {
    }
    break;
  }
  var G__10685 = args10678.length;
  switch(G__10685) {
    case 3:
      return cljs.core$macros.min.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros.min.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args10678.slice(4), 0);
      return cljs.core$macros.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5369__auto__);
  }
};
cljs.core$macros.min.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  return x;
};
cljs.core$macros.min.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$x__10676__auto__), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$y__10677__auto__), cljs.core._conj(cljs.core.List.EMPTY, y)], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_STAR_), cljs.core._conj(cljs.core.List.EMPTY, "((~{} < ~{}) ? ~{} : ~{})"), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$x__10676__auto__), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$y__10677__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$x__10676__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$y__10677__auto__)], 0)))))], 0))));
};
cljs.core$macros.min.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_min), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_min), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([more], 0))));
};
cljs.core$macros.min.cljs$lang$applyTo = function(seq10679) {
  var G__10680 = cljs.core.first(seq10679);
  var seq10679__$1 = cljs.core.next(seq10679);
  var G__10681 = cljs.core.first(seq10679__$1);
  var seq10679__$2 = cljs.core.next(seq10679__$1);
  var G__10682 = cljs.core.first(seq10679__$2);
  var seq10679__$3 = cljs.core.next(seq10679__$2);
  var G__10683 = cljs.core.first(seq10679__$3);
  var seq10679__$4 = cljs.core.next(seq10679__$3);
  return cljs.core$macros.min.cljs$core$IFn$_invoke$arity$variadic(G__10680, G__10681, G__10682, G__10683, seq10679__$4);
};
cljs.core$macros.min.cljs$lang$maxFixedArity = 4;
cljs.core$macros.min.cljs$lang$macro = true;
cljs.core$macros.js_mod = function cljs$core$macros$js_mod(_AMPERSAND_form, _AMPERSAND_env, num, div) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, div), num), "(~{} % ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.js_mod.cljs$lang$macro = true;
cljs.core$macros.bit_not = function cljs$core$macros$bit_not(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, x), "(~ ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.bit_not.cljs$lang$macro = true;
cljs.core$macros.bit_and = function cljs$core$macros$bit_and() {
  var args10690 = [];
  var len__5350__auto___10698 = arguments.length;
  var i__5351__auto___10699 = 0;
  while (true) {
    if (i__5351__auto___10699 < len__5350__auto___10698) {
      args10690.push(arguments[i__5351__auto___10699]);
      var G__10700 = i__5351__auto___10699 + 1;
      i__5351__auto___10699 = G__10700;
      continue;
    } else {
    }
    break;
  }
  var G__10697 = args10690.length;
  switch(G__10697) {
    case 4:
      return cljs.core$macros.bit_and.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args10690.slice(4), 0);
      return cljs.core$macros.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5369__auto__);
  }
};
cljs.core$macros.bit_and.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} & ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_and), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_and), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([more], 0))));
};
cljs.core$macros.bit_and.cljs$lang$applyTo = function(seq10691) {
  var G__10692 = cljs.core.first(seq10691);
  var seq10691__$1 = cljs.core.next(seq10691);
  var G__10693 = cljs.core.first(seq10691__$1);
  var seq10691__$2 = cljs.core.next(seq10691__$1);
  var G__10694 = cljs.core.first(seq10691__$2);
  var seq10691__$3 = cljs.core.next(seq10691__$2);
  var G__10695 = cljs.core.first(seq10691__$3);
  var seq10691__$4 = cljs.core.next(seq10691__$3);
  return cljs.core$macros.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__10692, G__10693, G__10694, G__10695, seq10691__$4);
};
cljs.core$macros.bit_and.cljs$lang$maxFixedArity = 4;
cljs.core$macros.bit_and.cljs$lang$macro = true;
cljs.core$macros.unsafe_bit_and = function cljs$core$macros$unsafe_bit_and() {
  var args10702 = [];
  var len__5350__auto___10710 = arguments.length;
  var i__5351__auto___10711 = 0;
  while (true) {
    if (i__5351__auto___10711 < len__5350__auto___10710) {
      args10702.push(arguments[i__5351__auto___10711]);
      var G__10712 = i__5351__auto___10711 + 1;
      i__5351__auto___10711 = G__10712;
      continue;
    } else {
    }
    break;
  }
  var G__10709 = args10702.length;
  switch(G__10709) {
    case 4:
      return cljs.core$macros.unsafe_bit_and.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args10702.slice(4), 0);
      return cljs.core$macros.unsafe_bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5369__auto__);
  }
};
cljs.core$macros.unsafe_bit_and.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} & ~{})"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros.unsafe_bit_and.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_unsafe_DASH_bit_DASH_and), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_unsafe_DASH_bit_DASH_and), cljs.core._conj(cljs.core.List.EMPTY, 
  x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, y)], 0))))), cljs.core.array_seq([more], 0))));
};
cljs.core$macros.unsafe_bit_and.cljs$lang$applyTo = function(seq10703) {
  var G__10704 = cljs.core.first(seq10703);
  var seq10703__$1 = cljs.core.next(seq10703);
  var G__10705 = cljs.core.first(seq10703__$1);
  var seq10703__$2 = cljs.core.next(seq10703__$1);
  var G__10706 = cljs.core.first(seq10703__$2);
  var seq10703__$3 = cljs.core.next(seq10703__$2);
  var G__10707 = cljs.core.first(seq10703__$3);
  var seq10703__$4 = cljs.core.next(seq10703__$3);
  return cljs.core$macros.unsafe_bit_and.cljs$core$IFn$_invoke$arity$variadic(G__10704, G__10705, G__10706, G__10707, seq10703__$4);
};
cljs.core$macros.unsafe_bit_and.cljs$lang$maxFixedArity = 4;
cljs.core$macros.unsafe_bit_and.cljs$lang$macro = true;
cljs.core$macros.bit_or = function cljs$core$macros$bit_or() {
  var args10714 = [];
  var len__5350__auto___10722 = arguments.length;
  var i__5351__auto___10723 = 0;
  while (true) {
    if (i__5351__auto___10723 < len__5350__auto___10722) {
      args10714.push(arguments[i__5351__auto___10723]);
      var G__10724 = i__5351__auto___10723 + 1;
      i__5351__auto___10723 = G__10724;
      continue;
    } else {
    }
    break;
  }
  var G__10721 = args10714.length;
  switch(G__10721) {
    case 4:
      return cljs.core$macros.bit_or.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args10714.slice(4), 0);
      return cljs.core$macros.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5369__auto__);
  }
};
cljs.core$macros.bit_or.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} | ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_or), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_or), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([more], 0))));
};
cljs.core$macros.bit_or.cljs$lang$applyTo = function(seq10715) {
  var G__10716 = cljs.core.first(seq10715);
  var seq10715__$1 = cljs.core.next(seq10715);
  var G__10717 = cljs.core.first(seq10715__$1);
  var seq10715__$2 = cljs.core.next(seq10715__$1);
  var G__10718 = cljs.core.first(seq10715__$2);
  var seq10715__$3 = cljs.core.next(seq10715__$2);
  var G__10719 = cljs.core.first(seq10715__$3);
  var seq10715__$4 = cljs.core.next(seq10715__$3);
  return cljs.core$macros.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__10716, G__10717, G__10718, G__10719, seq10715__$4);
};
cljs.core$macros.bit_or.cljs$lang$maxFixedArity = 4;
cljs.core$macros.bit_or.cljs$lang$macro = true;
cljs.core$macros.int$ = function cljs$core$macros$int(_AMPERSAND_form, _AMPERSAND_env, x) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_bit_DASH_or), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 0)], 0))));
};
cljs.core$macros.int$.cljs$lang$macro = true;
cljs.core$macros.bit_xor = function cljs$core$macros$bit_xor() {
  var args10726 = [];
  var len__5350__auto___10734 = arguments.length;
  var i__5351__auto___10735 = 0;
  while (true) {
    if (i__5351__auto___10735 < len__5350__auto___10734) {
      args10726.push(arguments[i__5351__auto___10735]);
      var G__10736 = i__5351__auto___10735 + 1;
      i__5351__auto___10735 = G__10736;
      continue;
    } else {
    }
    break;
  }
  var G__10733 = args10726.length;
  switch(G__10733) {
    case 4:
      return cljs.core$macros.bit_xor.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args10726.slice(4), 0);
      return cljs.core$macros.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5369__auto__);
  }
};
cljs.core$macros.bit_xor.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} ^ ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_xor), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_xor), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  y)], 0))))), cljs.core.array_seq([more], 0))));
};
cljs.core$macros.bit_xor.cljs$lang$applyTo = function(seq10727) {
  var G__10728 = cljs.core.first(seq10727);
  var seq10727__$1 = cljs.core.next(seq10727);
  var G__10729 = cljs.core.first(seq10727__$1);
  var seq10727__$2 = cljs.core.next(seq10727__$1);
  var G__10730 = cljs.core.first(seq10727__$2);
  var seq10727__$3 = cljs.core.next(seq10727__$2);
  var G__10731 = cljs.core.first(seq10727__$3);
  var seq10727__$4 = cljs.core.next(seq10727__$3);
  return cljs.core$macros.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__10728, G__10729, G__10730, G__10731, seq10727__$4);
};
cljs.core$macros.bit_xor.cljs$lang$maxFixedArity = 4;
cljs.core$macros.bit_xor.cljs$lang$macro = true;
cljs.core$macros.bit_and_not = function cljs$core$macros$bit_and_not() {
  var args10738 = [];
  var len__5350__auto___10746 = arguments.length;
  var i__5351__auto___10747 = 0;
  while (true) {
    if (i__5351__auto___10747 < len__5350__auto___10746) {
      args10738.push(arguments[i__5351__auto___10747]);
      var G__10748 = i__5351__auto___10747 + 1;
      i__5351__auto___10747 = G__10748;
      continue;
    } else {
    }
    break;
  }
  var G__10745 = args10738.length;
  switch(G__10745) {
    case 4:
      return cljs.core$macros.bit_and_not.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args10738.slice(4), 0);
      return cljs.core$macros.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5369__auto__);
  }
};
cljs.core$macros.bit_and_not.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, y) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, y), x), "(~{} & ~~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, y, more) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_and_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_and_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, 
  x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, y)], 0))))), cljs.core.array_seq([more], 0))));
};
cljs.core$macros.bit_and_not.cljs$lang$applyTo = function(seq10739) {
  var G__10740 = cljs.core.first(seq10739);
  var seq10739__$1 = cljs.core.next(seq10739);
  var G__10741 = cljs.core.first(seq10739__$1);
  var seq10739__$2 = cljs.core.next(seq10739__$1);
  var G__10742 = cljs.core.first(seq10739__$2);
  var seq10739__$3 = cljs.core.next(seq10739__$2);
  var G__10743 = cljs.core.first(seq10739__$3);
  var seq10739__$4 = cljs.core.next(seq10739__$3);
  return cljs.core$macros.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__10740, G__10741, G__10742, G__10743, seq10739__$4);
};
cljs.core$macros.bit_and_not.cljs$lang$maxFixedArity = 4;
cljs.core$macros.bit_and_not.cljs$lang$macro = true;
cljs.core$macros.bit_clear = function cljs$core$macros$bit_clear(_AMPERSAND_form, _AMPERSAND_env, x, n) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, n), x), "(~{} & ~(1 << ~{}))"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.bit_clear.cljs$lang$macro = true;
cljs.core$macros.bit_flip = function cljs$core$macros$bit_flip(_AMPERSAND_form, _AMPERSAND_env, x, n) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, n), x), "(~{} ^ (1 << ~{}))"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.bit_flip.cljs$lang$macro = true;
cljs.core$macros.bit_test = function cljs$core$macros$bit_test(_AMPERSAND_form, _AMPERSAND_env, x, n) {
  return cljs.core$macros.bool_expr(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, n), x), "((~{} & (1 << ~{})) != 0)"), cljs.core.cst$sym$js_STAR_));
};
cljs.core$macros.bit_test.cljs$lang$macro = true;
cljs.core$macros.bit_shift_left = function cljs$core$macros$bit_shift_left(_AMPERSAND_form, _AMPERSAND_env, x, n) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, n), x), "(~{} << ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.bit_shift_left.cljs$lang$macro = true;
cljs.core$macros.bit_shift_right = function cljs$core$macros$bit_shift_right(_AMPERSAND_form, _AMPERSAND_env, x, n) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, n), x), "(~{} >> ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.bit_shift_right.cljs$lang$macro = true;
cljs.core$macros.bit_shift_right_zero_fill = function cljs$core$macros$bit_shift_right_zero_fill(_AMPERSAND_form, _AMPERSAND_env, x, n) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, n), x), "(~{} >>> ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.bit_shift_right_zero_fill.cljs$lang$macro = true;
cljs.core$macros.unsigned_bit_shift_right = function cljs$core$macros$unsigned_bit_shift_right(_AMPERSAND_form, _AMPERSAND_env, x, n) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, n), x), "(~{} >>> ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.unsigned_bit_shift_right.cljs$lang$macro = true;
cljs.core$macros.bit_set = function cljs$core$macros$bit_set(_AMPERSAND_form, _AMPERSAND_env, x, n) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, n), x), "(~{} | (1 << ~{}))"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.bit_set.cljs$lang$macro = true;
cljs.core$macros.mask = function cljs$core$macros$mask(_AMPERSAND_form, _AMPERSAND_env, hash, shift) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, shift), hash), "((~{} >>> ~{}) & 0x01f)"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.mask.cljs$lang$macro = true;
cljs.core$macros.bitpos = function cljs$core$macros$bitpos(_AMPERSAND_form, _AMPERSAND_env, hash, shift) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_mask), cljs.core._conj(cljs.core.List.EMPTY, hash), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, shift)], 0))))), "(1 << ~{})"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.bitpos.cljs$lang$macro = true;
cljs.core$macros.caching_hash = function cljs$core$macros$caching_hash(_AMPERSAND_form, _AMPERSAND_env, coll, hash_fn, hash_key) {
  if (hash_key instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("hash-key is substituted twice"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_symbol_QMARK_, cljs.core.cst$sym$hash_DASH_key)], 0)))].join(""));
  }
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$h__10750__auto__), cljs.core._conj(cljs.core.List.EMPTY, hash_key)))))), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_if_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_nil_QMARK_), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$h__10750__auto__))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$h__10750__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$h__10750__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, hash_fn), cljs.core._conj(cljs.core.List.EMPTY, coll)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, hash_key), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$h__10750__auto__)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$h__10750__auto__)], 0)))))], 0)))))], 0))));
};
cljs.core$macros.caching_hash.cljs$lang$macro = true;
cljs.core$macros.do_curried = function cljs$core$macros$do_curried(name, doc, meta, args, body) {
  var cargs = cljs.core.vec(cljs.core.butlast(args));
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_defn), cljs.core._conj(cljs.core.List.EMPTY, name), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, doc), cljs.core._conj(cljs.core.List.EMPTY, meta), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cargs), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$x__10751__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, name), cargs, cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$x__10751__auto__)], 0)))))], 0))))))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, args), body))))], 0))));
};
cljs.core$macros.defcurried = function cljs$core$macros$defcurried() {
  var args__5357__auto__ = [];
  var len__5350__auto___10759 = arguments.length;
  var i__5351__auto___10760 = 0;
  while (true) {
    if (i__5351__auto___10760 < len__5350__auto___10759) {
      args__5357__auto__.push(arguments[i__5351__auto___10760]);
      var G__10761 = i__5351__auto___10760 + 1;
      i__5351__auto___10760 = G__10761;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 6 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(6), 0) : null;
  return cljs.core$macros.defcurried.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5358__auto__);
};
cljs.core$macros.defcurried.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, name, doc, meta, args, body) {
  return cljs.core$macros.do_curried(name, doc, meta, args, body);
};
cljs.core$macros.defcurried.cljs$lang$maxFixedArity = 6;
cljs.core$macros.defcurried.cljs$lang$applyTo = function(seq10752) {
  var G__10753 = cljs.core.first(seq10752);
  var seq10752__$1 = cljs.core.next(seq10752);
  var G__10754 = cljs.core.first(seq10752__$1);
  var seq10752__$2 = cljs.core.next(seq10752__$1);
  var G__10755 = cljs.core.first(seq10752__$2);
  var seq10752__$3 = cljs.core.next(seq10752__$2);
  var G__10756 = cljs.core.first(seq10752__$3);
  var seq10752__$4 = cljs.core.next(seq10752__$3);
  var G__10757 = cljs.core.first(seq10752__$4);
  var seq10752__$5 = cljs.core.next(seq10752__$4);
  var G__10758 = cljs.core.first(seq10752__$5);
  var seq10752__$6 = cljs.core.next(seq10752__$5);
  return cljs.core$macros.defcurried.cljs$core$IFn$_invoke$arity$variadic(G__10753, G__10754, G__10755, G__10756, G__10757, G__10758, seq10752__$6);
};
cljs.core$macros.defcurried.cljs$lang$macro = true;
cljs.core$macros.do_rfn = function cljs$core$macros$do_rfn(f1, k, fkv) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, f1))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, clojure.walk.postwalk(function(p1__10762_SHARP_) {
    if (cljs.core.sequential_QMARK_(p1__10762_SHARP_)) {
      return (cljs.core.vector_QMARK_(p1__10762_SHARP_) ? cljs.core.vec : cljs.core.identity).call(null, cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.fromArray([k], true), p1__10762_SHARP_));
    } else {
      return p1__10762_SHARP_;
    }
  }, fkv)), cljs.core._conj(cljs.core.List.EMPTY, fkv)], 0))));
};
cljs.core$macros.rfn = function cljs$core$macros$rfn(_AMPERSAND_form, _AMPERSAND_env, p__10763, fkv) {
  var vec__10765 = p__10763;
  var f1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10765, 0, null);
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10765, 1, null);
  return cljs.core$macros.do_rfn(f1, k, fkv);
};
cljs.core$macros.rfn.cljs$lang$macro = true;
cljs.core$macros.protocol_prefix = function cljs$core$macros$protocol_prefix(psym) {
  return [cljs.core.str([cljs.core.str(psym)].join("").replace(".", "$").replace("/", "$")), cljs.core.str("$")].join("");
};
cljs.core$macros.base_type = new cljs.core.PersistentArrayMap(null, 8, [null, "null", cljs.core.cst$sym$object, "object", cljs.core.cst$sym$string, "string", cljs.core.cst$sym$number, "number", cljs.core.cst$sym$array, "array", cljs.core.cst$sym$function, "function", cljs.core.cst$sym$boolean, "boolean", cljs.core.cst$sym$default, "_"], null);
cljs.core$macros.js_base_type = new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$sym$js_SLASH_Boolean, "boolean", cljs.core.cst$sym$js_SLASH_String, "string", cljs.core.cst$sym$js_SLASH_Array, "array", cljs.core.cst$sym$js_SLASH_Object, "object", cljs.core.cst$sym$js_SLASH_Number, "number", cljs.core.cst$sym$js_SLASH_Function, "function"], null);
cljs.core$macros.reify = function cljs$core$macros$reify() {
  var args__5357__auto__ = [];
  var len__5350__auto___10769 = arguments.length;
  var i__5351__auto___10770 = 0;
  while (true) {
    if (i__5351__auto___10770 < len__5350__auto___10769) {
      args__5357__auto__.push(arguments[i__5351__auto___10770]);
      var G__10771 = i__5351__auto___10770 + 1;
      i__5351__auto___10770 = G__10771;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 2 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(2), 0) : null;
  return cljs.core$macros.reify.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
};
cljs.core$macros.reify.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, impls) {
  var t = cljs.core.with_meta(cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("t"), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$anonymous, true], null));
  var meta_sym = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("meta");
  var this_sym = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("_");
  var locals = cljs.core.keys(cljs.core.cst$kw$locals.cljs$core$IFn$_invoke$arity$1(_AMPERSAND_env));
  var ns = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(_AMPERSAND_env));
  var munge = cljs.compiler.munge;
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_exists_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(ns)].join(""), [cljs.core.str(t)].join(""))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_deftype), cljs.core._conj(cljs.core.List.EMPTY, 
  t), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(locals, cljs.core._conj(cljs.core.List.EMPTY, meta_sym)))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_IWithMeta), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$_DASH_with_DASH_meta), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, this_sym), cljs.core._conj(cljs.core.List.EMPTY, meta_sym)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$new), cljs.core._conj(cljs.core.List.EMPTY, t), cljs.core.array_seq([locals, cljs.core._conj(cljs.core.List.EMPTY, meta_sym)], 0)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_IMeta), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_meta), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, this_sym)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, meta_sym)], 0))))), impls], 0)))))], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$new), 
  cljs.core._conj(cljs.core.List.EMPTY, t), cljs.core.array_seq([locals, cljs.core._conj(cljs.core.List.EMPTY, cljs.analyzer.elide_reader_meta(cljs.core.meta(_AMPERSAND_form)))], 0)))))], 0))));
};
cljs.core$macros.reify.cljs$lang$maxFixedArity = 2;
cljs.core$macros.reify.cljs$lang$applyTo = function(seq10766) {
  var G__10767 = cljs.core.first(seq10766);
  var seq10766__$1 = cljs.core.next(seq10766);
  var G__10768 = cljs.core.first(seq10766__$1);
  var seq10766__$2 = cljs.core.next(seq10766__$1);
  return cljs.core$macros.reify.cljs$core$IFn$_invoke$arity$variadic(G__10767, G__10768, seq10766__$2);
};
cljs.core$macros.reify.cljs$lang$macro = true;
cljs.core$macros.specify_BANG_ = function cljs$core$macros$specify_BANG_() {
  var args__5357__auto__ = [];
  var len__5350__auto___10776 = arguments.length;
  var i__5351__auto___10777 = 0;
  while (true) {
    if (i__5351__auto___10777 < len__5350__auto___10776) {
      args__5357__auto__.push(arguments[i__5351__auto___10777]);
      var G__10778 = i__5351__auto___10777 + 1;
      i__5351__auto___10777 = G__10778;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.specify_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.specify_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, expr, impls) {
  var x = cljs.core.with_meta(cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("x"), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$extend, cljs.core.cst$kw$instance], null));
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core._conj(cljs.core.List.EMPTY, expr)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_extend_DASH_type), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([impls], 0))))), cljs.core._conj(cljs.core.List.EMPTY, x)], 0))));
};
cljs.core$macros.specify_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core$macros.specify_BANG_.cljs$lang$applyTo = function(seq10772) {
  var G__10773 = cljs.core.first(seq10772);
  var seq10772__$1 = cljs.core.next(seq10772);
  var G__10774 = cljs.core.first(seq10772__$1);
  var seq10772__$2 = cljs.core.next(seq10772__$1);
  var G__10775 = cljs.core.first(seq10772__$2);
  var seq10772__$3 = cljs.core.next(seq10772__$2);
  return cljs.core$macros.specify_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__10773, G__10774, G__10775, seq10772__$3);
};
cljs.core$macros.specify_BANG_.cljs$lang$macro = true;
cljs.core$macros.specify = function cljs$core$macros$specify() {
  var args__5357__auto__ = [];
  var len__5350__auto___10783 = arguments.length;
  var i__5351__auto___10784 = 0;
  while (true) {
    if (i__5351__auto___10784 < len__5350__auto___10783) {
      args__5357__auto__.push(arguments[i__5351__auto___10784]);
      var G__10785 = i__5351__auto___10784 + 1;
      i__5351__auto___10784 = G__10785;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.specify.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.specify.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, expr, impls) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_specify_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_clone), cljs.core._conj(cljs.core.List.EMPTY, expr))))), cljs.core.array_seq([impls], 
  0))));
};
cljs.core$macros.specify.cljs$lang$maxFixedArity = 3;
cljs.core$macros.specify.cljs$lang$applyTo = function(seq10779) {
  var G__10780 = cljs.core.first(seq10779);
  var seq10779__$1 = cljs.core.next(seq10779);
  var G__10781 = cljs.core.first(seq10779__$1);
  var seq10779__$2 = cljs.core.next(seq10779__$1);
  var G__10782 = cljs.core.first(seq10779__$2);
  var seq10779__$3 = cljs.core.next(seq10779__$2);
  return cljs.core$macros.specify.cljs$core$IFn$_invoke$arity$variadic(G__10780, G__10781, G__10782, seq10779__$3);
};
cljs.core$macros.specify.cljs$lang$macro = true;
cljs.core$macros.js_this = function cljs$core$macros$js_this(_AMPERSAND_form, _AMPERSAND_env) {
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, "this"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.js_this.cljs$lang$macro = true;
cljs.core$macros.this_as = function cljs$core$macros$this_as() {
  var args__5357__auto__ = [];
  var len__5350__auto___10790 = arguments.length;
  var i__5351__auto___10791 = 0;
  while (true) {
    if (i__5351__auto___10791 < len__5350__auto___10790) {
      args__5357__auto__.push(arguments[i__5351__auto___10791]);
      var G__10792 = i__5351__auto___10791 + 1;
      i__5351__auto___10791 = G__10792;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.this_as.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.this_as.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, name, body) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, name), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_js_DASH_this)))))))))), cljs.core.array_seq([body], 0))));
};
cljs.core$macros.this_as.cljs$lang$maxFixedArity = 3;
cljs.core$macros.this_as.cljs$lang$applyTo = function(seq10786) {
  var G__10787 = cljs.core.first(seq10786);
  var seq10786__$1 = cljs.core.next(seq10786);
  var G__10788 = cljs.core.first(seq10786__$1);
  var seq10786__$2 = cljs.core.next(seq10786__$1);
  var G__10789 = cljs.core.first(seq10786__$2);
  var seq10786__$3 = cljs.core.next(seq10786__$2);
  return cljs.core$macros.this_as.cljs$core$IFn$_invoke$arity$variadic(G__10787, G__10788, G__10789, seq10786__$3);
};
cljs.core$macros.this_as.cljs$lang$macro = true;
cljs.core$macros.to_property = function cljs$core$macros$to_property(sym) {
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("-"), cljs.core.str(sym)].join(""));
};
cljs.core$macros.warn_and_update_protocol = function cljs$core$macros$warn_and_update_protocol(p, type, env) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$Object, p)) {
    return null;
  } else {
    var temp__4423__auto__ = cljs.analyzer.resolve_existing_var(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env, cljs.core.cst$kw$locals), p);
    if (temp__4423__auto__) {
      var var$ = temp__4423__auto__;
      if (cljs.core.cst$kw$protocol_DASH_symbol.cljs$core$IFn$_invoke$arity$1(var$)) {
      } else {
        cljs.analyzer.warning(cljs.core.cst$kw$invalid_DASH_protocol_DASH_symbol, env, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$protocol, p], null));
      }
      if (function() {
        var and__4299__auto__ = cljs.core.cst$kw$protocol_DASH_deprecated.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_warnings_STAR_);
        if (and__4299__auto__) {
          var and__4299__auto____$1 = cljs.core.cst$kw$deprecated.cljs$core$IFn$_invoke$arity$1(var$);
          if (and__4299__auto____$1) {
            return cljs.core.not(cljs.core.cst$kw$deprecation_DASH_nowarn.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p)));
          } else {
            return and__4299__auto____$1;
          }
        } else {
          return and__4299__auto__;
        }
      }()) {
        cljs.analyzer.warning(cljs.core.cst$kw$protocol_DASH_deprecated, env, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$protocol, p], null));
      } else {
      }
      if (cljs.core.cst$kw$protocol_DASH_symbol.cljs$core$IFn$_invoke$arity$1(var$)) {
        return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces], null), function(var$, temp__4423__auto__) {
          return function(ns) {
            return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(ns, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(var$), cljs.core.cst$kw$defs, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(p)), cljs.core.cst$kw$impls], null), cljs.core.conj, type);
          };
        }(var$, temp__4423__auto__));
      } else {
        return null;
      }
    } else {
      if (cljs.core.cst$kw$undeclared.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_warnings_STAR_)) {
        return cljs.analyzer.warning(cljs.core.cst$kw$undeclared_DASH_protocol_DASH_symbol, env, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$protocol, p], null));
      } else {
        return null;
      }
    }
  }
};
cljs.core$macros.resolve_var = function cljs$core$macros$resolve_var(env, sym) {
  var ret = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env, cljs.core.cst$kw$locals), sym));
  if (ret) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Can't resolve: "), cljs.core.str(sym)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.cst$sym$ret], 0)))].join(""));
  }
  return ret;
};
cljs.core$macros.__GT_impl_map = function cljs$core$macros$__GT_impl_map(impls) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var s = impls;
  while (true) {
    if (cljs.core.seq(s)) {
      var G__10793 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_, cljs.core.next(s)));
      var G__10794 = cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_, cljs.core.next(s));
      ret = G__10793;
      s = G__10794;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core$macros.base_assign_impls = function cljs$core$macros$base_assign_impls(env, resolve, tsym, type, p__10795) {
  var vec__10799 = p__10795;
  var p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10799, 0, null);
  var sigs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10799, 1, null);
  cljs.core$macros.warn_and_update_protocol(p, tsym, env);
  var psym = resolve.cljs$core$IFn$_invoke$arity$1 ? resolve.cljs$core$IFn$_invoke$arity$1(p) : resolve.call(null, p);
  var pfn_prefix = cljs.core.subs.cljs$core$IFn$_invoke$arity$3([cljs.core.str(psym)].join(""), 0, [cljs.core.str(psym)].join("").indexOf("/") + 1);
  return cljs.core.cons(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_aset), cljs.core._conj(cljs.core.List.EMPTY, psym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, type), cljs.core._conj(cljs.core.List.EMPTY, true)], 0)))), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(psym, pfn_prefix, vec__10799, p, sigs) {
    return function(p__10800) {
      var vec__10801 = p__10800;
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10801, 0, null);
      var meths = cljs.core.nthnext(vec__10801, 1);
      var form = vec__10801;
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_aset), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(pfn_prefix), cljs.core.str(f)].join(""))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, type), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$cljs$core$macros_SLASH_fn), meths))), cljs.core.meta(form)))], 0))));
    };
  }(psym, pfn_prefix, vec__10799, p, sigs), sigs));
};
if (typeof cljs.core$macros.extend_prefix !== "undefined") {
} else {
  cljs.core$macros.extend_prefix = function() {
    var method_table__5205__auto__ = function() {
      var G__10802 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10802) : cljs.core.atom.call(null, G__10802);
    }();
    var prefer_table__5206__auto__ = function() {
      var G__10803 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10803) : cljs.core.atom.call(null, G__10803);
    }();
    var method_cache__5207__auto__ = function() {
      var G__10804 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10804) : cljs.core.atom.call(null, G__10804);
    }();
    var cached_hierarchy__5208__auto__ = function() {
      var G__10805 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10805) : cljs.core.atom.call(null, G__10805);
    }();
    var hierarchy__5209__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY, cljs.core.cst$kw$hierarchy, cljs.core.get_global_hierarchy());
    return new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("cljs.core$macros", "extend-prefix"), function(method_table__5205__auto__, prefer_table__5206__auto__, method_cache__5207__auto__, cached_hierarchy__5208__auto__, hierarchy__5209__auto__) {
      return function(tsym, sym) {
        return cljs.core.cst$kw$extend.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tsym));
      };
    }(method_table__5205__auto__, prefer_table__5206__auto__, method_cache__5207__auto__, cached_hierarchy__5208__auto__, hierarchy__5209__auto__), cljs.core.cst$kw$default, hierarchy__5209__auto__, method_table__5205__auto__, prefer_table__5206__auto__, method_cache__5207__auto__, cached_hierarchy__5208__auto__);
  }();
}
cljs.core$macros.extend_prefix.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$instance, function(tsym, sym) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$$), cljs.core._conj(cljs.core.List.EMPTY, tsym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.to_property(sym))], 0))));
});
cljs.core$macros.extend_prefix.cljs$core$IMultiFn$_add_method$arity$3(null, cljs.core.cst$kw$default, function(tsym, sym) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$$), cljs.core._conj(cljs.core.List.EMPTY, tsym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_prototype), cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.to_property(sym))], 0))));
});
cljs.core$macros.adapt_obj_params = function cljs$core$macros$adapt_obj_params(type, p__10806) {
  var vec__10809 = p__10806;
  var vec__10810 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10809, 0, null);
  var this$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10810, 0, null);
  var args = cljs.core.nthnext(vec__10810, 1);
  var sig = vec__10810;
  var body = cljs.core.nthnext(vec__10809, 1);
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.cst$sym$this_DASH_as, cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(this$, cljs.core.assoc, cljs.core.cst$kw$tag, type), body)), cljs.core.vec(args));
};
cljs.core$macros.adapt_ifn_params = function cljs$core$macros$adapt_ifn_params(type, p__10811) {
  var vec__10814 = p__10811;
  var vec__10815 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10814, 0, null);
  var this$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10815, 0, null);
  var args = cljs.core.nthnext(vec__10815, 1);
  var sig = vec__10815;
  var body = cljs.core.nthnext(vec__10814, 1);
  var self_sym = cljs.core.with_meta(cljs.core.cst$sym$self__, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$tag, type], null));
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.cons(self_sym, args))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_this_DASH_as), cljs.core._conj(cljs.core.List.EMPTY, self_sym), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, this$), cljs.core._conj(cljs.core.List.EMPTY, 
  self_sym)))))), cljs.core.array_seq([body], 0)))))], 0))))))));
};
cljs.core$macros.adapt_ifn_invoke_params = function cljs$core$macros$adapt_ifn_invoke_params(type, p__10816) {
  var vec__10819 = p__10816;
  var vec__10820 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10819, 0, null);
  var this$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10820, 0, null);
  var args = cljs.core.nthnext(vec__10820, 1);
  var sig = vec__10820;
  var body = cljs.core.nthnext(vec__10819, 1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(args)), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_this_DASH_as), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(this$, 
  cljs.core.assoc, cljs.core.cst$kw$tag, type)), cljs.core.array_seq([body], 0))))))));
};
cljs.core$macros.adapt_proto_params = function cljs$core$macros$adapt_proto_params(type, p__10821) {
  var vec__10824 = p__10821;
  var vec__10825 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10824, 0, null);
  var this$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10825, 0, null);
  var args = cljs.core.nthnext(vec__10825, 1);
  var sig = vec__10825;
  var body = cljs.core.nthnext(vec__10824, 1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.cons(cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(this$, cljs.core.assoc, cljs.core.cst$kw$tag, type), args))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_this_DASH_as), 
  cljs.core._conj(cljs.core.List.EMPTY, this$), cljs.core.array_seq([body], 0))))))));
};
cljs.core$macros.add_obj_methods = function cljs$core$macros$add_obj_methods(type, type_sym, sigs) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p__10830) {
    var vec__10831 = p__10830;
    var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10831, 0, null);
    var meths = cljs.core.nthnext(vec__10831, 1);
    var form = vec__10831;
    var vec__10832 = cljs.core.vector_QMARK_(cljs.core.first(meths)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.rest(form)], null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f, meths], null);
    var f__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10832, 0, null);
    var meths__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10832, 1, null);
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2 ? cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2(type_sym, f__$1) : cljs.core$macros.extend_prefix.call(null, type_sym, f__$1)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(vec__10832, f__$1, meths__$1, vec__10831, f, meths, form) {
      return function(p1__10826_SHARP_) {
        return cljs.core$macros.adapt_obj_params(type, p1__10826_SHARP_);
      };
    }(vec__10832, f__$1, meths__$1, vec__10831, f, meths, form), meths__$1)))), cljs.core.meta(form)))], 0))));
  }, sigs);
};
cljs.core$macros.ifn_invoke_methods = function cljs$core$macros$ifn_invoke_methods(type, type_sym, p__10834) {
  var vec__10838 = p__10834;
  var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10838, 0, null);
  var meths = cljs.core.nthnext(vec__10838, 1);
  var form = vec__10838;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(vec__10838, f, meths, form) {
    return function(meth) {
      var arity = cljs.core.count(cljs.core.first(meth));
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, function() {
        var G__10839 = type_sym;
        var G__10840 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("cljs$core$IFn$_invoke$arity$"), cljs.core.str(arity)].join(""));
        return cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2 ? cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2(G__10839, G__10840) : cljs.core$macros.extend_prefix.call(null, G__10839, G__10840);
      }()), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, meth)))), cljs.core.meta(form)))], 0))));
    };
  }(vec__10838, f, meths, form), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(vec__10838, f, meths, form) {
    return function(p1__10833_SHARP_) {
      return cljs.core$macros.adapt_ifn_invoke_params(type, p1__10833_SHARP_);
    };
  }(vec__10838, f, meths, form), meths));
};
cljs.core$macros.add_ifn_methods = function cljs$core$macros$add_ifn_methods(type, type_sym, p__10842) {
  var vec__10844 = p__10842;
  var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10844, 0, null);
  var meths = cljs.core.nthnext(vec__10844, 1);
  var form = vec__10844;
  var meths__$1 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(vec__10844, f, meths, form) {
    return function(p1__10841_SHARP_) {
      return cljs.core$macros.adapt_ifn_params(type, p1__10841_SHARP_);
    };
  }(vec__10844, f, meths, form), meths);
  var this_sym = cljs.core.with_meta(cljs.core.cst$sym$self__, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$tag, type], null));
  var argsym = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("args");
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2 ? cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2(type_sym, cljs.core.cst$sym$call) : 
  cljs.core$macros.extend_prefix.call(null, type_sym, cljs.core.cst$sym$call)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), meths__$1))), cljs.core.meta(form)))], 0)))), cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2 ? cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2(type_sym, cljs.core.cst$sym$apply) : cljs.core$macros.extend_prefix.call(null, type_sym, cljs.core.cst$sym$apply)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this_sym, argsym], null)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_this_DASH_as), cljs.core._conj(cljs.core.List.EMPTY, 
  this_sym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$apply), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$_DASH_call), cljs.core._conj(cljs.core.List.EMPTY, 
  this_sym))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, this_sym), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$concat), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_array), 
  cljs.core._conj(cljs.core.List.EMPTY, this_sym))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_aclone), cljs.core._conj(cljs.core.List.EMPTY, argsym)))))], 0)))))], 0)))))], 0)))))], 0)))), cljs.core.meta(form)))], 0))))], null), cljs.core$macros.ifn_invoke_methods(type, type_sym, form));
};
cljs.core$macros.add_proto_methods_STAR_ = function cljs$core$macros$add_proto_methods_STAR_(pprefix, type, type_sym, p__10845) {
  var vec__10853 = p__10845;
  var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10853, 0, null);
  var meths = cljs.core.nthnext(vec__10853, 1);
  var form = vec__10853;
  var pf = [cljs.core.str(pprefix), cljs.core.str(f)].join("");
  if (cljs.core.vector_QMARK_(cljs.core.first(meths))) {
    var meth = meths;
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, function() {
      var G__10854 = type_sym;
      var G__10855 = [cljs.core.str(pf), cljs.core.str("$arity$"), cljs.core.str(cljs.core.count(cljs.core.first(meth)))].join("");
      return cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2 ? cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2(G__10854, G__10855) : cljs.core$macros.extend_prefix.call(null, G__10854, G__10855);
    }()), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core$macros.adapt_proto_params(type, meth)))), cljs.core.meta(form)))], 0))))], null);
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(pf, vec__10853, f, meths, form) {
      return function(p__10856) {
        var vec__10857 = p__10856;
        var sig = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10857, 0, null);
        var body = cljs.core.nthnext(vec__10857, 1);
        var meth = vec__10857;
        return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, function() {
          var G__10858 = type_sym;
          var G__10859 = [cljs.core.str(pf), cljs.core.str("$arity$"), cljs.core.str(cljs.core.count(sig))].join("");
          return cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2 ? cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2(G__10858, G__10859) : cljs.core$macros.extend_prefix.call(null, G__10858, G__10859);
        }()), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.adapt_proto_params(type, meth))))), cljs.core.meta(form)))], 0))));
      };
    }(pf, vec__10853, f, meths, form), meths);
  }
};
cljs.core$macros.proto_assign_impls = function cljs$core$macros$proto_assign_impls(env, resolve, type_sym, type, p__10860) {
  var vec__10862 = p__10860;
  var p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10862, 0, null);
  var sigs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10862, 1, null);
  cljs.core$macros.warn_and_update_protocol(p, type, env);
  var psym = resolve.cljs$core$IFn$_invoke$arity$1 ? resolve.cljs$core$IFn$_invoke$arity$1(p) : resolve.call(null, p);
  var pprefix = cljs.core$macros.protocol_prefix(psym);
  var skip_flag = cljs.core.set(cljs.core.cst$kw$skip_DASH_protocol_DASH_flag.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(type_sym)));
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p, cljs.core.cst$sym$Object)) {
    return cljs.core$macros.add_obj_methods(type, type_sym, sigs);
  } else {
    return cljs.core.concat.cljs$core$IFn$_invoke$arity$2((skip_flag.cljs$core$IFn$_invoke$arity$1 ? skip_flag.cljs$core$IFn$_invoke$arity$1(psym) : skip_flag.call(null, psym)) ? null : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2 ? 
    cljs.core$macros.extend_prefix.cljs$core$IFn$_invoke$arity$2(type_sym, pprefix) : cljs.core$macros.extend_prefix.call(null, type_sym, pprefix)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, true)], 0))))], null), cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(function(psym, pprefix, skip_flag, vec__10862, p, sigs) {
      return function(sig) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(psym, cljs.core.cst$sym$cljs$core_SLASH_IFn)) {
          return cljs.core$macros.add_ifn_methods(type, type_sym, sig);
        } else {
          return cljs.core$macros.add_proto_methods_STAR_(pprefix, type, type_sym, sig);
        }
      };
    }(psym, pprefix, skip_flag, vec__10862, p, sigs), cljs.core.array_seq([sigs], 0)));
  }
};
cljs.core$macros.validate_impl_sigs = function cljs$core$macros$validate_impl_sigs(env, p, method) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p, cljs.core.cst$sym$Object)) {
    return null;
  } else {
    var var$ = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env, cljs.core.cst$kw$locals), p);
    var minfo = cljs.core.cst$kw$methods.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$protocol_DASH_info.cljs$core$IFn$_invoke$arity$1(var$));
    var vec__10864 = cljs.core.vector_QMARK_(cljs.core.second(method)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(method), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.second(method)], null)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(method), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, cljs.core.rest(method))], 
    null);
    var fname = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10864, 0, null);
    var sigs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10864, 1, null);
    var decmeths = cljs.core.get.cljs$core$IFn$_invoke$arity$3(minfo, fname, cljs.core.cst$kw$cljs$core$macros_SLASH_not_DASH_found);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(decmeths, cljs.core.cst$kw$cljs$core$macros_SLASH_not_DASH_found)) {
      cljs.analyzer.warning(cljs.core.cst$kw$protocol_DASH_invalid_DASH_method, env, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$protocol, p, cljs.core.cst$kw$fname, fname, cljs.core.cst$kw$no_DASH_such_DASH_method, true], null));
    } else {
    }
    var sigs__$1 = sigs;
    var seen = cljs.core.PersistentHashSet.EMPTY;
    while (true) {
      if (cljs.core.seq(sigs__$1)) {
        var sig = cljs.core.first(sigs__$1);
        var c = cljs.core.count(sig);
        if (cljs.core.contains_QMARK_(seen, c)) {
          cljs.analyzer.warning(cljs.core.cst$kw$protocol_DASH_duped_DASH_method, env, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$protocol, p, cljs.core.cst$kw$fname, fname], null));
        } else {
        }
        if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(decmeths, cljs.core.cst$kw$cljs$core$macros_SLASH_not_DASH_found) && cljs.core.not(cljs.core.some(cljs.core.PersistentHashSet.fromArray([c], true), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.count, decmeths)))) {
          cljs.analyzer.warning(cljs.core.cst$kw$protocol_DASH_invalid_DASH_method, env, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$protocol, p, cljs.core.cst$kw$fname, fname, cljs.core.cst$kw$invalid_DASH_arity, c], null));
        } else {
        }
        var G__10865 = cljs.core.next(sigs__$1);
        var G__10866 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen, c);
        sigs__$1 = G__10865;
        seen = G__10866;
        continue;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core$macros.validate_impls = function cljs$core$macros$validate_impls(env, impls) {
  var protos = cljs.core.PersistentHashSet.EMPTY;
  var impls__$1 = impls;
  while (true) {
    if (cljs.core.seq(impls__$1)) {
      var proto = cljs.core.first(impls__$1);
      var methods$ = cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_, cljs.core.next(impls__$1));
      var impls__$2 = cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_, cljs.core.next(impls__$1));
      if (cljs.core.contains_QMARK_(protos, proto)) {
        cljs.analyzer.warning(cljs.core.cst$kw$protocol_DASH_multiple_DASH_impls, env, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$protocol, proto], null));
      } else {
      }
      var seen_10869 = cljs.core.PersistentHashSet.EMPTY;
      var methods_10870__$1 = methods$;
      while (true) {
        if (cljs.core.seq(methods_10870__$1)) {
          var vec__10868_10871 = cljs.core.first(methods_10870__$1);
          var fname_10872 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10868_10871, 0, null);
          var method_10873 = vec__10868_10871;
          if (cljs.core.contains_QMARK_(seen_10869, fname_10872)) {
            cljs.analyzer.warning(cljs.core.cst$kw$extend_DASH_type_DASH_invalid_DASH_method_DASH_shape, env, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$protocol, proto, cljs.core.cst$kw$method, fname_10872], null));
          } else {
          }
          cljs.core$macros.validate_impl_sigs(env, proto, method_10873);
          var G__10874 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen_10869, fname_10872);
          var G__10875 = cljs.core.next(methods_10870__$1);
          seen_10869 = G__10874;
          methods_10870__$1 = G__10875;
          continue;
        } else {
        }
        break;
      }
      var G__10876 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(protos, proto);
      var G__10877 = impls__$2;
      protos = G__10876;
      impls__$1 = G__10877;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core$macros.extend_type = function cljs$core$macros$extend_type() {
  var args__5357__auto__ = [];
  var len__5350__auto___10884 = arguments.length;
  var i__5351__auto___10885 = 0;
  while (true) {
    if (i__5351__auto___10885 < len__5350__auto___10884) {
      args__5357__auto__.push(arguments[i__5351__auto___10885]);
      var G__10886 = i__5351__auto___10885 + 1;
      i__5351__auto___10885 = G__10886;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.extend_type.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.extend_type.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, type_sym, impls) {
  var env = _AMPERSAND_env;
  var _ = cljs.core$macros.validate_impls(env, impls);
  var resolve = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core$macros.resolve_var, env);
  var impl_map = cljs.core$macros.__GT_impl_map(impls);
  var vec__10883 = function() {
    var temp__4423__auto__ = cljs.core$macros.base_type.cljs$core$IFn$_invoke$arity$1 ? cljs.core$macros.base_type.cljs$core$IFn$_invoke$arity$1(type_sym) : cljs.core$macros.base_type.call(null, type_sym);
    if (temp__4423__auto__) {
      var type = temp__4423__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [type, cljs.core$macros.base_assign_impls], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [resolve.cljs$core$IFn$_invoke$arity$1 ? resolve.cljs$core$IFn$_invoke$arity$1(type_sym) : resolve.call(null, type_sym), cljs.core$macros.proto_assign_impls], null);
    }
  }();
  var type = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10883, 0, null);
  var assign_impls = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10883, 1, null);
  if (function() {
    var and__4299__auto__ = cljs.core.cst$kw$extending_DASH_base_DASH_js_DASH_type.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_warnings_STAR_);
    if (and__4299__auto__) {
      return cljs.core$macros.js_base_type.cljs$core$IFn$_invoke$arity$1 ? cljs.core$macros.js_base_type.cljs$core$IFn$_invoke$arity$1(type_sym) : cljs.core$macros.js_base_type.call(null, type_sym);
    } else {
      return and__4299__auto__;
    }
  }()) {
    cljs.analyzer.warning(cljs.core.cst$kw$extending_DASH_base_DASH_js_DASH_type, env, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$current_DASH_symbol, type_sym, cljs.core.cst$kw$suggested_DASH_symbol, cljs.core$macros.js_base_type.cljs$core$IFn$_invoke$arity$1 ? cljs.core$macros.js_base_type.cljs$core$IFn$_invoke$arity$1(type_sym) : cljs.core$macros.js_base_type.call(null, type_sym)], null));
  } else {
  }
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(function(env, _, resolve, impl_map, vec__10883, type, assign_impls) {
    return function(p1__10878_SHARP_) {
      return assign_impls.cljs$core$IFn$_invoke$arity$5 ? assign_impls.cljs$core$IFn$_invoke$arity$5(env, resolve, type_sym, type, p1__10878_SHARP_) : assign_impls.call(null, env, resolve, type_sym, type, p1__10878_SHARP_);
    };
  }(env, _, resolve, impl_map, vec__10883, type, assign_impls), cljs.core.array_seq([impl_map], 0)))));
};
cljs.core$macros.extend_type.cljs$lang$maxFixedArity = 3;
cljs.core$macros.extend_type.cljs$lang$applyTo = function(seq10879) {
  var G__10880 = cljs.core.first(seq10879);
  var seq10879__$1 = cljs.core.next(seq10879);
  var G__10881 = cljs.core.first(seq10879__$1);
  var seq10879__$2 = cljs.core.next(seq10879__$1);
  var G__10882 = cljs.core.first(seq10879__$2);
  var seq10879__$3 = cljs.core.next(seq10879__$2);
  return cljs.core$macros.extend_type.cljs$core$IFn$_invoke$arity$variadic(G__10880, G__10881, G__10882, seq10879__$3);
};
cljs.core$macros.extend_type.cljs$lang$macro = true;
cljs.core$macros.prepare_protocol_masks = function cljs$core$macros$prepare_protocol_masks(env, impls) {
  var resolve = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core$macros.resolve_var, env);
  var impl_map = cljs.core$macros.__GT_impl_map(impls);
  var fpp_pbs = cljs.core.seq(cljs.core.keep.cljs$core$IFn$_invoke$arity$2(cljs.core$macros.fast_path_protocols, cljs.core.map.cljs$core$IFn$_invoke$arity$2(resolve, cljs.core.keys(impl_map))));
  if (fpp_pbs) {
    var fpps = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.contains_QMARK_, cljs.core$macros.fast_path_protocols), cljs.core.map.cljs$core$IFn$_invoke$arity$2(resolve, cljs.core.keys(impl_map))));
    var parts = function() {
      var parts = cljs.core.group_by(cljs.core.first, fpp_pbs);
      var parts__$1 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.map, cljs.core.peek), cljs.core.val)), parts));
      var parts__$2 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.reduce, cljs.core.bit_or), cljs.core.val)), parts__$1));
      return parts__$2;
    }();
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [fpps, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fpps, parts, resolve, impl_map, fpp_pbs) {
      return function(ps, p) {
        return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(ps, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p], null), cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.identity, 0));
      };
    }(fpps, parts, resolve, impl_map, fpp_pbs), parts, cljs.core.range.cljs$core$IFn$_invoke$arity$1(cljs.core$macros.fast_path_protocol_partitions_count))], null);
  } else {
    return null;
  }
};
cljs.core$macros.annotate_specs = function cljs$core$macros$annotate_specs(annots, v, p__10888) {
  var vec__10890 = p__10888;
  var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10890, 0, null);
  var sigs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10890, 1, null);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(v, cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(cljs.core.cons(f, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(vec__10890, f, sigs) {
    return function(p1__10887_SHARP_) {
      return cljs.core.cons(cljs.core.second(p1__10887_SHARP_), cljs.core.nnext(p1__10887_SHARP_));
    };
  }(vec__10890, f, sigs), sigs)), cljs.core.merge, annots));
};
cljs.core$macros.dt__GT_et = function cljs$core$macros$dt__GT_et() {
  var args10891 = [];
  var len__5350__auto___10894 = arguments.length;
  var i__5351__auto___10895 = 0;
  while (true) {
    if (i__5351__auto___10895 < len__5350__auto___10894) {
      args10891.push(arguments[i__5351__auto___10895]);
      var G__10896 = i__5351__auto___10895 + 1;
      i__5351__auto___10895 = G__10896;
      continue;
    } else {
    }
    break;
  }
  var G__10893 = args10891.length;
  switch(G__10893) {
    case 3:
      return cljs.core$macros.dt__GT_et.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros.dt__GT_et.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10891.length)].join(""));;
  }
};
cljs.core$macros.dt__GT_et.cljs$core$IFn$_invoke$arity$3 = function(type, specs, fields) {
  return cljs.core$macros.dt__GT_et.cljs$core$IFn$_invoke$arity$4(type, specs, fields, false);
};
cljs.core$macros.dt__GT_et.cljs$core$IFn$_invoke$arity$4 = function(type, specs, fields, inline) {
  var annots = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$cljs$analyzer_SLASH_type, type, cljs.core.cst$kw$cljs$analyzer_SLASH_protocol_DASH_impl, true, cljs.core.cst$kw$cljs$analyzer_SLASH_protocol_DASH_inline, inline], null);
  var ret = cljs.core.PersistentVector.EMPTY;
  var specs__$1 = specs;
  while (true) {
    if (cljs.core.seq(specs__$1)) {
      var p = cljs.core.first(specs__$1);
      var ret__$1 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, p), cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core$macros.annotate_specs, annots), cljs.core.PersistentVector.EMPTY, cljs.core.group_by(cljs.core.first, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_, cljs.core.next(specs__$1)))));
      var specs__$2 = cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_, cljs.core.next(specs__$1));
      var G__10898 = ret__$1;
      var G__10899 = specs__$2;
      ret = G__10898;
      specs__$1 = G__10899;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core$macros.dt__GT_et.cljs$lang$maxFixedArity = 4;
cljs.core$macros.collect_protocols = function cljs$core$macros$collect_protocols(impls, env) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__10900_SHARP_) {
    return cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env, cljs.core.cst$kw$locals), p1__10900_SHARP_));
  }, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol_QMARK_, impls)));
};
cljs.core$macros.build_positional_factory = function cljs$core$macros$build_positional_factory(rsym, rname, fields) {
  var fn_name = cljs.core.with_meta(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(cljs.core.cst$sym$_DASH__GT_), cljs.core.str(rsym)].join("")), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.meta(rsym), cljs.core.cst$kw$factory, cljs.core.cst$kw$positional));
  var field_values = cljs.core.cst$kw$internal_DASH_ctor.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(rsym)) ? cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(fields, null, cljs.core.array_seq([null, null], 0)) : fields;
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_defn), cljs.core._conj(cljs.core.List.EMPTY, fn_name), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(fields))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$new), cljs.core._conj(cljs.core.List.EMPTY, rname), cljs.core.array_seq([field_values], 0)))))], 0))));
};
cljs.core$macros.validate_fields = function cljs$core$macros$validate_fields(case$, name, fields) {
  if (cljs.core.vector_QMARK_(fields)) {
    return null;
  } else {
    throw new Error([cljs.core.str(case$), cljs.core.str(" "), cljs.core.str(name), cljs.core.str(", no fields vector given.")].join(""));
  }
};
cljs.core$macros.deftype = function cljs$core$macros$deftype() {
  var args__5357__auto__ = [];
  var len__5350__auto___10910 = arguments.length;
  var i__5351__auto___10911 = 0;
  while (true) {
    if (i__5351__auto___10911 < len__5350__auto___10910) {
      args__5357__auto__.push(arguments[i__5351__auto___10911]);
      var G__10912 = i__5351__auto___10911 + 1;
      i__5351__auto___10911 = G__10912;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 4 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(4), 0) : null;
  return cljs.core$macros.deftype.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5358__auto__);
};
cljs.core$macros.deftype.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, t, fields, impls) {
  cljs.core$macros.validate_fields("deftype", t, fields);
  var env = _AMPERSAND_env;
  var r = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env, cljs.core.cst$kw$locals), t));
  var vec__10909 = cljs.core$macros.prepare_protocol_masks(env, impls);
  var fpps = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10909, 0, null);
  var pmasks = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10909, 1, null);
  var protocols = cljs.core$macros.collect_protocols(impls, env);
  var t__$1 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(t, cljs.core.assoc, cljs.core.cst$kw$protocols, protocols, cljs.core.cst$kw$skip_DASH_protocol_DASH_flag, fpps);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$deftype_STAR_), cljs.core._conj(cljs.core.List.EMPTY, t__$1), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  fields), cljs.core._conj(cljs.core.List.EMPTY, pmasks), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.seq(impls) ? cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_extend_DASH_type), cljs.core._conj(cljs.core.List.EMPTY, t__$1), cljs.core.array_seq([cljs.core$macros.dt__GT_et.cljs$core$IFn$_invoke$arity$3(t__$1, impls, fields)], 0)))) : null)], 0))))), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$_DASH_getBasis), cljs.core._conj(cljs.core.List.EMPTY, 
  t__$1))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$quote), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(fields)))))))))], 0)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$_DASH_cljs$lang$type), cljs.core._conj(cljs.core.List.EMPTY, t__$1))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, true)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$_DASH_cljs$lang$ctorStr), cljs.core._conj(cljs.core.List.EMPTY, t__$1))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, [cljs.core.str(r)].join(""))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$_DASH_cljs$lang$ctorPrWriter), cljs.core._conj(cljs.core.List.EMPTY, t__$1))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__10901__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$writer__10902__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$opt__10903__auto__)], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_write), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$writer__10902__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, [cljs.core.str(r)].join(""))], 0)))))], 0)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.build_positional_factory(t__$1, r, fields)), 
  cljs.core._conj(cljs.core.List.EMPTY, t__$1)], 0))));
};
cljs.core$macros.deftype.cljs$lang$maxFixedArity = 4;
cljs.core$macros.deftype.cljs$lang$applyTo = function(seq10904) {
  var G__10905 = cljs.core.first(seq10904);
  var seq10904__$1 = cljs.core.next(seq10904);
  var G__10906 = cljs.core.first(seq10904__$1);
  var seq10904__$2 = cljs.core.next(seq10904__$1);
  var G__10907 = cljs.core.first(seq10904__$2);
  var seq10904__$3 = cljs.core.next(seq10904__$2);
  var G__10908 = cljs.core.first(seq10904__$3);
  var seq10904__$4 = cljs.core.next(seq10904__$3);
  return cljs.core$macros.deftype.cljs$core$IFn$_invoke$arity$variadic(G__10905, G__10906, G__10907, G__10908, seq10904__$4);
};
cljs.core$macros.deftype.cljs$lang$macro = true;
cljs.core$macros.emit_defrecord = function cljs$core$macros$emit_defrecord(env, tagname, rname, fields, impls) {
  var hinted_fields = fields;
  var fields__$1 = cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(hinted_fields) {
    return function(p1__10913_SHARP_) {
      return cljs.core.with_meta(p1__10913_SHARP_, null);
    };
  }(hinted_fields), fields));
  var base_fields = fields__$1;
  var pr_open = [cljs.core.str("#"), cljs.core.str(cljs.core.namespace(rname)), cljs.core.str("."), cljs.core.str(cljs.core.name(rname)), cljs.core.str("{")].join("");
  var fields__$2 = cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(fields__$1, cljs.core.cst$sym$__meta, cljs.core.array_seq([cljs.core.cst$sym$__extmap, cljs.core.with_meta(cljs.core.cst$sym$__hash, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$mutable, true], null))], 0));
  var gs = cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
  var ksym = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("k");
  var impls__$1 = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(impls, new cljs.core.PersistentVector(null, 28, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$IRecord, cljs.core.cst$sym$ICloneable, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_clone), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$this__10914__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$new), cljs.core._conj(cljs.core.List.EMPTY, tagname), cljs.core.array_seq([fields__$2], 0)))))], 0)))), cljs.core.cst$sym$IHash, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$_DASH_hash), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__10915__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_caching_DASH_hash), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__10915__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$hash_DASH_imap), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$__hash)], 0)))))], 0)))), cljs.core.cst$sym$IEquiv, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_equiv), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__10916__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$other__10917__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_and), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$other__10917__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_identical_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$_DASH_constructor), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__10916__auto__))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$$_DASH_constructor), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$other__10917__auto__)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_equiv_DASH_map), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__10916__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$other__10917__auto__)], 0)))))], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, true), cljs.core._conj(cljs.core.List.EMPTY, false)], 0)))))], 0)))), cljs.core.cst$sym$IMeta, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_meta), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$this__10918__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$__meta)], 0)))), cljs.core.cst$sym$IWithMeta, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_with_DASH_meta), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$this__10919__auto__), cljs.core._conj(cljs.core.List.EMPTY, gs)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$new), cljs.core._conj(cljs.core.List.EMPTY, tagname), cljs.core.array_seq([cljs.core.replace.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$__meta, 
  gs], null), fields__$2)], 0)))))], 0)))), cljs.core.cst$sym$ILookup, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_lookup), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__10920__auto__), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$k__10921__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_lookup), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__10920__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$k__10921__auto__), cljs.core._conj(cljs.core.List.EMPTY, 
  null)], 0)))))], 0)))), cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_lookup), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__10922__auto__), cljs.core._conj(cljs.core.List.EMPTY, ksym), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$else__10923__auto__)], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_case), cljs.core._conj(cljs.core.List.EMPTY, ksym), cljs.core.array_seq([cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(function(gs, 
  ksym, hinted_fields, fields__$1, base_fields, pr_open, fields__$2) {
    return function(f) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(f), f], null);
    };
  }(gs, ksym, hinted_fields, fields__$1, base_fields, pr_open, fields__$2), cljs.core.array_seq([base_fields], 0)), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_get), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$__extmap), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, ksym), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$else__10923__auto__)], 0)))))], 0)))))], 0)))), cljs.core.cst$sym$ICounted, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_count), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__10924__auto__)))))), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__PLUS_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.count(base_fields)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH_count), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$__extmap)))))], 0)))))], 0)))), cljs.core.cst$sym$ICollection, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_conj), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$this__10925__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$entry__10926__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH_vector_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$entry__10926__auto__))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_assoc), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__10925__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_nth), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$entry__10926__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 0)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH__DASH_nth), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$entry__10926__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 1)], 0)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_reduce), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_conj), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__10925__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$entry__10926__auto__)], 0)))))], 0)))))], 0)))), cljs.core.cst$sym$IAssociative, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_assoc), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$this__10927__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$k__10928__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, gs)], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_condp), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_keyword_DASH_identical_QMARK_), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$k__10928__auto__), cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(function(gs, ksym, hinted_fields, fields__$1, base_fields, pr_open, fields__$2) {
    return function(fld) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(fld), cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.cst$sym$new, tagname, cljs.core.replace.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap.fromArray([fld, gs, cljs.core.cst$sym$__hash, null], true, false), fields__$2))], null);
    };
  }(gs, ksym, hinted_fields, fields__$1, base_fields, pr_open, fields__$2), cljs.core.array_seq([base_fields], 0)), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$new), cljs.core._conj(cljs.core.List.EMPTY, tagname), cljs.core.array_seq([cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
  2, [cljs.core.cst$sym$__hash, null, cljs.core.cst$sym$__extmap, null], null), null), fields__$2), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_assoc), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$__extmap), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$k__10928__auto__), cljs.core._conj(cljs.core.List.EMPTY, 
  gs)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, null)], 0)))))], 0)))))], 0)))), cljs.core.cst$sym$IMap, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_dissoc), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__10929__auto__), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$k__10930__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_set, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.keyword, base_fields)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$k__10930__auto__)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_dissoc), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_with_DASH_meta), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH_into), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__10929__auto__)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$__meta)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$k__10930__auto__)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$new), cljs.core._conj(cljs.core.List.EMPTY, tagname), cljs.core.array_seq([cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$sym$__hash, null, cljs.core.cst$sym$__extmap, 
  null], null), null), fields__$2), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_not_DASH_empty), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_dissoc), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$__extmap), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$k__10930__auto__)], 0))))))))), cljs.core._conj(cljs.core.List.EMPTY, null)], 0)))))], 0)))))], 0)))), cljs.core.cst$sym$ISeqable, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_seq), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$this__10932__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_seq), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_concat), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(gs, ksym, hinted_fields, fields__$1, base_fields, pr_open, fields__$2) {
    return function(p1__10931_SHARP_) {
      return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, p1__10931_SHARP_), cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(p1__10931_SHARP_)), cljs.core.cst$sym$cljs$core_SLASH_vector);
    };
  }(gs, ksym, hinted_fields, fields__$1, base_fields, pr_open, fields__$2), base_fields)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$__extmap)], 0)))))))))], 0)))), cljs.core.cst$sym$IIterable, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_iterator), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, 
  gs)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$RecordIter$), cljs.core._conj(cljs.core.List.EMPTY, 0), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, gs), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.count(base_fields)), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.keyword, 
  base_fields)))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_iterator), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$__extmap)))))], 0)))))], 0)))), cljs.core.cst$sym$IPrintWithWriter, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$_DASH_pr_DASH_writer), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__10934__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$writer__10935__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$opts__10936__auto__)], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$pr_DASH_pair__10937__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$keyval__10938__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH_pr_DASH_sequential_DASH_writer), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$writer__10935__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_pr_DASH_writer), cljs.core._conj(cljs.core.List.EMPTY, ""), cljs.core._conj(cljs.core.List.EMPTY, " "), cljs.core._conj(cljs.core.List.EMPTY, ""), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$opts__10936__auto__), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$keyval__10938__auto__)], 0)))))], 0)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_pr_DASH_sequential_DASH_writer), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$writer__10935__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$pr_DASH_pair__10937__auto__), 
  cljs.core._conj(cljs.core.List.EMPTY, pr_open), cljs.core._conj(cljs.core.List.EMPTY, ", "), cljs.core._conj(cljs.core.List.EMPTY, "}"), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$opts__10936__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_concat), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(gs, 
  ksym, hinted_fields, fields__$1, base_fields, pr_open, fields__$2) {
    return function(p1__10933_SHARP_) {
      return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, p1__10933_SHARP_), cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(p1__10933_SHARP_)), cljs.core.cst$sym$cljs$core_SLASH_vector);
    };
  }(gs, ksym, hinted_fields, fields__$1, base_fields, pr_open, fields__$2), base_fields)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$__extmap)], 0)))))], 0)))))], 0)))))], 0))))], null));
  var vec__10940 = cljs.core$macros.prepare_protocol_masks(env, impls__$1);
  var fpps = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10940, 0, null);
  var pmasks = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10940, 1, null);
  var protocols = cljs.core$macros.collect_protocols(impls__$1, env);
  var tagname__$1 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(tagname, cljs.core.assoc, cljs.core.cst$kw$protocols, protocols, cljs.core.cst$kw$skip_DASH_protocol_DASH_flag, fpps);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$defrecord_STAR_), cljs.core._conj(cljs.core.List.EMPTY, tagname__$1), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  hinted_fields), cljs.core._conj(cljs.core.List.EMPTY, pmasks), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_extend_DASH_type), cljs.core._conj(cljs.core.List.EMPTY, tagname__$1), cljs.core.array_seq([cljs.core$macros.dt__GT_et.cljs$core$IFn$_invoke$arity$4(tagname__$1, impls__$1, fields__$2, true)], 0)))))], 
  0))))))));
};
cljs.core$macros.build_map_factory = function cljs$core$macros$build_map_factory(rsym, rname, fields) {
  var fn_name = cljs.core.with_meta(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(cljs.core.cst$sym$map_DASH__GT_), cljs.core.str(rsym)].join("")), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.meta(rsym), cljs.core.cst$kw$factory, cljs.core.cst$kw$map));
  var ms = cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
  var ks = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.keyword, fields);
  var getters = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(fn_name, ms, ks) {
    return function(k) {
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, k), cljs.core._conj(cljs.core.List.EMPTY, ms))));
    };
  }(fn_name, ms, ks), ks);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_defn), cljs.core._conj(cljs.core.List.EMPTY, fn_name), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, ms)))))), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$new), cljs.core._conj(cljs.core.List.EMPTY, rname), cljs.core.array_seq([getters, cljs.core._conj(cljs.core.List.EMPTY, null), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_dissoc), 
  cljs.core._conj(cljs.core.List.EMPTY, ms), cljs.core.array_seq([ks], 0))))), cljs.core._conj(cljs.core.List.EMPTY, null)], 0)))))], 0))));
};
cljs.core$macros.defrecord = function cljs$core$macros$defrecord() {
  var args__5357__auto__ = [];
  var len__5350__auto___10948 = arguments.length;
  var i__5351__auto___10949 = 0;
  while (true) {
    if (i__5351__auto___10949 < len__5350__auto___10948) {
      args__5357__auto__.push(arguments[i__5351__auto___10949]);
      var G__10950 = i__5351__auto___10949 + 1;
      i__5351__auto___10949 = G__10950;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 4 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(4), 0) : null;
  return cljs.core$macros.defrecord.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5358__auto__);
};
cljs.core$macros.defrecord.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, rsym, fields, impls) {
  cljs.core$macros.validate_fields("defrecord", rsym, fields);
  var rsym__$1 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(rsym, cljs.core.assoc, cljs.core.cst$kw$internal_DASH_ctor, true);
  var r = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_env, cljs.core.cst$kw$locals), rsym__$1)), cljs.core.assoc, cljs.core.cst$kw$internal_DASH_ctor, true);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.emit_defrecord(_AMPERSAND_env, rsym__$1, r, fields, 
  impls)), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$_DASH_getBasis), cljs.core._conj(cljs.core.List.EMPTY, r))))), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$quote), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(fields)))))))))], 0)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$$_DASH_cljs$lang$type), cljs.core._conj(cljs.core.List.EMPTY, r))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, true)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$$_DASH_cljs$lang$ctorPrSeq), cljs.core._conj(cljs.core.List.EMPTY, r))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$this__10941__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_list), cljs.core._conj(cljs.core.List.EMPTY, [cljs.core.str(r)].join(""))))))], 0)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$_DASH_cljs$lang$ctorPrWriter), cljs.core._conj(cljs.core.List.EMPTY, r))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__10941__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$writer__10942__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH__DASH_write), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$writer__10942__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, [cljs.core.str(r)].join(""))], 0)))))], 0)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.build_positional_factory(rsym__$1, r, fields)), cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.build_map_factory(rsym__$1, r, fields)), cljs.core._conj(cljs.core.List.EMPTY, r)], 0))));
};
cljs.core$macros.defrecord.cljs$lang$maxFixedArity = 4;
cljs.core$macros.defrecord.cljs$lang$applyTo = function(seq10943) {
  var G__10944 = cljs.core.first(seq10943);
  var seq10943__$1 = cljs.core.next(seq10943);
  var G__10945 = cljs.core.first(seq10943__$1);
  var seq10943__$2 = cljs.core.next(seq10943__$1);
  var G__10946 = cljs.core.first(seq10943__$2);
  var seq10943__$3 = cljs.core.next(seq10943__$2);
  var G__10947 = cljs.core.first(seq10943__$3);
  var seq10943__$4 = cljs.core.next(seq10943__$3);
  return cljs.core$macros.defrecord.cljs$core$IFn$_invoke$arity$variadic(G__10944, G__10945, G__10946, G__10947, seq10943__$4);
};
cljs.core$macros.defrecord.cljs$lang$macro = true;
cljs.core$macros.defprotocol = function cljs$core$macros$defprotocol() {
  var args__5357__auto__ = [];
  var len__5350__auto___10968 = arguments.length;
  var i__5351__auto___10969 = 0;
  while (true) {
    if (i__5351__auto___10969 < len__5350__auto___10968) {
      args__5357__auto__.push(arguments[i__5351__auto___10969]);
      var G__10970 = i__5351__auto___10969 + 1;
      i__5351__auto___10969 = G__10970;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.defprotocol.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.defprotocol.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, psym, doc_PLUS_methods) {
  var p = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_env, cljs.core.cst$kw$locals), psym));
  var vec__10957 = typeof cljs.core.first(doc_PLUS_methods) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(doc_PLUS_methods), cljs.core.next(doc_PLUS_methods)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, doc_PLUS_methods], null);
  var doc = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10957, 0, null);
  var methods$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10957, 1, null);
  var psym__$1 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(psym, cljs.core.assoc, cljs.core.cst$kw$doc, doc, cljs.core.cst$kw$protocol_DASH_symbol, true);
  var ns_name = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(_AMPERSAND_env));
  var fqn = function(p, vec__10957, doc, methods$, psym__$1, ns_name) {
    return function(n) {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(ns_name), cljs.core.str("."), cljs.core.str(n)].join(""));
    };
  }(p, vec__10957, doc, methods$, psym__$1, ns_name);
  var prefix = cljs.core$macros.protocol_prefix(p);
  var _ = function() {
    var seq__10958 = cljs.core.seq(methods$);
    var chunk__10959 = null;
    var count__10960 = 0;
    var i__10961 = 0;
    while (true) {
      if (i__10961 < count__10960) {
        var vec__10962 = chunk__10959.cljs$core$IIndexed$_nth$arity$2(null, i__10961);
        var mname = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10962, 0, null);
        var arities = cljs.core.nthnext(vec__10962, 1);
        if (cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [0, null], null), null), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.count, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.vector_QMARK_, arities)))) {
          throw new Error([cljs.core.str("Invalid protocol, "), cljs.core.str(psym__$1), cljs.core.str(" defines method "), cljs.core.str(mname), cljs.core.str(" with arity 0")].join(""));
        } else {
        }
        var G__10971 = seq__10958;
        var G__10972 = chunk__10959;
        var G__10973 = count__10960;
        var G__10974 = i__10961 + 1;
        seq__10958 = G__10971;
        chunk__10959 = G__10972;
        count__10960 = G__10973;
        i__10961 = G__10974;
        continue;
      } else {
        var temp__4425__auto__ = cljs.core.seq(seq__10958);
        if (temp__4425__auto__) {
          var seq__10958__$1 = temp__4425__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__10958__$1)) {
            var c__5095__auto__ = cljs.core.chunk_first(seq__10958__$1);
            var G__10975 = cljs.core.chunk_rest(seq__10958__$1);
            var G__10976 = c__5095__auto__;
            var G__10977 = cljs.core.count(c__5095__auto__);
            var G__10978 = 0;
            seq__10958 = G__10975;
            chunk__10959 = G__10976;
            count__10960 = G__10977;
            i__10961 = G__10978;
            continue;
          } else {
            var vec__10963 = cljs.core.first(seq__10958__$1);
            var mname = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10963, 0, null);
            var arities = cljs.core.nthnext(vec__10963, 1);
            if (cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [0, null], null), null), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.count, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.vector_QMARK_, arities)))) {
              throw new Error([cljs.core.str("Invalid protocol, "), cljs.core.str(psym__$1), cljs.core.str(" defines method "), cljs.core.str(mname), cljs.core.str(" with arity 0")].join(""));
            } else {
            }
            var G__10979 = cljs.core.next(seq__10958__$1);
            var G__10980 = null;
            var G__10981 = 0;
            var G__10982 = 0;
            seq__10958 = G__10979;
            chunk__10959 = G__10980;
            count__10960 = G__10981;
            i__10961 = G__10982;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  }();
  var expand_sig = function(p, vec__10957, doc, methods$, psym__$1, ns_name, fqn, prefix, _) {
    return function(fname, slot, sig) {
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, sig), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$cljs$core$macros_SLASH_and), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_nil_QMARK_), 
      cljs.core._conj(cljs.core.List.EMPTY, cljs.core.first(sig)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$cljs$core$macros_SLASH_nil_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.first(sig)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("-"), cljs.core.str(slot)].join("")))], 0)))))))))))))], 
      0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.first(sig)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, slot), sig], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$x__10951__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), 
      cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_nil_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.first(sig)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, null), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.first(sig))], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$m__10952__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_aget), cljs.core._conj(cljs.core.List.EMPTY, fqn(fname)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$goog_SLASH_typeOf), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$x__10951__auto__)))))], 0)))))], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_if_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$cljs$core$macros_SLASH_nil_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$m__10952__auto__))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$m__10952__auto__), sig)))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$m__10952__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_aget), 
      cljs.core._conj(cljs.core.List.EMPTY, fqn(fname)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, "_")], 0)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_if_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$cljs$core$macros_SLASH_nil_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$m__10952__auto__))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$m__10952__auto__), sig)))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$throw), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_missing_DASH_protocol), cljs.core._conj(cljs.core.List.EMPTY, [cljs.core.str(psym__$1), cljs.core.str("."), cljs.core.str(fname)].join("")), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.first(sig))], 0)))))))))], 0)))))], 
      0)))))], 0)))))], 0)))))], 0))))))));
    };
  }(p, vec__10957, doc, methods$, psym__$1, ns_name, fqn, prefix, _);
  var psym__$2 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(psym__$1, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$protocol_DASH_info, cljs.core.cst$kw$methods], null), cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p, vec__10957, doc, methods$, psym__$1, ns_name, fqn, prefix, _, expand_sig) {
    return function(p__10964) {
      var vec__10965 = p__10964;
      var fname = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10965, 0, null);
      var sigs = cljs.core.nthnext(vec__10965, 1);
      var doc__$1 = function() {
        var doc__$1 = cljs.core.last(sigs);
        var doc__$2 = typeof doc__$1 === "string" ? doc__$1 : null;
        return doc__$2;
      }();
      var sigs__$1 = cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.vector_QMARK_, sigs);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(fname, cljs.core.assoc, cljs.core.cst$kw$doc, doc__$1), cljs.core.vec(sigs__$1)], null);
    };
  }(p, vec__10957, doc, methods$, psym__$1, ns_name, fqn, prefix, _, expand_sig), methods$)));
  var method = function(p, vec__10957, doc, methods$, psym__$1, ns_name, fqn, prefix, _, expand_sig, psym__$2) {
    return function(p__10966) {
      var vec__10967 = p__10966;
      var fname = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10967, 0, null);
      var sigs = cljs.core.nthnext(vec__10967, 1);
      var doc__$1 = function() {
        var doc__$1 = cljs.core.last(sigs);
        var doc__$2 = typeof doc__$1 === "string" ? doc__$1 : null;
        return doc__$2;
      }();
      var sigs__$1 = cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.vector_QMARK_, sigs);
      var slot = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix), cljs.core.str(cljs.core.name(fname))].join(""));
      var fname__$1 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(fname, cljs.core.assoc, cljs.core.cst$kw$protocol, p, cljs.core.cst$kw$doc, doc__$1);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_defn), cljs.core._conj(cljs.core.List.EMPTY, fname__$1), cljs.core.array_seq([cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(doc__$1, sigs__$1, slot, fname__$1, vec__10967, fname, sigs, p, vec__10957, doc, methods$, psym__$1, ns_name, fqn, prefix, _, expand_sig, psym__$2) {
        return function(sig) {
          return expand_sig(fname__$1, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(slot), cljs.core.str("$arity$"), cljs.core.str(cljs.core.count(sig))].join("")), sig);
        };
      }(doc__$1, sigs__$1, slot, fname__$1, vec__10967, fname, sigs, p, vec__10957, doc, methods$, psym__$1, ns_name, fqn, prefix, _, expand_sig, psym__$2), sigs__$1)], 0))));
    };
  }(p, vec__10957, doc, methods$, psym__$1, ns_name, fqn, prefix, _, expand_sig, psym__$2);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_STAR_unchecked_DASH_if_STAR_), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  true)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$def), cljs.core._conj(cljs.core.List.EMPTY, psym__$2), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH_js_DASH_obj)))))], 0))))), cljs.core.map.cljs$core$IFn$_invoke$arity$2(method, methods$), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_STAR_unchecked_DASH_if_STAR_), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, false)], 
  0)))))], 0))));
};
cljs.core$macros.defprotocol.cljs$lang$maxFixedArity = 3;
cljs.core$macros.defprotocol.cljs$lang$applyTo = function(seq10953) {
  var G__10954 = cljs.core.first(seq10953);
  var seq10953__$1 = cljs.core.next(seq10953);
  var G__10955 = cljs.core.first(seq10953__$1);
  var seq10953__$2 = cljs.core.next(seq10953__$1);
  var G__10956 = cljs.core.first(seq10953__$2);
  var seq10953__$3 = cljs.core.next(seq10953__$2);
  return cljs.core$macros.defprotocol.cljs$core$IFn$_invoke$arity$variadic(G__10954, G__10955, G__10956, seq10953__$3);
};
cljs.core$macros.defprotocol.cljs$lang$macro = true;
cljs.core$macros.implements_QMARK_ = function cljs$core$macros$implements_QMARK_(_AMPERSAND_form, _AMPERSAND_env, psym, x) {
  var p = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_env, cljs.core.cst$kw$locals), psym));
  var prefix = cljs.core$macros.protocol_prefix(p);
  var xsym = cljs.core$macros.bool_expr(cljs.core.gensym.cljs$core$IFn$_invoke$arity$0());
  var vec__10984 = cljs.core$macros.fast_path_protocols.cljs$core$IFn$_invoke$arity$1 ? cljs.core$macros.fast_path_protocols.cljs$core$IFn$_invoke$arity$1(p) : cljs.core$macros.fast_path_protocols.call(null, p);
  var part = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10984, 0, null);
  var bit = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10984, 1, null);
  var msym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("-cljs$lang$protocol_mask$partition"), cljs.core.str(part), cljs.core.str("$")].join(""));
  if (!(x instanceof cljs.core.Symbol)) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, xsym), cljs.core._conj(cljs.core.List.EMPTY, x)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, xsym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_or), cljs.core._conj(cljs.core.List.EMPTY, bit ? cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_unsafe_DASH_bit_DASH_and), cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, xsym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, msym)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, bit)], 0)))) : false), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.bool_expr(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, xsym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("-"), cljs.core.str(prefix)].join("")))], 0))))))], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, true), cljs.core._conj(cljs.core.List.EMPTY, false)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, false)], 0)))))], 0))));
  } else {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_if_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_nil_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, x))))), 
    cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_or), cljs.core._conj(cljs.core.List.EMPTY, 
    bit ? cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_unsafe_DASH_bit_DASH_and), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
    msym)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, bit)], 0)))) : false), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.bool_expr(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("-"), 
    cljs.core.str(prefix)].join("")))], 0))))))], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, true), cljs.core._conj(cljs.core.List.EMPTY, false)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, false)], 0))));
  }
};
cljs.core$macros.implements_QMARK_.cljs$lang$macro = true;
cljs.core$macros.satisfies_QMARK_ = function cljs$core$macros$satisfies_QMARK_(_AMPERSAND_form, _AMPERSAND_env, psym, x) {
  var p = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_env, cljs.core.cst$kw$locals), psym));
  var prefix = cljs.core$macros.protocol_prefix(p);
  var xsym = cljs.core$macros.bool_expr(cljs.core.gensym.cljs$core$IFn$_invoke$arity$0());
  var vec__10986 = cljs.core$macros.fast_path_protocols.cljs$core$IFn$_invoke$arity$1 ? cljs.core$macros.fast_path_protocols.cljs$core$IFn$_invoke$arity$1(p) : cljs.core$macros.fast_path_protocols.call(null, p);
  var part = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10986, 0, null);
  var bit = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10986, 1, null);
  var msym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("-cljs$lang$protocol_mask$partition"), cljs.core.str(part), cljs.core.str("$")].join(""));
  if (!(x instanceof cljs.core.Symbol)) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, xsym), cljs.core._conj(cljs.core.List.EMPTY, x)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_if_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_nil_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, xsym))))), 
    cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_or), cljs.core._conj(cljs.core.List.EMPTY, 
    bit ? cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_unsafe_DASH_bit_DASH_and), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, xsym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
    msym)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, bit)], 0)))) : false), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.bool_expr(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, xsym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("-"), 
    cljs.core.str(prefix)].join("")))], 0))))))], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, true), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$cljs$core$macros_SLASH_coercive_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, xsym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, msym)], 0))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$cljs$core_SLASH_native_DASH_satisfies_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, psym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, xsym)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, false)], 0)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_native_DASH_satisfies_QMARK_), 
    cljs.core._conj(cljs.core.List.EMPTY, psym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, xsym)], 0)))))], 0)))))], 0))));
  } else {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_if_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_nil_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, x))))), 
    cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_or), cljs.core._conj(cljs.core.List.EMPTY, 
    bit ? cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_unsafe_DASH_bit_DASH_and), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
    msym)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, bit)], 0)))) : false), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.bool_expr(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("-"), 
    cljs.core.str(prefix)].join("")))], 0))))))], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, true), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$cljs$core$macros_SLASH_coercive_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, msym)], 0))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$cljs$core_SLASH_native_DASH_satisfies_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, psym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, x)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, false)], 0)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_native_DASH_satisfies_QMARK_), 
    cljs.core._conj(cljs.core.List.EMPTY, psym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, x)], 0)))))], 0))));
  }
};
cljs.core$macros.satisfies_QMARK_.cljs$lang$macro = true;
cljs.core$macros.lazy_seq = function cljs$core$macros$lazy_seq() {
  var args__5357__auto__ = [];
  var len__5350__auto___10990 = arguments.length;
  var i__5351__auto___10991 = 0;
  while (true) {
    if (i__5351__auto___10991 < len__5350__auto___10990) {
      args__5357__auto__.push(arguments[i__5351__auto___10991]);
      var G__10992 = i__5351__auto___10991 + 1;
      i__5351__auto___10991 = G__10992;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 2 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(2), 0) : null;
  return cljs.core$macros.lazy_seq.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
};
cljs.core$macros.lazy_seq.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$new), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_LazySeq), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, null), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))), cljs.core.array_seq([body], 0))))), cljs.core._conj(cljs.core.List.EMPTY, null), cljs.core._conj(cljs.core.List.EMPTY, null)], 0))));
};
cljs.core$macros.lazy_seq.cljs$lang$maxFixedArity = 2;
cljs.core$macros.lazy_seq.cljs$lang$applyTo = function(seq10987) {
  var G__10988 = cljs.core.first(seq10987);
  var seq10987__$1 = cljs.core.next(seq10987);
  var G__10989 = cljs.core.first(seq10987__$1);
  var seq10987__$2 = cljs.core.next(seq10987__$1);
  return cljs.core$macros.lazy_seq.cljs$core$IFn$_invoke$arity$variadic(G__10988, G__10989, seq10987__$2);
};
cljs.core$macros.lazy_seq.cljs$lang$macro = true;
cljs.core$macros.delay = function cljs$core$macros$delay() {
  var args__5357__auto__ = [];
  var len__5350__auto___10996 = arguments.length;
  var i__5351__auto___10997 = 0;
  while (true) {
    if (i__5351__auto___10997 < len__5350__auto___10996) {
      args__5357__auto__.push(arguments[i__5351__auto___10997]);
      var G__10998 = i__5351__auto___10997 + 1;
      i__5351__auto___10997 = G__10998;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 2 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(2), 0) : null;
  return cljs.core$macros.delay.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
};
cljs.core$macros.delay.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$new), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_Delay), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))), cljs.core.array_seq([body], 0))))), cljs.core._conj(cljs.core.List.EMPTY, null)], 0))));
};
cljs.core$macros.delay.cljs$lang$maxFixedArity = 2;
cljs.core$macros.delay.cljs$lang$applyTo = function(seq10993) {
  var G__10994 = cljs.core.first(seq10993);
  var seq10993__$1 = cljs.core.next(seq10993);
  var G__10995 = cljs.core.first(seq10993__$1);
  var seq10993__$2 = cljs.core.next(seq10993__$1);
  return cljs.core$macros.delay.cljs$core$IFn$_invoke$arity$variadic(G__10994, G__10995, seq10993__$2);
};
cljs.core$macros.delay.cljs$lang$macro = true;
cljs.core$macros.with_redefs = function cljs$core$macros$with_redefs() {
  var args__5357__auto__ = [];
  var len__5350__auto___11005 = arguments.length;
  var i__5351__auto___11006 = 0;
  while (true) {
    if (i__5351__auto___11006 < len__5350__auto___11005) {
      args__5357__auto__.push(arguments[i__5351__auto___11006]);
      var G__11007 = i__5351__auto___11006 + 1;
      i__5351__auto___11006 = G__11007;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.with_redefs.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.with_redefs.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, bindings, body) {
  var names = cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(2, bindings);
  var vals = cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(2, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, bindings));
  var tempnames = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym, cljs.core.name), names);
  var binds = cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector, names, vals);
  var resets = cljs.core.reverse(cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector, names, tempnames));
  var bind_value = function(names, vals, tempnames, binds, resets) {
    return function(p__11003) {
      var vec__11004 = p__11003;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11004, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11004, 1, null);
      return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, v), k), cljs.core.cst$sym$set_BANG_);
    };
  }(names, vals, tempnames, binds, resets);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(tempnames, names)))))), cljs.core.array_seq([cljs.core.map.cljs$core$IFn$_invoke$arity$2(bind_value, 
  binds), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$try), body, cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$finally), cljs.core.map.cljs$core$IFn$_invoke$arity$2(bind_value, 
  resets)))))], 0)))))], 0))));
};
cljs.core$macros.with_redefs.cljs$lang$maxFixedArity = 3;
cljs.core$macros.with_redefs.cljs$lang$applyTo = function(seq10999) {
  var G__11000 = cljs.core.first(seq10999);
  var seq10999__$1 = cljs.core.next(seq10999);
  var G__11001 = cljs.core.first(seq10999__$1);
  var seq10999__$2 = cljs.core.next(seq10999__$1);
  var G__11002 = cljs.core.first(seq10999__$2);
  var seq10999__$3 = cljs.core.next(seq10999__$2);
  return cljs.core$macros.with_redefs.cljs$core$IFn$_invoke$arity$variadic(G__11000, G__11001, G__11002, seq10999__$3);
};
cljs.core$macros.with_redefs.cljs$lang$macro = true;
cljs.core$macros.binding = function cljs$core$macros$binding() {
  var args__5357__auto__ = [];
  var len__5350__auto___11012 = arguments.length;
  var i__5351__auto___11013 = 0;
  while (true) {
    if (i__5351__auto___11013 < len__5350__auto___11012) {
      args__5357__auto__.push(arguments[i__5351__auto___11013]);
      var G__11014 = i__5351__auto___11013 + 1;
      i__5351__auto___11013 = G__11014;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.binding.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.binding.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, bindings, body) {
  var names = cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(2, bindings);
  cljs.analyzer.confirm_bindings(_AMPERSAND_env, names);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_with_DASH_redefs), cljs.core._conj(cljs.core.List.EMPTY, bindings), cljs.core.array_seq([body], 0))));
};
cljs.core$macros.binding.cljs$lang$maxFixedArity = 3;
cljs.core$macros.binding.cljs$lang$applyTo = function(seq11008) {
  var G__11009 = cljs.core.first(seq11008);
  var seq11008__$1 = cljs.core.next(seq11008);
  var G__11010 = cljs.core.first(seq11008__$1);
  var seq11008__$2 = cljs.core.next(seq11008__$1);
  var G__11011 = cljs.core.first(seq11008__$2);
  var seq11008__$3 = cljs.core.next(seq11008__$2);
  return cljs.core$macros.binding.cljs$core$IFn$_invoke$arity$variadic(G__11009, G__11010, G__11011, seq11008__$3);
};
cljs.core$macros.binding.cljs$lang$macro = true;
cljs.core$macros.condp = function cljs$core$macros$condp() {
  var args__5357__auto__ = [];
  var len__5350__auto___11025 = arguments.length;
  var i__5351__auto___11026 = 0;
  while (true) {
    if (i__5351__auto___11026 < len__5350__auto___11025) {
      args__5357__auto__.push(arguments[i__5351__auto___11026]);
      var G__11027 = i__5351__auto___11026 + 1;
      i__5351__auto___11026 = G__11027;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 4 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(4), 0) : null;
  return cljs.core$macros.condp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5358__auto__);
};
cljs.core$macros.condp.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, pred, expr, clauses) {
  var gpred = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("pred__");
  var gexpr = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("expr__");
  var emit = function(gpred, gexpr) {
    return function cljs$core$macros$emit(pred__$1, expr__$1, args) {
      var vec__11023 = cljs.core.split_at(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$_GT__GT_, cljs.core.second(args)) ? 3 : 2, args);
      var vec__11024 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11023, 0, null);
      var a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11024, 0, null);
      var b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11024, 1, null);
      var c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11024, 2, null);
      var clause = vec__11024;
      var more = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11023, 1, null);
      var n = cljs.core.count(clause);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(0, n)) {
        return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$throw), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_SLASH_Error$), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.cst$sym$core_SLASH_str), cljs.core._conj(cljs.core.List.EMPTY, "No matching clause: "), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, expr__$1)], 0))))))))))));
      } else {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, n)) {
          return a;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(2, n)) {
            return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, pred__$1), cljs.core._conj(cljs.core.List.EMPTY, a), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
            expr__$1)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, b), cljs.core._conj(cljs.core.List.EMPTY, cljs$core$macros$emit(pred__$1, expr__$1, more))], 0))));
          } else {
            return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_if_DASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$p__11015__auto__), cljs.core._conj(cljs.core.List.EMPTY, 
            cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, pred__$1), cljs.core._conj(cljs.core.List.EMPTY, a), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, expr__$1)], 0)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
            c), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$p__11015__auto__))))), cljs.core._conj(cljs.core.List.EMPTY, cljs$core$macros$emit(pred__$1, expr__$1, more))], 0))));
          }
        }
      }
    };
  }(gpred, gexpr);
  var gres = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("res__");
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, gpred), cljs.core._conj(cljs.core.List.EMPTY, pred), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  gexpr), cljs.core._conj(cljs.core.List.EMPTY, expr)], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, emit(gpred, gexpr, clauses))], 0))));
};
cljs.core$macros.condp.cljs$lang$maxFixedArity = 4;
cljs.core$macros.condp.cljs$lang$applyTo = function(seq11016) {
  var G__11017 = cljs.core.first(seq11016);
  var seq11016__$1 = cljs.core.next(seq11016);
  var G__11018 = cljs.core.first(seq11016__$1);
  var seq11016__$2 = cljs.core.next(seq11016__$1);
  var G__11019 = cljs.core.first(seq11016__$2);
  var seq11016__$3 = cljs.core.next(seq11016__$2);
  var G__11020 = cljs.core.first(seq11016__$3);
  var seq11016__$4 = cljs.core.next(seq11016__$3);
  return cljs.core$macros.condp.cljs$core$IFn$_invoke$arity$variadic(G__11017, G__11018, G__11019, G__11020, seq11016__$4);
};
cljs.core$macros.condp.cljs$lang$macro = true;
cljs.core$macros.assoc_test = function cljs$core$macros$assoc_test(m, test, expr, env) {
  if (cljs.core.contains_QMARK_(m, test)) {
    throw new Error([cljs.core.str("Duplicate case test constant '"), cljs.core.str(test), cljs.core.str("'"), cljs.core.str(cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1(env) ? [cljs.core.str(" on line "), cljs.core.str(cljs.core.cst$kw$line.cljs$core$IFn$_invoke$arity$1(env)), cljs.core.str(" "), cljs.core.str(cljs.analyzer._STAR_cljs_file_STAR_)].join("") : null)].join(""));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, test, expr);
  }
};
cljs.core$macros.const_QMARK_ = function cljs$core$macros$const_QMARK_(env, x) {
  var m = function() {
    var and__4299__auto__ = cljs.core.list_QMARK_(x);
    if (and__4299__auto__) {
      return cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env, cljs.core.last(x));
    } else {
      return and__4299__auto__;
    }
  }();
  if (m) {
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, cljs.core.cst$kw$const);
  } else {
    return null;
  }
};
cljs.core$macros.case$ = function cljs$core$macros$case() {
  var args__5357__auto__ = [];
  var len__5350__auto___11040 = arguments.length;
  var i__5351__auto___11041 = 0;
  while (true) {
    if (i__5351__auto___11041 < len__5350__auto___11040) {
      args__5357__auto__.push(arguments[i__5351__auto___11041]);
      var G__11042 = i__5351__auto___11041 + 1;
      i__5351__auto___11041 = G__11042;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.case$.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.case$.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, e, clauses) {
  var default$ = cljs.core.odd_QMARK_(cljs.core.count(clauses)) ? cljs.core.last(clauses) : cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$throw), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_SLASH_Error$), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_str), cljs.core._conj(cljs.core.List.EMPTY, "No matching clause: "), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, e)], 0))))))))))));
  var env = _AMPERSAND_env;
  var pairs = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(default$, env) {
    return function(m, p__11036) {
      var vec__11037 = p__11036;
      var test = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11037, 0, null);
      var expr = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11037, 1, null);
      if (cljs.core.seq_QMARK_(test)) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(vec__11037, test, expr, default$, env) {
          return function(m__$1, test__$1) {
            var test__$2 = test__$1 instanceof cljs.core.Symbol ? cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, test__$1), cljs.core.cst$sym$quote) : test__$1;
            return cljs.core$macros.assoc_test(m__$1, test__$2, expr, env);
          };
        }(vec__11037, test, expr, default$, env), m, test);
      } else {
        if (test instanceof cljs.core.Symbol) {
          return cljs.core$macros.assoc_test(m, cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, test), cljs.core.cst$sym$quote), expr, env);
        } else {
          return cljs.core$macros.assoc_test(m, test, expr, env);
        }
      }
    };
  }(default$, env), cljs.core.PersistentArrayMap.EMPTY, cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, clauses));
  var esym = cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
  var tests = cljs.core.keys(pairs);
  if (cljs.core.every_QMARK_(cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.number_QMARK_, cljs.core.string_QMARK_, cljs.core.char_QMARK_, cljs.core.array_seq([function(default$, env, pairs, esym, tests) {
    return function(p1__11028_SHARP_) {
      return cljs.core$macros.const_QMARK_(env, p1__11028_SHARP_);
    };
  }(default$, env, pairs, esym, tests)], 0)), tests)) {
    var no_default = cljs.core.odd_QMARK_(cljs.core.count(clauses)) ? cljs.core.butlast(clauses) : clauses;
    var tests__$1 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(function(no_default, default$, env, pairs, esym, tests) {
      return function(p1__11029_SHARP_) {
        if (cljs.core.seq_QMARK_(p1__11029_SHARP_)) {
          return cljs.core.vec(p1__11029_SHARP_);
        } else {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__11029_SHARP_], null);
        }
      };
    }(no_default, default$, env, pairs, esym, tests), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(2, no_default));
    var thens = cljs.core.vec(cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(2, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, no_default)));
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, esym), cljs.core._conj(cljs.core.List.EMPTY, e)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$case_STAR_), cljs.core._conj(cljs.core.List.EMPTY, esym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, tests__$1), cljs.core._conj(cljs.core.List.EMPTY, thens), cljs.core._conj(cljs.core.List.EMPTY, default$)], 0)))))], 0))));
  } else {
    if (cljs.core.every_QMARK_(cljs.core.keyword_QMARK_, tests)) {
      var tests__$1 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(function(default$, env, pairs, esym, tests) {
        return function(p1__11031_SHARP_) {
          if (cljs.core.seq_QMARK_(p1__11031_SHARP_)) {
            return cljs.core.vec(p1__11031_SHARP_);
          } else {
            return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__11031_SHARP_], null);
          }
        };
      }(default$, env, pairs, esym, tests), cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(default$, env, pairs, esym, tests) {
        return function(p1__11030_SHARP_) {
          return [cljs.core.str(p1__11030_SHARP_)].join("").substring(1);
        };
      }(default$, env, pairs, esym, tests), tests)));
      var thens = cljs.core.vec(cljs.core.vals(pairs));
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, esym), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_keyword_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, e))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$$_DASH_fqn), cljs.core._conj(cljs.core.List.EMPTY, e))))), cljs.core._conj(cljs.core.List.EMPTY, null)], 0)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$case_STAR_), cljs.core._conj(cljs.core.List.EMPTY, esym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, tests__$1), 
      cljs.core._conj(cljs.core.List.EMPTY, thens), cljs.core._conj(cljs.core.List.EMPTY, default$)], 0)))))], 0))));
    } else {
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, esym), cljs.core._conj(cljs.core.List.EMPTY, e)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_cond), cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(function(default$, env, pairs, esym, tests) {
        return function(p__11038) {
          var vec__11039 = p__11038;
          var m = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11039, 0, null);
          var c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11039, 1, null);
          return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__EQ_), cljs.core._conj(cljs.core.List.EMPTY, m), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, esym)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, 
          c))));
        };
      }(default$, env, pairs, esym, tests), cljs.core.array_seq([pairs], 0)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$else), cljs.core._conj(cljs.core.List.EMPTY, default$)], 0)))))], 0))));
    }
  }
};
cljs.core$macros.case$.cljs$lang$maxFixedArity = 3;
cljs.core$macros.case$.cljs$lang$applyTo = function(seq11032) {
  var G__11033 = cljs.core.first(seq11032);
  var seq11032__$1 = cljs.core.next(seq11032);
  var G__11034 = cljs.core.first(seq11032__$1);
  var seq11032__$2 = cljs.core.next(seq11032__$1);
  var G__11035 = cljs.core.first(seq11032__$2);
  var seq11032__$3 = cljs.core.next(seq11032__$2);
  return cljs.core$macros.case$.cljs$core$IFn$_invoke$arity$variadic(G__11033, G__11034, G__11035, seq11032__$3);
};
cljs.core$macros.case$.cljs$lang$macro = true;
cljs.core$macros.assert = function cljs$core$macros$assert() {
  var args11043 = [];
  var len__5350__auto___11046 = arguments.length;
  var i__5351__auto___11047 = 0;
  while (true) {
    if (i__5351__auto___11047 < len__5350__auto___11046) {
      args11043.push(arguments[i__5351__auto___11047]);
      var G__11048 = i__5351__auto___11047 + 1;
      i__5351__auto___11047 = G__11048;
      continue;
    } else {
    }
    break;
  }
  var G__11045 = args11043.length;
  switch(G__11045) {
    case 3:
      return cljs.core$macros.assert.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core$macros.assert.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11043.length)].join(""));;
  }
};
cljs.core$macros.assert.cljs$core$IFn$_invoke$arity$3 = function(_AMPERSAND_form, _AMPERSAND_env, x) {
  if (cljs.core._STAR_assert_STAR_) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$throw), cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_SLASH_Error$), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_str), cljs.core._conj(cljs.core.List.EMPTY, "Assert failed: "), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_pr_DASH_str), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$quote), cljs.core._conj(cljs.core.List.EMPTY, x)))))))))], 0)))))))))))))], 0))));
  } else {
    return null;
  }
};
cljs.core$macros.assert.cljs$core$IFn$_invoke$arity$4 = function(_AMPERSAND_form, _AMPERSAND_env, x, message) {
  if (cljs.core._STAR_assert_STAR_) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when_DASH_not), cljs.core._conj(cljs.core.List.EMPTY, x), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$throw), cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_SLASH_Error$), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_str), cljs.core._conj(cljs.core.List.EMPTY, "Assert failed: "), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
    message), cljs.core._conj(cljs.core.List.EMPTY, "\n"), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_pr_DASH_str), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$quote), 
    cljs.core._conj(cljs.core.List.EMPTY, x)))))))))], 0)))))))))))))], 0))));
  } else {
    return null;
  }
};
cljs.core$macros.assert.cljs$lang$maxFixedArity = 4;
cljs.core$macros.assert.cljs$lang$macro = true;
cljs.core$macros.for$ = function cljs$core$macros$for(_AMPERSAND_form, _AMPERSAND_env, seq_exprs, body_expr) {
  cljs.core$macros.assert_args.cljs$core$IFn$_invoke$arity$variadic(cljs$core$macros$for, cljs.core.vector_QMARK_(seq_exprs), "a vector for its binding", cljs.core.array_seq([cljs.core.even_QMARK_(cljs.core.count(seq_exprs)), "an even number of forms in binding vector"], 0));
  var to_groups = function(seq_exprs__$1) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(groups, p__11086) {
      var vec__11087 = p__11086;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11087, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11087, 1, null);
      if (k instanceof cljs.core.Keyword) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.pop(groups), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.peek(groups), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null)));
      } else {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(groups, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null));
      }
    }, cljs.core.PersistentVector.EMPTY, cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, seq_exprs__$1));
  };
  var err = function(to_groups) {
    return function() {
      var G__11117__delegate = function(msg) {
        throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, msg), cljs.core.PersistentArrayMap.EMPTY);
      };
      var G__11117 = function(var_args) {
        var msg = null;
        if (arguments.length > 0) {
          var G__11118__i = 0, G__11118__a = new Array(arguments.length - 0);
          while (G__11118__i < G__11118__a.length) {
            G__11118__a[G__11118__i] = arguments[G__11118__i + 0];
            ++G__11118__i;
          }
          msg = new cljs.core.IndexedSeq(G__11118__a, 0);
        }
        return G__11117__delegate.call(this, msg);
      };
      G__11117.cljs$lang$maxFixedArity = 0;
      G__11117.cljs$lang$applyTo = function(arglist__11119) {
        var msg = cljs.core.seq(arglist__11119);
        return G__11117__delegate(msg);
      };
      G__11117.cljs$core$IFn$_invoke$arity$variadic = G__11117__delegate;
      return G__11117;
    }();
  }(to_groups);
  var emit_bind = function(to_groups, err) {
    return function cljs$core$macros$for_$_emit_bind(p__11088) {
      var vec__11103 = p__11088;
      var vec__11104 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11103, 0, null);
      var bind = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11104, 0, null);
      var expr = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11104, 1, null);
      var mod_pairs = cljs.core.nthnext(vec__11104, 2);
      var vec__11105 = cljs.core.nthnext(vec__11103, 1);
      var vec__11106 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11105, 0, null);
      var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11106, 0, null);
      var next_expr = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11106, 1, null);
      var next_groups = vec__11105;
      var giter = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("iter__");
      var gxs = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("s__");
      var do_mod = function(giter, gxs, vec__11103, vec__11104, bind, expr, mod_pairs, vec__11105, vec__11106, _, next_expr, next_groups, to_groups, err) {
        return function cljs$core$macros$for_$_emit_bind_$_do_mod(p__11107) {
          var vec__11110 = p__11107;
          var vec__11111 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11110, 0, null);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11111, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11111, 1, null);
          var pair = vec__11111;
          var etc = cljs.core.nthnext(vec__11110, 1);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, cljs.core.cst$kw$let)) {
            return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, v), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs$core$macros$for_$_emit_bind_$_do_mod(etc))], 0))));
          } else {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, cljs.core.cst$kw$while)) {
              return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when), cljs.core._conj(cljs.core.List.EMPTY, v), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs$core$macros$for_$_emit_bind_$_do_mod(etc))], 0))));
            } else {
              if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, cljs.core.cst$kw$when)) {
                return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, v), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs$core$macros$for_$_emit_bind_$_do_mod(etc)), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
                cljs.core.cst$sym$recur), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_rest), cljs.core._conj(cljs.core.List.EMPTY, gxs)))))))))], 0))));
              } else {
                if (k instanceof cljs.core.Keyword) {
                  return err.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Invalid 'for' keyword ", k], 0));
                } else {
                  if (next_groups) {
                    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$iterys__11050__auto__), cljs.core._conj(cljs.core.List.EMPTY, 
                    cljs$core$macros$for_$_emit_bind(next_groups)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$fs__11051__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_seq), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
                    cljs.core.cst$sym$iterys__11050__auto__), cljs.core._conj(cljs.core.List.EMPTY, next_expr)))))))))], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$fs__11051__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
                    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_concat), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$fs__11051__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
                    giter), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_rest), cljs.core._conj(cljs.core.List.EMPTY, gxs)))))))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
                    cljs.core.cst$sym$recur), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_rest), cljs.core._conj(cljs.core.List.EMPTY, gxs)))))))))], 0)))))], 0))));
                  } else {
                    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_cons), cljs.core._conj(cljs.core.List.EMPTY, body_expr), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, giter), cljs.core._conj(cljs.core.List.EMPTY, 
                    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_rest), cljs.core._conj(cljs.core.List.EMPTY, gxs)))))))))], 0))));
                  }
                }
              }
            }
          }
        };
      }(giter, gxs, vec__11103, vec__11104, bind, expr, mod_pairs, vec__11105, vec__11106, _, next_expr, next_groups, to_groups, err);
      if (next_groups) {
        return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, giter), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, gxs)))))), cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_lazy_DASH_seq), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_loop), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
        gxs), cljs.core._conj(cljs.core.List.EMPTY, gxs)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when_DASH_first), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
        bind), cljs.core._conj(cljs.core.List.EMPTY, gxs)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, do_mod(mod_pairs))], 0)))))], 0)))))))))], 0))));
      } else {
        var gi = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("i__");
        var gb = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("b__");
        var do_cmod = function(gi, gb, giter, gxs, do_mod, vec__11103, vec__11104, bind, expr, mod_pairs, vec__11105, vec__11106, _, next_expr, next_groups, to_groups, err) {
          return function cljs$core$macros$for_$_emit_bind_$_do_cmod(p__11112) {
            var vec__11115 = p__11112;
            var vec__11116 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11115, 0, null);
            var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11116, 0, null);
            var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11116, 1, null);
            var pair = vec__11116;
            var etc = cljs.core.nthnext(vec__11115, 1);
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, cljs.core.cst$kw$let)) {
              return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, v), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs$core$macros$for_$_emit_bind_$_do_cmod(etc))], 0))));
            } else {
              if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, cljs.core.cst$kw$while)) {
                return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when), cljs.core._conj(cljs.core.List.EMPTY, v), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs$core$macros$for_$_emit_bind_$_do_cmod(etc))], 0))));
              } else {
                if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, cljs.core.cst$kw$when)) {
                  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, v), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs$core$macros$for_$_emit_bind_$_do_cmod(etc)), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
                  cljs.core.cst$sym$recur), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_unchecked_DASH_inc), cljs.core._conj(cljs.core.List.EMPTY, gi)))))))))], 0))));
                } else {
                  if (k instanceof cljs.core.Keyword) {
                    return err.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Invalid 'for' keyword ", k], 0));
                  } else {
                    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_append), cljs.core._conj(cljs.core.List.EMPTY, gb), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
                    body_expr)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$recur), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_unchecked_DASH_inc), 
                    cljs.core._conj(cljs.core.List.EMPTY, gi)))))))))], 0))));
                  }
                }
              }
            }
          };
        }(gi, gb, giter, gxs, do_mod, vec__11103, vec__11104, bind, expr, mod_pairs, vec__11105, vec__11106, _, next_expr, next_groups, to_groups, err);
        return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, giter), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, gxs)))))), cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_lazy_DASH_seq), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_loop), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
        gxs), cljs.core._conj(cljs.core.List.EMPTY, gxs)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when_DASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
        gxs), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_seq), cljs.core._conj(cljs.core.List.EMPTY, gxs)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_chunked_DASH_seq_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, gxs))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$c__11052__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_first), cljs.core._conj(cljs.core.List.EMPTY, gxs)))), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$file), cljs.core._conj(cljs.core.List.EMPTY, "/home/joelm/scratch/cljs-bootstrap/.cljs_bootstrap/cljs/core.cljc"), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.cst$kw$line), cljs.core._conj(cljs.core.List.EMPTY, 2193), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$column), cljs.core._conj(cljs.core.List.EMPTY, 52), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$end_DASH_line), cljs.core._conj(cljs.core.List.EMPTY, 2193), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$end_DASH_column), cljs.core._conj(cljs.core.List.EMPTY, 82), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$tag), cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.cst$sym$cljs$core_SLASH_not_DASH_native)], 0))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$size__11053__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_count), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$c__11052__auto__))))), cljs.core._conj(cljs.core.List.EMPTY, 
        gb), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_buffer), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$size__11053__auto__)))))], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_coercive_DASH_boolean), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_loop), 
        cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, gi), cljs.core._conj(cljs.core.List.EMPTY, 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__LT_), cljs.core._conj(cljs.core.List.EMPTY, gi), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$size__11053__auto__)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, bind), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_nth), 
        cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$c__11052__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, gi)], 0)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, do_cmod(mod_pairs))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, true)], 0)))))], 0))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_cons), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_chunk), cljs.core._conj(cljs.core.List.EMPTY, gb))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
        giter), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_rest), cljs.core._conj(cljs.core.List.EMPTY, gxs)))))))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_cons), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_chunk), cljs.core._conj(cljs.core.List.EMPTY, gb))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, null)], 0)))))], 0)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
        cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, bind), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_first), cljs.core._conj(cljs.core.List.EMPTY, 
        gxs)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, do_mod(mod_pairs))], 0)))))], 0)))))], 0)))))], 0)))))))))], 0))));
      }
    };
  }(to_groups, err);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$iter__11054__auto__), cljs.core._conj(cljs.core.List.EMPTY, emit_bind(to_groups(seq_exprs)))))))), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$iter__11054__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.second(seq_exprs))))))], 0))));
};
cljs.core$macros.for$.cljs$lang$macro = true;
cljs.core$macros.doseq = function cljs$core$macros$doseq() {
  var args__5357__auto__ = [];
  var len__5350__auto___11129 = arguments.length;
  var i__5351__auto___11130 = 0;
  while (true) {
    if (i__5351__auto___11130 < len__5350__auto___11129) {
      args__5357__auto__.push(arguments[i__5351__auto___11130]);
      var G__11131 = i__5351__auto___11130 + 1;
      i__5351__auto___11130 = G__11131;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.doseq.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.doseq.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, seq_exprs, body) {
  cljs.core$macros.assert_args.cljs$core$IFn$_invoke$arity$variadic(cljs.core$macros.doseq, cljs.core.vector_QMARK_(seq_exprs), "a vector for its binding", cljs.core.array_seq([cljs.core.even_QMARK_(cljs.core.count(seq_exprs)), "an even number of forms in binding vector"], 0));
  var err = function() {
    var G__11132__delegate = function(msg) {
      throw cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, msg), cljs.core.PersistentArrayMap.EMPTY);
    };
    var G__11132 = function(var_args) {
      var msg = null;
      if (arguments.length > 0) {
        var G__11133__i = 0, G__11133__a = new Array(arguments.length - 0);
        while (G__11133__i < G__11133__a.length) {
          G__11133__a[G__11133__i] = arguments[G__11133__i + 0];
          ++G__11133__i;
        }
        msg = new cljs.core.IndexedSeq(G__11133__a, 0);
      }
      return G__11132__delegate.call(this, msg);
    };
    G__11132.cljs$lang$maxFixedArity = 0;
    G__11132.cljs$lang$applyTo = function(arglist__11134) {
      var msg = cljs.core.seq(arglist__11134);
      return G__11132__delegate(msg);
    };
    G__11132.cljs$core$IFn$_invoke$arity$variadic = G__11132__delegate;
    return G__11132;
  }();
  var step = function(err) {
    return function cljs$core$macros$step(recform, exprs) {
      if (cljs.core.not(exprs)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), body)))], null);
      } else {
        var k = cljs.core.first(exprs);
        var v = cljs.core.second(exprs);
        var seqsym = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("seq__");
        var recform__$1 = k instanceof cljs.core.Keyword ? recform : cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$recur), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_next), cljs.core._conj(cljs.core.List.EMPTY, 
        seqsym))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, null), cljs.core._conj(cljs.core.List.EMPTY, 0), cljs.core._conj(cljs.core.List.EMPTY, 0)], 0))));
        var steppair = cljs$core$macros$step(recform__$1, cljs.core.nnext(exprs));
        var needrec = steppair.cljs$core$IFn$_invoke$arity$1 ? steppair.cljs$core$IFn$_invoke$arity$1(0) : steppair.call(null, 0);
        var subform = steppair.cljs$core$IFn$_invoke$arity$1 ? steppair.cljs$core$IFn$_invoke$arity$1(1) : steppair.call(null, 1);
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, cljs.core.cst$kw$let)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [needrec, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, v), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, subform)], 0))))], null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, cljs.core.cst$kw$while)) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when), cljs.core._conj(cljs.core.List.EMPTY, v), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, subform), needrec ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
            [recform__$1], null) : null], 0))))], null);
          } else {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, cljs.core.cst$kw$when)) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, v), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
              cljs.core.cst$sym$do), cljs.core._conj(cljs.core.List.EMPTY, subform), cljs.core.array_seq([needrec ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [recform__$1], null) : null], 0))))), cljs.core._conj(cljs.core.List.EMPTY, recform__$1)], 0))))], null);
            } else {
              if (k instanceof cljs.core.Keyword) {
                return err.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Invalid 'doseq' keyword", k], 0));
              } else {
                var chunksym = cljs.core.with_meta(cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("chunk__"), new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$tag, cljs.core.cst$sym$not_DASH_native], null));
                var countsym = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("count__");
                var isym = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("i__");
                var recform_chunk = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$recur), cljs.core._conj(cljs.core.List.EMPTY, seqsym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, chunksym), cljs.core._conj(cljs.core.List.EMPTY, countsym), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
                cljs.core.cst$sym$cljs$core$macros_SLASH_unchecked_DASH_inc), cljs.core._conj(cljs.core.List.EMPTY, isym)))))], 0))));
                var steppair_chunk = cljs$core$macros$step(recform_chunk, cljs.core.nnext(exprs));
                var subform_chunk = steppair_chunk.cljs$core$IFn$_invoke$arity$1 ? steppair_chunk.cljs$core$IFn$_invoke$arity$1(1) : steppair_chunk.call(null, 1);
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_loop), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
                seqsym), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_seq), cljs.core._conj(cljs.core.List.EMPTY, v))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, chunksym), cljs.core._conj(cljs.core.List.EMPTY, null), cljs.core._conj(cljs.core.List.EMPTY, countsym), cljs.core._conj(cljs.core.List.EMPTY, 0), 
                cljs.core._conj(cljs.core.List.EMPTY, isym), cljs.core._conj(cljs.core.List.EMPTY, 0)], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
                cljs.core.cst$sym$cljs$core$macros_SLASH_coercive_DASH_boolean), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__LT_), cljs.core._conj(cljs.core.List.EMPTY, isym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, countsym)], 0))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
                cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, k), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
                cljs.core.cst$sym$cljs$core_SLASH__DASH_nth), cljs.core._conj(cljs.core.List.EMPTY, chunksym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, isym)], 0)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, subform_chunk), needrec ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [recform_chunk], null) : null], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
                cljs.core.cst$sym$cljs$core$macros_SLASH_when_DASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, seqsym), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_seq), 
                cljs.core._conj(cljs.core.List.EMPTY, seqsym)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_chunked_DASH_seq_QMARK_), 
                cljs.core._conj(cljs.core.List.EMPTY, seqsym))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
                cljs.core.cst$sym$c__11120__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_first), cljs.core._conj(cljs.core.List.EMPTY, seqsym)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
                cljs.core.cst$sym$recur), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_rest), cljs.core._conj(cljs.core.List.EMPTY, seqsym))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$c__11120__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
                cljs.core.cst$sym$cljs$core_SLASH_count), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$c__11120__auto__))))), cljs.core._conj(cljs.core.List.EMPTY, 0)], 0)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
                k), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_first), cljs.core._conj(cljs.core.List.EMPTY, seqsym)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, subform), needrec ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [recform__$1], null) : null], 0)))))], 
                0)))))], 0)))))], 0)))))], 0))))], null);
              }
            }
          }
        }
      }
    };
  }(err);
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(step(null, cljs.core.seq(seq_exprs)), 1);
};
cljs.core$macros.doseq.cljs$lang$maxFixedArity = 3;
cljs.core$macros.doseq.cljs$lang$applyTo = function(seq11121) {
  var G__11122 = cljs.core.first(seq11121);
  var seq11121__$1 = cljs.core.next(seq11121);
  var G__11123 = cljs.core.first(seq11121__$1);
  var seq11121__$2 = cljs.core.next(seq11121__$1);
  var G__11124 = cljs.core.first(seq11121__$2);
  var seq11121__$3 = cljs.core.next(seq11121__$2);
  return cljs.core$macros.doseq.cljs$core$IFn$_invoke$arity$variadic(G__11122, G__11123, G__11124, seq11121__$3);
};
cljs.core$macros.doseq.cljs$lang$macro = true;
cljs.core$macros.array = function cljs$core$macros$array() {
  var args__5357__auto__ = [];
  var len__5350__auto___11138 = arguments.length;
  var i__5351__auto___11139 = 0;
  while (true) {
    if (i__5351__auto___11139 < len__5350__auto___11138) {
      args__5357__auto__.push(arguments[i__5351__auto___11139]);
      var G__11140 = i__5351__auto___11139 + 1;
      i__5351__auto___11139 = G__11140;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 2 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(2), 0) : null;
  return cljs.core$macros.array.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
};
cljs.core$macros.array.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, rest) {
  var xs_str = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(",", cljs.core.take.cljs$core$IFn$_invoke$arity$2(cljs.core.count(rest), cljs.core.repeat.cljs$core$IFn$_invoke$arity$1("~{}"))));
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.cst$sym$js_STAR_, [cljs.core.str("["), cljs.core.str(xs_str), cljs.core.str("]")].join(""), rest), cljs.core.assoc, cljs.core.cst$kw$tag, cljs.core.cst$sym$array);
};
cljs.core$macros.array.cljs$lang$maxFixedArity = 2;
cljs.core$macros.array.cljs$lang$applyTo = function(seq11135) {
  var G__11136 = cljs.core.first(seq11135);
  var seq11135__$1 = cljs.core.next(seq11135);
  var G__11137 = cljs.core.first(seq11135__$1);
  var seq11135__$2 = cljs.core.next(seq11135__$1);
  return cljs.core$macros.array.cljs$core$IFn$_invoke$arity$variadic(G__11136, G__11137, seq11135__$2);
};
cljs.core$macros.array.cljs$lang$macro = true;
cljs.core$macros.make_array = function cljs$core$macros$make_array(_AMPERSAND_form, _AMPERSAND_env, size) {
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(typeof size === "number" ? cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_array), cljs.core.take.cljs$core$IFn$_invoke$arity$2(size, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(null))))) : cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$js_SLASH_Array$), cljs.core._conj(cljs.core.List.EMPTY, size)))), cljs.core.assoc, cljs.core.cst$kw$tag, cljs.core.cst$sym$array);
};
cljs.core$macros.make_array.cljs$lang$macro = true;
cljs.core$macros.list = function cljs$core$macros$list() {
  var args11141 = [];
  var len__5350__auto___11148 = arguments.length;
  var i__5351__auto___11149 = 0;
  while (true) {
    if (i__5351__auto___11149 < len__5350__auto___11148) {
      args11141.push(arguments[i__5351__auto___11149]);
      var G__11150 = i__5351__auto___11149 + 1;
      i__5351__auto___11149 = G__11150;
      continue;
    } else {
    }
    break;
  }
  var G__11147 = args11141.length;
  switch(G__11147) {
    case 2:
      return cljs.core$macros.list.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args11141.slice(3), 0);
      return cljs.core$macros.list.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5369__auto__);
  }
};
cljs.core$macros.list.cljs$core$IFn$_invoke$arity$2 = function(_AMPERSAND_form, _AMPERSAND_env) {
  return cljs.core.list(cljs.core.cst$sym$$_DASH_EMPTY, cljs.core.cst$sym$cljs$core_SLASH_List);
};
cljs.core$macros.list.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, x, xs) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_conj), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_list), xs)))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  x)], 0))));
};
cljs.core$macros.list.cljs$lang$applyTo = function(seq11142) {
  var G__11143 = cljs.core.first(seq11142);
  var seq11142__$1 = cljs.core.next(seq11142);
  var G__11144 = cljs.core.first(seq11142__$1);
  var seq11142__$2 = cljs.core.next(seq11142__$1);
  var G__11145 = cljs.core.first(seq11142__$2);
  var seq11142__$3 = cljs.core.next(seq11142__$2);
  return cljs.core$macros.list.cljs$core$IFn$_invoke$arity$variadic(G__11143, G__11144, G__11145, seq11142__$3);
};
cljs.core$macros.list.cljs$lang$maxFixedArity = 3;
cljs.core$macros.list.cljs$lang$macro = true;
cljs.core$macros.vector = function cljs$core$macros$vector() {
  var args11152 = [];
  var len__5350__auto___11158 = arguments.length;
  var i__5351__auto___11159 = 0;
  while (true) {
    if (i__5351__auto___11159 < len__5350__auto___11158) {
      args11152.push(arguments[i__5351__auto___11159]);
      var G__11160 = i__5351__auto___11159 + 1;
      i__5351__auto___11159 = G__11160;
      continue;
    } else {
    }
    break;
  }
  var G__11157 = args11152.length;
  switch(G__11157) {
    case 2:
      return cljs.core$macros.vector.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args11152.slice(2), 0);
      return cljs.core$macros.vector.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5369__auto__);
  }
};
cljs.core$macros.vector.cljs$core$IFn$_invoke$arity$2 = function(_AMPERSAND_form, _AMPERSAND_env) {
  return cljs.core.list(cljs.core.cst$sym$$_DASH_EMPTY, cljs.core.cst$sym$cljs$core_SLASH_PersistentVector);
};
cljs.core$macros.vector.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, xs) {
  var cnt = cljs.core.count(xs);
  if (cnt < 32) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_PersistentVector$), cljs.core._conj(cljs.core.List.EMPTY, null), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cnt), cljs.core._conj(cljs.core.List.EMPTY, 5), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$$_DASH_EMPTY_DASH_NODE), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_PersistentVector))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_array), xs)))), cljs.core._conj(cljs.core.List.EMPTY, null)], 0))));
  } else {
    return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$fromArray), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_PersistentVector), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$cljs$core$macros_SLASH_array), xs)))), cljs.core._conj(cljs.core.List.EMPTY, true)], 0)))), cljs.core.assoc, cljs.core.cst$kw$tag, cljs.core.cst$sym$cljs$core_SLASH_PersistentVector);
  }
};
cljs.core$macros.vector.cljs$lang$applyTo = function(seq11153) {
  var G__11154 = cljs.core.first(seq11153);
  var seq11153__$1 = cljs.core.next(seq11153);
  var G__11155 = cljs.core.first(seq11153__$1);
  var seq11153__$2 = cljs.core.next(seq11153__$1);
  return cljs.core$macros.vector.cljs$core$IFn$_invoke$arity$variadic(G__11154, G__11155, seq11153__$2);
};
cljs.core$macros.vector.cljs$lang$maxFixedArity = 2;
cljs.core$macros.vector.cljs$lang$macro = true;
cljs.core$macros.array_map = function cljs$core$macros$array_map() {
  var args11164 = [];
  var len__5350__auto___11170 = arguments.length;
  var i__5351__auto___11171 = 0;
  while (true) {
    if (i__5351__auto___11171 < len__5350__auto___11170) {
      args11164.push(arguments[i__5351__auto___11171]);
      var G__11172 = i__5351__auto___11171 + 1;
      i__5351__auto___11171 = G__11172;
      continue;
    } else {
    }
    break;
  }
  var G__11169 = args11164.length;
  switch(G__11169) {
    case 2:
      return cljs.core$macros.array_map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args11164.slice(2), 0);
      return cljs.core$macros.array_map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5369__auto__);
  }
};
cljs.core$macros.array_map.cljs$core$IFn$_invoke$arity$2 = function(_AMPERSAND_form, _AMPERSAND_env) {
  return cljs.core.list(cljs.core.cst$sym$$_DASH_EMPTY, cljs.core.cst$sym$cljs$core_SLASH_PersistentArrayMap);
};
cljs.core$macros.array_map.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, kvs) {
  var keys = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, kvs));
  if (cljs.core.every_QMARK_(function(keys) {
    return function(p1__11162_SHARP_) {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(p1__11162_SHARP_), cljs.core.cst$kw$constant);
    };
  }(keys), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(keys) {
    return function(p1__11163_SHARP_) {
      return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_env, p1__11163_SHARP_);
    };
  }(keys), keys)) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY, keys)), cljs.core.count(keys))) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_PersistentArrayMap$), cljs.core._conj(cljs.core.List.EMPTY, null), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.count(kvs) / 2), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$cljs$core$macros_SLASH_array), kvs)))), cljs.core._conj(cljs.core.List.EMPTY, null)], 0))));
  } else {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$fromArray), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_PersistentArrayMap), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_array), 
    kvs)))), cljs.core._conj(cljs.core.List.EMPTY, true), cljs.core._conj(cljs.core.List.EMPTY, false)], 0))));
  }
};
cljs.core$macros.array_map.cljs$lang$applyTo = function(seq11165) {
  var G__11166 = cljs.core.first(seq11165);
  var seq11165__$1 = cljs.core.next(seq11165);
  var G__11167 = cljs.core.first(seq11165__$1);
  var seq11165__$2 = cljs.core.next(seq11165__$1);
  return cljs.core$macros.array_map.cljs$core$IFn$_invoke$arity$variadic(G__11166, G__11167, seq11165__$2);
};
cljs.core$macros.array_map.cljs$lang$maxFixedArity = 2;
cljs.core$macros.array_map.cljs$lang$macro = true;
cljs.core$macros.hash_map = function cljs$core$macros$hash_map() {
  var args11174 = [];
  var len__5350__auto___11180 = arguments.length;
  var i__5351__auto___11181 = 0;
  while (true) {
    if (i__5351__auto___11181 < len__5350__auto___11180) {
      args11174.push(arguments[i__5351__auto___11181]);
      var G__11182 = i__5351__auto___11181 + 1;
      i__5351__auto___11181 = G__11182;
      continue;
    } else {
    }
    break;
  }
  var G__11179 = args11174.length;
  switch(G__11179) {
    case 2:
      return cljs.core$macros.hash_map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args11174.slice(2), 0);
      return cljs.core$macros.hash_map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5369__auto__);
  }
};
cljs.core$macros.hash_map.cljs$core$IFn$_invoke$arity$2 = function(_AMPERSAND_form, _AMPERSAND_env) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$_DASH_EMPTY), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_PersistentHashMap))));
};
cljs.core$macros.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, kvs) {
  var pairs = cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, kvs);
  var ks = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, pairs);
  var vs = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.second, pairs);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$fromArrays), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_PersistentHashMap), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_array), ks)))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_array), vs))))], 0)))), cljs.core.assoc, cljs.core.cst$kw$tag, cljs.core.cst$sym$cljs$core_SLASH_PersistentHashMap);
};
cljs.core$macros.hash_map.cljs$lang$applyTo = function(seq11175) {
  var G__11176 = cljs.core.first(seq11175);
  var seq11175__$1 = cljs.core.next(seq11175);
  var G__11177 = cljs.core.first(seq11175__$1);
  var seq11175__$2 = cljs.core.next(seq11175__$1);
  return cljs.core$macros.hash_map.cljs$core$IFn$_invoke$arity$variadic(G__11176, G__11177, seq11175__$2);
};
cljs.core$macros.hash_map.cljs$lang$maxFixedArity = 2;
cljs.core$macros.hash_map.cljs$lang$macro = true;
cljs.core$macros.hash_set = function cljs$core$macros$hash_set() {
  var args11186 = [];
  var len__5350__auto___11192 = arguments.length;
  var i__5351__auto___11193 = 0;
  while (true) {
    if (i__5351__auto___11193 < len__5350__auto___11192) {
      args11186.push(arguments[i__5351__auto___11193]);
      var G__11194 = i__5351__auto___11193 + 1;
      i__5351__auto___11193 = G__11194;
      continue;
    } else {
    }
    break;
  }
  var G__11191 = args11186.length;
  switch(G__11191) {
    case 2:
      return cljs.core$macros.hash_set.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5369__auto__ = new cljs.core.IndexedSeq(args11186.slice(2), 0);
      return cljs.core$macros.hash_set.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5369__auto__);
  }
};
cljs.core$macros.hash_set.cljs$core$IFn$_invoke$arity$2 = function(_AMPERSAND_form, _AMPERSAND_env) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$_DASH_EMPTY), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_PersistentHashSet))));
};
cljs.core$macros.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, xs) {
  if (cljs.core.count(xs) <= 8 && cljs.core.every_QMARK_(function(p1__11184_SHARP_) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(p1__11184_SHARP_), cljs.core.cst$kw$constant);
  }, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__11185_SHARP_) {
    return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(_AMPERSAND_env, p1__11185_SHARP_);
  }, xs)) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY, xs)), cljs.core.count(xs))) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_PersistentHashSet$), cljs.core._conj(cljs.core.List.EMPTY, null), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_PersistentArrayMap$), 
    cljs.core._conj(cljs.core.List.EMPTY, null), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.count(xs)), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_array), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(xs, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(null)))))), cljs.core._conj(cljs.core.List.EMPTY, 
    null)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, null)], 0))));
  } else {
    return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$fromArray), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_PersistentHashSet), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$cljs$core$macros_SLASH_array), xs)))), cljs.core._conj(cljs.core.List.EMPTY, true)], 0)))), cljs.core.assoc, cljs.core.cst$kw$tag, cljs.core.cst$sym$cljs$core_SLASH_PersistentHashSet);
  }
};
cljs.core$macros.hash_set.cljs$lang$applyTo = function(seq11187) {
  var G__11188 = cljs.core.first(seq11187);
  var seq11187__$1 = cljs.core.next(seq11187);
  var G__11189 = cljs.core.first(seq11187__$1);
  var seq11187__$2 = cljs.core.next(seq11187__$1);
  return cljs.core$macros.hash_set.cljs$core$IFn$_invoke$arity$variadic(G__11188, G__11189, seq11187__$2);
};
cljs.core$macros.hash_set.cljs$lang$maxFixedArity = 2;
cljs.core$macros.hash_set.cljs$lang$macro = true;
cljs.core$macros.js_obj_STAR_ = function cljs$core$macros$js_obj_STAR_(kvs) {
  var kvs_str = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str, cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(",", cljs.core.take.cljs$core$IFn$_invoke$arity$2(cljs.core.count(kvs), cljs.core.repeat.cljs$core$IFn$_invoke$arity$1("~{}:~{}"))));
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.cst$sym$js_STAR_, [cljs.core.str("{"), cljs.core.str(kvs_str), cljs.core.str("}")].join(""), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, kvs)), cljs.core.assoc, cljs.core.cst$kw$tag, cljs.core.cst$sym$object);
};
cljs.core$macros.js_obj = function cljs$core$macros$js_obj() {
  var args__5357__auto__ = [];
  var len__5350__auto___11205 = arguments.length;
  var i__5351__auto___11206 = 0;
  while (true) {
    if (i__5351__auto___11206 < len__5350__auto___11205) {
      args__5357__auto__.push(arguments[i__5351__auto___11206]);
      var G__11207 = i__5351__auto___11206 + 1;
      i__5351__auto___11206 = G__11207;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 2 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(2), 0) : null;
  return cljs.core$macros.js_obj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
};
cljs.core$macros.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, rest) {
  var sym_or_str_QMARK_ = function(x) {
    return x instanceof cljs.core.Symbol || typeof x === "string";
  };
  var filter_on_keys = function(sym_or_str_QMARK_) {
    return function(f, coll) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(sym_or_str_QMARK_) {
        return function(p__11199) {
          var vec__11200 = p__11199;
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11200, 0, null);
          var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11200, 1, null);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(k) : f.call(null, k);
        };
      }(sym_or_str_QMARK_), coll));
    };
  }(sym_or_str_QMARK_);
  var kvs = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.vec, cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, rest)));
  var sym_pairs = filter_on_keys(cljs.core.symbol_QMARK_, kvs);
  var expr__GT_local = cljs.core.zipmap(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(sym_or_str_QMARK_), cljs.core.keys(kvs)), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym));
  var obj = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("obj");
  if (cljs.core.empty_QMARK_(rest)) {
    return cljs.core$macros.js_obj_STAR_(cljs.core.List.EMPTY);
  } else {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, clojure.set.map_invert(expr__GT_local)), cljs.core._conj(cljs.core.List.EMPTY, 
    obj), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.js_obj_STAR_(filter_on_keys(cljs.core.string_QMARK_, kvs)))], 0)))))), cljs.core.array_seq([cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(sym_or_str_QMARK_, filter_on_keys, kvs, sym_pairs, expr__GT_local, obj) {
      return function(p__11201) {
        var vec__11202 = p__11201;
        var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11202, 0, null);
        var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11202, 1, null);
        return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_aset), cljs.core._conj(cljs.core.List.EMPTY, obj), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, k), cljs.core._conj(cljs.core.List.EMPTY, v)], 0))));
      };
    }(sym_or_str_QMARK_, filter_on_keys, kvs, sym_pairs, expr__GT_local, obj), sym_pairs), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(sym_or_str_QMARK_, filter_on_keys, kvs, sym_pairs, expr__GT_local, obj) {
      return function(p__11203) {
        var vec__11204 = p__11203;
        var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11204, 0, null);
        var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11204, 1, null);
        return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_aset), cljs.core._conj(cljs.core.List.EMPTY, obj), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, v), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.get.cljs$core$IFn$_invoke$arity$2(kvs, k))], 0))));
      };
    }(sym_or_str_QMARK_, filter_on_keys, kvs, sym_pairs, expr__GT_local, obj), expr__GT_local), cljs.core._conj(cljs.core.List.EMPTY, obj)], 0))));
  }
};
cljs.core$macros.js_obj.cljs$lang$maxFixedArity = 2;
cljs.core$macros.js_obj.cljs$lang$applyTo = function(seq11196) {
  var G__11197 = cljs.core.first(seq11196);
  var seq11196__$1 = cljs.core.next(seq11196);
  var G__11198 = cljs.core.first(seq11196__$1);
  var seq11196__$2 = cljs.core.next(seq11196__$1);
  return cljs.core$macros.js_obj.cljs$core$IFn$_invoke$arity$variadic(G__11197, G__11198, seq11196__$2);
};
cljs.core$macros.js_obj.cljs$lang$macro = true;
cljs.core$macros.alength = function cljs$core$macros$alength(_AMPERSAND_form, _AMPERSAND_env, a) {
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, a), "~{}.length"), cljs.core.cst$sym$js_STAR_), cljs.core.assoc, cljs.core.cst$kw$tag, cljs.core.cst$sym$number);
};
cljs.core$macros.alength.cljs$lang$macro = true;
cljs.core$macros.amap = function cljs$core$macros$amap(_AMPERSAND_form, _AMPERSAND_env, a, idx, ret, expr) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$a__11208__auto__), cljs.core._conj(cljs.core.List.EMPTY, a), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  ret), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_aclone), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$a__11208__auto__)))))], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_loop), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, idx), cljs.core._conj(cljs.core.List.EMPTY, 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__LT_), cljs.core._conj(cljs.core.List.EMPTY, idx), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_alength), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$a__11208__auto__)))))], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_aset), cljs.core._conj(cljs.core.List.EMPTY, ret), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, idx), cljs.core._conj(cljs.core.List.EMPTY, expr)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$recur), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_inc), cljs.core._conj(cljs.core.List.EMPTY, idx)))))))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, ret)], 0)))))], 0)))))], 0))));
};
cljs.core$macros.amap.cljs$lang$macro = true;
cljs.core$macros.areduce = function cljs$core$macros$areduce(_AMPERSAND_form, _AMPERSAND_env, a, idx, ret, init, expr) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$a__11209__auto__), cljs.core._conj(cljs.core.List.EMPTY, a)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_loop), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, idx), cljs.core._conj(cljs.core.List.EMPTY, 0), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  ret), cljs.core._conj(cljs.core.List.EMPTY, init)], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__LT_), 
  cljs.core._conj(cljs.core.List.EMPTY, idx), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_alength), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$a__11209__auto__)))))], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$recur), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_inc), cljs.core._conj(cljs.core.List.EMPTY, idx))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, expr)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, ret)], 0)))))], 0)))))], 0))));
};
cljs.core$macros.areduce.cljs$lang$macro = true;
cljs.core$macros.dotimes = function cljs$core$macros$dotimes() {
  var args__5357__auto__ = [];
  var len__5350__auto___11215 = arguments.length;
  var i__5351__auto___11216 = 0;
  while (true) {
    if (i__5351__auto___11216 < len__5350__auto___11215) {
      args__5357__auto__.push(arguments[i__5351__auto___11216]);
      var G__11217 = i__5351__auto___11216 + 1;
      i__5351__auto___11216 = G__11217;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.dotimes.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.dotimes.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, bindings, body) {
  var i = cljs.core.first(bindings);
  var n = cljs.core.second(bindings);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$n__11210__auto__), cljs.core._conj(cljs.core.List.EMPTY, n)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_loop), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, i), cljs.core._conj(cljs.core.List.EMPTY, 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__LT_), cljs.core._conj(cljs.core.List.EMPTY, i), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$n__11210__auto__)], 0))))), cljs.core.array_seq([body, cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$recur), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_inc), 
  cljs.core._conj(cljs.core.List.EMPTY, i)))))))))], 0)))))], 0)))))], 0))));
};
cljs.core$macros.dotimes.cljs$lang$maxFixedArity = 3;
cljs.core$macros.dotimes.cljs$lang$applyTo = function(seq11211) {
  var G__11212 = cljs.core.first(seq11211);
  var seq11211__$1 = cljs.core.next(seq11211);
  var G__11213 = cljs.core.first(seq11211__$1);
  var seq11211__$2 = cljs.core.next(seq11211__$1);
  var G__11214 = cljs.core.first(seq11211__$2);
  var seq11211__$3 = cljs.core.next(seq11211__$2);
  return cljs.core$macros.dotimes.cljs$core$IFn$_invoke$arity$variadic(G__11212, G__11213, G__11214, seq11211__$3);
};
cljs.core$macros.dotimes.cljs$lang$macro = true;
cljs.core$macros.check_valid_options = function cljs$core$macros$check_valid_options() {
  var args__5357__auto__ = [];
  var len__5350__auto___11221 = arguments.length;
  var i__5351__auto___11222 = 0;
  while (true) {
    if (i__5351__auto___11222 < len__5350__auto___11221) {
      args__5357__auto__.push(arguments[i__5351__auto___11222]);
      var G__11223 = i__5351__auto___11222 + 1;
      i__5351__auto___11222 = G__11223;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 1 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(1), 0) : null;
  return cljs.core$macros.check_valid_options.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5358__auto__);
};
cljs.core$macros.check_valid_options.cljs$core$IFn$_invoke$arity$variadic = function(options, valid_keys) {
  if (cljs.core.seq(cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.disj, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_set, cljs.core.keys(options)), valid_keys))) {
    throw cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.str, "Only these options are valid: ", cljs.core.first(valid_keys), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__11218_SHARP_) {
      return [cljs.core.str(", "), cljs.core.str(p1__11218_SHARP_)].join("");
    }, cljs.core.rest(valid_keys)));
  } else {
    return null;
  }
};
cljs.core$macros.check_valid_options.cljs$lang$maxFixedArity = 1;
cljs.core$macros.check_valid_options.cljs$lang$applyTo = function(seq11219) {
  var G__11220 = cljs.core.first(seq11219);
  var seq11219__$1 = cljs.core.next(seq11219);
  return cljs.core$macros.check_valid_options.cljs$core$IFn$_invoke$arity$variadic(G__11220, seq11219__$1);
};
cljs.core$macros.defmulti = function cljs$core$macros$defmulti() {
  var args__5357__auto__ = [];
  var len__5350__auto___11233 = arguments.length;
  var i__5351__auto___11234 = 0;
  while (true) {
    if (i__5351__auto___11234 < len__5350__auto___11233) {
      args__5357__auto__.push(arguments[i__5351__auto___11234]);
      var G__11235 = i__5351__auto___11234 + 1;
      i__5351__auto___11234 = G__11235;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.defmulti.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.defmulti.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, mm_name, options) {
  var docstring = typeof cljs.core.first(options) === "string" ? cljs.core.first(options) : null;
  var options__$1 = typeof cljs.core.first(options) === "string" ? cljs.core.next(options) : options;
  var m = cljs.core.map_QMARK_(cljs.core.first(options__$1)) ? cljs.core.first(options__$1) : cljs.core.PersistentArrayMap.EMPTY;
  var options__$2 = cljs.core.map_QMARK_(cljs.core.first(options__$1)) ? cljs.core.next(options__$1) : options__$1;
  var dispatch_fn = cljs.core.first(options__$2);
  var options__$3 = cljs.core.next(options__$2);
  var m__$1 = docstring ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, cljs.core.cst$kw$doc, docstring) : m;
  var m__$2 = cljs.core.meta(mm_name) ? cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.meta(mm_name), m__$1) : m__$1;
  var mm_ns = [cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(_AMPERSAND_env)))].join("");
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(options__$3), 1)) {
    throw new Error("The syntax for defmulti has changed. Example: (defmulti name dispatch-fn :default dispatch-value)");
  } else {
  }
  var options__$4 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, options__$3);
  var default$ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(options__$4, cljs.core.cst$kw$default, cljs.core.cst$kw$default);
  cljs.core$macros.check_valid_options.cljs$core$IFn$_invoke$arity$variadic(options__$4, cljs.core.array_seq([cljs.core.cst$kw$default, cljs.core.cst$kw$hierarchy], 0));
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_defonce), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(mm_name, m__$2)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$method_DASH_table__11224__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_atom), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$prefer_DASH_table__11225__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH_atom), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$method_DASH_cache__11226__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH_atom), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cached_DASH_hierarchy__11227__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH_atom), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$hierarchy__11228__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH_get), cljs.core._conj(cljs.core.List.EMPTY, options__$4), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$hierarchy), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_get_DASH_global_DASH_hierarchy)))))], 0)))))], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_MultiFn$), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_symbol), cljs.core._conj(cljs.core.List.EMPTY, mm_ns), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.name(mm_name))], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, dispatch_fn), cljs.core._conj(cljs.core.List.EMPTY, default$), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$hierarchy__11228__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$method_DASH_table__11224__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$prefer_DASH_table__11225__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$method_DASH_cache__11226__auto__), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cached_DASH_hierarchy__11227__auto__)], 0)))))], 0)))))], 0))));
};
cljs.core$macros.defmulti.cljs$lang$maxFixedArity = 3;
cljs.core$macros.defmulti.cljs$lang$applyTo = function(seq11229) {
  var G__11230 = cljs.core.first(seq11229);
  var seq11229__$1 = cljs.core.next(seq11229);
  var G__11231 = cljs.core.first(seq11229__$1);
  var seq11229__$2 = cljs.core.next(seq11229__$1);
  var G__11232 = cljs.core.first(seq11229__$2);
  var seq11229__$3 = cljs.core.next(seq11229__$2);
  return cljs.core$macros.defmulti.cljs$core$IFn$_invoke$arity$variadic(G__11230, G__11231, G__11232, seq11229__$3);
};
cljs.core$macros.defmulti.cljs$lang$macro = true;
cljs.core$macros.defmethod = function cljs$core$macros$defmethod() {
  var args__5357__auto__ = [];
  var len__5350__auto___11241 = arguments.length;
  var i__5351__auto___11242 = 0;
  while (true) {
    if (i__5351__auto___11242 < len__5350__auto___11241) {
      args__5357__auto__.push(arguments[i__5351__auto___11242]);
      var G__11243 = i__5351__auto___11242 + 1;
      i__5351__auto___11242 = G__11243;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 4 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(4), 0) : null;
  return cljs.core$macros.defmethod.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5358__auto__);
};
cljs.core$macros.defmethod.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, multifn, dispatch_val, fn_tail) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_add_DASH_method), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(multifn, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$tag, cljs.core.cst$sym$cljs$core_SLASH_MultiFn], null))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, dispatch_val), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), fn_tail))))], 0))));
};
cljs.core$macros.defmethod.cljs$lang$maxFixedArity = 4;
cljs.core$macros.defmethod.cljs$lang$applyTo = function(seq11236) {
  var G__11237 = cljs.core.first(seq11236);
  var seq11236__$1 = cljs.core.next(seq11236);
  var G__11238 = cljs.core.first(seq11236__$1);
  var seq11236__$2 = cljs.core.next(seq11236__$1);
  var G__11239 = cljs.core.first(seq11236__$2);
  var seq11236__$3 = cljs.core.next(seq11236__$2);
  var G__11240 = cljs.core.first(seq11236__$3);
  var seq11236__$4 = cljs.core.next(seq11236__$3);
  return cljs.core$macros.defmethod.cljs$core$IFn$_invoke$arity$variadic(G__11237, G__11238, G__11239, G__11240, seq11236__$4);
};
cljs.core$macros.defmethod.cljs$lang$macro = true;
cljs.core$macros.time = function cljs$core$macros$time(_AMPERSAND_form, _AMPERSAND_env, expr) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$start__11244__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$$getTime), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_SLASH_Date$))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$ret__11245__auto__), cljs.core._conj(cljs.core.List.EMPTY, expr)], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH_prn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_str), cljs.core._conj(cljs.core.List.EMPTY, "Elapsed time: "), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH__DASH_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$getTime), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_SLASH_Date$))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$start__11244__auto__)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, " msecs")], 0))))))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$ret__11245__auto__)], 0))));
};
cljs.core$macros.time.cljs$lang$macro = true;
cljs.core$macros.simple_benchmark = function cljs$core$macros$simple_benchmark() {
  var args__5357__auto__ = [];
  var len__5350__auto___11260 = arguments.length;
  var i__5351__auto___11261 = 0;
  while (true) {
    if (i__5351__auto___11261 < len__5350__auto___11260) {
      args__5357__auto__.push(arguments[i__5351__auto___11261]);
      var G__11262 = i__5351__auto___11261 + 1;
      i__5351__auto___11261 = G__11262;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 5 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(5), 0) : null;
  return cljs.core$macros.simple_benchmark.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__5358__auto__);
};
cljs.core$macros.simple_benchmark.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, bindings, expr, iterations, p__11257) {
  var map__11258 = p__11257;
  var map__11258__$1 = (!(map__11258 == null) ? map__11258.cljs$lang$protocol_mask$partition0$ & 64 || map__11258.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__11258) : map__11258;
  var print_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__11258__$1, cljs.core.cst$kw$print_DASH_fn, cljs.core.cst$sym$println);
  var bs_str = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([bindings], 0));
  var expr_str = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([expr], 0));
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, bindings), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$start__11246__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$getTime), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_SLASH_Date$))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$ret__11247__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_dotimes), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$___11248__auto__), cljs.core._conj(cljs.core.List.EMPTY, iterations)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, expr)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$end__11249__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$$getTime), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_SLASH_Date$))))))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$elapsed__11250__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH__DASH_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$end__11249__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$start__11246__auto__)], 0)))))], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, print_fn), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_str), cljs.core._conj(cljs.core.List.EMPTY, bs_str), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, ", "), cljs.core._conj(cljs.core.List.EMPTY, expr_str), cljs.core._conj(cljs.core.List.EMPTY, ", "), cljs.core._conj(cljs.core.List.EMPTY, iterations), cljs.core._conj(cljs.core.List.EMPTY, " runs, "), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$elapsed__11250__auto__), cljs.core._conj(cljs.core.List.EMPTY, " msecs")], 0)))))))))], 0)))))], 0))));
};
cljs.core$macros.simple_benchmark.cljs$lang$maxFixedArity = 5;
cljs.core$macros.simple_benchmark.cljs$lang$applyTo = function(seq11251) {
  var G__11252 = cljs.core.first(seq11251);
  var seq11251__$1 = cljs.core.next(seq11251);
  var G__11253 = cljs.core.first(seq11251__$1);
  var seq11251__$2 = cljs.core.next(seq11251__$1);
  var G__11254 = cljs.core.first(seq11251__$2);
  var seq11251__$3 = cljs.core.next(seq11251__$2);
  var G__11255 = cljs.core.first(seq11251__$3);
  var seq11251__$4 = cljs.core.next(seq11251__$3);
  var G__11256 = cljs.core.first(seq11251__$4);
  var seq11251__$5 = cljs.core.next(seq11251__$4);
  return cljs.core$macros.simple_benchmark.cljs$core$IFn$_invoke$arity$variadic(G__11252, G__11253, G__11254, G__11255, G__11256, seq11251__$5);
};
cljs.core$macros.simple_benchmark.cljs$lang$macro = true;
cljs.core$macros.cs = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$3(cljs.core.gensym, cljs.core.str, cljs.core.char$), cljs.core.range.cljs$core$IFn$_invoke$arity$2(97, 118)));
cljs.core$macros.gen_apply_to_helper = function cljs$core$macros$gen_apply_to_helper() {
  var args11263 = [];
  var len__5350__auto___11267 = arguments.length;
  var i__5351__auto___11268 = 0;
  while (true) {
    if (i__5351__auto___11268 < len__5350__auto___11267) {
      args11263.push(arguments[i__5351__auto___11268]);
      var G__11269 = i__5351__auto___11268 + 1;
      i__5351__auto___11268 = G__11269;
      continue;
    } else {
    }
    break;
  }
  var G__11265 = args11263.length;
  switch(G__11265) {
    case 0:
      return cljs.core$macros.gen_apply_to_helper.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core$macros.gen_apply_to_helper.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11263.length)].join(""));;
  }
};
cljs.core$macros.gen_apply_to_helper.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core$macros.gen_apply_to_helper.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core$macros.gen_apply_to_helper.cljs$core$IFn$_invoke$arity$1 = function(n) {
  var prop = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("-cljs$core$IFn$_invoke$arity$"), cljs.core.str(n)].join(""));
  var f = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("cljs$core$IFn$_invoke$arity$"), cljs.core.str(n)].join(""));
  if (n <= 20) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, function() {
      var G__11266 = n - 1;
      return cljs.core$macros.cs.cljs$core$IFn$_invoke$arity$1 ? cljs.core$macros.cs.cljs$core$IFn$_invoke$arity$1(G__11266) : cljs.core$macros.cs.call(null, G__11266);
    }()), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_first), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$args))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$args), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$cljs$core_SLASH__DASH_rest), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$args)))))], 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$cljs$core$macros_SLASH__EQ__EQ_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$argc), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, n)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$f), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, prop)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$f), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, f), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core$macros.cs)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$f), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core$macros.cs)))))], 
    0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.gen_apply_to_helper.cljs$core$IFn$_invoke$arity$1(n + 1))], 0)))))], 0))));
  } else {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$throw), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_SLASH_Error$), cljs.core._conj(cljs.core.List.EMPTY, "Only up to 20 arguments supported on functions"))))))))
    ;
  }
};
cljs.core$macros.gen_apply_to_helper.cljs$lang$maxFixedArity = 1;
cljs.core$macros.gen_apply_to = function cljs$core$macros$gen_apply_to(_AMPERSAND_form, _AMPERSAND_env) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_STAR_unchecked_DASH_if_STAR_), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  true)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_defn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$apply_DASH_to), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$f), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$argc), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$args)], 0)))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$args), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_seq), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$args)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$if), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_zero_QMARK_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$argc))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$f))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.gen_apply_to_helper.cljs$core$IFn$_invoke$arity$0())], 0)))))], 0)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_STAR_unchecked_DASH_if_STAR_), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  false)], 0)))))], 0))));
};
cljs.core$macros.gen_apply_to.cljs$lang$macro = true;
cljs.core$macros.with_out_str = function cljs$core$macros$with_out_str() {
  var args__5357__auto__ = [];
  var len__5350__auto___11276 = arguments.length;
  var i__5351__auto___11277 = 0;
  while (true) {
    if (i__5351__auto___11277 < len__5350__auto___11276) {
      args__5357__auto__.push(arguments[i__5351__auto___11277]);
      var G__11278 = i__5351__auto___11277 + 1;
      i__5351__auto___11277 = G__11278;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 2 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(2), 0) : null;
  return cljs.core$macros.with_out_str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
};
cljs.core$macros.with_out_str.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$sb__11271__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$string$StringBuffer$)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_binding), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH__STAR_print_DASH_newline_STAR_), cljs.core._conj(cljs.core.List.EMPTY, true), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__STAR_print_DASH_fn_STAR_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$x__11272__auto__)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$append), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$sb__11271__auto__), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$x__11272__auto__)], 0)))))], 0)))))], 0)))))), cljs.core.array_seq([body], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_str), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$sb__11271__auto__)))))], 0))));
};
cljs.core$macros.with_out_str.cljs$lang$maxFixedArity = 2;
cljs.core$macros.with_out_str.cljs$lang$applyTo = function(seq11273) {
  var G__11274 = cljs.core.first(seq11273);
  var seq11273__$1 = cljs.core.next(seq11273);
  var G__11275 = cljs.core.first(seq11273__$1);
  var seq11273__$2 = cljs.core.next(seq11273__$1);
  return cljs.core$macros.with_out_str.cljs$core$IFn$_invoke$arity$variadic(G__11274, G__11275, seq11273__$2);
};
cljs.core$macros.with_out_str.cljs$lang$macro = true;
cljs.core$macros.lazy_cat = function cljs$core$macros$lazy_cat() {
  var args__5357__auto__ = [];
  var len__5350__auto___11283 = arguments.length;
  var i__5351__auto___11284 = 0;
  while (true) {
    if (i__5351__auto___11284 < len__5350__auto___11283) {
      args__5357__auto__.push(arguments[i__5351__auto___11284]);
      var G__11285 = i__5351__auto___11284 + 1;
      i__5351__auto___11284 = G__11285;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 2 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(2), 0) : null;
  return cljs.core$macros.lazy_cat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5358__auto__);
};
cljs.core$macros.lazy_cat.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, colls) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_concat), cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__11279_SHARP_) {
    return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, p1__11279_SHARP_), cljs.core.cst$sym$cljs$core$macros_SLASH_lazy_DASH_seq);
  }, colls))));
};
cljs.core$macros.lazy_cat.cljs$lang$maxFixedArity = 2;
cljs.core$macros.lazy_cat.cljs$lang$applyTo = function(seq11280) {
  var G__11281 = cljs.core.first(seq11280);
  var seq11280__$1 = cljs.core.next(seq11280);
  var G__11282 = cljs.core.first(seq11280__$1);
  var seq11280__$2 = cljs.core.next(seq11280__$1);
  return cljs.core$macros.lazy_cat.cljs$core$IFn$_invoke$arity$variadic(G__11281, G__11282, seq11280__$2);
};
cljs.core$macros.lazy_cat.cljs$lang$macro = true;
cljs.core$macros.js_str = function cljs$core$macros$js_str(_AMPERSAND_form, _AMPERSAND_env, s) {
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, s), "''+~{}"), cljs.core.cst$sym$js_STAR_);
};
cljs.core$macros.js_str.cljs$lang$macro = true;
cljs.core$macros.es6_iterable = function cljs$core$macros$es6_iterable(_AMPERSAND_form, _AMPERSAND_env, ty) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_aset), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$_DASH_prototype), cljs.core._conj(cljs.core.List.EMPTY, ty))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core_SLASH_ITER_SYMBOL), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_this_DASH_as), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__11286__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_es6_DASH_iterator), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$this__11286__auto__)))))], 0)))))], 0)))))], 0))));
};
cljs.core$macros.es6_iterable.cljs$lang$macro = true;
cljs.core$macros.ns_interns = function cljs$core$macros$ns_interns(_AMPERSAND_form, _AMPERSAND_env, p__11287) {
  var vec__11291 = p__11287;
  var quote = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11291, 0, null);
  var ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11291, 1, null);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(quote, cljs.core.cst$sym$quote) && ns instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Argument to ns-interns must be a quoted symbol"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$core_SLASH_and, cljs.core.list(cljs.core.cst$sym$_EQ_, cljs.core.cst$sym$quote, cljs.core.list(cljs.core.cst$sym$quote, cljs.core.cst$sym$quote)), cljs.core.list(cljs.core.cst$sym$core_SLASH_symbol_QMARK_, cljs.core.cst$sym$ns))], 0)))].join(""));
  }
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_into), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(vec__11291, 
  quote, ns) {
    return function(p__11292) {
      var vec__11293 = p__11292;
      var sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11293, 0, null);
      var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11293, 1, null);
      return cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_symbol), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.name(sym)))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$sym$var), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.name(ns), cljs.core.name(sym)))))))))));
    };
  }(vec__11291, quote, ns), cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.env._STAR_compiler_STAR_) : cljs.core.deref.call(null, cljs.env._STAR_compiler_STAR_), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, ns, cljs.core.cst$kw$defs], null))))))))], 0))));
};
cljs.core$macros.ns_interns.cljs$lang$macro = true;
cljs.core$macros.ns_unmap = function cljs$core$macros$ns_unmap(_AMPERSAND_form, _AMPERSAND_env, p__11294, p__11295) {
  var vec__11298 = p__11294;
  var quote0 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11298, 0, null);
  var ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11298, 1, null);
  var vec__11299 = p__11295;
  var quote1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11299, 0, null);
  var sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11299, 1, null);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(quote0, cljs.core.cst$sym$quote) && ns instanceof cljs.core.Symbol && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(quote1, cljs.core.cst$sym$quote) && sym instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Arguments to ns-unmap must be quoted symbols"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$core_SLASH_and, cljs.core.list(cljs.core.cst$sym$_EQ_, cljs.core.cst$sym$quote0, cljs.core.list(cljs.core.cst$sym$quote, cljs.core.cst$sym$quote)), cljs.core.list(cljs.core.cst$sym$core_SLASH_symbol_QMARK_, cljs.core.cst$sym$ns), cljs.core.list(cljs.core.cst$sym$_EQ_, 
    cljs.core.cst$sym$quote1, cljs.core.list(cljs.core.cst$sym$quote, cljs.core.cst$sym$quote)), cljs.core.list(cljs.core.cst$sym$core_SLASH_symbol_QMARK_, cljs.core.cst$sym$sym))], 0)))].join(""));
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_, cljs.core.update_in, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, ns, cljs.core.cst$kw$defs], null), cljs.core.dissoc, cljs.core.array_seq([sym], 0));
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_js_DASH_delete), cljs.core._conj(cljs.core.List.EMPTY, cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1(ns)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.compiler.munge.cljs$core$IFn$_invoke$arity$1([cljs.core.str(sym)].join("")))], 0))));
};
cljs.core$macros.ns_unmap.cljs$lang$macro = true;
cljs.core$macros.vswap_BANG_ = function cljs$core$macros$vswap_BANG_() {
  var args__5357__auto__ = [];
  var len__5350__auto___11305 = arguments.length;
  var i__5351__auto___11306 = 0;
  while (true) {
    if (i__5351__auto___11306 < len__5350__auto___11305) {
      args__5357__auto__.push(arguments[i__5351__auto___11306]);
      var G__11307 = i__5351__auto___11306 + 1;
      i__5351__auto___11306 = G__11307;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 4 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(4), 0) : null;
  return cljs.core$macros.vswap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5358__auto__);
};
cljs.core$macros.vswap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, vol, f, args) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_vreset_BANG_), cljs.core._conj(cljs.core.List.EMPTY, vol), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, f), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH__DASH_deref), cljs.core._conj(cljs.core.List.EMPTY, vol))))), cljs.core.array_seq([args], 0)))))], 0))));
};
cljs.core$macros.vswap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core$macros.vswap_BANG_.cljs$lang$applyTo = function(seq11300) {
  var G__11301 = cljs.core.first(seq11300);
  var seq11300__$1 = cljs.core.next(seq11300);
  var G__11302 = cljs.core.first(seq11300__$1);
  var seq11300__$2 = cljs.core.next(seq11300__$1);
  var G__11303 = cljs.core.first(seq11300__$2);
  var seq11300__$3 = cljs.core.next(seq11300__$2);
  var G__11304 = cljs.core.first(seq11300__$3);
  var seq11300__$4 = cljs.core.next(seq11300__$3);
  return cljs.core$macros.vswap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__11301, G__11302, G__11303, G__11304, seq11300__$4);
};
cljs.core$macros.vswap_BANG_.cljs$lang$macro = true;
cljs.core$macros.load_file_STAR_ = function cljs$core$macros$load_file_STAR_(_AMPERSAND_form, _AMPERSAND_env, f) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$js_SLASH_goog), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$nodeGlobalRequire), 
  cljs.core._conj(cljs.core.List.EMPTY, f)))))], 0))));
};
cljs.core$macros.load_file_STAR_.cljs$lang$macro = true;
cljs.core$macros.macroexpand_1 = function cljs$core$macros$macroexpand_1(_AMPERSAND_form, _AMPERSAND_env, quoted) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(quoted), cljs.core.cst$sym$quote)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Argument to macroexpand-1 must be quoted"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$core_SLASH__EQ_, cljs.core.list(cljs.core.cst$sym$core_SLASH_first, cljs.core.cst$sym$quoted), cljs.core.list(cljs.core.cst$sym$quote, cljs.core.cst$sym$quote))], 0)))].join(""));
  }
  var form = cljs.core.second(quoted);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$quote), cljs.core._conj(cljs.core.List.EMPTY, cljs.analyzer.macroexpand_1(_AMPERSAND_env, form)))));
};
cljs.core$macros.macroexpand_1.cljs$lang$macro = true;
cljs.core$macros.macroexpand = function cljs$core$macros$macroexpand(_AMPERSAND_form, _AMPERSAND_env, quoted) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(quoted), cljs.core.cst$sym$quote)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Argument to macroexpand must be quoted"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$core_SLASH__EQ_, cljs.core.list(cljs.core.cst$sym$core_SLASH_first, cljs.core.cst$sym$quoted), cljs.core.list(cljs.core.cst$sym$quote, cljs.core.cst$sym$quote))], 0)))].join(""));
  }
  var form = cljs.core.second(quoted);
  var env = _AMPERSAND_env;
  var form__$1 = form;
  var form_SINGLEQUOTE_ = cljs.analyzer.macroexpand_1(env, form__$1);
  while (true) {
    if (!(form__$1 === form_SINGLEQUOTE_)) {
      var G__11308 = form_SINGLEQUOTE_;
      var G__11309 = cljs.analyzer.macroexpand_1(env, form_SINGLEQUOTE_);
      form__$1 = G__11308;
      form_SINGLEQUOTE_ = G__11309;
      continue;
    } else {
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$quote), cljs.core._conj(cljs.core.List.EMPTY, form_SINGLEQUOTE_))));
    }
    break;
  }
};
cljs.core$macros.macroexpand.cljs$lang$macro = true;
cljs.core$macros.multi_arity_fn_QMARK_ = function cljs$core$macros$multi_arity_fn_QMARK_(fdecl) {
  return 1 < cljs.core.count(fdecl);
};
cljs.core$macros.variadic_fn_QMARK_ = function cljs$core$macros$variadic_fn_QMARK_(fdecl) {
  var and__4299__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(1, cljs.core.count(fdecl));
  if (and__4299__auto__) {
    return cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$_AMPERSAND_, null], null), null), cljs.core.ffirst(fdecl));
  } else {
    return and__4299__auto__;
  }
};
cljs.core$macros.variadic_fn_STAR_ = function cljs$core$macros$variadic_fn_STAR_() {
  var args11310 = [];
  var len__5350__auto___11315 = arguments.length;
  var i__5351__auto___11316 = 0;
  while (true) {
    if (i__5351__auto___11316 < len__5350__auto___11315) {
      args11310.push(arguments[i__5351__auto___11316]);
      var G__11317 = i__5351__auto___11316 + 1;
      i__5351__auto___11316 = G__11317;
      continue;
    } else {
    }
    break;
  }
  var G__11312 = args11310.length;
  switch(G__11312) {
    case 2:
      return cljs.core$macros.variadic_fn_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core$macros.variadic_fn_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11310.length)].join(""));;
  }
};
cljs.core$macros.variadic_fn_STAR_.cljs$core$IFn$_invoke$arity$2 = function(sym, method) {
  return cljs.core$macros.variadic_fn_STAR_.cljs$core$IFn$_invoke$arity$3(sym, method, true);
};
cljs.core$macros.variadic_fn_STAR_.cljs$core$IFn$_invoke$arity$3 = function(sym, p__11313, solo) {
  var vec__11314 = p__11313;
  var arglist = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11314, 0, null);
  var body = cljs.core.nthnext(vec__11314, 1);
  var method = vec__11314;
  var sig = cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$_AMPERSAND_, null], null), null), arglist);
  var restarg = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("seq");
  var get_delegate = function(sig, restarg, vec__11314, arglist, body, method) {
    return function cljs$core$macros$get_delegate() {
      return cljs.core.cst$sym$cljs$core$IFn$_invoke$arity$variadic;
    };
  }(sig, restarg, vec__11314, arglist, body, method);
  var get_delegate_prop = function(sig, restarg, vec__11314, arglist, body, method) {
    return function cljs$core$macros$get_delegate_prop() {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("-"), cljs.core.str(get_delegate())].join(""));
    };
  }(sig, restarg, vec__11314, arglist, body, method);
  var param_bind = function(sig, restarg, vec__11314, arglist, body, method) {
    return function cljs$core$macros$param_bind(param) {
      return cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, param), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(cljs.core.cst$sym$cljs$core_SLASH_first, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, 
      cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$file), cljs.core._conj(cljs.core.List.EMPTY, "/home/joelm/scratch/cljs-bootstrap/.cljs_bootstrap/cljs/core.cljc"), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$line), cljs.core._conj(cljs.core.List.EMPTY, 2623), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$column), cljs.core._conj(cljs.core.List.EMPTY, 
      49), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$end_DASH_line), cljs.core._conj(cljs.core.List.EMPTY, 2623), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$end_DASH_column), cljs.core._conj(cljs.core.List.EMPTY, 54), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$cljs$analyzer_SLASH_no_DASH_resolve), cljs.core._conj(cljs.core.List.EMPTY, true)], 0))))))), cljs.core._conj(cljs.core.List.EMPTY, restarg))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
      restarg), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(cljs.core.cst$sym$cljs$core_SLASH_next, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$file), 
      cljs.core._conj(cljs.core.List.EMPTY, "/home/joelm/scratch/cljs-bootstrap/.cljs_bootstrap/cljs/core.cljc"), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$line), cljs.core._conj(cljs.core.List.EMPTY, 2624), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$column), cljs.core._conj(cljs.core.List.EMPTY, 51), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$end_DASH_line), cljs.core._conj(cljs.core.List.EMPTY, 2624), cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.cst$kw$end_DASH_column), cljs.core._conj(cljs.core.List.EMPTY, 55), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$cljs$analyzer_SLASH_no_DASH_resolve), cljs.core._conj(cljs.core.List.EMPTY, true)], 0))))))), cljs.core._conj(cljs.core.List.EMPTY, restarg)))))], 0)))));
    };
  }(sig, restarg, vec__11314, arglist, body, method);
  var apply_to = function(sig, restarg, vec__11314, arglist, body, method) {
    return function cljs$core$macros$apply_to() {
      if (1 < cljs.core.count(sig)) {
        var params = cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(cljs.core.count(sig) - 1, cljs.core.gensym);
        return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, 
        restarg)))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(param_bind, cljs.core.array_seq([params], 
        0))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, sym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
        get_delegate()), params, cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, restarg)], 0)))))], 0)))))], 0))))))))))));
      } else {
        return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, 
        restarg)))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, sym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, get_delegate()), 
        cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core_SLASH_seq), cljs.core._conj(cljs.core.List.EMPTY, restarg)))))))))], 0))))))))))));
      }
    };
  }(sig, restarg, vec__11314, arglist, body, method);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, sym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, get_delegate_prop())], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.vec(sig)), body))))))))], 0))))), cljs.core.array_seq([solo ? cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, sym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_cljs$lang$maxFixedArity)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.count(sig) - 1)], 0))))))))) : null, cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, sym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_cljs$lang$applyTo)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, apply_to())], 0)))))], 0))));
};
cljs.core$macros.variadic_fn_STAR_.cljs$lang$maxFixedArity = 3;
cljs.core$macros.copy_arguments = function cljs$core$macros$copy_arguments(_AMPERSAND_form, _AMPERSAND_env, dest) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$len__11319__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_alength), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_js_DASH_arguments)))))))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_loop), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$i__11320__auto__), cljs.core._conj(cljs.core.List.EMPTY, 0)))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_when), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__LT_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$i__11320__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$len__11319__auto__)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$push), cljs.core._conj(cljs.core.List.EMPTY, dest), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_aget), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_js_DASH_arguments))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$i__11320__auto__)], 0)))))], 0))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$recur), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_inc), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$i__11320__auto__)))))))))], 0)))))], 0)))))], 0))));
};
cljs.core$macros.copy_arguments.cljs$lang$macro = true;
cljs.core$macros.variadic_fn = function cljs$core$macros$variadic_fn(name, meta, p__11323) {
  var vec__11326 = p__11323;
  var vec__11327 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11326, 0, null);
  var arglist = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11327, 0, null);
  var body = cljs.core.nthnext(vec__11327, 1);
  var method = vec__11327;
  var fdecl = vec__11326;
  var dest_args = function(vec__11326, vec__11327, arglist, body, method, fdecl) {
    return function cljs$core$macros$variadic_fn_$_dest_args(c) {
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(vec__11326, vec__11327, arglist, body, method, fdecl) {
        return function(n) {
          return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_aget), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_js_DASH_arguments))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
          n)], 0))));
        };
      }(vec__11326, vec__11327, arglist, body, method, fdecl), cljs.core.range.cljs$core$IFn$_invoke$arity$1(c));
    };
  }(vec__11326, vec__11327, arglist, body, method, fdecl);
  var rname = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(cljs.analyzer._STAR_cljs_ns_STAR_)].join(""), [cljs.core.str(name)].join(""));
  var sig = cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$_AMPERSAND_, null], null), null), arglist);
  var c_1 = cljs.core.count(sig) - 1;
  var meta__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(meta, cljs.core.cst$kw$top_DASH_fn, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$variadic, true, cljs.core.cst$kw$max_DASH_fixed_DASH_arity, c_1, cljs.core.cst$kw$method_DASH_params, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [sig], null), cljs.core.cst$kw$arglists, cljs.core._conj(cljs.core.List.EMPTY, arglist), cljs.core.cst$kw$arglists_DASH_meta, cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(meta, 
  new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arglist], null)))], null));
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$def), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(name, meta__$1)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$args__11321__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_array)))))))))), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_copy_DASH_arguments), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$args__11321__auto__))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$argseq__11322__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_when), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH__LT_), cljs.core._conj(cljs.core.List.EMPTY, c_1), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_alength), 
  cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$args__11321__auto__)))))], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$new), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(cljs.core.cst$sym$cljs$core_SLASH_IndexedSeq, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$file), cljs.core._conj(cljs.core.List.EMPTY, "/home/joelm/scratch/cljs-bootstrap/.cljs_bootstrap/cljs/core.cljc"), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$line), cljs.core._conj(cljs.core.List.EMPTY, 2671), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$column), cljs.core._conj(cljs.core.List.EMPTY, 
  55), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$end_DASH_line), cljs.core._conj(cljs.core.List.EMPTY, 2671), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$end_DASH_column), cljs.core._conj(cljs.core.List.EMPTY, 75), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$cljs$analyzer_SLASH_no_DASH_resolve), cljs.core._conj(cljs.core.List.EMPTY, true)], 0))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$$slice), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$args__11321__auto__), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, c_1)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, 0)], 0)))))], 0)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, 
  rname), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$IFn$_invoke$arity$variadic), dest_args(c_1), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$argseq__11322__auto__)], 0)))))], 0)))))], 0)))))], 0)))))], 0)))))], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core$macros.variadic_fn_STAR_.cljs$core$IFn$_invoke$arity$2(rname, method))], 0))));
};
cljs.core$macros.multi_arity_fn = function cljs$core$macros$multi_arity_fn(name, meta, fdecl) {
  var dest_args = function cljs$core$macros$multi_arity_fn_$_dest_args(c) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(n) {
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_aget), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_js_DASH_arguments))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
      n)], 0))));
    }, cljs.core.range.cljs$core$IFn$_invoke$arity$1(c));
  };
  var fixed_arity = function cljs$core$macros$multi_arity_fn_$_fixed_arity(rname, sig) {
    var c = cljs.core.count(sig);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, rname), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
    cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("cljs$core$IFn$_invoke$arity$"), cljs.core.str(c)].join(""))), dest_args(c)))))], 0))))], null);
  };
  var fn_method = function cljs$core$macros$multi_arity_fn_$_fn_method(p__11340) {
    var vec__11342 = p__11340;
    var sig = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11342, 0, null);
    var body = cljs.core.nthnext(vec__11342, 1);
    var method = vec__11342;
    if (cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$_AMPERSAND_, null], null), null), sig)) {
      return cljs.core$macros.variadic_fn_STAR_.cljs$core$IFn$_invoke$arity$3(name, method, false);
    } else {
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, name), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
      cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str("-cljs$core$IFn$_invoke$arity$"), cljs.core.str(cljs.core.count(sig))].join("")))], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, method)))))], 0))));
    }
  };
  var rname = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(cljs.analyzer._STAR_cljs_ns_STAR_)].join(""), [cljs.core.str(name)].join(""));
  var arglists = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, fdecl);
  var varsig_QMARK_ = function(rname, arglists) {
    return function(p1__11328_SHARP_) {
      return cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$_AMPERSAND_, null], null), null), p1__11328_SHARP_);
    };
  }(rname, arglists);
  var variadic = cljs.core.boolean$(cljs.core.some(varsig_QMARK_, arglists));
  var sigs = cljs.core.remove.cljs$core$IFn$_invoke$arity$2(varsig_QMARK_, arglists);
  var maxfa = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.max, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.count, sigs), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.count(cljs.core.first(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(varsig_QMARK_, arglists))) - 2], null)));
  var meta__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(meta, cljs.core.cst$kw$top_DASH_fn, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$variadic, variadic, cljs.core.cst$kw$max_DASH_fixed_DASH_arity, maxfa, cljs.core.cst$kw$method_DASH_params, sigs, cljs.core.cst$kw$arglists, arglists, cljs.core.cst$kw$arglists_DASH_meta, cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(meta, arglists))], null));
  var args_sym = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("args");
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$do), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$def), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(name, meta__$1)), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_fn), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0())))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, args_sym), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_array)))))))))), 
  cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_copy_DASH_arguments), cljs.core._conj(cljs.core.List.EMPTY, args_sym))))), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_case), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_alength), cljs.core._conj(cljs.core.List.EMPTY, args_sym))))), cljs.core.array_seq([cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(function(rname, arglists, varsig_QMARK_, variadic, sigs, maxfa, meta__$1, args_sym) {
    return function(p1__11329_SHARP_) {
      return fixed_arity(rname, p1__11329_SHARP_);
    };
  }(rname, arglists, varsig_QMARK_, variadic, sigs, maxfa, meta__$1, args_sym), cljs.core.array_seq([sigs], 0)), cljs.core._conj(cljs.core.List.EMPTY, variadic ? cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_let), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$argseq__11330__auto__), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$new), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.with_meta(cljs.core.cst$sym$cljs$core_SLASH_IndexedSeq, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$kw$file), cljs.core._conj(cljs.core.List.EMPTY, "/home/joelm/scratch/cljs-bootstrap/.cljs_bootstrap/cljs/core.cljc"), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$line), cljs.core._conj(cljs.core.List.EMPTY, 2728), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$column), cljs.core._conj(cljs.core.List.EMPTY, 58), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$end_DASH_line), cljs.core._conj(cljs.core.List.EMPTY, 2728), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$kw$end_DASH_column), cljs.core._conj(cljs.core.List.EMPTY, 78), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$kw$cljs$analyzer_SLASH_no_DASH_resolve), cljs.core._conj(cljs.core.List.EMPTY, true)], 0))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$slice), cljs.core._conj(cljs.core.List.EMPTY, 
  args_sym), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, maxfa)], 0))))), cljs.core._conj(cljs.core.List.EMPTY, 0)], 0)))))))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, rname), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$IFn$_invoke$arity$variadic), dest_args(maxfa), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$argseq__11330__auto__)], 0)))))], 0)))))], 0)))) : cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$throw), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$js_SLASH_Error$), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$cljs$core$macros_SLASH_str), cljs.core._conj(cljs.core.List.EMPTY, "Invalid arity: "), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.cst$sym$cljs$core$macros_SLASH_alength), cljs.core._conj(cljs.core.List.EMPTY, args_sym)))))], 0)))))))))))))], 0)))))], 0)))))], 0)))))], 0))))), cljs.core.array_seq([cljs.core.map.cljs$core$IFn$_invoke$arity$2(fn_method, fdecl), cljs.core._conj(cljs.core.List.EMPTY, cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$set_BANG_), cljs.core._conj(cljs.core.List.EMPTY, 
  cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, name), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_cljs$lang$maxFixedArity)], 0))))), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, maxfa)], 0)))))], 0))));
};
cljs.core$macros.defn = function() {
  var cljs$core$macros$defn__delegate = function(_AMPERSAND_form, _AMPERSAND_env, name, fdecl) {
    if (name instanceof cljs.core.Symbol) {
    } else {
      throw new Error("First argument to defn must be a symbol");
    }
    var m = typeof cljs.core.first(fdecl) === "string" ? new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$doc, cljs.core.first(fdecl)], null) : cljs.core.PersistentArrayMap.EMPTY;
    var fdecl__$1 = typeof cljs.core.first(fdecl) === "string" ? cljs.core.next(fdecl) : fdecl;
    var m__$1 = cljs.core.map_QMARK_(cljs.core.first(fdecl__$1)) ? cljs.core.conj.cljs$core$IFn$_invoke$arity$2(m, cljs.core.first(fdecl__$1)) : m;
    var fdecl__$2 = cljs.core.map_QMARK_(cljs.core.first(fdecl__$1)) ? cljs.core.next(fdecl__$1) : fdecl__$1;
    var fdecl__$3 = cljs.core.vector_QMARK_(cljs.core.first(fdecl__$2)) ? cljs.core._conj(cljs.core.List.EMPTY, fdecl__$2) : fdecl__$2;
    var m__$2 = cljs.core.map_QMARK_(cljs.core.last(fdecl__$3)) ? cljs.core.conj.cljs$core$IFn$_invoke$arity$2(m__$1, cljs.core.last(fdecl__$3)) : m__$1;
    var fdecl__$4 = cljs.core.map_QMARK_(cljs.core.last(fdecl__$3)) ? cljs.core.butlast(fdecl__$3) : fdecl__$3;
    var m__$3 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$arglists, cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core$macros.sigs(fdecl__$4)), cljs.core.cst$sym$quote)], null), m__$2);
    var m__$4 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.meta(name) ? cljs.core.meta(name) : cljs.core.PersistentArrayMap.EMPTY, m__$3);
    if (cljs.core$macros.multi_arity_fn_QMARK_(fdecl__$4)) {
      return cljs.core$macros.multi_arity_fn(name, m__$4, fdecl__$4);
    } else {
      if (cljs.core$macros.variadic_fn_QMARK_(fdecl__$4)) {
        return cljs.core$macros.variadic_fn(name, m__$4, fdecl__$4);
      } else {
        return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cons(cljs.core.cst$sym$cljs$core$macros_SLASH_fn, fdecl__$4)), cljs.core.with_meta(name, m__$4)), cljs.core.cst$sym$def);
      }
    }
  };
  var cljs$core$macros$defn = function(_AMPERSAND_form, _AMPERSAND_env, name, var_args) {
    var fdecl = null;
    if (arguments.length > 3) {
      var G__11343__i = 0, G__11343__a = new Array(arguments.length - 3);
      while (G__11343__i < G__11343__a.length) {
        G__11343__a[G__11343__i] = arguments[G__11343__i + 3];
        ++G__11343__i;
      }
      fdecl = new cljs.core.IndexedSeq(G__11343__a, 0);
    }
    return cljs$core$macros$defn__delegate.call(this, _AMPERSAND_form, _AMPERSAND_env, name, fdecl);
  };
  cljs$core$macros$defn.cljs$lang$maxFixedArity = 3;
  cljs$core$macros$defn.cljs$lang$applyTo = function(arglist__11344) {
    var _AMPERSAND_form = cljs.core.first(arglist__11344);
    arglist__11344 = cljs.core.next(arglist__11344);
    var _AMPERSAND_env = cljs.core.first(arglist__11344);
    arglist__11344 = cljs.core.next(arglist__11344);
    var name = cljs.core.first(arglist__11344);
    var fdecl = cljs.core.rest(arglist__11344);
    return cljs$core$macros$defn__delegate(_AMPERSAND_form, _AMPERSAND_env, name, fdecl);
  };
  cljs$core$macros$defn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$macros$defn__delegate;
  return cljs$core$macros$defn;
}();
cljs.core$macros.defn.cljs$lang$macro = true;
cljs.core$macros.defmacro = function cljs$core$macros$defmacro() {
  var args__5357__auto__ = [];
  var len__5350__auto___11349 = arguments.length;
  var i__5351__auto___11350 = 0;
  while (true) {
    if (i__5351__auto___11350 < len__5350__auto___11349) {
      args__5357__auto__.push(arguments[i__5351__auto___11350]);
      var G__11351 = i__5351__auto___11350 + 1;
      i__5351__auto___11350 = G__11351;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 3 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(3), 0) : null;
  return cljs.core$macros.defmacro.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5358__auto__);
};
cljs.core$macros.defmacro.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, name, args) {
  var prefix = function() {
    var p = cljs.core._conj(cljs.core.List.EMPTY, cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(name, cljs.core.assoc, cljs.core.cst$kw$macro, true));
    var args__$1 = args;
    while (true) {
      var f = cljs.core.first(args__$1);
      if (typeof f === "string") {
        var G__11352 = cljs.core.cons(f, p);
        var G__11353 = cljs.core.next(args__$1);
        p = G__11352;
        args__$1 = G__11353;
        continue;
      } else {
        if (cljs.core.map_QMARK_(f)) {
          var G__11354 = cljs.core.cons(f, p);
          var G__11355 = cljs.core.next(args__$1);
          p = G__11354;
          args__$1 = G__11355;
          continue;
        } else {
          return p;
        }
      }
      break;
    }
  }();
  var fdecl = function() {
    var fd = args;
    while (true) {
      if (typeof cljs.core.first(fd) === "string") {
        var G__11356 = cljs.core.next(fd);
        fd = G__11356;
        continue;
      } else {
        if (cljs.core.map_QMARK_(cljs.core.first(fd))) {
          var G__11357 = cljs.core.next(fd);
          fd = G__11357;
          continue;
        } else {
          return fd;
        }
      }
      break;
    }
  }();
  var fdecl__$1 = cljs.core.vector_QMARK_(cljs.core.first(fdecl)) ? cljs.core._conj(cljs.core.List.EMPTY, fdecl) : fdecl;
  var add_implicit_args = function(prefix, fdecl, fdecl__$1) {
    return function(fd) {
      var args__$1 = cljs.core.first(fd);
      return cljs.core.cons(cljs.core.vec(cljs.core.cons(cljs.core.cst$sym$_AMPERSAND_form, cljs.core.cons(cljs.core.cst$sym$_AMPERSAND_env, args__$1))), cljs.core.next(fd));
    };
  }(prefix, fdecl, fdecl__$1);
  var add_args = function(prefix, fdecl, fdecl__$1, add_implicit_args) {
    return function(acc, ds) {
      while (true) {
        if (ds == null) {
          return acc;
        } else {
          var d = cljs.core.first(ds);
          if (cljs.core.map_QMARK_(d)) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, d);
          } else {
            var G__11358 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc, add_implicit_args(d));
            var G__11359 = cljs.core.next(ds);
            acc = G__11358;
            ds = G__11359;
            continue;
          }
        }
        break;
      }
    };
  }(prefix, fdecl, fdecl__$1, add_implicit_args);
  var fdecl__$2 = cljs.core.seq(add_args(cljs.core.PersistentVector.EMPTY, fdecl__$1));
  var decl = function() {
    var p = prefix;
    var d = fdecl__$2;
    while (true) {
      if (p) {
        var G__11360 = cljs.core.next(p);
        var G__11361 = cljs.core.cons(cljs.core.first(p), d);
        p = G__11360;
        d = G__11361;
        continue;
      } else {
        return d;
      }
      break;
    }
  }();
  return cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, cljs.core._conj(cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, true), cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$$), cljs.core._conj(cljs.core.List.EMPTY, name), cljs.core.array_seq([cljs.core._conj(cljs.core.List.EMPTY, cljs.core.cst$sym$_DASH_cljs$lang$macro)], 0))))), cljs.core.cst$sym$set_BANG_)), 
  cljs.core.cons(cljs.core.cst$sym$cljs$core$macros_SLASH_defn, decl)), cljs.core.cst$sym$do);
};
cljs.core$macros.defmacro.cljs$lang$maxFixedArity = 3;
cljs.core$macros.defmacro.cljs$lang$applyTo = function(seq11345) {
  var G__11346 = cljs.core.first(seq11345);
  var seq11345__$1 = cljs.core.next(seq11345);
  var G__11347 = cljs.core.first(seq11345__$1);
  var seq11345__$2 = cljs.core.next(seq11345__$1);
  var G__11348 = cljs.core.first(seq11345__$2);
  var seq11345__$3 = cljs.core.next(seq11345__$2);
  return cljs.core$macros.defmacro.cljs$core$IFn$_invoke$arity$variadic(G__11346, G__11347, G__11348, seq11345__$3);
};
cljs.core$macros.defmacro.cljs$lang$macro = true;
goog.provide("cljs.js");
goog.require("cljs.core");
goog.require("cljs.compiler");
goog.require("cljs.tools.reader");
goog.require("cljs.tagged_literals");
goog.require("goog.crypt.base64");
goog.require("cljs.tools.reader.reader_types");
goog.require("cljs.env");
goog.require("cljs.analyzer");
goog.require("cljs.source_map");
goog.require("goog.string.StringBuffer");
goog.require("clojure.string");
goog.require("cljs.core$macros");
cljs.js.debug_prn = function cljs$js$debug_prn() {
  var args__5357__auto__ = [];
  var len__5350__auto___9756 = arguments.length;
  var i__5351__auto___9757 = 0;
  while (true) {
    if (i__5351__auto___9757 < len__5350__auto___9756) {
      args__5357__auto__.push(arguments[i__5351__auto___9757]);
      var G__9758 = i__5351__auto___9757 + 1;
      i__5351__auto___9757 = G__9758;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 0 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(0), 0) : null;
  return cljs.js.debug_prn.cljs$core$IFn$_invoke$arity$variadic(argseq__5358__auto__);
};
cljs.js.debug_prn.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  var _STAR_print_fn_STAR_9755 = cljs.core._STAR_print_fn_STAR_;
  cljs.core._STAR_print_fn_STAR_ = cljs.core._STAR_print_err_fn_STAR_;
  try {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.println, args);
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_9755;
  }
};
cljs.js.debug_prn.cljs$lang$maxFixedArity = 0;
cljs.js.debug_prn.cljs$lang$applyTo = function(seq9754) {
  return cljs.js.debug_prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq9754));
};
cljs.js.ns__GT_relpath = function cljs$js$ns__GT_relpath(ns_sym) {
  return clojure.string.replace(cljs.analyzer.munge_path(ns_sym), ".", "/");
};
cljs.js.file__GT_ns = function cljs$js$file__GT_ns(file) {
  var lib_name = cljs.core.subs.cljs$core$IFn$_invoke$arity$3(clojure.string.replace(file, "/", "."), 0, cljs.core.count(file) - 5);
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(lib_name));
};
cljs.js.atom_QMARK_ = function cljs$js$atom_QMARK_(x) {
  return x instanceof cljs.core.Atom;
};
cljs.js.valid_name_QMARK_ = function cljs$js$valid_name_QMARK_(x) {
  return x == null || x instanceof cljs.core.Symbol || typeof x === "string";
};
cljs.js.valid_opts_QMARK_ = function cljs$js$valid_opts_QMARK_(x) {
  return x == null || cljs.core.map_QMARK_(x);
};
if (typeof cljs.js._STAR_load_fn_STAR_ !== "undefined") {
} else {
  cljs.js._STAR_load_fn_STAR_ = function cljs$js$_STAR_load_fn_STAR_(name, cb) {
    throw new Error("No *load-fn* set");
  };
}
if (typeof cljs.js._STAR_eval_fn_STAR_ !== "undefined") {
} else {
  cljs.js._STAR_eval_fn_STAR_ = function cljs$js$_STAR_eval_fn_STAR_(js_source) {
    throw new Error("No *eval-fn* set");
  };
}
cljs.js.js_eval = function cljs$js$js_eval(p__9759) {
  var map__9762 = p__9759;
  var map__9762__$1 = (!(map__9762 == null) ? map__9762.cljs$lang$protocol_mask$partition0$ & 64 || map__9762.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__9762) : map__9762;
  var resource = map__9762__$1;
  var source = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9762__$1, cljs.core.cst$kw$source);
  return eval(source);
};
cljs.js.wrap_error = function cljs$js$wrap_error(ex) {
  return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$error, ex], null);
};
cljs.js.empty_state = function cljs$js$empty_state() {
  var args9764 = [];
  var len__5350__auto___9769 = arguments.length;
  var i__5351__auto___9770 = 0;
  while (true) {
    if (i__5351__auto___9770 < len__5350__auto___9769) {
      args9764.push(arguments[i__5351__auto___9770]);
      var G__9771 = i__5351__auto___9770 + 1;
      i__5351__auto___9770 = G__9771;
      continue;
    } else {
    }
    break;
  }
  var G__9766 = args9764.length;
  switch(G__9766) {
    case 0:
      return cljs.js.empty_state.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.js.empty_state.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9764.length)].join(""));;
  }
};
cljs.js.empty_state.cljs$core$IFn$_invoke$arity$0 = function() {
  var G__9767 = cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(G__9767, function(G__9767) {
    return function(state) {
      return cljs.core.assoc_in(state, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, cljs.core.cst$sym$cljs$core], null), cljs.core.PersistentHashMap.EMPTY);
    };
  }(G__9767));
  return G__9767;
};
cljs.js.empty_state.cljs$core$IFn$_invoke$arity$1 = function(init) {
  var G__9768 = cljs.js.empty_state.cljs$core$IFn$_invoke$arity$0();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(G__9768, init);
  return G__9768;
};
cljs.js.empty_state.cljs$lang$maxFixedArity = 1;
cljs.js.load_analysis_cache_BANG_ = function cljs$js$load_analysis_cache_BANG_(state, ns, cache) {
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(state, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, ns], null), cache);
};
cljs.js.load_source_map_BANG_ = function cljs$js$load_source_map_BANG_(state, ns, sm_json) {
  var sm = cljs.source_map.decode.cljs$core$IFn$_invoke$arity$1(JSON.parse(sm_json));
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(state, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$source_DASH_maps, ns], null), sm);
};
cljs.js.sm_data = function cljs$js$sm_data() {
  var G__9774 = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$source_DASH_map, cljs.core.sorted_map(), cljs.core.cst$kw$gen_DASH_col, 0, cljs.core.cst$kw$gen_DASH_line, 0], null);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9774) : cljs.core.atom.call(null, G__9774);
};
cljs.js.prefix = function cljs$js$prefix(s, pre) {
  return [cljs.core.str(pre), cljs.core.str(s)].join("");
};
cljs.js.append_source_map = function cljs$js$append_source_map(state, name, source, sb, sm_data, p__9775) {
  var map__9780 = p__9775;
  var map__9780__$1 = (!(map__9780 == null) ? map__9780.cljs$lang$protocol_mask$partition0$ & 64 || map__9780.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__9780) : map__9780;
  var opts = map__9780__$1;
  var output_dir = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9780__$1, cljs.core.cst$kw$output_DASH_dir);
  var asset_path = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9780__$1, cljs.core.cst$kw$asset_DASH_path);
  var t = (new Date).valueOf();
  var smn = name ? clojure.string.replace(cljs.core.munge([cljs.core.str(name)].join("")), ".", "/") : [cljs.core.str("cljs-"), cljs.core.str(t)].join("");
  var ts = (new Date).valueOf();
  var out = function() {
    var or__4311__auto__ = output_dir;
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return asset_path;
    }
  }();
  var src = function() {
    var G__9782 = [cljs.core.str(smn), cljs.core.str(".cljs?rel="), cljs.core.str(ts)].join("");
    var G__9782__$1 = out ? cljs.js.prefix(G__9782, [cljs.core.str(out), cljs.core.str("/")].join("")) : G__9782;
    return G__9782__$1;
  }();
  var file = function() {
    var G__9783 = [cljs.core.str(smn), cljs.core.str(".js?rel="), cljs.core.str(ts)].join("");
    var G__9783__$1 = out ? cljs.js.prefix(G__9783, [cljs.core.str(out), cljs.core.str("/")].join("")) : G__9783;
    return G__9783__$1;
  }();
  var json = cljs.source_map.encode(new cljs.core.PersistentArrayMap.fromArray([src, cljs.core.cst$kw$source_DASH_map.cljs$core$IFn$_invoke$arity$1(sm_data)], true, false), new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$lines, cljs.core.cst$kw$gen_DASH_line.cljs$core$IFn$_invoke$arity$1(sm_data) + 3, cljs.core.cst$kw$file, file, cljs.core.cst$kw$sources_DASH_content, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [source], null)], null));
  if (cljs.core.cst$kw$verbose.cljs$core$IFn$_invoke$arity$1(opts)) {
    cljs.js.debug_prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([json], 0));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(state, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$source_DASH_maps, name], null), cljs.source_map.invert_reverse_map(cljs.core.cst$kw$source_DASH_map.cljs$core$IFn$_invoke$arity$1(sm_data)));
  return sb.append([cljs.core.str("\n//# sourceURL="), cljs.core.str(file), cljs.core.str("\n//# sourceMappingURL=data:application/json;base64,"), cljs.core.str(goog.crypt.base64.encodeString(json))].join(""));
};
cljs.js._STAR_loaded_STAR_ = function() {
  var G__9784 = cljs.core.PersistentHashSet.EMPTY;
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__9784) : cljs.core.atom.call(null, G__9784);
}();
cljs.js.require = function cljs$js$require() {
  var args9785 = [];
  var len__5350__auto___9814 = arguments.length;
  var i__5351__auto___9815 = 0;
  while (true) {
    if (i__5351__auto___9815 < len__5350__auto___9814) {
      args9785.push(arguments[i__5351__auto___9815]);
      var G__9816 = i__5351__auto___9815 + 1;
      i__5351__auto___9815 = G__9816;
      continue;
    } else {
    }
    break;
  }
  var G__9787 = args9785.length;
  switch(G__9787) {
    case 2:
      return cljs.js.require.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.js.require.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.js.require.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.js.require.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9785.length)].join(""));;
  }
};
cljs.js.require.cljs$core$IFn$_invoke$arity$2 = function(name, cb) {
  return cljs.js.require.cljs$core$IFn$_invoke$arity$3(name, null, cb);
};
cljs.js.require.cljs$core$IFn$_invoke$arity$3 = function(name, opts, cb) {
  return cljs.js.require.cljs$core$IFn$_invoke$arity$4(null, name, opts, cb);
};
cljs.js.require.cljs$core$IFn$_invoke$arity$4 = function(bound_vars, name, opts, cb) {
  return cljs.js.require.cljs$core$IFn$_invoke$arity$5(bound_vars, name, null, opts, cb);
};
cljs.js.require.cljs$core$IFn$_invoke$arity$5 = function(bound_vars, name, reload, opts, cb) {
  var bound_vars__$1 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$_STAR_compiler_STAR_, cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0(), cljs.core.cst$kw$_STAR_data_DASH_readers_STAR_, cljs.tagged_literals._STAR_cljs_data_readers_STAR_, cljs.core.cst$kw$_STAR_load_DASH_macros_STAR_, function() {
    var or__4311__auto__ = cljs.core.cst$kw$load_DASH_macros.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return true;
    }
  }(), cljs.core.cst$kw$_STAR_analyze_DASH_deps_STAR_, function() {
    var or__4311__auto__ = cljs.core.cst$kw$analyze_DASH_deps.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return true;
    }
  }(), cljs.core.cst$kw$_STAR_load_DASH_fn_STAR_, function() {
    var or__4311__auto__ = cljs.core.cst$kw$load.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return cljs.js._STAR_load_fn_STAR_;
    }
  }(), cljs.core.cst$kw$_STAR_eval_DASH_fn_STAR_, function() {
    var or__4311__auto__ = cljs.core.cst$kw$eval.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return cljs.js._STAR_eval_fn_STAR_;
    }
  }()], null), bound_vars], 0));
  var name__$1 = function() {
    var G__9788 = name;
    var G__9788__$1 = cljs.core.cst$kw$macro_DASH_ns.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.analyzer.macro_ns_name(G__9788) : G__9788;
    return G__9788__$1;
  }();
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$reload, reload)) {
    cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.js._STAR_loaded_STAR_, cljs.core.disj, name__$1);
  } else {
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$reload_DASH_all, reload)) {
    var G__9789_9818 = cljs.js._STAR_loaded_STAR_;
    var G__9790_9819 = cljs.core.PersistentHashSet.EMPTY;
    cljs.core.reset_BANG_.cljs$core$IFn$_invoke$arity$2 ? cljs.core.reset_BANG_.cljs$core$IFn$_invoke$arity$2(G__9789_9818, G__9790_9819) : cljs.core.reset_BANG_.call(null, G__9789_9818, G__9790_9819);
  } else {
  }
  if (cljs.core.cst$kw$verbose.cljs$core$IFn$_invoke$arity$1(opts)) {
    cljs.js.debug_prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([[cljs.core.str("Loading "), cljs.core.str(name__$1), cljs.core.str(cljs.core.cst$kw$macros_DASH_ns.cljs$core$IFn$_invoke$arity$1(opts) ? " macros" : null), cljs.core.str(" namespace")].join("")], 0));
  } else {
  }
  if (!cljs.core.contains_QMARK_(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.js._STAR_loaded_STAR_) : cljs.core.deref.call(null, cljs.js._STAR_loaded_STAR_), name__$1)) {
    var env = cljs.core.cst$kw$_STAR_env_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
    try {
      return cljs.core.cst$kw$_STAR_load_DASH_fn_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1).call(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$name, name__$1, cljs.core.cst$kw$macros, cljs.core.cst$kw$macros_DASH_ns.cljs$core$IFn$_invoke$arity$1(opts), cljs.core.cst$kw$path, cljs.js.ns__GT_relpath(name__$1)], null), function(env, bound_vars__$1, name__$1) {
        return function(resource) {
          if (cljs.core.map_QMARK_(resource) || resource == null) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("*load-fn* may only return a map or nil"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$or, cljs.core.list(cljs.core.cst$sym$map_QMARK_, cljs.core.cst$sym$resource), cljs.core.list(cljs.core.cst$sym$nil_QMARK_, cljs.core.cst$sym$resource))], 0)))].join(""));
          }
          if (resource) {
            var map__9793 = resource;
            var map__9793__$1 = (!(map__9793 == null) ? map__9793.cljs$lang$protocol_mask$partition0$ & 64 || map__9793.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__9793) : map__9793;
            var lang = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9793__$1, cljs.core.cst$kw$lang);
            var source = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9793__$1, cljs.core.cst$kw$source);
            var cache = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9793__$1, cljs.core.cst$kw$cache);
            var source_map = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9793__$1, cljs.core.cst$kw$source_DASH_map);
            var pred__9795 = cljs.core._EQ_;
            var expr__9796 = lang;
            if (pred__9795.cljs$core$IFn$_invoke$arity$2 ? pred__9795.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$clj, expr__9796) : pred__9795.call(null, cljs.core.cst$kw$clj, expr__9796)) {
              var G__9799 = bound_vars__$1;
              var G__9800 = source;
              var G__9801 = name__$1;
              var G__9802 = opts;
              var G__9803 = function(G__9799, G__9800, G__9801, G__9802, pred__9795, expr__9796, map__9793, map__9793__$1, lang, source, cache, source_map, env, bound_vars__$1, name__$1) {
                return function(res) {
                  if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res)) {
                    return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res) : cb.call(null, res);
                  } else {
                    cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.js._STAR_loaded_STAR_, cljs.core.conj, name__$1);
                    var G__9804 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, true], null);
                    return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__9804) : cb.call(null, G__9804);
                  }
                };
              }(G__9799, G__9800, G__9801, G__9802, pred__9795, expr__9796, map__9793, map__9793__$1, lang, source, cache, source_map, env, bound_vars__$1, name__$1);
              return cljs.js.eval_str_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.js.eval_str_STAR_.cljs$core$IFn$_invoke$arity$5(G__9799, G__9800, G__9801, G__9802, G__9803) : cljs.js.eval_str_STAR_.call(null, G__9799, G__9800, G__9801, G__9802, G__9803);
            } else {
              if (pred__9795.cljs$core$IFn$_invoke$arity$2 ? pred__9795.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$js, expr__9796) : pred__9795.call(null, cljs.core.cst$kw$js, expr__9796)) {
                var res = function() {
                  try {
                    cljs.core.cst$kw$_STAR_eval_DASH_fn_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1).call(null, resource);
                    if (cache) {
                      cljs.js.load_analysis_cache_BANG_(cljs.core.cst$kw$_STAR_compiler_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1), name__$1, cache);
                    } else {
                    }
                    if (source_map) {
                      return cljs.js.load_source_map_BANG_(cljs.core.cst$kw$_STAR_compiler_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1), name__$1, source_map);
                    } else {
                      return null;
                    }
                  } catch (e9805) {
                    var cause = e9805;
                    return cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env, [cljs.core.str("Could not require "), cljs.core.str(name__$1)].join(""), cause));
                  }
                }();
                if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res)) {
                  return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res) : cb.call(null, res);
                } else {
                  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.js._STAR_loaded_STAR_, cljs.core.conj, name__$1);
                  var G__9806 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, true], null);
                  return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__9806) : cb.call(null, G__9806);
                }
              } else {
                var G__9807 = cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, [cljs.core.str("Invalid :lang specified "), cljs.core.str(lang), cljs.core.str(", only :clj or :js allowed")].join("")));
                return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__9807) : cb.call(null, G__9807);
              }
            }
          } else {
            var G__9810 = cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env, function() {
              var G__9811 = cljs.core.cst$kw$undeclared_DASH_ns;
              var G__9812 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ns_DASH_sym, name__$1, cljs.core.cst$kw$js_DASH_provide, cljs.core.name(name__$1)], null);
              return cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__9811, G__9812) : cljs.analyzer.error_message.call(null, G__9811, G__9812);
            }()));
            return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__9810) : cb.call(null, G__9810);
          }
        };
      }(env, bound_vars__$1, name__$1));
    } catch (e9791) {
      var cause = e9791;
      var G__9792 = cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env, [cljs.core.str("Could not require "), cljs.core.str(name__$1)].join(""), cause));
      return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__9792) : cb.call(null, G__9792);
    }
  } else {
    var G__9813 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, true], null);
    return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__9813) : cb.call(null, G__9813);
  }
};
cljs.js.require.cljs$lang$maxFixedArity = 5;
cljs.js.load_deps = function cljs$js$load_deps() {
  var args9821 = [];
  var len__5350__auto___9826 = arguments.length;
  var i__5351__auto___9827 = 0;
  while (true) {
    if (i__5351__auto___9827 < len__5350__auto___9826) {
      args9821.push(arguments[i__5351__auto___9827]);
      var G__9828 = i__5351__auto___9827 + 1;
      i__5351__auto___9827 = G__9828;
      continue;
    } else {
    }
    break;
  }
  var G__9823 = args9821.length;
  switch(G__9823) {
    case 5:
      return cljs.js.load_deps.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.js.load_deps.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9821.length)].join(""));;
  }
};
cljs.js.load_deps.cljs$core$IFn$_invoke$arity$5 = function(bound_vars, ana_env, lib, deps, cb) {
  return cljs.js.analyze_deps.cljs$core$IFn$_invoke$arity$6 ? cljs.js.analyze_deps.cljs$core$IFn$_invoke$arity$6(bound_vars, ana_env, lib, deps, null, cb) : cljs.js.analyze_deps.call(null, bound_vars, ana_env, lib, deps, null, cb);
};
cljs.js.load_deps.cljs$core$IFn$_invoke$arity$6 = function(bound_vars, ana_env, lib, deps, opts, cb) {
  if (cljs.core.cst$kw$verbose.cljs$core$IFn$_invoke$arity$1(opts)) {
    cljs.js.debug_prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Loading dependencies for", lib], 0));
  } else {
  }
  var _STAR_cljs_dep_set_STAR_9824 = cljs.analyzer._STAR_cljs_dep_set_STAR_;
  cljs.analyzer._STAR_cljs_dep_set_STAR_ = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$_STAR_cljs_DASH_dep_DASH_set_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars), lib), cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$dep_DASH_path], null), cljs.core.conj, lib);
  try {
    if (cljs.core.every_QMARK_(function(_STAR_cljs_dep_set_STAR_9824) {
      return function(p1__9820_SHARP_) {
        return !cljs.core.contains_QMARK_(cljs.core.cst$kw$_STAR_cljs_DASH_dep_DASH_set_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars), p1__9820_SHARP_);
      };
    }(_STAR_cljs_dep_set_STAR_9824), deps)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Circular dependency detected "), cljs.core.str(cljs.core.cst$kw$dep_DASH_path.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(cljs.core.cst$kw$_STAR_cljs_DASH_dep_DASH_set_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars))))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$every_QMARK_, cljs.core.list(cljs.core.cst$sym$fn_STAR_, 
      new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p1__9820_SHARP_], null), cljs.core.list(cljs.core.cst$sym$not, cljs.core.list(cljs.core.cst$sym$contains_QMARK_, cljs.core.list(cljs.core.cst$kw$_STAR_cljs_DASH_dep_DASH_set_STAR_, cljs.core.cst$sym$bound_DASH_vars), cljs.core.cst$sym$p1__9820_SHARP_))), cljs.core.cst$sym$deps)], 0)))].join(""));
    }
    if (cljs.core.seq(deps)) {
      var dep = cljs.core.first(deps);
      return cljs.js.require.cljs$core$IFn$_invoke$arity$4(bound_vars, dep, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(opts, cljs.core.cst$kw$context), cljs.core.cst$kw$ns), function(dep, _STAR_cljs_dep_set_STAR_9824) {
        return function(res) {
          if (cljs.core.not(cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res))) {
            return cljs.js.load_deps.cljs$core$IFn$_invoke$arity$6(bound_vars, ana_env, lib, cljs.core.next(deps), opts, cb);
          } else {
            return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res) : cb.call(null, res);
          }
        };
      }(dep, _STAR_cljs_dep_set_STAR_9824));
    } else {
      var G__9825 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, null], null);
      return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__9825) : cb.call(null, G__9825);
    }
  } finally {
    cljs.analyzer._STAR_cljs_dep_set_STAR_ = _STAR_cljs_dep_set_STAR_9824;
  }
};
cljs.js.load_deps.cljs$lang$maxFixedArity = 6;
cljs.js.analyze_deps = function cljs$js$analyze_deps() {
  var args9831 = [];
  var len__5350__auto___9854 = arguments.length;
  var i__5351__auto___9855 = 0;
  while (true) {
    if (i__5351__auto___9855 < len__5350__auto___9854) {
      args9831.push(arguments[i__5351__auto___9855]);
      var G__9856 = i__5351__auto___9855 + 1;
      i__5351__auto___9855 = G__9856;
      continue;
    } else {
    }
    break;
  }
  var G__9833 = args9831.length;
  switch(G__9833) {
    case 5:
      return cljs.js.analyze_deps.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.js.analyze_deps.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9831.length)].join(""));;
  }
};
cljs.js.analyze_deps.cljs$core$IFn$_invoke$arity$5 = function(bound_vars, ana_env, lib, deps, cb) {
  return cljs.js.analyze_deps.cljs$core$IFn$_invoke$arity$6(bound_vars, ana_env, lib, deps, null, cb);
};
cljs.js.analyze_deps.cljs$core$IFn$_invoke$arity$6 = function(bound_vars, ana_env, lib, deps, opts, cb) {
  var compiler = function() {
    var G__9834 = cljs.core.cst$kw$_STAR_compiler_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars);
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9834) : cljs.core.deref.call(null, G__9834);
  }();
  var _STAR_cljs_dep_set_STAR_9835 = cljs.analyzer._STAR_cljs_dep_set_STAR_;
  cljs.analyzer._STAR_cljs_dep_set_STAR_ = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$_STAR_cljs_DASH_dep_DASH_set_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars), lib), cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$dep_DASH_path], null), cljs.core.conj, lib);
  try {
    if (cljs.core.every_QMARK_(function(_STAR_cljs_dep_set_STAR_9835, compiler) {
      return function(p1__9830_SHARP_) {
        return !cljs.core.contains_QMARK_(cljs.core.cst$kw$_STAR_cljs_DASH_dep_DASH_set_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars), p1__9830_SHARP_);
      };
    }(_STAR_cljs_dep_set_STAR_9835, compiler), deps)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Circular dependency detected "), cljs.core.str(cljs.core.cst$kw$dep_DASH_path.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(cljs.core.cst$kw$_STAR_cljs_DASH_dep_DASH_set_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars))))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$every_QMARK_, cljs.core.list(cljs.core.cst$sym$fn_STAR_, 
      new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p1__9830_SHARP_], null), cljs.core.list(cljs.core.cst$sym$not, cljs.core.list(cljs.core.cst$sym$contains_QMARK_, cljs.core.list(cljs.core.cst$kw$_STAR_cljs_DASH_dep_DASH_set_STAR_, cljs.core.cst$sym$bound_DASH_vars), cljs.core.cst$sym$p1__9830_SHARP_))), cljs.core.cst$sym$deps)], 0)))].join(""));
    }
    if (cljs.core.seq(deps)) {
      var dep = cljs.core.first(deps);
      try {
        return cljs.core.cst$kw$_STAR_load_DASH_fn_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars).call(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$name, dep, cljs.core.cst$kw$path, cljs.js.ns__GT_relpath(dep)], null), function(dep, _STAR_cljs_dep_set_STAR_9835, compiler) {
          return function(resource) {
            if (cljs.core.map_QMARK_(resource) || resource == null) {
            } else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("*load-fn* may only return a map or nil"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$or, cljs.core.list(cljs.core.cst$sym$map_QMARK_, cljs.core.cst$sym$resource), cljs.core.list(cljs.core.cst$sym$nil_QMARK_, cljs.core.cst$sym$resource))], 0)))].join(""));
            }
            if (resource) {
              var map__9838 = resource;
              var map__9838__$1 = (!(map__9838 == null) ? map__9838.cljs$lang$protocol_mask$partition0$ & 64 || map__9838.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__9838) : map__9838;
              var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9838__$1, cljs.core.cst$kw$name);
              var lang = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9838__$1, cljs.core.cst$kw$lang);
              var source = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9838__$1, cljs.core.cst$kw$source);
              var pred__9840 = cljs.core._EQ_;
              var expr__9841 = lang;
              if (pred__9840.cljs$core$IFn$_invoke$arity$2 ? pred__9840.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$clj, expr__9841) : pred__9840.call(null, cljs.core.cst$kw$clj, expr__9841)) {
                var G__9843 = bound_vars;
                var G__9844 = source;
                var G__9845 = name;
                var G__9846 = opts;
                var G__9847 = function(G__9843, G__9844, G__9845, G__9846, pred__9840, expr__9841, map__9838, map__9838__$1, name, lang, source, dep, _STAR_cljs_dep_set_STAR_9835, compiler) {
                  return function(res) {
                    if (cljs.core.not(cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res))) {
                      return cljs.js.analyze_deps.cljs$core$IFn$_invoke$arity$6(bound_vars, ana_env, lib, cljs.core.next(deps), opts, cb);
                    } else {
                      return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res) : cb.call(null, res);
                    }
                  };
                }(G__9843, G__9844, G__9845, G__9846, pred__9840, expr__9841, map__9838, map__9838__$1, name, lang, source, dep, _STAR_cljs_dep_set_STAR_9835, compiler);
                return cljs.js.analyze_str_STAR_.cljs$core$IFn$_invoke$arity$5 ? cljs.js.analyze_str_STAR_.cljs$core$IFn$_invoke$arity$5(G__9843, G__9844, G__9845, G__9846, G__9847) : cljs.js.analyze_str_STAR_.call(null, G__9843, G__9844, G__9845, G__9846, G__9847);
              } else {
                if (pred__9840.cljs$core$IFn$_invoke$arity$2 ? pred__9840.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$js, expr__9841) : pred__9840.call(null, cljs.core.cst$kw$js, expr__9841)) {
                  return cljs.js.analyze_deps.cljs$core$IFn$_invoke$arity$6(bound_vars, ana_env, lib, cljs.core.next(deps), opts, cb);
                } else {
                  return cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(ana_env, [cljs.core.str("Invalid :lang specified "), cljs.core.str(lang), cljs.core.str(", only :clj or :js allowed")].join("")));
                }
              }
            } else {
              var G__9850 = cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(ana_env, function() {
                var G__9851 = cljs.core.cst$kw$undeclared_DASH_ns;
                var G__9852 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ns_DASH_sym, dep, cljs.core.cst$kw$js_DASH_provide, cljs.core.name(dep)], null);
                return cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(G__9851, G__9852) : cljs.analyzer.error_message.call(null, G__9851, G__9852);
              }()));
              return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__9850) : cb.call(null, G__9850);
            }
          };
        }(dep, _STAR_cljs_dep_set_STAR_9835, compiler));
      } catch (e9836) {
        var cause = e9836;
        var G__9837 = cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(ana_env, [cljs.core.str("Could not analyze dep "), cljs.core.str(dep)].join(""), cause));
        return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__9837) : cb.call(null, G__9837);
      }
    } else {
      var G__9853 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, null], null);
      return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__9853) : cb.call(null, G__9853);
    }
  } finally {
    cljs.analyzer._STAR_cljs_dep_set_STAR_ = _STAR_cljs_dep_set_STAR_9835;
  }
};
cljs.js.analyze_deps.cljs$lang$maxFixedArity = 6;
cljs.js.load_macros = function cljs$js$load_macros(bound_vars, k, macros, reload, reloads, opts, cb) {
  if (cljs.core.seq(macros)) {
    var nsym = cljs.core.first(cljs.core.vals(macros));
    var k__$1 = function() {
      var or__4311__auto__ = k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(reload) : k.call(null, reload);
      if (or__4311__auto__) {
        return or__4311__auto__;
      } else {
        var or__4311__auto____$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(reloads, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, nsym], null));
        if (or__4311__auto____$1) {
          return or__4311__auto____$1;
        } else {
          var and__4299__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(nsym, cljs.core.name);
          if (and__4299__auto__) {
            var and__4299__auto____$1 = cljs.core.cst$kw$_STAR_reload_DASH_macros_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars);
            if (and__4299__auto____$1) {
              return cljs.core.cst$kw$reload;
            } else {
              return and__4299__auto____$1;
            }
          } else {
            return and__4299__auto__;
          }
        }
      }
    }();
    return cljs.js.require.cljs$core$IFn$_invoke$arity$5(bound_vars, nsym, k__$1, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, cljs.core.cst$kw$macros_DASH_ns, true), cljs.core.cst$kw$context), cljs.core.cst$kw$ns), function(nsym, k__$1) {
      return function(res) {
        if (cljs.core.not(cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res))) {
          return cljs$js$load_macros(bound_vars, k__$1, cljs.core.next(macros), reload, reloads, opts, cb);
        } else {
          return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res) : cb.call(null, res);
        }
      };
    }(nsym, k__$1));
  } else {
    var G__9866 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, null], null);
    return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__9866) : cb.call(null, G__9866);
  }
};
cljs.js.ns_side_effects = function cljs$js$ns_side_effects() {
  var args9867 = [];
  var len__5350__auto___9892 = arguments.length;
  var i__5351__auto___9893 = 0;
  while (true) {
    if (i__5351__auto___9893 < len__5350__auto___9892) {
      args9867.push(arguments[i__5351__auto___9893]);
      var G__9894 = i__5351__auto___9893 + 1;
      i__5351__auto___9893 = G__9894;
      continue;
    } else {
    }
    break;
  }
  var G__9869 = args9867.length;
  switch(G__9869) {
    case 5:
      return cljs.js.ns_side_effects.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.js.ns_side_effects.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9867.length)].join(""));;
  }
};
cljs.js.ns_side_effects.cljs$core$IFn$_invoke$arity$5 = function(bound_vars, ana_env, ast, opts, cb) {
  return cljs.js.ns_side_effects.cljs$core$IFn$_invoke$arity$6(false, bound_vars, ana_env, ast, opts, cb);
};
cljs.js.ns_side_effects.cljs$core$IFn$_invoke$arity$6 = function(load, bound_vars, ana_env, p__9870, opts, cb) {
  var map__9871 = p__9870;
  var map__9871__$1 = (!(map__9871 == null) ? map__9871.cljs$lang$protocol_mask$partition0$ & 64 || map__9871.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__9871) : map__9871;
  var ast = map__9871__$1;
  var op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9871__$1, cljs.core.cst$kw$op);
  if (cljs.core.cst$kw$verbose.cljs$core$IFn$_invoke$arity$1(opts)) {
    cljs.js.debug_prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Namespace side effects for", cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ast)], 0));
  } else {
  }
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$ns, op)) {
    var map__9873 = ast;
    var map__9873__$1 = (!(map__9873 == null) ? map__9873.cljs$lang$protocol_mask$partition0$ & 64 || map__9873.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__9873) : map__9873;
    var deps = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9873__$1, cljs.core.cst$kw$deps);
    var uses = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9873__$1, cljs.core.cst$kw$uses);
    var requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9873__$1, cljs.core.cst$kw$requires);
    var require_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9873__$1, cljs.core.cst$kw$require_DASH_macros);
    var use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9873__$1, cljs.core.cst$kw$use_DASH_macros);
    var reload = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9873__$1, cljs.core.cst$kw$reload);
    var reloads = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__9873__$1, cljs.core.cst$kw$reloads);
    var env = cljs.core.cst$kw$_STAR_compiler_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars);
    var check_uses_and_load_macros = function(map__9873, map__9873__$1, deps, uses, requires, require_macros, use_macros, reload, reloads, env, map__9871, map__9871__$1, ast, op) {
      return function cljs$js$check_uses_and_load_macros(res) {
        if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res)) {
          return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res) : cb.call(null, res);
        } else {
          var res__$1 = function() {
            try {
              if (function() {
                var and__4299__auto__ = cljs.core.cst$kw$_STAR_analyze_DASH_deps_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars);
                if (and__4299__auto__) {
                  return cljs.core.seq(uses);
                } else {
                  return and__4299__auto__;
                }
              }()) {
                if (cljs.core.cst$kw$verbose.cljs$core$IFn$_invoke$arity$1(opts)) {
                  cljs.js.debug_prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Checking uses"], 0));
                } else {
                }
                cljs.analyzer.check_uses(uses, env);
                return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, null], null);
              } else {
                return null;
              }
            } catch (e9887) {
              var cause = e9887;
              return cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(ana_env, [cljs.core.str("Could not parse ns form "), cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ast))].join(""), cause));
            }
          }();
          if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res__$1)) {
            return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res__$1) : cb.call(null, res__$1);
          } else {
            if (cljs.core.cst$kw$_STAR_load_DASH_macros_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars)) {
              if (cljs.core.cst$kw$verbose.cljs$core$IFn$_invoke$arity$1(opts)) {
                cljs.js.debug_prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Processing :use-macros for", cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ast)], 0));
              } else {
              }
              return cljs.js.load_macros(bound_vars, cljs.core.cst$kw$use_DASH_macros, use_macros, reload, reloads, opts, function(res__$1, map__9873, map__9873__$1, deps, uses, requires, require_macros, use_macros, reload, reloads, env, map__9871, map__9871__$1, ast, op) {
                return function(res__$2) {
                  if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res__$2)) {
                    return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res__$2) : cb.call(null, res__$2);
                  } else {
                    if (cljs.core.cst$kw$verbose.cljs$core$IFn$_invoke$arity$1(opts)) {
                      cljs.js.debug_prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Processing :require-macros for", cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ast)], 0));
                    } else {
                    }
                    return cljs.js.load_macros(bound_vars, cljs.core.cst$kw$require_DASH_macros, require_macros, reloads, reloads, opts, function(res__$1, map__9873, map__9873__$1, deps, uses, requires, require_macros, use_macros, reload, reloads, env, map__9871, map__9871__$1, ast, op) {
                      return function(res__$3) {
                        if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res__$3)) {
                          return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res__$3) : cb.call(null, res__$3);
                        } else {
                          var res__$4 = function() {
                            try {
                              if (cljs.core.seq(use_macros)) {
                                if (cljs.core.cst$kw$verbose.cljs$core$IFn$_invoke$arity$1(opts)) {
                                  cljs.js.debug_prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Checking :use-macros for", cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ast)], 0));
                                } else {
                                }
                                cljs.analyzer.check_use_macros(use_macros, env);
                              } else {
                              }
                              return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, null], null);
                            } catch (e9888) {
                              var cause = e9888;
                              return cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(ana_env, [cljs.core.str("Could not parse ns form "), cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ast))].join(""), cause));
                            }
                          }();
                          if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res__$4)) {
                            return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res__$4) : cb.call(null, res__$4);
                          } else {
                            var G__9889 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, ast], null);
                            return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__9889) : cb.call(null, G__9889);
                          }
                        }
                      };
                    }(res__$1, map__9873, map__9873__$1, deps, uses, requires, require_macros, use_macros, reload, reloads, env, map__9871, map__9871__$1, ast, op));
                  }
                };
              }(res__$1, map__9873, map__9873__$1, deps, uses, requires, require_macros, use_macros, reload, reloads, env, map__9871, map__9871__$1, ast, op));
            } else {
              var G__9890 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, ast], null);
              return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__9890) : cb.call(null, G__9890);
            }
          }
        }
      };
    }(map__9873, map__9873__$1, deps, uses, requires, require_macros, use_macros, reload, reloads, env, map__9871, map__9871__$1, ast, op);
    if (function() {
      var and__4299__auto__ = load;
      if (and__4299__auto__) {
        return cljs.core.seq(deps);
      } else {
        return and__4299__auto__;
      }
    }()) {
      return cljs.js.load_deps.cljs$core$IFn$_invoke$arity$6(bound_vars, ana_env, cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ast), deps, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(opts, cljs.core.cst$kw$macros_DASH_ns), check_uses_and_load_macros);
    } else {
      if (function() {
        var and__4299__auto__ = cljs.core.not(load);
        if (and__4299__auto__) {
          var and__4299__auto____$1 = cljs.core.cst$kw$_STAR_analyze_DASH_deps_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars);
          if (and__4299__auto____$1) {
            return cljs.core.seq(deps);
          } else {
            return and__4299__auto____$1;
          }
        } else {
          return and__4299__auto__;
        }
      }()) {
        return cljs.js.analyze_deps.cljs$core$IFn$_invoke$arity$6(bound_vars, ana_env, cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ast), deps, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(opts, cljs.core.cst$kw$macros_DASH_ns), check_uses_and_load_macros);
      } else {
        return check_uses_and_load_macros(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, null], null));
      }
    }
  } else {
    var G__9891 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, ast], null);
    return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__9891) : cb.call(null, G__9891);
  }
};
cljs.js.ns_side_effects.cljs$lang$maxFixedArity = 6;
cljs.js.analyze_str_STAR_ = function cljs$js$analyze_str_STAR_(bound_vars, source, name, opts, cb) {
  var rdr = cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3(source, 1, name);
  var eof = {};
  var aenv = cljs.analyzer.empty_env();
  var the_ns = function() {
    var or__4311__auto__ = cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return cljs.core.cst$sym$cljs$user;
    }
  }();
  var bound_vars__$1 = function() {
    var G__9923 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([bound_vars, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$_STAR_cljs_DASH_ns_STAR_, the_ns], null)], 0));
    var G__9923__$1 = cljs.core.cst$kw$source_DASH_map.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__9923, cljs.core.cst$kw$_STAR_sm_DASH_data_STAR_, cljs.js.sm_data()) : G__9923;
    return G__9923__$1;
  }();
  return function(rdr, eof, aenv, the_ns, bound_vars__$1) {
    return function cljs$js$analyze_str_STAR__$_analyze_loop(last_ast, ns) {
      while (true) {
        var _STAR_compiler_STAR_9936 = cljs.env._STAR_compiler_STAR_;
        var _STAR_cljs_ns_STAR_9937 = cljs.analyzer._STAR_cljs_ns_STAR_;
        var _STAR_ns_STAR_9938 = cljs.core._STAR_ns_STAR_;
        var _STAR_passes_STAR_9939 = cljs.analyzer._STAR_passes_STAR_;
        var _STAR_data_readers_STAR_9940 = cljs.tools.reader._STAR_data_readers_STAR_;
        var _STAR_source_map_data_STAR_9941 = cljs.compiler._STAR_source_map_data_STAR_;
        cljs.env._STAR_compiler_STAR_ = cljs.core.cst$kw$_STAR_compiler_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
        cljs.analyzer._STAR_cljs_ns_STAR_ = ns;
        cljs.core._STAR_ns_STAR_ = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(ns);
        cljs.analyzer._STAR_passes_STAR_ = cljs.core.cst$kw$_STAR_passes_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
        cljs.tools.reader._STAR_data_readers_STAR_ = cljs.core.cst$kw$_STAR_data_DASH_readers_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
        cljs.compiler._STAR_source_map_data_STAR_ = cljs.core.cst$kw$_STAR_sm_DASH_data_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
        try {
          var res = function() {
            try {
              return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$eof, eof, cljs.core.cst$kw$read_DASH_cond, cljs.core.cst$kw$allow, cljs.core.cst$kw$features, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$cljs, null], null), null)], null), rdr)], null);
            } catch (e9942) {
              var cause = e9942;
              return cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(aenv, [cljs.core.str("Could not analyze "), cljs.core.str(name)].join(""), cause));
            }
          }();
          if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res)) {
            return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res) : cb.call(null, res);
          } else {
            var form = cljs.core.cst$kw$value.cljs$core$IFn$_invoke$arity$1(res);
            if (!(eof === form)) {
              var aenv__$1 = function() {
                var G__9943 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(aenv, cljs.core.cst$kw$ns, cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));
                var G__9943__$1 = cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__9943, cljs.core.cst$kw$context, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(opts)) : G__9943;
                var G__9943__$2 = cljs.core.cst$kw$def_DASH_emits_DASH_var.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__9943__$1, cljs.core.cst$kw$def_DASH_emits_DASH_var, true) : G__9943__$1;
                return G__9943__$2;
              }();
              var res__$1 = function() {
                try {
                  return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(aenv__$1, form, null, opts)], null);
                } catch (e9944) {
                  var cause = e9944;
                  return cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(aenv__$1, [cljs.core.str("Could not analyze "), cljs.core.str(name)].join(""), cause));
                }
              }();
              if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res__$1)) {
                return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res__$1) : cb.call(null, res__$1);
              } else {
                var ast = cljs.core.cst$kw$value.cljs$core$IFn$_invoke$arity$1(res__$1);
                if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$ns, cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(ast))) {
                  return cljs.js.ns_side_effects.cljs$core$IFn$_invoke$arity$5(bound_vars__$1, aenv__$1, ast, opts, function(last_ast, ns, ast, aenv__$1, res__$1, form, res, _STAR_compiler_STAR_9936, _STAR_cljs_ns_STAR_9937, _STAR_ns_STAR_9938, _STAR_passes_STAR_9939, _STAR_data_readers_STAR_9940, _STAR_source_map_data_STAR_9941, rdr, eof, aenv, the_ns, bound_vars__$1) {
                    return function(res__$2) {
                      if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res__$2)) {
                        return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res__$2) : cb.call(null, res__$2);
                      } else {
                        return cljs$js$analyze_str_STAR__$_analyze_loop(ast, cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ast));
                      }
                    };
                  }(last_ast, ns, ast, aenv__$1, res__$1, form, res, _STAR_compiler_STAR_9936, _STAR_cljs_ns_STAR_9937, _STAR_ns_STAR_9938, _STAR_passes_STAR_9939, _STAR_data_readers_STAR_9940, _STAR_source_map_data_STAR_9941, rdr, eof, aenv, the_ns, bound_vars__$1));
                } else {
                  var G__9946 = ast;
                  var G__9947 = ns;
                  last_ast = G__9946;
                  ns = G__9947;
                  continue;
                }
              }
            } else {
              var G__9945 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, last_ast], null);
              return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__9945) : cb.call(null, G__9945);
            }
          }
        } finally {
          cljs.compiler._STAR_source_map_data_STAR_ = _STAR_source_map_data_STAR_9941;
          cljs.tools.reader._STAR_data_readers_STAR_ = _STAR_data_readers_STAR_9940;
          cljs.analyzer._STAR_passes_STAR_ = _STAR_passes_STAR_9939;
          cljs.core._STAR_ns_STAR_ = _STAR_ns_STAR_9938;
          cljs.analyzer._STAR_cljs_ns_STAR_ = _STAR_cljs_ns_STAR_9937;
          cljs.env._STAR_compiler_STAR_ = _STAR_compiler_STAR_9936;
        }
        break;
      }
    };
  }(rdr, eof, aenv, the_ns, bound_vars__$1).call(null, null, the_ns);
};
cljs.js.analyze_str = function cljs$js$analyze_str() {
  var args9948 = [];
  var len__5350__auto___9951 = arguments.length;
  var i__5351__auto___9952 = 0;
  while (true) {
    if (i__5351__auto___9952 < len__5350__auto___9951) {
      args9948.push(arguments[i__5351__auto___9952]);
      var G__9953 = i__5351__auto___9952 + 1;
      i__5351__auto___9952 = G__9953;
      continue;
    } else {
    }
    break;
  }
  var G__9950 = args9948.length;
  switch(G__9950) {
    case 3:
      return cljs.js.analyze_str.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.js.analyze_str.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.js.analyze_str.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9948.length)].join(""));;
  }
};
cljs.js.analyze_str.cljs$core$IFn$_invoke$arity$3 = function(state, source, cb) {
  return cljs.js.analyze_str.cljs$core$IFn$_invoke$arity$4(state, source, null, cb);
};
cljs.js.analyze_str.cljs$core$IFn$_invoke$arity$4 = function(state, source, name, cb) {
  return cljs.js.analyze_str.cljs$core$IFn$_invoke$arity$5(state, source, name, null, cb);
};
cljs.js.analyze_str.cljs$core$IFn$_invoke$arity$5 = function(state, source, name, opts, cb) {
  if (cljs.js.atom_QMARK_(state)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$atom_QMARK_, cljs.core.cst$sym$state)], 0)))].join(""));
  }
  if (typeof source === "string") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$string_QMARK_, cljs.core.cst$sym$source)], 0)))].join(""));
  }
  if (cljs.js.valid_name_QMARK_(name)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$valid_DASH_name_QMARK_, cljs.core.cst$sym$name)], 0)))].join(""));
  }
  if (cljs.js.valid_opts_QMARK_(opts)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$valid_DASH_opts_QMARK_, cljs.core.cst$sym$opts)], 0)))].join(""));
  }
  if (cljs.core.fn_QMARK_(cb)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$fn_QMARK_, cljs.core.cst$sym$cb)], 0)))].join(""));
  }
  return cljs.js.analyze_str_STAR_(new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$_STAR_compiler_STAR_, state, cljs.core.cst$kw$_STAR_data_DASH_readers_STAR_, cljs.tagged_literals._STAR_cljs_data_readers_STAR_, cljs.core.cst$kw$_STAR_passes_STAR_, function() {
    var or__4311__auto__ = cljs.core.cst$kw$passes.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return cljs.analyzer._STAR_passes_STAR_;
    }
  }(), cljs.core.cst$kw$_STAR_analyze_DASH_deps_STAR_, function() {
    var or__4311__auto__ = cljs.core.cst$kw$analyze_DASH_deps.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return true;
    }
  }(), cljs.core.cst$kw$_STAR_load_DASH_macros_STAR_, function() {
    var or__4311__auto__ = cljs.core.cst$kw$load_DASH_macros.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return true;
    }
  }(), cljs.core.cst$kw$_STAR_load_DASH_fn_STAR_, function() {
    var or__4311__auto__ = cljs.core.cst$kw$load.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return cljs.js._STAR_load_fn_STAR_;
    }
  }(), cljs.core.cst$kw$_STAR_eval_DASH_fn_STAR_, function() {
    var or__4311__auto__ = cljs.core.cst$kw$eval.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return cljs.js._STAR_eval_fn_STAR_;
    }
  }()], null), source, name, opts, cb);
};
cljs.js.analyze_str.cljs$lang$maxFixedArity = 5;
cljs.js.eval_STAR_ = function cljs$js$eval_STAR_(bound_vars, form, opts, cb) {
  var the_ns = function() {
    var or__4311__auto__ = cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return cljs.core.cst$sym$cljs$user;
    }
  }();
  var bound_vars__$1 = function() {
    var G__9968 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([bound_vars, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$_STAR_cljs_DASH_ns_STAR_, the_ns], null)], 0));
    var G__9968__$1 = cljs.core.cst$kw$source_DASH_map.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__9968, cljs.core.cst$kw$_STAR_sm_DASH_data_STAR_, cljs.js.sm_data()) : G__9968;
    return G__9968__$1;
  }();
  var _STAR_compiler_STAR_9969 = cljs.env._STAR_compiler_STAR_;
  var _STAR_eval_fn_STAR_9970 = cljs.js._STAR_eval_fn_STAR_;
  var _STAR_cljs_ns_STAR_9971 = cljs.analyzer._STAR_cljs_ns_STAR_;
  var _STAR_ns_STAR_9972 = cljs.core._STAR_ns_STAR_;
  var _STAR_data_readers_STAR_9973 = cljs.tools.reader._STAR_data_readers_STAR_;
  var _STAR_source_map_data_STAR_9974 = cljs.compiler._STAR_source_map_data_STAR_;
  cljs.env._STAR_compiler_STAR_ = cljs.core.cst$kw$_STAR_compiler_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
  cljs.js._STAR_eval_fn_STAR_ = cljs.core.cst$kw$_STAR_eval_DASH_fn_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
  cljs.analyzer._STAR_cljs_ns_STAR_ = cljs.core.cst$kw$_STAR_cljs_DASH_ns_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
  cljs.core._STAR_ns_STAR_ = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$_STAR_cljs_DASH_ns_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1));
  cljs.tools.reader._STAR_data_readers_STAR_ = cljs.core.cst$kw$_STAR_data_DASH_readers_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
  cljs.compiler._STAR_source_map_data_STAR_ = cljs.core.cst$kw$_STAR_sm_DASH_data_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
  try {
    var aenv = cljs.analyzer.empty_env();
    var aenv__$1 = function() {
      var G__9975 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(aenv, cljs.core.cst$kw$ns, cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));
      var G__9975__$1 = cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__9975, cljs.core.cst$kw$context, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(opts)) : G__9975;
      var G__9975__$2 = cljs.core.cst$kw$def_DASH_emits_DASH_var.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__9975__$1, cljs.core.cst$kw$def_DASH_emits_DASH_var, true) : G__9975__$1;
      return G__9975__$2;
    }();
    var res = function() {
      try {
        return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(aenv__$1, form, null, opts)], null);
      } catch (e9976) {
        var cause = e9976;
        return cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(aenv__$1, [cljs.core.str("Could not eval "), cljs.core.str(form)].join(""), cause));
      }
    }();
    if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res)) {
      return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res) : cb.call(null, res);
    } else {
      var ast = cljs.core.cst$kw$value.cljs$core$IFn$_invoke$arity$1(res);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$ns, cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(ast))) {
        return cljs.js.ns_side_effects.cljs$core$IFn$_invoke$arity$6(true, bound_vars__$1, aenv__$1, ast, opts, function(ast, aenv, aenv__$1, res, _STAR_compiler_STAR_9969, _STAR_eval_fn_STAR_9970, _STAR_cljs_ns_STAR_9971, _STAR_ns_STAR_9972, _STAR_data_readers_STAR_9973, _STAR_source_map_data_STAR_9974, the_ns, bound_vars__$1) {
          return function(res__$1) {
            if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res__$1)) {
              return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res__$1) : cb.call(null, res__$1);
            } else {
              var src = [cljs.core.str('goog.provide("'), cljs.core.str(cljs.core.munge(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ast))), cljs.core.str('")')].join("");
              var G__9977 = cljs.js._STAR_eval_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.js._STAR_eval_fn_STAR_.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$source, src], null)) : cljs.js._STAR_eval_fn_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$source, src], null));
              return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__9977) : cb.call(null, G__9977);
            }
          };
        }(ast, aenv, aenv__$1, res, _STAR_compiler_STAR_9969, _STAR_eval_fn_STAR_9970, _STAR_cljs_ns_STAR_9971, _STAR_ns_STAR_9972, _STAR_data_readers_STAR_9973, _STAR_source_map_data_STAR_9974, the_ns, bound_vars__$1));
      } else {
        var src = function() {
          var sb__5266__auto__ = new goog.string.StringBuffer;
          var _STAR_print_newline_STAR_9978_9981 = cljs.core._STAR_print_newline_STAR_;
          var _STAR_print_fn_STAR_9979_9982 = cljs.core._STAR_print_fn_STAR_;
          cljs.core._STAR_print_newline_STAR_ = true;
          cljs.core._STAR_print_fn_STAR_ = function(_STAR_print_newline_STAR_9978_9981, _STAR_print_fn_STAR_9979_9982, sb__5266__auto__, ast, aenv, aenv__$1, res, _STAR_compiler_STAR_9969, _STAR_eval_fn_STAR_9970, _STAR_cljs_ns_STAR_9971, _STAR_ns_STAR_9972, _STAR_data_readers_STAR_9973, _STAR_source_map_data_STAR_9974, the_ns, bound_vars__$1) {
            return function(x__5267__auto__) {
              return sb__5266__auto__.append(x__5267__auto__);
            };
          }(_STAR_print_newline_STAR_9978_9981, _STAR_print_fn_STAR_9979_9982, sb__5266__auto__, ast, aenv, aenv__$1, res, _STAR_compiler_STAR_9969, _STAR_eval_fn_STAR_9970, _STAR_cljs_ns_STAR_9971, _STAR_ns_STAR_9972, _STAR_data_readers_STAR_9973, _STAR_source_map_data_STAR_9974, the_ns, bound_vars__$1);
          try {
            cljs.compiler.emit(ast);
          } finally {
            cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_9979_9982;
            cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_9978_9981;
          }
          return [cljs.core.str(sb__5266__auto__)].join("");
        }();
        var G__9980 = cljs.js._STAR_eval_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.js._STAR_eval_fn_STAR_.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$source, src], null)) : cljs.js._STAR_eval_fn_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$source, src], null));
        return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__9980) : cb.call(null, G__9980);
      }
    }
  } finally {
    cljs.compiler._STAR_source_map_data_STAR_ = _STAR_source_map_data_STAR_9974;
    cljs.tools.reader._STAR_data_readers_STAR_ = _STAR_data_readers_STAR_9973;
    cljs.core._STAR_ns_STAR_ = _STAR_ns_STAR_9972;
    cljs.analyzer._STAR_cljs_ns_STAR_ = _STAR_cljs_ns_STAR_9971;
    cljs.js._STAR_eval_fn_STAR_ = _STAR_eval_fn_STAR_9970;
    cljs.env._STAR_compiler_STAR_ = _STAR_compiler_STAR_9969;
  }
};
cljs.js.eval = function cljs$js$eval() {
  var args9983 = [];
  var len__5350__auto___9986 = arguments.length;
  var i__5351__auto___9987 = 0;
  while (true) {
    if (i__5351__auto___9987 < len__5350__auto___9986) {
      args9983.push(arguments[i__5351__auto___9987]);
      var G__9988 = i__5351__auto___9987 + 1;
      i__5351__auto___9987 = G__9988;
      continue;
    } else {
    }
    break;
  }
  var G__9985 = args9983.length;
  switch(G__9985) {
    case 3:
      return cljs.js.eval.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.js.eval.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9983.length)].join(""));;
  }
};
cljs.js.eval.cljs$core$IFn$_invoke$arity$3 = function(state, form, cb) {
  return cljs.js.eval.cljs$core$IFn$_invoke$arity$4(state, form, null, cb);
};
cljs.js.eval.cljs$core$IFn$_invoke$arity$4 = function(state, form, opts, cb) {
  return cljs.js.eval_STAR_(new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$_STAR_compiler_STAR_, state, cljs.core.cst$kw$_STAR_data_DASH_readers_STAR_, cljs.tagged_literals._STAR_cljs_data_readers_STAR_, cljs.core.cst$kw$_STAR_analyze_DASH_deps_STAR_, function() {
    var or__4311__auto__ = cljs.core.cst$kw$analyze_DASH_deps.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return true;
    }
  }(), cljs.core.cst$kw$_STAR_load_DASH_macros_STAR_, function() {
    var or__4311__auto__ = cljs.core.cst$kw$load_DASH_macros.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return true;
    }
  }(), cljs.core.cst$kw$_STAR_load_DASH_fn_STAR_, function() {
    var or__4311__auto__ = cljs.core.cst$kw$load.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return cljs.js._STAR_load_fn_STAR_;
    }
  }(), cljs.core.cst$kw$_STAR_eval_DASH_fn_STAR_, function() {
    var or__4311__auto__ = cljs.core.cst$kw$eval.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return cljs.js._STAR_eval_fn_STAR_;
    }
  }()], null), form, opts, cb);
};
cljs.js.eval.cljs$lang$maxFixedArity = 4;
cljs.js.compile_str_STAR_ = function cljs$js$compile_str_STAR_(bound_vars, source, name, opts, cb) {
  var rdr = cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3(source, 1, name);
  var eof = {};
  var aenv = cljs.analyzer.empty_env();
  var sb = new goog.string.StringBuffer;
  var the_ns = function() {
    var or__4311__auto__ = cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return cljs.core.cst$sym$cljs$user;
    }
  }();
  var bound_vars__$1 = function() {
    var G__10020 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([bound_vars, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$_STAR_cljs_DASH_ns_STAR_, the_ns], null)], 0));
    var G__10020__$1 = cljs.core.cst$kw$source_DASH_map.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__10020, cljs.core.cst$kw$_STAR_sm_DASH_data_STAR_, cljs.js.sm_data()) : G__10020;
    return G__10020__$1;
  }();
  return function(rdr, eof, aenv, sb, the_ns, bound_vars__$1) {
    return function cljs$js$compile_str_STAR__$_compile_loop(ns) {
      while (true) {
        var _STAR_compiler_STAR_10034 = cljs.env._STAR_compiler_STAR_;
        var _STAR_eval_fn_STAR_10035 = cljs.js._STAR_eval_fn_STAR_;
        var _STAR_cljs_ns_STAR_10036 = cljs.analyzer._STAR_cljs_ns_STAR_;
        var _STAR_ns_STAR_10037 = cljs.core._STAR_ns_STAR_;
        var _STAR_data_readers_STAR_10038 = cljs.tools.reader._STAR_data_readers_STAR_;
        var _STAR_source_map_data_STAR_10039 = cljs.compiler._STAR_source_map_data_STAR_;
        cljs.env._STAR_compiler_STAR_ = cljs.core.cst$kw$_STAR_compiler_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
        cljs.js._STAR_eval_fn_STAR_ = cljs.core.cst$kw$_STAR_eval_DASH_fn_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
        cljs.analyzer._STAR_cljs_ns_STAR_ = ns;
        cljs.core._STAR_ns_STAR_ = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(ns);
        cljs.tools.reader._STAR_data_readers_STAR_ = cljs.core.cst$kw$_STAR_data_DASH_readers_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
        cljs.compiler._STAR_source_map_data_STAR_ = cljs.core.cst$kw$_STAR_sm_DASH_data_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
        try {
          var res = function() {
            try {
              return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$eof, eof, cljs.core.cst$kw$read_DASH_cond, cljs.core.cst$kw$allow, cljs.core.cst$kw$features, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$cljs, null], null), null)], null), rdr)], null);
            } catch (e10040) {
              var cause = e10040;
              return cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(aenv, [cljs.core.str("Could not compile "), cljs.core.str(name)].join(""), cause));
            }
          }();
          if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res)) {
            return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res) : cb.call(null, res);
          } else {
            var form = cljs.core.cst$kw$value.cljs$core$IFn$_invoke$arity$1(res);
            if (!(eof === form)) {
              var aenv__$1 = function() {
                var G__10041 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(aenv, cljs.core.cst$kw$ns, cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));
                var G__10041__$1 = cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__10041, cljs.core.cst$kw$context, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(opts)) : G__10041;
                var G__10041__$2 = cljs.core.cst$kw$def_DASH_emits_DASH_var.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__10041__$1, cljs.core.cst$kw$def_DASH_emits_DASH_var, true) : G__10041__$1;
                return G__10041__$2;
              }();
              var ast = function() {
                try {
                  return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(aenv__$1, form, null, opts);
                } catch (e10042) {
                  var cause = e10042;
                  return cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(aenv__$1, [cljs.core.str("Could not compile "), cljs.core.str(name)].join(""), cause));
                }
              }();
              sb.append(function() {
                var sb__5266__auto__ = new goog.string.StringBuffer;
                var _STAR_print_newline_STAR_10043_10046 = cljs.core._STAR_print_newline_STAR_;
                var _STAR_print_fn_STAR_10044_10047 = cljs.core._STAR_print_fn_STAR_;
                cljs.core._STAR_print_newline_STAR_ = true;
                cljs.core._STAR_print_fn_STAR_ = function(ns, _STAR_print_newline_STAR_10043_10046, _STAR_print_fn_STAR_10044_10047, sb__5266__auto__, aenv__$1, ast, form, res, _STAR_compiler_STAR_10034, _STAR_eval_fn_STAR_10035, _STAR_cljs_ns_STAR_10036, _STAR_ns_STAR_10037, _STAR_data_readers_STAR_10038, _STAR_source_map_data_STAR_10039, rdr, eof, aenv, sb, the_ns, bound_vars__$1) {
                  return function(x__5267__auto__) {
                    return sb__5266__auto__.append(x__5267__auto__);
                  };
                }(ns, _STAR_print_newline_STAR_10043_10046, _STAR_print_fn_STAR_10044_10047, sb__5266__auto__, aenv__$1, ast, form, res, _STAR_compiler_STAR_10034, _STAR_eval_fn_STAR_10035, _STAR_cljs_ns_STAR_10036, _STAR_ns_STAR_10037, _STAR_data_readers_STAR_10038, _STAR_source_map_data_STAR_10039, rdr, eof, aenv, sb, the_ns, bound_vars__$1);
                try {
                  cljs.compiler.emit(ast);
                } finally {
                  cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_10044_10047;
                  cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_10043_10046;
                }
                return [cljs.core.str(sb__5266__auto__)].join("");
              }());
              if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$ns, cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(ast))) {
                return cljs.js.ns_side_effects.cljs$core$IFn$_invoke$arity$5(bound_vars__$1, aenv__$1, ast, opts, function(ns, aenv__$1, ast, form, res, _STAR_compiler_STAR_10034, _STAR_eval_fn_STAR_10035, _STAR_cljs_ns_STAR_10036, _STAR_ns_STAR_10037, _STAR_data_readers_STAR_10038, _STAR_source_map_data_STAR_10039, rdr, eof, aenv, sb, the_ns, bound_vars__$1) {
                  return function(res__$1) {
                    if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res__$1)) {
                      return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res__$1) : cb.call(null, res__$1);
                    } else {
                      return cljs$js$compile_str_STAR__$_compile_loop(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ast));
                    }
                  };
                }(ns, aenv__$1, ast, form, res, _STAR_compiler_STAR_10034, _STAR_eval_fn_STAR_10035, _STAR_cljs_ns_STAR_10036, _STAR_ns_STAR_10037, _STAR_data_readers_STAR_10038, _STAR_source_map_data_STAR_10039, rdr, eof, aenv, sb, the_ns, bound_vars__$1));
              } else {
                var G__10048 = ns;
                ns = G__10048;
                continue;
              }
            } else {
              if (cljs.core.cst$kw$source_DASH_map.cljs$core$IFn$_invoke$arity$1(opts)) {
                cljs.js.append_source_map(cljs.env._STAR_compiler_STAR_, name, source, sb, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.compiler._STAR_source_map_data_STAR_) : cljs.core.deref.call(null, cljs.compiler._STAR_source_map_data_STAR_), opts);
              } else {
              }
              var G__10045 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, sb.toString()], null);
              return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__10045) : cb.call(null, G__10045);
            }
          }
        } finally {
          cljs.compiler._STAR_source_map_data_STAR_ = _STAR_source_map_data_STAR_10039;
          cljs.tools.reader._STAR_data_readers_STAR_ = _STAR_data_readers_STAR_10038;
          cljs.core._STAR_ns_STAR_ = _STAR_ns_STAR_10037;
          cljs.analyzer._STAR_cljs_ns_STAR_ = _STAR_cljs_ns_STAR_10036;
          cljs.js._STAR_eval_fn_STAR_ = _STAR_eval_fn_STAR_10035;
          cljs.env._STAR_compiler_STAR_ = _STAR_compiler_STAR_10034;
        }
        break;
      }
    };
  }(rdr, eof, aenv, sb, the_ns, bound_vars__$1).call(null, the_ns);
};
cljs.js.compile_str = function cljs$js$compile_str() {
  var args10049 = [];
  var len__5350__auto___10052 = arguments.length;
  var i__5351__auto___10053 = 0;
  while (true) {
    if (i__5351__auto___10053 < len__5350__auto___10052) {
      args10049.push(arguments[i__5351__auto___10053]);
      var G__10054 = i__5351__auto___10053 + 1;
      i__5351__auto___10053 = G__10054;
      continue;
    } else {
    }
    break;
  }
  var G__10051 = args10049.length;
  switch(G__10051) {
    case 3:
      return cljs.js.compile_str.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.js.compile_str.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.js.compile_str.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10049.length)].join(""));;
  }
};
cljs.js.compile_str.cljs$core$IFn$_invoke$arity$3 = function(state, source, cb) {
  return cljs.js.compile_str.cljs$core$IFn$_invoke$arity$4(state, source, null, cb);
};
cljs.js.compile_str.cljs$core$IFn$_invoke$arity$4 = function(state, source, name, cb) {
  return cljs.js.compile_str.cljs$core$IFn$_invoke$arity$5(state, source, name, null, cb);
};
cljs.js.compile_str.cljs$core$IFn$_invoke$arity$5 = function(state, source, name, opts, cb) {
  if (cljs.js.atom_QMARK_(state)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$atom_QMARK_, cljs.core.cst$sym$state)], 0)))].join(""));
  }
  if (typeof source === "string") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$string_QMARK_, cljs.core.cst$sym$source)], 0)))].join(""));
  }
  if (cljs.js.valid_name_QMARK_(name)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$valid_DASH_name_QMARK_, cljs.core.cst$sym$name)], 0)))].join(""));
  }
  if (cljs.js.valid_opts_QMARK_(opts)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$valid_DASH_opts_QMARK_, cljs.core.cst$sym$opts)], 0)))].join(""));
  }
  if (cljs.core.fn_QMARK_(cb)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$fn_QMARK_, cljs.core.cst$sym$cb)], 0)))].join(""));
  }
  return cljs.js.compile_str_STAR_(new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$_STAR_compiler_STAR_, state, cljs.core.cst$kw$_STAR_data_DASH_readers_STAR_, cljs.tagged_literals._STAR_cljs_data_readers_STAR_, cljs.core.cst$kw$_STAR_analyze_DASH_deps_STAR_, function() {
    var or__4311__auto__ = cljs.core.cst$kw$analyze_DASH_deps.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return true;
    }
  }(), cljs.core.cst$kw$_STAR_load_DASH_macros_STAR_, function() {
    var or__4311__auto__ = cljs.core.cst$kw$load_DASH_macros.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return true;
    }
  }(), cljs.core.cst$kw$_STAR_load_DASH_fn_STAR_, function() {
    var or__4311__auto__ = cljs.core.cst$kw$load.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return cljs.js._STAR_load_fn_STAR_;
    }
  }(), cljs.core.cst$kw$_STAR_eval_DASH_fn_STAR_, function() {
    var or__4311__auto__ = cljs.core.cst$kw$eval.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return cljs.js._STAR_eval_fn_STAR_;
    }
  }(), cljs.core.cst$kw$_STAR_sm_DASH_data_STAR_, cljs.core.cst$kw$source_DASH_map.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.js.sm_data() : null], null), source, name, opts, cb);
};
cljs.js.compile_str.cljs$lang$maxFixedArity = 5;
cljs.js.eval_str_STAR_ = function cljs$js$eval_str_STAR_(bound_vars, source, name, opts, cb) {
  var rdr = cljs.tools.reader.reader_types.indexing_push_back_reader.cljs$core$IFn$_invoke$arity$3(source, 1, name);
  var eof = {};
  var aenv = cljs.analyzer.empty_env();
  var sb = new goog.string.StringBuffer;
  var the_ns = function() {
    var or__4311__auto__ = cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return cljs.core.cst$sym$cljs$user;
    }
  }();
  var bound_vars__$1 = function() {
    var G__10085 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([bound_vars, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$_STAR_cljs_DASH_ns_STAR_, the_ns], null)], 0));
    var G__10085__$1 = cljs.core.cst$kw$source_DASH_map.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__10085, cljs.core.cst$kw$_STAR_sm_DASH_data_STAR_, cljs.js.sm_data()) : G__10085;
    return G__10085__$1;
  }();
  if (cljs.core.cst$kw$verbose.cljs$core$IFn$_invoke$arity$1(opts)) {
    cljs.js.debug_prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Evaluating", name], 0));
  } else {
  }
  return function(rdr, eof, aenv, sb, the_ns, bound_vars__$1) {
    return function cljs$js$eval_str_STAR__$_compile_loop(ns) {
      while (true) {
        var _STAR_compiler_STAR_10098 = cljs.env._STAR_compiler_STAR_;
        var _STAR_eval_fn_STAR_10099 = cljs.js._STAR_eval_fn_STAR_;
        var _STAR_cljs_ns_STAR_10100 = cljs.analyzer._STAR_cljs_ns_STAR_;
        var _STAR_ns_STAR_10101 = cljs.core._STAR_ns_STAR_;
        var _STAR_data_readers_STAR_10102 = cljs.tools.reader._STAR_data_readers_STAR_;
        var _STAR_source_map_data_STAR_10103 = cljs.compiler._STAR_source_map_data_STAR_;
        cljs.env._STAR_compiler_STAR_ = cljs.core.cst$kw$_STAR_compiler_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
        cljs.js._STAR_eval_fn_STAR_ = cljs.core.cst$kw$_STAR_eval_DASH_fn_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
        cljs.analyzer._STAR_cljs_ns_STAR_ = ns;
        cljs.core._STAR_ns_STAR_ = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(ns);
        cljs.tools.reader._STAR_data_readers_STAR_ = cljs.core.cst$kw$_STAR_data_DASH_readers_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
        cljs.compiler._STAR_source_map_data_STAR_ = cljs.core.cst$kw$_STAR_sm_DASH_data_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1);
        try {
          var res = function() {
            try {
              return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, cljs.tools.reader.read.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$eof, eof, cljs.core.cst$kw$read_DASH_cond, cljs.core.cst$kw$allow, cljs.core.cst$kw$features, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$cljs, null], null), null)], null), rdr)], null);
            } catch (e10104) {
              var cause = e10104;
              return cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(aenv, [cljs.core.str("Could not eval "), cljs.core.str(name)].join(""), cause));
            }
          }();
          if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res)) {
            return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res) : cb.call(null, res);
          } else {
            var form = cljs.core.cst$kw$value.cljs$core$IFn$_invoke$arity$1(res);
            if (!(eof === form)) {
              var aenv__$1 = function() {
                var G__10105 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(aenv, cljs.core.cst$kw$ns, cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(ns));
                var G__10105__$1 = cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__10105, cljs.core.cst$kw$context, cljs.core.cst$kw$context.cljs$core$IFn$_invoke$arity$1(opts)) : G__10105;
                var G__10105__$2 = cljs.core.cst$kw$def_DASH_emits_DASH_var.cljs$core$IFn$_invoke$arity$1(opts) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__10105__$1, cljs.core.cst$kw$def_DASH_emits_DASH_var, true) : G__10105__$1;
                return G__10105__$2;
              }();
              var res__$1 = function() {
                try {
                  return new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(aenv__$1, form, null, opts)], null);
                } catch (e10106) {
                  var cause = e10106;
                  return cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(aenv__$1, [cljs.core.str("Could not eval "), cljs.core.str(name)].join(""), cause));
                }
              }();
              if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res__$1)) {
                return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res__$1) : cb.call(null, res__$1);
              } else {
                var ast = cljs.core.cst$kw$value.cljs$core$IFn$_invoke$arity$1(res__$1);
                var ns_SINGLEQUOTE_ = cljs.analyzer._STAR_cljs_ns_STAR_;
                if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$ns, cljs.core.cst$kw$op.cljs$core$IFn$_invoke$arity$1(ast))) {
                  sb.append([cljs.core.str('goog.provide("'), cljs.core.str(cljs.core.munge(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(ast))), cljs.core.str('");\n')].join(""));
                  return cljs.js.ns_side_effects.cljs$core$IFn$_invoke$arity$6(true, bound_vars__$1, aenv__$1, ast, opts, function(ns, ast, ns_SINGLEQUOTE_, aenv__$1, res__$1, form, res, _STAR_compiler_STAR_10098, _STAR_eval_fn_STAR_10099, _STAR_cljs_ns_STAR_10100, _STAR_ns_STAR_10101, _STAR_data_readers_STAR_10102, _STAR_source_map_data_STAR_10103, rdr, eof, aenv, sb, the_ns, bound_vars__$1) {
                    return function(res__$2) {
                      if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res__$2)) {
                        return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res__$2) : cb.call(null, res__$2);
                      } else {
                        return cljs$js$eval_str_STAR__$_compile_loop(ns_SINGLEQUOTE_);
                      }
                    };
                  }(ns, ast, ns_SINGLEQUOTE_, aenv__$1, res__$1, form, res, _STAR_compiler_STAR_10098, _STAR_eval_fn_STAR_10099, _STAR_cljs_ns_STAR_10100, _STAR_ns_STAR_10101, _STAR_data_readers_STAR_10102, _STAR_source_map_data_STAR_10103, rdr, eof, aenv, sb, the_ns, bound_vars__$1));
                } else {
                  sb.append(function() {
                    var sb__5266__auto__ = new goog.string.StringBuffer;
                    var _STAR_print_newline_STAR_10107_10110 = cljs.core._STAR_print_newline_STAR_;
                    var _STAR_print_fn_STAR_10108_10111 = cljs.core._STAR_print_fn_STAR_;
                    cljs.core._STAR_print_newline_STAR_ = true;
                    cljs.core._STAR_print_fn_STAR_ = function(ns, _STAR_print_newline_STAR_10107_10110, _STAR_print_fn_STAR_10108_10111, sb__5266__auto__, ast, ns_SINGLEQUOTE_, aenv__$1, res__$1, form, res, _STAR_compiler_STAR_10098, _STAR_eval_fn_STAR_10099, _STAR_cljs_ns_STAR_10100, _STAR_ns_STAR_10101, _STAR_data_readers_STAR_10102, _STAR_source_map_data_STAR_10103, rdr, eof, aenv, sb, the_ns, bound_vars__$1) {
                      return function(x__5267__auto__) {
                        return sb__5266__auto__.append(x__5267__auto__);
                      };
                    }(ns, _STAR_print_newline_STAR_10107_10110, _STAR_print_fn_STAR_10108_10111, sb__5266__auto__, ast, ns_SINGLEQUOTE_, aenv__$1, res__$1, form, res, _STAR_compiler_STAR_10098, _STAR_eval_fn_STAR_10099, _STAR_cljs_ns_STAR_10100, _STAR_ns_STAR_10101, _STAR_data_readers_STAR_10102, _STAR_source_map_data_STAR_10103, rdr, eof, aenv, sb, the_ns, bound_vars__$1);
                    try {
                      cljs.compiler.emit(ast);
                    } finally {
                      cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_10108_10111;
                      cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_10107_10110;
                    }
                    return [cljs.core.str(sb__5266__auto__)].join("");
                  }());
                  var G__10112 = ns_SINGLEQUOTE_;
                  ns = G__10112;
                  continue;
                }
              }
            } else {
              if (cljs.core.cst$kw$source_DASH_map.cljs$core$IFn$_invoke$arity$1(opts)) {
                cljs.js.append_source_map(cljs.env._STAR_compiler_STAR_, name, source, sb, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.compiler._STAR_source_map_data_STAR_) : cljs.core.deref.call(null, cljs.compiler._STAR_source_map_data_STAR_), opts);
              } else {
              }
              var js_source = sb.toString();
              var evalm = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$lang, cljs.core.cst$kw$clj, cljs.core.cst$kw$name, name, cljs.core.cst$kw$path, cljs.js.ns__GT_relpath(name), cljs.core.cst$kw$source, js_source, cljs.core.cst$kw$cache, cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cljs$analyzer_SLASH_namespaces, name], null))], null);
              var complete = function(ns, js_source, evalm, form, res, _STAR_compiler_STAR_10098, _STAR_eval_fn_STAR_10099, _STAR_cljs_ns_STAR_10100, _STAR_ns_STAR_10101, _STAR_data_readers_STAR_10102, _STAR_source_map_data_STAR_10103, rdr, eof, aenv, sb, the_ns, bound_vars__$1) {
                return function(res__$1) {
                  if (cljs.core.cst$kw$error.cljs$core$IFn$_invoke$arity$1(res__$1)) {
                    return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res__$1) : cb.call(null, res__$1);
                  } else {
                    if (cljs.core.cst$kw$verbose.cljs$core$IFn$_invoke$arity$1(opts)) {
                      cljs.js.debug_prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([js_source], 0));
                    } else {
                    }
                    var res__$2 = function() {
                      try {
                        return new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ns, ns, cljs.core.cst$kw$value, cljs.js._STAR_eval_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.js._STAR_eval_fn_STAR_.cljs$core$IFn$_invoke$arity$1(evalm) : cljs.js._STAR_eval_fn_STAR_.call(null, evalm)], null);
                      } catch (e10109) {
                        var cause = e10109;
                        return cljs.js.wrap_error(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(aenv, "ERROR", cause));
                      }
                    }();
                    return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(res__$2) : cb.call(null, res__$2);
                  }
                };
              }(ns, js_source, evalm, form, res, _STAR_compiler_STAR_10098, _STAR_eval_fn_STAR_10099, _STAR_cljs_ns_STAR_10100, _STAR_ns_STAR_10101, _STAR_data_readers_STAR_10102, _STAR_source_map_data_STAR_10103, rdr, eof, aenv, sb, the_ns, bound_vars__$1);
              var temp__4423__auto__ = cljs.core.cst$kw$cache_DASH_source.cljs$core$IFn$_invoke$arity$1(opts);
              if (temp__4423__auto__) {
                var f = temp__4423__auto__;
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(evalm, complete) : f.call(null, evalm, complete);
              } else {
                return complete(new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$value, null], null));
              }
            }
          }
        } finally {
          cljs.compiler._STAR_source_map_data_STAR_ = _STAR_source_map_data_STAR_10103;
          cljs.tools.reader._STAR_data_readers_STAR_ = _STAR_data_readers_STAR_10102;
          cljs.core._STAR_ns_STAR_ = _STAR_ns_STAR_10101;
          cljs.analyzer._STAR_cljs_ns_STAR_ = _STAR_cljs_ns_STAR_10100;
          cljs.js._STAR_eval_fn_STAR_ = _STAR_eval_fn_STAR_10099;
          cljs.env._STAR_compiler_STAR_ = _STAR_compiler_STAR_10098;
        }
        break;
      }
    };
  }(rdr, eof, aenv, sb, the_ns, bound_vars__$1).call(null, cljs.core.cst$kw$_STAR_cljs_DASH_ns_STAR_.cljs$core$IFn$_invoke$arity$1(bound_vars__$1));
};
cljs.js.eval_str = function cljs$js$eval_str() {
  var args10113 = [];
  var len__5350__auto___10116 = arguments.length;
  var i__5351__auto___10117 = 0;
  while (true) {
    if (i__5351__auto___10117 < len__5350__auto___10116) {
      args10113.push(arguments[i__5351__auto___10117]);
      var G__10118 = i__5351__auto___10117 + 1;
      i__5351__auto___10117 = G__10118;
      continue;
    } else {
    }
    break;
  }
  var G__10115 = args10113.length;
  switch(G__10115) {
    case 3:
      return cljs.js.eval_str.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.js.eval_str.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.js.eval_str.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10113.length)].join(""));;
  }
};
cljs.js.eval_str.cljs$core$IFn$_invoke$arity$3 = function(state, source, cb) {
  return cljs.js.eval_str.cljs$core$IFn$_invoke$arity$4(state, source, null, cb);
};
cljs.js.eval_str.cljs$core$IFn$_invoke$arity$4 = function(state, source, name, cb) {
  return cljs.js.eval_str.cljs$core$IFn$_invoke$arity$5(state, source, name, null, cb);
};
cljs.js.eval_str.cljs$core$IFn$_invoke$arity$5 = function(state, source, name, opts, cb) {
  if (cljs.js.atom_QMARK_(state)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$atom_QMARK_, cljs.core.cst$sym$state)], 0)))].join(""));
  }
  if (typeof source === "string") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$string_QMARK_, cljs.core.cst$sym$source)], 0)))].join(""));
  }
  if (cljs.js.valid_name_QMARK_(name)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$valid_DASH_name_QMARK_, cljs.core.cst$sym$name)], 0)))].join(""));
  }
  if (cljs.js.valid_opts_QMARK_(opts)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$valid_DASH_opts_QMARK_, cljs.core.cst$sym$opts)], 0)))].join(""));
  }
  if (cljs.core.fn_QMARK_(cb)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$fn_QMARK_, cljs.core.cst$sym$cb)], 0)))].join(""));
  }
  return cljs.js.eval_str_STAR_(new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$_STAR_compiler_STAR_, state, cljs.core.cst$kw$_STAR_data_DASH_readers_STAR_, cljs.tagged_literals._STAR_cljs_data_readers_STAR_, cljs.core.cst$kw$_STAR_analyze_DASH_deps_STAR_, function() {
    var or__4311__auto__ = cljs.core.cst$kw$analyze_DASH_deps.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return true;
    }
  }(), cljs.core.cst$kw$_STAR_load_DASH_macros_STAR_, function() {
    var or__4311__auto__ = cljs.core.cst$kw$load_DASH_macros.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return true;
    }
  }(), cljs.core.cst$kw$_STAR_load_DASH_fn_STAR_, function() {
    var or__4311__auto__ = cljs.core.cst$kw$load.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return cljs.js._STAR_load_fn_STAR_;
    }
  }(), cljs.core.cst$kw$_STAR_eval_DASH_fn_STAR_, function() {
    var or__4311__auto__ = cljs.core.cst$kw$eval.cljs$core$IFn$_invoke$arity$1(opts);
    if (or__4311__auto__) {
      return or__4311__auto__;
    } else {
      return cljs.js._STAR_eval_fn_STAR_;
    }
  }()], null), source, name, opts, cb);
};
cljs.js.eval_str.cljs$lang$maxFixedArity = 5;
goog.provide("com.cognitect.transit.util");
goog.require("goog.object");
goog.scope(function() {
  var util = com.cognitect.transit.util, gobject = goog.object;
  if (typeof Object.keys != "undefined") {
    util.objectKeys = function(obj) {
      return Object.keys(obj);
    };
  } else {
    util.objectKeys = function(obj) {
      return gobject.getKeys(obj);
    };
  }
  if (typeof Array.isArray != "undefined") {
    util.isArray = function(obj) {
      return Array.isArray(obj);
    };
  } else {
    util.isArray = function(obj) {
      return goog.typeOf(obj) === "array";
    };
  }
  util.chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
  util.randInt = function(ub) {
    return Math.round(Math.random() * ub);
  };
  util.randHex = function() {
    return util.randInt(15).toString(16);
  };
  util.randomUUID = function() {
    var rhex = (8 | 3 & util.randInt(14)).toString(16), ret = util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + "-" + util.randHex() + util.randHex() + util.randHex() + util.randHex() + "-" + "4" + util.randHex() + util.randHex() + util.randHex() + "-" + rhex + util.randHex() + util.randHex() + util.randHex() + "-" + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + 
    util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex() + util.randHex();
    return ret;
  };
  util.btoa = function(input) {
    if (typeof btoa != "undefined") {
      return btoa(input);
    } else {
      var str = String(input);
      for (var block, charCode, idx = 0, map = util.chars, output = "";str.charAt(idx | 0) || (map = "=", idx % 1);output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {
        charCode = str.charCodeAt(idx += 3 / 4);
        if (charCode > 255) {
          throw new Error("'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.");
        }
        block = block << 8 | charCode;
      }
      return output;
    }
  };
  util.atob = function(input) {
    if (typeof atob != "undefined") {
      return atob(input);
    } else {
      var str = String(input).replace(/=+$/, "");
      if (str.length % 4 == 1) {
        throw new Error("'atob' failed: The string to be decoded is not correctly encoded.");
      }
      for (var bc = 0, bs, buffer, idx = 0, output = "";buffer = str.charAt(idx++);~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {
        buffer = util.chars.indexOf(buffer);
      }
      return output;
    }
  };
  util.Uint8ToBase64 = function(u8Arr) {
    var CHUNK_SIZE = 32768, index = 0, length = u8Arr.length, result = "", slice = null;
    while (index < length) {
      slice = u8Arr.subarray(index, Math.min(index + CHUNK_SIZE, length));
      result += String.fromCharCode.apply(null, slice);
      index += CHUNK_SIZE;
    }
    return util.btoa(result);
  };
  util.Base64ToUint8 = function(base64) {
    var binary_string = util.atob(base64), len = binary_string.length, bytes = new Uint8Array(len);
    for (var i = 0;i < len;i++) {
      var ascii = binary_string.charCodeAt(i);
      bytes[i] = ascii;
    }
    return bytes;
  };
});
goog.provide("com.cognitect.transit.eq");
goog.require("com.cognitect.transit.util");
goog.scope(function() {
  var eq = com.cognitect.transit.eq, util = com.cognitect.transit.util;
  eq.hashCodeProperty = "transit$hashCode$";
  eq.hashCodeCounter = 1;
  eq.equals = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      if (x === y) {
        return true;
      } else {
        if (typeof x === "object") {
          if (util.isArray(x)) {
            if (util.isArray(y)) {
              if (x.length === y.length) {
                for (var i = 0;i < x.length;i++) {
                  if (!eq.equals(x[i], y[i])) {
                    return false;
                  }
                }
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          } else {
            if (x.com$cognitect$transit$equals) {
              return x.com$cognitect$transit$equals(y);
            } else {
              if (y != null && typeof y === "object") {
                if (y.com$cognitect$transit$equals) {
                  return y.com$cognitect$transit$equals(x);
                } else {
                  var xklen = 0, yklen = util.objectKeys(y).length;
                  for (var p in x) {
                    if (!x.hasOwnProperty(p)) {
                      continue;
                    }
                    xklen++;
                    if (!y.hasOwnProperty(p)) {
                      return false;
                    } else {
                      if (!eq.equals(x[p], y[p])) {
                        return false;
                      }
                    }
                  }
                  return xklen === yklen;
                }
              } else {
                return false;
              }
            }
          }
        } else {
          return false;
        }
      }
    }
  };
  eq.hashCombine = function(seed, hash) {
    return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
  };
  eq.stringCodeCache = {};
  eq.stringCodeCacheSize = 0;
  eq.STR_CACHE_MAX = 256;
  eq.hashString = function(str) {
    var cached = eq.stringCodeCache[str];
    if (cached != null) {
      return cached;
    }
    var code = 0;
    for (var i = 0;i < str.length;++i) {
      code = 31 * code + str.charCodeAt(i);
      code %= 4294967296;
    }
    eq.stringCodeCacheSize++;
    if (eq.stringCodeCacheSize >= eq.STR_CACHE_MAX) {
      eq.stringCodeCache = {};
      eq.stringCodeCacheSize = 1;
    }
    eq.stringCodeCache[str] = code;
    return code;
  };
  eq.hashMapLike = function(m) {
    var code = 0;
    if (m.forEach != null) {
      m.forEach(function(val, key, m) {
        code = (code + (eq.hashCode(key) ^ eq.hashCode(val))) % 4503599627370496;
      });
    } else {
      var keys = util.objectKeys(m);
      for (var i = 0;i < keys.length;i++) {
        var key = keys[i];
        var val = m[key];
        code = (code + (eq.hashCode(key) ^ eq.hashCode(val))) % 4503599627370496;
      }
    }
    return code;
  };
  eq.hashArrayLike = function(arr) {
    var code = 0;
    if (util.isArray(arr)) {
      for (var i = 0;i < arr.length;i++) {
        code = eq.hashCombine(code, eq.hashCode(arr[i]));
      }
    } else {
      if (arr.forEach) {
        arr.forEach(function(x, i) {
          code = eq.hashCombine(code, eq.hashCode(x));
        });
      }
    }
    return code;
  };
  eq.hashCode = function(x) {
    if (x == null) {
      return 0;
    } else {
      switch(typeof x) {
        case "number":
          return x;
          break;
        case "boolean":
          return x === true ? 1 : 0;
          break;
        case "string":
          return eq.hashString(x);
          break;
        case "function":
          var code = x[eq.hashCodeProperty];
          if (code) {
            return code;
          } else {
            code = eq.hashCodeCounter;
            if (typeof Object.defineProperty != "undefined") {
              Object.defineProperty(x, eq.hashCodeProperty, {value:code, enumerable:false});
            } else {
              x[eq.hashCodeProperty] = code;
            }
            eq.hashCodeCounter++;
            return code;
          }
          break;
        default:
          if (x instanceof Date) {
            return x.valueOf();
          } else {
            if (util.isArray(x)) {
              return eq.hashArrayLike(x);
            }
          }
          if (x.com$cognitect$transit$hashCode) {
            return x.com$cognitect$transit$hashCode();
          } else {
            return eq.hashMapLike(x);
          }
          break;
      }
    }
  };
  eq.extendToEQ = function(obj, opts) {
    obj.com$cognitect$transit$hashCode = opts["hashCode"];
    obj.com$cognitect$transit$equals = opts["equals"];
    return obj;
  };
});
goog.provide("com.cognitect.transit.types");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.eq");
goog.require("goog.math.Long");
goog.scope(function() {
  var types = com.cognitect.transit.types, util = com.cognitect.transit.util, eq = com.cognitect.transit.eq, Long = goog.math.Long;
  types.TaggedValue = function(tag, rep) {
    this.tag = tag;
    this.rep = rep;
    this.hashCode = -1;
  };
  types.TaggedValue.prototype.toString = function() {
    return "[TaggedValue: " + this.tag + ", " + this.rep + "]";
  };
  types.TaggedValue.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.TaggedValue.prototype["equiv"] = types.TaggedValue.prototype.equiv;
  types.TaggedValue.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof types.TaggedValue) {
      return this.tag === other.tag && eq.equals(this.rep, other.rep);
    } else {
      return false;
    }
  };
  types.TaggedValue.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCombine(eq.hashCode(this.tag), eq.hashCode(this.rep));
    }
    return this.hashCode;
  };
  types.taggedValue = function(tag, rep) {
    return new types.TaggedValue(tag, rep);
  };
  types.isTaggedValue = function(x) {
    return x instanceof types.TaggedValue;
  };
  types.nullValue = function() {
    return null;
  };
  types.boolValue = function(s) {
    return s === "t";
  };
  types.MAX_INT = Long.fromString("9007199254740992");
  types.MIN_INT = Long.fromString("-9007199254740992");
  types.intValue = function(s) {
    if (typeof s === "number") {
      return s;
    } else {
      if (s instanceof Long) {
        return s;
      } else {
        var n = Long.fromString(s, 10);
        if (n.greaterThan(types.MAX_INT) || n.lessThan(types.MIN_INT)) {
          return n;
        } else {
          return n.toNumber();
        }
      }
    }
  };
  Long.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  Long.prototype["equiv"] = Long.prototype.equiv;
  Long.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof Long && this.equals(other);
  };
  Long.prototype.com$cognitect$transit$hashCode = function() {
    return this.toInt();
  };
  types.isInteger = function(x) {
    if (x instanceof Long) {
      return true;
    } else {
      return typeof x === "number" && !isNaN(x) && !(x === Infinity) && parseFloat(x) === parseInt(x);
    }
  };
  types.floatValue = function(s) {
    return parseFloat(s);
  };
  types.bigInteger = function(s) {
    return types.taggedValue("n", s);
  };
  types.isBigInteger = function(x) {
    return x instanceof types.TaggedValue && x.tag === "n";
  };
  types.bigDecimalValue = function(s) {
    return types.taggedValue("f", s);
  };
  types.isBigDecimal = function(x) {
    return x instanceof types.TaggedValue && x.tag === "f";
  };
  types.charValue = function(s) {
    return s;
  };
  types.Keyword = function(name) {
    this.name = name;
    this.hashCode = -1;
  };
  types.Keyword.prototype.toString = function() {
    return ":" + this.name;
  };
  types.Keyword.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.Keyword.prototype["equiv"] = types.Keyword.prototype.equiv;
  types.Keyword.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.Keyword && this.name == other.name;
  };
  types.Keyword.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this.name);
    }
    return this.hashCode;
  };
  types.keyword = function(s) {
    return new types.Keyword(s);
  };
  types.isKeyword = function(x) {
    return x instanceof types.Keyword;
  };
  types.Symbol = function(name) {
    this.name = name;
    this.hashCode = -1;
  };
  types.Symbol.prototype.toString = function() {
    return "[Symbol: " + this.name + "]";
  };
  types.Symbol.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.Symbol.prototype["equiv"] = types.Symbol.prototype.equiv;
  types.Symbol.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.Symbol && this.name == other.name;
  };
  types.Symbol.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this.name);
    }
    return this.hashCode;
  };
  types.symbol = function(s) {
    return new types.Symbol(s);
  };
  types.isSymbol = function(x) {
    return x instanceof types.Symbol;
  };
  types.hexFor = function(aLong, sidx, eidx) {
    var ret = "", eidx = eidx || sidx + 1;
    for (var i = sidx, shift = (7 - i) * 8, mask = Long.fromInt(255).shiftLeft(shift);i < eidx;i++, shift -= 8, mask = mask.shiftRightUnsigned(8)) {
      var s = aLong.and(mask).shiftRightUnsigned(shift).toString(16);
      if (s.length == 1) {
        s = "0" + s;
      }
      ret += s;
    }
    return ret;
  };
  types.UUID = function(high, low) {
    this.high = high;
    this.low = low;
    this.hashCode = -1;
  };
  types.UUID.prototype.getLeastSignificantBits = function() {
    return this.low;
  };
  types.UUID.prototype.getMostSignificantBits = function() {
    return this.high;
  };
  types.UUID.prototype.toString = function(s) {
    var s = "", hi64 = this.high, lo64 = this.low;
    s += types.hexFor(hi64, 0, 4) + "-";
    s += types.hexFor(hi64, 4, 6) + "-";
    s += types.hexFor(hi64, 6, 8) + "-";
    s += types.hexFor(lo64, 0, 2) + "-";
    s += types.hexFor(lo64, 2, 8);
    return s;
  };
  types.UUID.prototype.equiv = function(other) {
    return eq.equals(this, other);
  };
  types.UUID.prototype["equiv"] = types.UUID.prototype.equiv;
  types.UUID.prototype.com$cognitect$transit$equals = function(other) {
    return other instanceof types.UUID && this.high.equals(other.high) && this.low.equals(other.low);
  };
  types.UUID.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashCode(this.toString());
    }
    return this.hashCode;
  };
  types.UUIDfromString = function uuidFromString(s) {
    var s = s.replace(/-/g, ""), hi64 = null, lo64 = null, hi32 = 0, lo32 = 0, off = 24, i = 0;
    for (hi32 = 0, i = 0, off = 24;i < 8;i += 2, off -= 8) {
      hi32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    for (lo32 = 0, i = 8, off = 24;i < 16;i += 2, off -= 8) {
      lo32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    hi64 = Long.fromBits(lo32, hi32);
    for (hi32 = 0, i = 16, off = 24;i < 24;i += 2, off -= 8) {
      hi32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    for (lo32 = 0, i = 24, off = 24;i < 32;i += 2, off -= 8) {
      lo32 |= parseInt(s.substring(i, i + 2), 16) << off;
    }
    lo64 = Long.fromBits(lo32, hi32);
    return new types.UUID(hi64, lo64);
  };
  types.uuid = function(s) {
    return types.UUIDfromString(s);
  };
  types.isUUID = function(x) {
    return x instanceof types.UUID;
  };
  types.date = function(s) {
    s = typeof s === "number" ? s : parseInt(s, 10);
    return new Date(s);
  };
  types.verboseDate = function(s) {
    return new Date(s);
  };
  Date.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof Date) {
      return this.valueOf() === other.valueOf();
    } else {
      return false;
    }
  };
  Date.prototype.com$cognitect$transit$hashCode = function() {
    return this.valueOf();
  };
  types.binary = function(str, decoder) {
    if ((!decoder || decoder.preferBuffers !== false) && typeof Buffer != "undefined") {
      return new Buffer(str, "base64");
    } else {
      if (typeof Uint8Array != "undefined") {
        return util.Base64ToUint8(str);
      } else {
        return types.taggedValue("b", str);
      }
    }
  };
  types.isBinary = function(x) {
    if (typeof Buffer != "undefined" && x instanceof Buffer) {
      return true;
    } else {
      if (typeof Uint8Array != "undefined" && x instanceof Uint8Array) {
        return true;
      } else {
        return x instanceof types.TaggedValue && x.tag === "b";
      }
    }
  };
  types.uri = function(s) {
    return types.taggedValue("r", s);
  };
  types.isURI = function(x) {
    return x instanceof types.TaggedValue && x.tag === "r";
  };
  types.KEYS = 0;
  types.VALUES = 1;
  types.ENTRIES = 2;
  types.TransitArrayMapIterator = function(entries, type) {
    this.entries = entries;
    this.type = type || types.KEYS;
    this.idx = 0;
  };
  types.TransitArrayMapIterator.prototype.next = function(map, type) {
    if (this.idx < this.entries.length) {
      var value = null;
      if (this.type === types.KEYS) {
        value = this.entries[this.idx];
      } else {
        if (this.type === types.VALUES) {
          value = this.entries[this.idx + 1];
        } else {
          value = [this.entries[this.idx], this.entries[this.idx + 1]];
        }
      }
      var ret = {"value":value, "done":false};
      this.idx += 2;
      return ret;
    } else {
      return {"value":null, "done":true};
    }
  };
  types.TransitArrayMapIterator.prototype["next"] = types.TransitArrayMapIterator.prototype.next;
  types.TransitMapIterator = function(map, type) {
    this.map = map;
    this.type = type || types.KEYS;
    this.keys = this.map.getKeys();
    this.idx = 0;
    this.bucket = null;
    this.bucketIdx = 0;
  };
  types.TransitMapIterator.prototype.next = function() {
    if (this.idx < this.map.size) {
      if (this.bucket == null || !(this.bucketIdx < this.bucket.length)) {
        this.bucket = this.map.map[this.keys[this.idx]];
        this.bucketIdx = 0;
      }
      var value = null;
      if (this.type === types.KEYS) {
        value = this.bucket[this.bucketIdx];
      } else {
        if (this.type === types.VALUES) {
          value = this.bucket[this.bucketIdx + 1];
        } else {
          value = [this.bucket[this.bucketIdx], this.bucket[this.bucketIdx + 1]];
        }
      }
      var ret = {"value":value, "done":false};
      this.idx++;
      this.bucketIdx += 2;
      return ret;
    } else {
      return {"value":null, "done":true};
    }
  };
  types.TransitMapIterator.prototype["next"] = types.TransitMapIterator.prototype.next;
  types.mapEquals = function(me, you) {
    if ((you instanceof types.TransitMap || you instanceof types.TransitArrayMap) && me.size === you.size) {
      for (var code in me.map) {
        var bucket = me.map[code];
        for (var j = 0;j < bucket.length;j += 2) {
          if (!eq.equals(bucket[j + 1], you.get(bucket[j]))) {
            return false;
          }
        }
      }
      return true;
    } else {
      if (you != null && typeof you === "object") {
        var ks = util.objectKeys(you), kslen = ks.length;
        if (me.size === kslen) {
          for (var i = 0;i < kslen;i++) {
            var k = ks[i];
            if (!me.has(k) || !eq.equals(you[k], me.get(k))) {
              return false;
            }
          }
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  };
  types.SMALL_ARRAY_MAP_THRESHOLD = 8;
  types.ARRAY_MAP_THRESHOLD = 32;
  types.ARRAY_MAP_ACCESS_THRESHOLD = 32;
  types.TransitArrayMap = function(entries) {
    this._entries = entries;
    this.backingMap = null;
    this.hashCode = -1;
    this.size = entries.length / 2;
    this.accesses = 0;
  };
  types.TransitArrayMap.prototype.toString = function() {
    return "[TransitArrayMap]";
  };
  types.TransitArrayMap.prototype.convert = function() {
    if (this.backingMap) {
      throw Error("Invalid operation, already converted");
    }
    if (this.size < types.SMALL_ARRAY_MAP_THRESHOLD) {
      return false;
    }
    this.accesses++;
    if (this.accesses > types.ARRAY_MAP_ACCESS_THRESHOLD) {
      this.backingMap = types.map(this._entries, false, true);
      this._entries = [];
      return true;
    } else {
      return false;
    }
  };
  types.TransitArrayMap.prototype.clear = function() {
    this.hashCode = -1;
    if (this.backingMap) {
      this.backingMap.clear();
      this.size = 0;
    } else {
      this._entries = [];
      this.size = 0;
    }
  };
  types.TransitArrayMap.prototype["clear"] = types.TransitArrayMap.prototype.clear;
  types.TransitArrayMap.prototype.keys = function() {
    if (this.backingMap) {
      return this.backingMap.keys();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.KEYS);
    }
  };
  types.TransitArrayMap.prototype["keys"] = types.TransitArrayMap.prototype.keys;
  types.TransitArrayMap.prototype.keySet = function() {
    if (this.backingMap) {
      return this.backingMap.keySet();
    } else {
      var ret = [];
      for (var i = 0, j = 0;j < this._entries.length;i++, j += 2) {
        ret[i] = this._entries[j];
      }
      return ret;
    }
  };
  types.TransitArrayMap.prototype["keySet"] = types.TransitArrayMap.prototype.keySet;
  types.TransitArrayMap.prototype.entries = function() {
    if (this.backingMap) {
      return this.backingMap.entries();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.ENTRIES);
    }
  };
  types.TransitArrayMap.prototype["entries"] = types.TransitArrayMap.prototype.entries;
  types.TransitArrayMap.prototype.values = function() {
    if (this.backingMap) {
      return this.backingMap.values();
    } else {
      return new types.TransitArrayMapIterator(this._entries, types.VALUES);
    }
  };
  types.TransitArrayMap.prototype["values"] = types.TransitArrayMap.prototype.values;
  types.TransitArrayMap.prototype.forEach = function(f) {
    if (this.backingMap) {
      this.backingMap.forEach(f);
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        f(this._entries[i + 1], this._entries[i]);
      }
    }
  };
  types.TransitArrayMap.prototype["forEach"] = types.TransitArrayMap.prototype.forEach;
  types.TransitArrayMap.prototype.get = function(k, notFound) {
    if (this.backingMap) {
      return this.backingMap.get(k);
    } else {
      if (this.convert()) {
        return this.get(k);
      } else {
        for (var i = 0;i < this._entries.length;i += 2) {
          if (eq.equals(this._entries[i], k)) {
            return this._entries[i + 1];
          }
        }
        return notFound;
      }
    }
  };
  types.TransitArrayMap.prototype["get"] = types.TransitArrayMap.prototype.get;
  types.TransitArrayMap.prototype.has = function(k) {
    if (this.backingMap) {
      return this.backingMap.has(k);
    } else {
      if (this.convert()) {
        return this.has(k);
      } else {
        for (var i = 0;i < this._entries.length;i += 2) {
          if (eq.equals(this._entries[i], k)) {
            return true;
          }
        }
        return false;
      }
    }
  };
  types.TransitArrayMap.prototype["has"] = types.TransitArrayMap.prototype.has;
  types.TransitArrayMap.prototype.set = function(k, v) {
    this.hashCode = -1;
    if (this.backingMap) {
      this.backingMap.set(k, v);
      this.size = this.backingMap.size;
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        if (eq.equals(this._entries[i], k)) {
          this._entries[i + 1] = v;
          return;
        }
      }
      this._entries.push(k);
      this._entries.push(v);
      this.size++;
      if (this.size > types.ARRAY_MAP_THRESHOLD) {
        this.backingMap = types.map(this._entries, false, true);
        this._entries = null;
      }
    }
  };
  types.TransitArrayMap.prototype["set"] = types.TransitArrayMap.prototype.set;
  types.TransitArrayMap.prototype["delete"] = function(k) {
    this.hashCode = -1;
    if (this.backingMap) {
      this.backingMap["delete"](k);
      this.size = this.backingMap.size;
    } else {
      for (var i = 0;i < this._entries.length;i += 2) {
        if (eq.equals(this._entries[i], k)) {
          this._entries.splice(i, 2);
          this.size--;
          return;
        }
      }
    }
  };
  types.TransitArrayMap.prototype.com$cognitect$transit$hashCode = function() {
    if (this.backingMap) {
      return this.backingMap.com$cognitect$transit$hashCode();
    } else {
      if (this.hashCode === -1) {
        this.hashCode = eq.hashMapLike(this);
      }
      return this.hashCode;
    }
  };
  types.TransitArrayMap.prototype.com$cognitect$transit$equals = function(other) {
    if (this.backingMap) {
      return types.mapEquals(this.backingMap, other);
    } else {
      return types.mapEquals(this, other);
    }
  };
  types.TransitMap = function(keys, map, size) {
    this.map = map || {};
    this._keys = keys || [];
    this.size = size || 0;
    this.hashCode = -1;
  };
  types.TransitMap.prototype.toString = function() {
    return "[TransitMap]";
  };
  types.TransitMap.prototype.clear = function() {
    this.hashCode = -1;
    this.map = {};
    this._keys = [];
    this.size = 0;
  };
  types.TransitMap.prototype["clear"] = types.TransitMap.prototype.clear;
  types.TransitMap.prototype.getKeys = function() {
    if (this._keys != null) {
      return this._keys;
    } else {
      return util.objectKeys(this.map);
    }
  };
  types.TransitMap.prototype["delete"] = function(k) {
    this.hashCode = -1;
    this._keys = null;
    var code = eq.hashCode(k), bucket = this.map[code];
    for (var i = 0;i < bucket.length;i += 2) {
      if (eq.equals(k, bucket[i])) {
        bucket.splice(i, 2);
        if (bucket.length === 0) {
          delete this.map[code];
        }
        this.size--;
        break;
      }
    }
  };
  types.TransitMap.prototype.entries = function() {
    return new types.TransitMapIterator(this, types.ENTRIES);
  };
  types.TransitMap.prototype["entries"] = types.TransitMap.prototype.entries;
  types.TransitMap.prototype.forEach = function(callback) {
    var ks = this.getKeys();
    for (var i = 0;i < ks.length;i++) {
      var bucket = this.map[ks[i]];
      for (var j = 0;j < bucket.length;j += 2) {
        callback(bucket[j + 1], bucket[j], this);
      }
    }
  };
  types.TransitMap.prototype["forEach"] = types.TransitMap.prototype.forEach;
  types.TransitMap.prototype.get = function(k, notFound) {
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket != null) {
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(k, bucket[i])) {
          return bucket[i + 1];
        }
      }
    } else {
      return notFound;
    }
  };
  types.TransitMap.prototype["get"] = types.TransitMap.prototype.get;
  types.TransitMap.prototype.has = function(k) {
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket != null) {
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(k, bucket[i])) {
          return true;
        }
      }
      return false;
    } else {
      return false;
    }
  };
  types.TransitMap.prototype["has"] = types.TransitMap.prototype.has;
  types.TransitMap.prototype.keys = function() {
    return new types.TransitMapIterator(this, types.KEYS);
  };
  types.TransitMap.prototype["keys"] = types.TransitMap.prototype.keys;
  types.TransitMap.prototype.keySet = function() {
    var keys = this.getKeys(), ret = [];
    for (var i = 0;i < keys.length;i++) {
      var bucket = this.map[keys[i]];
      for (var j = 0;j < bucket.length;j += 2) {
        ret.push(bucket[j]);
      }
    }
    return ret;
  };
  types.TransitMap.prototype["keySet"] = types.TransitMap.prototype.keySet;
  types.TransitMap.prototype.set = function(k, v) {
    this.hashCode = -1;
    var code = eq.hashCode(k), bucket = this.map[code];
    if (bucket == null) {
      if (this._keys) {
        this._keys.push(code);
      }
      this.map[code] = [k, v];
      this.size++;
    } else {
      var newEntry = true;
      for (var i = 0;i < bucket.length;i += 2) {
        if (eq.equals(v, bucket[i])) {
          newEntry = false;
          bucket[i] = v;
          break;
        }
      }
      if (newEntry) {
        bucket.push(k);
        bucket.push(v);
        this.size++;
      }
    }
  };
  types.TransitMap.prototype["set"] = types.TransitMap.prototype.set;
  types.TransitMap.prototype.values = function() {
    return new types.TransitMapIterator(this, types.VALUES);
  };
  types.TransitMap.prototype["values"] = types.TransitMap.prototype.values;
  types.TransitMap.prototype.com$cognitect$transit$hashCode = function() {
    if (this.hashCode === -1) {
      this.hashCode = eq.hashMapLike(this);
    }
    return this.hashCode;
  };
  types.TransitMap.prototype.com$cognitect$transit$equals = function(other) {
    return types.mapEquals(this, other);
  };
  types.map = function(arr, checkDups, hashMap) {
    arr = arr || [];
    checkDups = checkDups === false ? checkDups : true;
    hashMap = hashMap === true ? hashMap : false;
    if (!hashMap && arr.length <= types.ARRAY_MAP_THRESHOLD * 2) {
      if (checkDups) {
        var t = arr;
        arr = [];
        for (var i = 0;i < t.length;i += 2) {
          var seen = false;
          for (var j = 0;j < arr.length;j += 2) {
            if (eq.equals(arr[j], t[i])) {
              arr[j + 1] = t[i + 1];
              seen = true;
              break;
            }
          }
          if (!seen) {
            arr.push(t[i]);
            arr.push(t[i + 1]);
          }
        }
      }
      return new types.TransitArrayMap(arr);
    } else {
      var map = {}, keys = [], size = 0;
      for (var i = 0;i < arr.length;i += 2) {
        var code = eq.hashCode(arr[i]), bucket = map[code];
        if (bucket == null) {
          keys.push(code);
          map[code] = [arr[i], arr[i + 1]];
          size++;
        } else {
          var newEntry = true;
          for (var j = 0;j < bucket.length;j += 2) {
            if (eq.equals(bucket[j], arr[i])) {
              bucket[j + 1] = arr[i + 1];
              newEntry = false;
              break;
            }
          }
          if (newEntry) {
            bucket.push(arr[i]);
            bucket.push(arr[i + 1]);
            size++;
          }
        }
      }
      return new types.TransitMap(keys, map, size);
    }
  };
  types.isArrayMap = function(x) {
    return x instanceof types.TransitArrayMap;
  };
  types.isMap = function(x) {
    return x instanceof types.TransitArrayMap || x instanceof types.TransitMap;
  };
  types.TransitSet = function(map) {
    this.map = map;
    this.size = map.size;
  };
  types.TransitSet.prototype.toString = function() {
    return "[TransitSet]";
  };
  types.TransitSet.prototype.add = function(value) {
    this.map.set(value, value);
    this.size = this.map.size;
  };
  types.TransitSet.prototype["add"] = types.TransitSet.prototype.add;
  types.TransitSet.prototype.clear = function() {
    this.map = new types.TransitMap;
    this.size = 0;
  };
  types.TransitSet.prototype["clear"] = types.TransitSet.prototype.clear;
  types.TransitSet.prototype["delete"] = function(value) {
    this.map["delete"](value);
    this.size = this.map.size;
  };
  types.TransitSet.prototype.entries = function() {
    return this.map.entries();
  };
  types.TransitSet.prototype["entries"] = types.TransitSet.prototype.entries;
  types.TransitSet.prototype.forEach = function(iterator, thisArg) {
    var self = this;
    this.map.forEach(function(v, k, m) {
      iterator(k, self);
    });
  };
  types.TransitSet.prototype["forEach"] = types.TransitSet.prototype.forEach;
  types.TransitSet.prototype.has = function(value) {
    return this.map.has(value);
  };
  types.TransitSet.prototype["has"] = types.TransitSet.prototype.has;
  types.TransitSet.prototype.keys = function() {
    return this.map.keys();
  };
  types.TransitSet.prototype["keys"] = types.TransitSet.prototype.keys;
  types.TransitSet.prototype.keySet = function() {
    return this.map.keySet();
  };
  types.TransitSet.prototype["keySet"] = types.TransitSet.prototype.keySet;
  types.TransitSet.prototype.values = function() {
    return this.map.values();
  };
  types.TransitSet.prototype["values"] = types.TransitSet.prototype.values;
  types.TransitSet.prototype.com$cognitect$transit$equals = function(other) {
    if (other instanceof types.TransitSet) {
      if (this.size === other.size) {
        return eq.equals(this.map, other.map);
      }
    } else {
      return false;
    }
  };
  types.TransitSet.prototype.com$cognitect$transit$hashCode = function(other) {
    return eq.hashCode(this.map);
  };
  types.set = function(arr) {
    arr = arr || [];
    var map = {}, keys = [], size = 0;
    for (var i = 0;i < arr.length;i++) {
      var code = eq.hashCode(arr[i]), vals = map[code];
      if (vals == null) {
        keys.push(code);
        map[code] = [arr[i], arr[i]];
        size++;
      } else {
        var newEntry = true;
        for (var j = 0;j < vals.length;j += 2) {
          if (eq.equals(vals[j], arr[i])) {
            newEntry = false;
            break;
          }
        }
        if (newEntry) {
          vals.push(arr[i]);
          vals.push(arr[i]);
          size++;
        }
      }
    }
    return new types.TransitSet(new types.TransitMap(keys, map, size));
  };
  types.isSet = function(x) {
    return x instanceof types.TransitSet;
  };
  types.quoted = function(obj) {
    return types.taggedValue("'", obj);
  };
  types.isQuoted = function(x) {
    return x instanceof types.TaggedValue && x.tag === "'";
  };
  types.list = function(xs) {
    return types.taggedValue("list", xs);
  };
  types.isList = function(x) {
    return x instanceof types.List && x.tag === "list";
  };
  types.link = function(rep) {
    return types.taggedValue("link", rep);
  };
  types.isLink = function(x) {
    return x instanceof types.TaggedValue && x.tag === "link";
  };
  types.specialDouble = function(v) {
    switch(v) {
      case "-INF":
        return -Infinity;
      case "INF":
        return Infinity;
      case "NaN":
        return NaN;
      default:
        throw new Error("Invalid special double value " + v);break;
    }
  };
});
goog.provide("com.cognitect.transit.delimiters");
goog.scope(function() {
  var delimiters = com.cognitect.transit.delimiters;
  delimiters.ESC = "~";
  delimiters.TAG = "#";
  delimiters.SUB = "^";
  delimiters.RES = "`";
  delimiters.ESC_TAG = "~#";
});
goog.provide("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.delimiters");
goog.scope(function() {
  var caching = com.cognitect.transit.caching, d = com.cognitect.transit.delimiters;
  caching.MIN_SIZE_CACHEABLE = 3;
  caching.BASE_CHAR_IDX = 48;
  caching.CACHE_CODE_DIGITS = 44;
  caching.MAX_CACHE_ENTRIES = caching.CACHE_CODE_DIGITS * caching.CACHE_CODE_DIGITS;
  caching.MAX_CACHE_SIZE = 4096;
  caching.isCacheable = function(string, asMapKey) {
    if (string.length > caching.MIN_SIZE_CACHEABLE) {
      if (asMapKey) {
        return true;
      } else {
        var c0 = string.charAt(0), c1 = string.charAt(1);
        if (c0 === d.ESC) {
          return c1 === ":" || c1 === "$" || c1 === "#";
        } else {
          return false;
        }
      }
    } else {
      return false;
    }
  };
  caching.idxToCode = function(idx) {
    var hi = Math.floor(idx / caching.CACHE_CODE_DIGITS), lo = idx % caching.CACHE_CODE_DIGITS, loc = String.fromCharCode(lo + caching.BASE_CHAR_IDX);
    if (hi === 0) {
      return d.SUB + loc;
    } else {
      return d.SUB + String.fromCharCode(hi + caching.BASE_CHAR_IDX) + loc;
    }
  };
  caching.WriteCache = function() {
    this.idx = 0;
    this.gen = 0;
    this.cacheSize = 0;
    this.cache = {};
  };
  caching.WriteCache.prototype.write = function(string, asMapKey) {
    if (caching.isCacheable(string, asMapKey)) {
      if (this.cacheSize === caching.MAX_CACHE_SIZE) {
        this.clear();
        this.gen = 0;
        this.cache = {};
      } else {
        if (this.idx === caching.MAX_CACHE_ENTRIES) {
          this.clear();
        }
      }
      var entry = this.cache[string];
      if (entry == null) {
        this.cache[string] = [caching.idxToCode(this.idx), this.gen];
        this.idx++;
        return string;
      } else {
        if (entry[1] != this.gen) {
          entry[1] = this.gen;
          entry[0] = caching.idxToCode(this.idx);
          this.idx++;
          return string;
        } else {
          return entry[0];
        }
      }
    } else {
      return string;
    }
  };
  caching.WriteCache.prototype.clear = function() {
    this.idx = 0;
    this.gen++;
  };
  caching.writeCache = function() {
    return new caching.WriteCache;
  };
  caching.isCacheCode = function(string) {
    return string.charAt(0) === d.SUB && string.charAt(1) !== " ";
  };
  caching.codeToIdx = function(code) {
    if (code.length === 2) {
      return code.charCodeAt(1) - caching.BASE_CHAR_IDX;
    } else {
      var hi = (code.charCodeAt(1) - caching.BASE_CHAR_IDX) * caching.CACHE_CODE_DIGITS, lo = code.charCodeAt(2) - caching.BASE_CHAR_IDX;
      return hi + lo;
    }
  };
  caching.ReadCache = function() {
    this.idx = 0;
    this.cache = [];
  };
  caching.ReadCache.prototype.write = function(obj, asMapKey) {
    if (this.idx == caching.MAX_CACHE_ENTRIES) {
      this.idx = 0;
    }
    this.cache[this.idx] = obj;
    this.idx++;
    return obj;
  };
  caching.ReadCache.prototype.read = function(string, asMapKey) {
    return this.cache[caching.codeToIdx(string)];
  };
  caching.ReadCache.prototype.clear = function() {
    this.idx = 0;
  };
  caching.readCache = function() {
    return new caching.ReadCache;
  };
});
goog.provide("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.delimiters");
goog.require("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.types");
goog.scope(function() {
  var decoder = com.cognitect.transit.impl.decoder, util = com.cognitect.transit.util, d = com.cognitect.transit.delimiters, caching = com.cognitect.transit.caching, types = com.cognitect.transit.types;
  decoder.Tag = function(s) {
    this.str = s;
  };
  decoder.tag = function(s) {
    return new decoder.Tag(s);
  };
  decoder.isTag = function(x) {
    return x && x instanceof decoder.Tag;
  };
  decoder.isGroundHandler = function(handler) {
    switch(handler) {
      case "_":
      ;
      case "s":
      ;
      case "?":
      ;
      case "i":
      ;
      case "d":
      ;
      case "b":
      ;
      case "'":
      ;
      case "array":
      ;
      case "map":
        return true;
    }
    return false;
  };
  decoder.Decoder = function(options) {
    this.options = options || {};
    this.handlers = {};
    for (var h in this.defaults.handlers) {
      this.handlers[h] = this.defaults.handlers[h];
    }
    for (var h in this.options["handlers"]) {
      if (decoder.isGroundHandler(h)) {
        throw new Error('Cannot override handler for ground type "' + h + '"');
      }
      this.handlers[h] = this.options["handlers"][h];
    }
    this.preferStrings = this.options["preferStrings"] != null ? this.options["preferStrings"] : this.defaults.preferStrings;
    this.preferBuffers = this.options["preferBuffers"] != null ? this.options["preferBuffers"] : this.defaults.preferBuffers;
    this.defaultHandler = this.options["defaultHandler"] || this.defaults.defaultHandler;
    this.mapBuilder = this.options["mapBuilder"];
    this.arrayBuilder = this.options["arrayBuilder"];
  };
  decoder.Decoder.prototype.defaults = {handlers:{"_":function(v, d) {
    return types.nullValue();
  }, "?":function(v, d) {
    return types.boolValue(v);
  }, "b":function(v, d) {
    return types.binary(v, d);
  }, "i":function(v, d) {
    return types.intValue(v);
  }, "n":function(v, d) {
    return types.bigInteger(v);
  }, "d":function(v, d) {
    return types.floatValue(v);
  }, "f":function(v, d) {
    return types.bigDecimalValue(v);
  }, "c":function(v, d) {
    return types.charValue(v);
  }, ":":function(v, d) {
    return types.keyword(v);
  }, "$":function(v, d) {
    return types.symbol(v);
  }, "r":function(v, d) {
    return types.uri(v);
  }, "z":function(v, d) {
    return types.specialDouble(v);
  }, "'":function(v, d) {
    return v;
  }, "m":function(v, d) {
    return types.date(v);
  }, "t":function(v, d) {
    return types.verboseDate(v);
  }, "u":function(v, d) {
    return types.uuid(v);
  }, "set":function(v, d) {
    return types.set(v);
  }, "list":function(v, d) {
    return types.list(v);
  }, "link":function(v, d) {
    return types.link(v);
  }, "cmap":function(v, d) {
    return types.map(v, false);
  }}, defaultHandler:function(c, val) {
    return types.taggedValue(c, val);
  }, preferStrings:true, preferBuffers:true};
  decoder.Decoder.prototype.decode = function(node, cache, asMapKey, tagValue) {
    if (node == null) {
      return null;
    }
    var t = typeof node;
    switch(t) {
      case "string":
        return this.decodeString(node, cache, asMapKey, tagValue);
        break;
      case "object":
        if (util.isArray(node)) {
          if (node[0] === "^ ") {
            return this.decodeArrayHash(node, cache, asMapKey, tagValue);
          } else {
            return this.decodeArray(node, cache, asMapKey, tagValue);
          }
        } else {
          return this.decodeHash(node, cache, asMapKey, tagValue);
        }
        break;
    }
    return node;
  };
  decoder.Decoder.prototype["decode"] = decoder.Decoder.prototype.decode;
  decoder.Decoder.prototype.decodeString = function(string, cache, asMapKey, tagValue) {
    if (caching.isCacheable(string, asMapKey)) {
      var val = this.parseString(string, cache, false);
      if (cache) {
        cache.write(val, asMapKey);
      }
      return val;
    } else {
      if (caching.isCacheCode(string)) {
        return cache.read(string, asMapKey);
      } else {
        return this.parseString(string, cache, asMapKey);
      }
    }
  };
  decoder.Decoder.prototype.decodeHash = function(hash, cache, asMapKey, tagValue) {
    var ks = util.objectKeys(hash), key = ks[0], tag = ks.length == 1 ? this.decode(key, cache, false, false) : null;
    if (decoder.isTag(tag)) {
      var val = hash[key], handler = this.handlers[tag.str];
      if (handler != null) {
        return handler(this.decode(val, cache, false, true), this);
      } else {
        return types.taggedValue(tag.str, this.decode(val, cache, false, false));
      }
    } else {
      if (this.mapBuilder) {
        if (ks.length < types.SMALL_ARRAY_MAP_THRESHOLD * 2 && this.mapBuilder.fromArray) {
          var nodep = [];
          for (var i = 0;i < ks.length;i++) {
            var strKey = ks[i];
            nodep.push(this.decode(strKey, cache, true, false));
            nodep.push(this.decode(hash[strKey], cache, false, false));
          }
          return this.mapBuilder.fromArray(nodep, hash);
        } else {
          var ret = this.mapBuilder.init(hash);
          for (var i = 0;i < ks.length;i++) {
            var strKey = ks[i];
            ret = this.mapBuilder.add(ret, this.decode(strKey, cache, true, false), this.decode(hash[strKey], cache, false, false), hash);
          }
          return this.mapBuilder.finalize(ret, hash);
        }
      } else {
        var nodep = [];
        for (var i = 0;i < ks.length;i++) {
          var strKey = ks[i];
          nodep.push(this.decode(strKey, cache, true, false));
          nodep.push(this.decode(hash[strKey], cache, false, false));
        }
        return types.map(nodep, false);
      }
    }
  };
  decoder.Decoder.prototype.decodeArrayHash = function(node, cache, asMapKey, tagValue) {
    if (this.mapBuilder) {
      if (node.length < types.SMALL_ARRAY_MAP_THRESHOLD * 2 + 1 && this.mapBuilder.fromArray) {
        var nodep = [];
        for (var i = 1;i < node.length;i += 2) {
          nodep.push(this.decode(node[i], cache, true, false));
          nodep.push(this.decode(node[i + 1], cache, false, false));
        }
        return this.mapBuilder.fromArray(nodep, node);
      } else {
        var ret = this.mapBuilder.init(node);
        for (var i = 1;i < node.length;i += 2) {
          ret = this.mapBuilder.add(ret, this.decode(node[i], cache, true, false), this.decode(node[i + 1], cache, false, false), node);
        }
        return this.mapBuilder.finalize(ret, node);
      }
    } else {
      var nodep = [];
      for (var i = 1;i < node.length;i += 2) {
        nodep.push(this.decode(node[i], cache, true, false));
        nodep.push(this.decode(node[i + 1], cache, false, false));
      }
      return types.map(nodep, false);
    }
  };
  decoder.Decoder.prototype.decodeArray = function(node, cache, asMapKey, tagValue) {
    if (tagValue) {
      var ret = [];
      for (var i = 0;i < node.length;i++) {
        ret.push(this.decode(node[i], cache, asMapKey, false));
      }
      return ret;
    } else {
      var cacheIdx = cache && cache.idx;
      if (node.length === 2 && typeof node[0] === "string") {
        var tag = this.decode(node[0], cache, false, false);
        if (decoder.isTag(tag)) {
          var val = node[1], handler = this.handlers[tag.str];
          if (handler != null) {
            var ret = handler(this.decode(val, cache, asMapKey, true), this);
            return ret;
          } else {
            return types.taggedValue(tag.str, this.decode(val, cache, asMapKey, false));
          }
        }
      }
      if (cache && cacheIdx != cache.idx) {
        cache.idx = cacheIdx;
      }
      if (this.arrayBuilder) {
        if (node.length <= 32 && this.arrayBuilder.fromArray) {
          var arr = [];
          for (var i = 0;i < node.length;i++) {
            arr.push(this.decode(node[i], cache, asMapKey, false));
          }
          return this.arrayBuilder.fromArray(arr, node);
        } else {
          var ret = this.arrayBuilder.init();
          for (var i = 0;i < node.length;i++) {
            ret = this.arrayBuilder.add(ret, this.decode(node[i], cache, asMapKey, false), node);
          }
          return this.arrayBuilder.finalize(ret, node);
        }
      } else {
        var ret = [];
        for (var i = 0;i < node.length;i++) {
          ret.push(this.decode(node[i], cache, asMapKey, false));
        }
        return ret;
      }
    }
  };
  decoder.Decoder.prototype.parseString = function(string, cache, asMapKey) {
    if (string.charAt(0) === d.ESC) {
      var c = string.charAt(1);
      if (c === d.ESC || c === d.SUB || c === d.RES) {
        return string.substring(1);
      } else {
        if (c === d.TAG) {
          return decoder.tag(string.substring(2));
        } else {
          var handler = this.handlers[c];
          if (handler == null) {
            return this.defaultHandler(c, string.substring(2));
          } else {
            return handler(string.substring(2), this);
          }
        }
      }
    } else {
      return string;
    }
  };
  decoder.decoder = function(options) {
    return new decoder.Decoder(options);
  };
});
goog.provide("com.cognitect.transit.impl.reader");
goog.require("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.caching");
goog.scope(function() {
  var reader = com.cognitect.transit.impl.reader, decoder = com.cognitect.transit.impl.decoder, caching = com.cognitect.transit.caching;
  reader.JSONUnmarshaller = function(opts) {
    this.decoder = new decoder.Decoder(opts);
  };
  reader.JSONUnmarshaller.prototype.unmarshal = function(str, cache) {
    return this.decoder.decode(JSON.parse(str), cache);
  };
  reader.Reader = function(unmarshaller, options) {
    this.unmarshaller = unmarshaller;
    this.options = options || {};
    this.cache = this.options["cache"] ? this.options["cache"] : new caching.ReadCache;
  };
  reader.Reader.prototype.read = function(str) {
    var ret = this.unmarshaller.unmarshal(str, this.cache);
    this.cache.clear();
    return ret;
  };
  reader.Reader.prototype["read"] = reader.Reader.prototype.read;
});
goog.provide("com.cognitect.transit.handlers");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.types");
goog.require("goog.math.Long");
goog.scope(function() {
  var handlers = com.cognitect.transit.handlers, util = com.cognitect.transit.util, types = com.cognitect.transit.types, Long = goog.math.Long;
  handlers.ctorGuid = 0;
  handlers.ctorGuidProperty = "transit$guid$" + util.randomUUID();
  handlers.typeTag = function(ctor) {
    if (ctor == null) {
      return "null";
    } else {
      if (ctor === String) {
        return "string";
      } else {
        if (ctor === Boolean) {
          return "boolean";
        } else {
          if (ctor === Number) {
            return "number";
          } else {
            if (ctor === Array) {
              return "array";
            } else {
              if (ctor === Object) {
                return "map";
              } else {
                var tag = ctor[handlers.ctorGuidProperty];
                if (tag == null) {
                  if (typeof Object.defineProperty != "undefined") {
                    tag = ++handlers.ctorGuid;
                    Object.defineProperty(ctor, handlers.ctorGuidProperty, {value:tag, enumerable:false});
                  } else {
                    ctor[handlers.ctorGuidProperty] = tag = ++handlers.ctorGuid;
                  }
                }
                return tag;
              }
            }
          }
        }
      }
    }
  };
  handlers.constructor = function(x) {
    if (x == null) {
      return null;
    } else {
      return x.constructor;
    }
  };
  handlers.padZeros = function(n, m) {
    var s = n.toString();
    for (var i = s.length;i < m;i++) {
      s = "0" + s;
    }
    return s;
  };
  handlers.stringableKeys = function(m) {
    var stringable = false, ks = util.objectKeys(m);
    for (var i = 0;i < ks.length;i++) {
    }
    return true;
  };
  handlers.NilHandler = function() {
  };
  handlers.NilHandler.prototype.tag = function(v) {
    return "_";
  };
  handlers.NilHandler.prototype.rep = function(v) {
    return null;
  };
  handlers.NilHandler.prototype.stringRep = function(v) {
    return "null";
  };
  handlers.StringHandler = function() {
  };
  handlers.StringHandler.prototype.tag = function(v) {
    return "s";
  };
  handlers.StringHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.StringHandler.prototype.stringRep = function(v) {
    return v;
  };
  handlers.NumberHandler = function() {
  };
  handlers.NumberHandler.prototype.tag = function(v) {
    return "i";
  };
  handlers.NumberHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.NumberHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.IntegerHandler = function() {
  };
  handlers.IntegerHandler.prototype.tag = function(v) {
    return "i";
  };
  handlers.IntegerHandler.prototype.rep = function(v) {
    return v.toString();
  };
  handlers.IntegerHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.BooleanHandler = function() {
  };
  handlers.BooleanHandler.prototype.tag = function(v) {
    return "?";
  };
  handlers.BooleanHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.BooleanHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.ArrayHandler = function() {
  };
  handlers.ArrayHandler.prototype.tag = function(v) {
    return "array";
  };
  handlers.ArrayHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.ArrayHandler.prototype.stringRep = function(v) {
    return null;
  };
  handlers.MapHandler = function() {
  };
  handlers.MapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.MapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.MapHandler.prototype.stringRep = function(v) {
    return null;
  };
  handlers.VerboseDateHandler = function() {
  };
  handlers.VerboseDateHandler.prototype.tag = function(v) {
    return "t";
  };
  handlers.VerboseDateHandler.prototype.rep = function(v) {
    return v.getUTCFullYear() + "-" + handlers.padZeros(v.getUTCMonth() + 1, 2) + "-" + handlers.padZeros(v.getUTCDate(), 2) + "T" + handlers.padZeros(v.getUTCHours(), 2) + ":" + handlers.padZeros(v.getUTCMinutes(), 2) + ":" + handlers.padZeros(v.getUTCSeconds(), 2) + "." + handlers.padZeros(v.getUTCMilliseconds(), 3) + "Z";
  };
  handlers.VerboseDateHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.DateHandler = function() {
  };
  handlers.DateHandler.prototype.tag = function(v) {
    return "m";
  };
  handlers.DateHandler.prototype.rep = function(v) {
    return v.valueOf();
  };
  handlers.DateHandler.prototype.stringRep = function(v) {
    return v.valueOf().toString();
  };
  handlers.DateHandler.prototype.getVerboseHandler = function(v) {
    return new handlers.VerboseDateHandler;
  };
  handlers.UUIDHandler = function() {
  };
  handlers.UUIDHandler.prototype.tag = function(v) {
    return "u";
  };
  handlers.UUIDHandler.prototype.rep = function(v) {
    return v.toString();
  };
  handlers.UUIDHandler.prototype.stringRep = function(v) {
    return v.toString();
  };
  handlers.KeywordHandler = function() {
  };
  handlers.KeywordHandler.prototype.tag = function(v) {
    return ":";
  };
  handlers.KeywordHandler.prototype.rep = function(v) {
    return v.name;
  };
  handlers.KeywordHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.SymbolHandler = function() {
  };
  handlers.SymbolHandler.prototype.tag = function(v) {
    return "$";
  };
  handlers.SymbolHandler.prototype.rep = function(v) {
    return v.name;
  };
  handlers.SymbolHandler.prototype.stringRep = function(v, h) {
    return h.rep(v);
  };
  handlers.TaggedHandler = function() {
  };
  handlers.TaggedHandler.prototype.tag = function(v) {
    return v.tag;
  };
  handlers.TaggedHandler.prototype.rep = function(v) {
    return v.rep;
  };
  handlers.TaggedHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitSetHandler = function() {
  };
  handlers.TransitSetHandler.prototype.tag = function(v) {
    return "set";
  };
  handlers.TransitSetHandler.prototype.rep = function(v) {
    var arr = [];
    v.forEach(function(key, set) {
      arr.push(key);
    });
    return types.taggedValue("array", arr);
  };
  handlers.TransitSetHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitArrayMapHandler = function() {
  };
  handlers.TransitArrayMapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.TransitArrayMapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.TransitArrayMapHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.TransitMapHandler = function() {
  };
  handlers.TransitMapHandler.prototype.tag = function(v) {
    return "map";
  };
  handlers.TransitMapHandler.prototype.rep = function(v) {
    return v;
  };
  handlers.TransitMapHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.BufferHandler = function() {
  };
  handlers.BufferHandler.prototype.tag = function(v) {
    return "b";
  };
  handlers.BufferHandler.prototype.rep = function(v) {
    return v.toString("base64");
  };
  handlers.BufferHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.Uint8ArrayHandler = function() {
  };
  handlers.Uint8ArrayHandler.prototype.tag = function(v) {
    return "b";
  };
  handlers.Uint8ArrayHandler.prototype.rep = function(v) {
    return util.Uint8ToBase64(v);
  };
  handlers.Uint8ArrayHandler.prototype.stringRep = function(v, h) {
    return null;
  };
  handlers.defaultHandlers = function(hs) {
    hs.set(null, new handlers.NilHandler);
    hs.set(String, new handlers.StringHandler);
    hs.set(Number, new handlers.NumberHandler);
    hs.set(Long, new handlers.IntegerHandler);
    hs.set(Boolean, new handlers.BooleanHandler);
    hs.set(Array, new handlers.ArrayHandler);
    hs.set(Object, new handlers.MapHandler);
    hs.set(Date, new handlers.DateHandler);
    hs.set(types.UUID, new handlers.UUIDHandler);
    hs.set(types.Keyword, new handlers.KeywordHandler);
    hs.set(types.Symbol, new handlers.SymbolHandler);
    hs.set(types.TaggedValue, new handlers.TaggedHandler);
    hs.set(types.TransitSet, new handlers.TransitSetHandler);
    hs.set(types.TransitArrayMap, new handlers.TransitArrayMapHandler);
    hs.set(types.TransitMap, new handlers.TransitMapHandler);
    if (typeof Buffer != "undefined") {
      hs.set(Buffer, new handlers.BufferHandler);
    }
    if (typeof Uint8Array != "undefined") {
      hs.set(Uint8Array, new handlers.Uint8ArrayHandler);
    }
    return hs;
  };
  handlers.Handlers = function() {
    this.handlers = {};
    handlers.defaultHandlers(this);
  };
  handlers.Handlers.prototype.get = function(ctor) {
    var h = null;
    if (typeof ctor === "string") {
      h = this.handlers[ctor];
    } else {
      h = this.handlers[handlers.typeTag(ctor)];
    }
    if (h != null) {
      return h;
    } else {
      return this.handlers["default"];
    }
  };
  handlers.Handlers.prototype["get"] = handlers.Handlers.prototype.get;
  handlers.validTag = function(tag) {
    switch(tag) {
      case "null":
      ;
      case "string":
      ;
      case "boolean":
      ;
      case "number":
      ;
      case "array":
      ;
      case "map":
        return false;
        break;
    }
    return true;
  };
  handlers.Handlers.prototype.set = function(ctor, handler) {
    if (typeof ctor === "string" && handlers.validTag(ctor)) {
      this.handlers[ctor] = handler;
    } else {
      this.handlers[handlers.typeTag(ctor)] = handler;
    }
  };
});
goog.provide("com.cognitect.transit.impl.writer");
goog.require("com.cognitect.transit.util");
goog.require("com.cognitect.transit.caching");
goog.require("com.cognitect.transit.handlers");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.delimiters");
goog.require("goog.math.Long");
goog.scope(function() {
  var writer = com.cognitect.transit.impl.writer, util = com.cognitect.transit.util, caching = com.cognitect.transit.caching, handlers = com.cognitect.transit.handlers, types = com.cognitect.transit.types, d = com.cognitect.transit.delimiters, Long = goog.math.Long;
  writer.escape = function(string) {
    if (string.length > 0) {
      var c = string.charAt(0);
      if (c === d.ESC || c === d.SUB || c === d.RES) {
        return d.ESC + string;
      } else {
        return string;
      }
    } else {
      return string;
    }
  };
  writer.JSONMarshaller = function(opts) {
    this.opts = opts || {};
    this.preferStrings = this.opts["preferStrings"] != null ? this.opts["preferStrings"] : true;
    this.objectBuilder = this.opts["objectBuilder"] || null;
    this.handlers = new handlers.Handlers;
    var optsHandlers = this.opts["handlers"];
    if (optsHandlers) {
      if (util.isArray(optsHandlers) || !optsHandlers.forEach) {
        throw new Error('transit writer "handlers" option must be a map');
      }
      var self = this;
      optsHandlers.forEach(function(v, k) {
        self.handlers.set(k, v);
      });
    }
    this.handlerForForeign = this.opts["handlerForForeign"];
    this.unpack = this.opts["unpack"] || function(x) {
      if (types.isArrayMap(x) && x.backingMap === null) {
        return x._entries;
      } else {
        return false;
      }
    };
    this.verbose = this.opts && this.opts["verbose"] || false;
  };
  writer.JSONMarshaller.prototype.handler = function(obj) {
    var h = this.handlers.get(handlers.constructor(obj));
    if (h != null) {
      return h;
    } else {
      var tag = obj && obj["transitTag"];
      if (tag) {
        return this.handlers.get(tag);
      } else {
        return null;
      }
    }
  };
  writer.JSONMarshaller.prototype.registerHandler = function(ctor, handler) {
    this.handlers.set(ctor, handler);
  };
  writer.JSONMarshaller.prototype.emitNil = function(asMapKey, cache) {
    if (asMapKey) {
      return this.emitString(d.ESC, "_", "", asMapKey, cache);
    } else {
      return null;
    }
  };
  writer.JSONMarshaller.prototype.emitString = function(prefix, tag, s, asMapKey, cache) {
    var string = prefix + tag + s;
    if (cache) {
      return cache.write(string, asMapKey);
    } else {
      return string;
    }
  };
  writer.JSONMarshaller.prototype.emitBoolean = function(b, asMapKey, cache) {
    if (asMapKey) {
      var s = b.toString();
      return this.emitString(d.ESC, "?", s[0], asMapKey, cache);
    } else {
      return b;
    }
  };
  writer.JSONMarshaller.prototype.emitInteger = function(i, asMapKey, cache) {
    if (i === Infinity) {
      return this.emitString(d.ESC, "z", "INF", asMapKey, cache);
    } else {
      if (i === -Infinity) {
        return this.emitString(d.ESC, "z", "-INF", asMapKey, cache);
      } else {
        if (isNaN(i)) {
          return this.emitString(d.ESC, "z", "NaN", asMapKey, cache);
        } else {
          if (asMapKey || typeof i === "string" || i instanceof Long) {
            return this.emitString(d.ESC, "i", i.toString(), asMapKey, cache);
          } else {
            return i;
          }
        }
      }
    }
  };
  writer.JSONMarshaller.prototype.emitDouble = function(d, asMapKey, cache) {
    if (asMapKey) {
      return this.emitString(d.ESC, "d", d, asMapKey, cache);
    } else {
      return d;
    }
  };
  writer.JSONMarshaller.prototype.emitBinary = function(b, asMapKey, cache) {
    return this.emitString(d.ESC, "b", b, asMapKey, cache);
  };
  writer.JSONMarshaller.prototype.emitQuoted = function(em, obj, cache) {
    if (em.verbose) {
      var ret = {}, k = this.emitString(d.ESC_TAG, "'", "", true, cache);
      ret[k] = writer.marshal(this, obj, false, cache);
      return ret;
    } else {
      return [this.emitString(d.ESC_TAG, "'", "", true, cache), writer.marshal(this, obj, false, cache)];
    }
  };
  writer.emitObjects = function(em, iterable, cache) {
    var ret = [];
    if (util.isArray(iterable)) {
      for (var i = 0;i < iterable.length;i++) {
        ret.push(writer.marshal(em, iterable[i], false, cache));
      }
    } else {
      iterable.forEach(function(v, i) {
        ret.push(writer.marshal(em, v, false, cache));
      });
    }
    return ret;
  };
  writer.emitArray = function(em, iterable, skip, cache) {
    return writer.emitObjects(em, iterable, cache);
  };
  writer.isStringableKey = function(em, k) {
    if (typeof k !== "string") {
      var h = em.handler(k);
      return h && h.tag(k).length === 1;
    } else {
      return true;
    }
  };
  writer.stringableKeys = function(em, obj) {
    var arr = em.unpack(obj), stringableKeys = true;
    if (arr) {
      for (var i = 0;i < arr.length;i += 2) {
        stringableKeys = writer.isStringableKey(em, arr[i]);
        if (!stringableKeys) {
          break;
        }
      }
      return stringableKeys;
    } else {
      if (obj.keys) {
        var iter = obj.keys(), step = null;
        if (iter.next) {
          step = iter.next();
          while (!step.done) {
            stringableKeys = writer.isStringableKey(em, step.value);
            if (!stringableKeys) {
              break;
            }
            step = iter.next();
          }
          return stringableKeys;
        }
      }
    }
    if (obj.forEach) {
      obj.forEach(function(v, k) {
        stringableKeys = stringableKeys && writer.isStringableKey(em, k);
      });
      return stringableKeys;
    } else {
      throw new Error("Cannot walk keys of object type " + handlers.constructor(obj).name);
    }
  };
  writer.isForeignObject = function(x) {
    if (x.constructor["transit$isObject"]) {
      return true;
    }
    var ret = x.constructor.toString(), ret = ret.substr("function ".length), ret = ret.substr(0, ret.indexOf("(")), isObject = ret == "Object";
    if (typeof Object.defineProperty != "undefined") {
      Object.defineProperty(x.constructor, "transit$isObject", {value:isObject, enumerable:false});
    } else {
      x.constructor["transit$isObject"] = isObject;
    }
    return isObject;
  };
  writer.emitMap = function(em, obj, skip, cache) {
    if (obj.constructor === Object || obj.forEach != null || em.handlerForForeign && writer.isForeignObject(obj)) {
      if (em.verbose) {
        if (obj.forEach != null) {
          if (writer.stringableKeys(em, obj)) {
            var ret = {};
            obj.forEach(function(v, k) {
              ret[writer.marshal(em, k, true, false)] = writer.marshal(em, v, false, cache);
            });
            return ret;
          } else {
            var arr = em.unpack(obj), rep = [], tag = em.emitString(d.ESC_TAG, "cmap", "", true, cache);
            if (arr) {
              for (var i = 0;i < arr.length;i += 2) {
                rep.push(writer.marshal(em, arr[i], true, false));
                rep.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                rep.push(writer.marshal(em, k, true, false));
                rep.push(writer.marshal(em, v, false, cache));
              });
            }
            var ret = {};
            ret[tag] = rep;
            return ret;
          }
        } else {
          var ret = {}, ks = util.objectKeys(obj);
          for (var i = 0;i < ks.length;i++) {
            ret[writer.marshal(em, ks[i], true, false)] = writer.marshal(em, obj[ks[i]], false, cache);
          }
          return ret;
        }
      } else {
        if (obj.forEach != null) {
          if (writer.stringableKeys(em, obj)) {
            var arr = em.unpack(obj), ret = ["^ "];
            if (arr) {
              for (var i = 0;i < arr.length;i += 2) {
                ret.push(writer.marshal(em, arr[i], true, cache));
                ret.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                ret.push(writer.marshal(em, k, true, cache));
                ret.push(writer.marshal(em, v, false, cache));
              });
            }
            return ret;
          } else {
            var arr = em.unpack(obj), rep = [], tag = em.emitString(d.ESC_TAG, "cmap", "", true, cache);
            if (arr) {
              for (var i = 0;i < arr.length;i += 2) {
                rep.push(writer.marshal(em, arr[i], true, cache));
                rep.push(writer.marshal(em, arr[i + 1], false, cache));
              }
            } else {
              obj.forEach(function(v, k) {
                rep.push(writer.marshal(em, k, true, cache));
                rep.push(writer.marshal(em, v, false, cache));
              });
            }
            return [tag, rep];
          }
        } else {
          var ret = ["^ "], ks = util.objectKeys(obj);
          for (var i = 0;i < ks.length;i++) {
            ret.push(writer.marshal(em, ks[i], true, cache));
            ret.push(writer.marshal(em, obj[ks[i]], false, cache));
          }
          return ret;
        }
      }
    } else {
      if (em.objectBuilder != null) {
        return em.objectBuilder(obj, function(k) {
          return writer.marshal(em, k, true, cache);
        }, function(v) {
          return writer.marshal(em, v, false, cache);
        });
      } else {
        var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
        err.data = {obj:obj, type:name};
        throw err;
      }
    }
  };
  writer.emitTaggedMap = function(em, tag, rep, skip, cache) {
    if (em.verbose) {
      var ret = {};
      ret[em.emitString(d.ESC_TAG, tag, "", true, cache)] = writer.marshal(em, rep, false, cache);
      return ret;
    } else {
      return [em.emitString(d.ESC_TAG, tag, "", true, cache), writer.marshal(em, rep, false, cache)];
    }
  };
  writer.emitEncoded = function(em, h, tag, rep, obj, asMapKey, cache) {
    if (tag.length === 1) {
      if (typeof rep === "string") {
        return em.emitString(d.ESC, tag, rep, asMapKey, cache);
      } else {
        if (asMapKey || em.preferStrings) {
          var vh = em.verbose && h.getVerboseHandler();
          if (vh) {
            tag = vh.tag(obj);
            rep = vh.stringRep(obj, vh);
          } else {
            rep = h.stringRep(obj, h);
          }
          if (rep !== null) {
            return em.emitString(d.ESC, tag, rep, asMapKey, cache);
          } else {
            var err = new Error('Tag "' + tag + '" cannot be encoded as string');
            err.data = {tag:tag, rep:rep, obj:obj};
            throw err;
          }
        } else {
          return writer.emitTaggedMap(em, tag, rep, asMapKey, cache);
        }
      }
    } else {
      return writer.emitTaggedMap(em, tag, rep, asMapKey, cache);
    }
  };
  writer.marshal = function(em, obj, asMapKey, cache) {
    var h = em.handler(obj) || (em.handlerForForeign ? em.handlerForForeign(obj, em.handlers) : null), tag = h ? h.tag(obj) : null, rep = h ? h.rep(obj) : null;
    if (h != null && tag != null) {
      switch(tag) {
        case "_":
          return em.emitNil(asMapKey, cache);
          break;
        case "s":
          return em.emitString("", "", writer.escape(rep), asMapKey, cache);
          break;
        case "?":
          return em.emitBoolean(rep, asMapKey, cache);
          break;
        case "i":
          return em.emitInteger(rep, asMapKey, cache);
          break;
        case "d":
          return em.emitDouble(rep, asMapKey, cache);
          break;
        case "b":
          return em.emitBinary(rep, asMapKey, cache);
          break;
        case "'":
          return em.emitQuoted(em, rep, cache);
          break;
        case "array":
          return writer.emitArray(em, rep, asMapKey, cache);
          break;
        case "map":
          return writer.emitMap(em, rep, asMapKey, cache);
          break;
        default:
          return writer.emitEncoded(em, h, tag, rep, obj, asMapKey, cache);
          break;
      }
    } else {
      var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
      err.data = {obj:obj, type:name};
      throw err;
    }
  };
  writer.maybeQuoted = function(em, obj) {
    var h = em.handler(obj) || (em.handlerForForeign ? em.handlerForForeign(obj, em.handlers) : null);
    if (h != null) {
      if (h.tag(obj).length === 1) {
        return types.quoted(obj);
      } else {
        return obj;
      }
    } else {
      var name = handlers.constructor(obj).name, err = new Error("Cannot write " + name);
      err.data = {obj:obj, type:name};
      throw err;
    }
  };
  writer.marshalTop = function(em, obj, asMapKey, cache) {
    return JSON.stringify(writer.marshal(em, writer.maybeQuoted(em, obj), asMapKey, cache));
  };
  writer.Writer = function(marshaller, options) {
    this._marshaller = marshaller;
    this.options = options || {};
    if (this.options["cache"] === false) {
      this.cache = null;
    } else {
      this.cache = this.options["cache"] ? this.options["cache"] : new caching.WriteCache;
    }
  };
  writer.Writer.prototype.marshaller = function() {
    return this._marshaller;
  };
  writer.Writer.prototype["marshaller"] = writer.Writer.prototype.marshaller;
  writer.Writer.prototype.write = function(obj, opts) {
    var ret = null, ropts = opts || {}, asMapKey = ropts["asMapKey"] || false, cache = this._marshaller.verbose ? false : this.cache;
    if (ropts["marshalTop"] === false) {
      ret = writer.marshal(this._marshaller, obj, asMapKey, cache);
    } else {
      ret = writer.marshalTop(this._marshaller, obj, asMapKey, cache);
    }
    if (this.cache != null) {
      this.cache.clear();
    }
    return ret;
  };
  writer.Writer.prototype["write"] = writer.Writer.prototype.write;
  writer.Writer.prototype.register = function(type, handler) {
    this._marshaller.registerHandler(type, handler);
  };
  writer.Writer.prototype["register"] = writer.Writer.prototype.register;
});
goog.provide("com.cognitect.transit");
goog.require("com.cognitect.transit.impl.reader");
goog.require("com.cognitect.transit.impl.writer");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.eq");
goog.require("com.cognitect.transit.impl.decoder");
goog.require("com.cognitect.transit.caching");
var TRANSIT_DEV = true;
var TRANSIT_NODE_TARGET = false;
var TRANSIT_BROWSER_TARGET = false;
var TRANSIT_BROWSER_AMD_TARGET = false;
goog.scope(function() {
  var transit = com.cognitect.transit;
  var reader = com.cognitect.transit.impl.reader, writer = com.cognitect.transit.impl.writer, decoder = com.cognitect.transit.impl.decoder, types = com.cognitect.transit.types, eq = com.cognitect.transit.eq, caching = com.cognitect.transit.caching;
  transit.reader = function(type, opts) {
    if (type === "json" || type === "json-verbose" || type == null) {
      type = "json";
      var unmarshaller = new reader.JSONUnmarshaller(opts);
      return new reader.Reader(unmarshaller, opts);
    } else {
      throw new Error("Cannot create reader of type " + type);
    }
  };
  transit.writer = function(type, opts) {
    if (type === "json" || type === "json-verbose" || type == null) {
      if (type === "json-verbose") {
        if (opts == null) {
          opts = {};
        }
        opts["verbose"] = true;
      }
      type = "json";
      var marshaller = new writer.JSONMarshaller(opts);
      return new writer.Writer(marshaller, opts);
    } else {
      var err = new Error('Type must be "json"');
      err.data = {type:type};
      throw err;
    }
  };
  transit.makeWriteHandler = function(obj) {
    var Handler = function() {
    };
    Handler.prototype.tag = obj["tag"];
    Handler.prototype.rep = obj["rep"];
    Handler.prototype.stringRep = obj["stringRep"];
    Handler.prototype.getVerboseHandler = obj["getVerboseHandler"];
    return new Handler;
  };
  transit.makeBuilder = function(obj) {
    var Builder = function() {
    };
    Builder.prototype.init = obj["init"];
    Builder.prototype.add = obj["add"];
    Builder.prototype.finalize = obj["finalize"];
    Builder.prototype.fromArray = obj["fromArray"];
    return new Builder;
  };
  transit.date = types.date;
  transit.integer = types.intValue;
  transit.isInteger = types.isInteger;
  transit.uuid = types.uuid;
  transit.isUUID = types.isUUID;
  transit.bigInt = types.bigInteger;
  transit.isBigInt = types.isBigInteger;
  transit.bigDec = types.bigDecimalValue;
  transit.isBigDec = types.isBigDecimal;
  transit.keyword = types.keyword;
  transit.isKeyword = types.isKeyword;
  transit.symbol = types.symbol;
  transit.isSymbol = types.isSymbol;
  transit.binary = types.binary;
  transit.isBinary = types.isBinary;
  transit.uri = types.uri;
  transit.isURI = types.isURI;
  transit.map = types.map;
  transit.isMap = types.isMap;
  transit.set = types.set;
  transit.isSet = types.isSet;
  transit.list = types.list;
  transit.isList = types.isList;
  transit.quoted = types.quoted;
  transit.isQuoted = types.isQuoted;
  transit.tagged = types.taggedValue;
  transit.isTaggedValue = types.isTaggedValue;
  transit.link = types.link;
  transit.isLink = types.isLink;
  transit.hash = eq.hashCode;
  transit.hashMapLike = eq.hashMapLike;
  transit.hashMapLike = eq.hashArrayLike;
  transit.equals = eq.equals;
  transit.extendToEQ = eq.extendToEQ;
  transit.mapToObject = function(m) {
    var ret = {};
    m.forEach(function(v, k) {
      if (typeof k !== "string") {
        throw Error("Cannot convert map with non-string keys");
      } else {
        ret[k] = v;
      }
    });
    return ret;
  };
  transit.decoder = decoder.decoder;
  transit.readCache = caching.readCache;
  transit.writeCache = caching.writeCache;
  transit.UUIDfromString = types.UUIDfromString;
  transit.randomUUID = types.randomUUID;
  transit.stringableKeys = writer.stringableKeys;
  if (TRANSIT_BROWSER_TARGET) {
    goog.exportSymbol("transit.reader", transit.reader);
    goog.exportSymbol("transit.writer", transit.writer);
    goog.exportSymbol("transit.makeBuilder", transit.makeBuilder);
    goog.exportSymbol("transit.makeWriteHandler", transit.makeWriteHandler);
    goog.exportSymbol("transit.date", types.date);
    goog.exportSymbol("transit.integer", types.intValue);
    goog.exportSymbol("transit.isInteger", types.isInteger);
    goog.exportSymbol("transit.uuid", types.uuid);
    goog.exportSymbol("transit.isUUID", types.isUUID);
    goog.exportSymbol("transit.bigInt", types.bigInteger);
    goog.exportSymbol("transit.isBigInt", types.isBigInteger);
    goog.exportSymbol("transit.bigDec", types.bigDecimalValue);
    goog.exportSymbol("transit.isBigDec", types.isBigDecimal);
    goog.exportSymbol("transit.keyword", types.keyword);
    goog.exportSymbol("transit.isKeyword", types.isKeyword);
    goog.exportSymbol("transit.symbol", types.symbol);
    goog.exportSymbol("transit.isSymbol", types.isSymbol);
    goog.exportSymbol("transit.binary", types.binary);
    goog.exportSymbol("transit.isBinary", types.isBinary);
    goog.exportSymbol("transit.uri", types.uri);
    goog.exportSymbol("transit.isURI", types.isURI);
    goog.exportSymbol("transit.map", types.map);
    goog.exportSymbol("transit.isMap", types.isMap);
    goog.exportSymbol("transit.set", types.set);
    goog.exportSymbol("transit.isSet", types.isSet);
    goog.exportSymbol("transit.list", types.list);
    goog.exportSymbol("transit.isList", types.isList);
    goog.exportSymbol("transit.quoted", types.quoted);
    goog.exportSymbol("transit.isQuoted", types.isQuoted);
    goog.exportSymbol("transit.tagged", types.taggedValue);
    goog.exportSymbol("transit.isTaggedValue", types.isTaggedValue);
    goog.exportSymbol("transit.link", types.link);
    goog.exportSymbol("transit.isLink", types.isLink);
    goog.exportSymbol("transit.hash", eq.hashCode);
    goog.exportSymbol("transit.hashMapLike", eq.hashMapLike);
    goog.exportSymbol("transit.hashArrayLike", eq.hashArrayLike);
    goog.exportSymbol("transit.equals", eq.equals);
    goog.exportSymbol("transit.extendToEQ", eq.extendToEQ);
    goog.exportSymbol("transit.mapToObject", transit.mapToObject);
    goog.exportSymbol("transit.decoder", decoder.decoder);
    goog.exportSymbol("transit.UUIDfromString", types.UUIDfromString);
    goog.exportSymbol("transit.randomUUID", types.randomUUID);
    goog.exportSymbol("transit.stringableKeys", writer.stringableKeys);
    goog.exportSymbol("transit.readCache", caching.readCache);
    goog.exportSymbol("transit.writeCache", caching.writeCache);
  }
  if (TRANSIT_NODE_TARGET) {
    module.exports = {reader:transit.reader, writer:transit.writer, makeBuilder:transit.makeBuilder, makeWriteHandler:transit.makeWriteHandler, date:types.date, integer:types.intValue, isInteger:types.isInteger, uuid:types.uuid, isUUID:types.isUUID, bigInt:types.bigInteger, isBigInt:types.isBigInteger, bigDec:types.bigDecimalValue, isBigDec:types.isBigDecimal, keyword:types.keyword, isKeyword:types.isKeyword, symbol:types.symbol, isSymbol:types.isSymbol, binary:types.binary, isBinary:types.isBinary, 
    uri:types.uri, isURI:types.isURI, map:types.map, isMap:types.isMap, set:types.set, isSet:types.isSet, list:types.list, isList:types.isList, quoted:types.quoted, isQuoted:types.isQuoted, tagged:types.taggedValue, isTaggedValue:types.isTaggedValue, link:types.link, isLink:types.isLink, hash:eq.hashCode, hashArrayLike:eq.hashArrayLike, hashMapLike:eq.hashMapLike, equals:eq.equals, extendToEQ:eq.extendToEQ, mapToObject:transit.mapToObject, decoder:decoder.decoder, UUIDfromString:types.UUIDfromString, 
    randomUUID:types.randomUUID, stringableKeys:writer.stringableKeys, readCache:caching.readCache, writeCache:caching.writeCache};
  }
});
goog.provide("cognitect.transit");
goog.require("cljs.core");
goog.require("com.cognitect.transit");
goog.require("com.cognitect.transit.types");
goog.require("com.cognitect.transit.eq");
goog.require("goog.math.Long");
cljs.core.UUID.prototype.cljs$core$IEquiv$ = true;
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID) {
    return this$__$1.uuid === other.uuid;
  } else {
    if (other instanceof com.cognitect.transit.types.UUID) {
      return this$__$1.uuid === other.toString();
    } else {
      return false;
    }
  }
};
cljs.core.UUID.prototype.cljs$core$IComparable$ = true;
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID || other instanceof com.cognitect.transit.types.UUID) {
    return cljs.core.compare(this$__$1.toString(), other.toString());
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IComparable$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID || other instanceof com.cognitect.transit.types.UUID) {
    return cljs.core.compare(this$__$1.toString(), other.toString());
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
goog.math.Long.prototype.cljs$core$IEquiv$ = true;
goog.math.Long.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  return this$__$1.equiv(other);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IEquiv$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof cljs.core.UUID) {
    return cljs.core._equiv(other, this$__$1);
  } else {
    return this$__$1.equiv(other);
  }
};
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IEquiv$ = true;
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var this$__$1 = this;
  return this$__$1.equiv(other);
};
goog.math.Long.prototype.cljs$core$IHash$ = true;
goog.math.Long.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.eq.hashCode.cljs$core$IFn$_invoke$arity$1(this$__$1) : com.cognitect.transit.eq.hashCode.call(null, this$__$1);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IHash$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.eq.hashCode.cljs$core$IFn$_invoke$arity$1(this$__$1) : com.cognitect.transit.eq.hashCode.call(null, this$__$1);
};
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IHash$ = true;
com.cognitect.transit.types.TaggedValue.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this$__$1 = this;
  return com.cognitect.transit.eq.hashCode.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.eq.hashCode.cljs$core$IFn$_invoke$arity$1(this$__$1) : com.cognitect.transit.eq.hashCode.call(null, this$__$1);
};
com.cognitect.transit.types.UUID.prototype.cljs$core$IPrintWithWriter$ = true;
com.cognitect.transit.types.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(uuid, writer, _) {
  var uuid__$1 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(uuid__$1.toString()), cljs.core.str('"')].join(""));
};
cognitect.transit.opts_merge = function cognitect$transit$opts_merge(a, b) {
  var seq__8221_8225 = cljs.core.seq(cljs.core.js_keys(b));
  var chunk__8222_8226 = null;
  var count__8223_8227 = 0;
  var i__8224_8228 = 0;
  while (true) {
    if (i__8224_8228 < count__8223_8227) {
      var k_8229 = chunk__8222_8226.cljs$core$IIndexed$_nth$arity$2(null, i__8224_8228);
      var v_8230 = b[k_8229];
      a[k_8229] = v_8230;
      var G__8231 = seq__8221_8225;
      var G__8232 = chunk__8222_8226;
      var G__8233 = count__8223_8227;
      var G__8234 = i__8224_8228 + 1;
      seq__8221_8225 = G__8231;
      chunk__8222_8226 = G__8232;
      count__8223_8227 = G__8233;
      i__8224_8228 = G__8234;
      continue;
    } else {
      var temp__4425__auto___8235 = cljs.core.seq(seq__8221_8225);
      if (temp__4425__auto___8235) {
        var seq__8221_8236__$1 = temp__4425__auto___8235;
        if (cljs.core.chunked_seq_QMARK_(seq__8221_8236__$1)) {
          var c__5095__auto___8237 = cljs.core.chunk_first(seq__8221_8236__$1);
          var G__8238 = cljs.core.chunk_rest(seq__8221_8236__$1);
          var G__8239 = c__5095__auto___8237;
          var G__8240 = cljs.core.count(c__5095__auto___8237);
          var G__8241 = 0;
          seq__8221_8225 = G__8238;
          chunk__8222_8226 = G__8239;
          count__8223_8227 = G__8240;
          i__8224_8228 = G__8241;
          continue;
        } else {
          var k_8242 = cljs.core.first(seq__8221_8236__$1);
          var v_8243 = b[k_8242];
          a[k_8242] = v_8243;
          var G__8244 = cljs.core.next(seq__8221_8236__$1);
          var G__8245 = null;
          var G__8246 = 0;
          var G__8247 = 0;
          seq__8221_8225 = G__8244;
          chunk__8222_8226 = G__8245;
          count__8223_8227 = G__8246;
          i__8224_8228 = G__8247;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return a;
};
cognitect.transit.MapBuilder = function() {
};
cognitect.transit.MapBuilder.prototype.init = function(node) {
  var self__ = this;
  var _ = this;
  return cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
};
cognitect.transit.MapBuilder.prototype.add = function(m, k, v, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(m, k, v);
};
cognitect.transit.MapBuilder.prototype.finalize = function(m, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.persistent_BANG_(m);
};
cognitect.transit.MapBuilder.prototype.fromArray = function(arr, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.PersistentArrayMap.fromArray.cljs$core$IFn$_invoke$arity$3 ? cljs.core.PersistentArrayMap.fromArray.cljs$core$IFn$_invoke$arity$3(arr, true, true) : cljs.core.PersistentArrayMap.fromArray.call(null, arr, true, true);
};
cognitect.transit.MapBuilder.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.MapBuilder.cljs$lang$type = true;
cognitect.transit.MapBuilder.cljs$lang$ctorStr = "cognitect.transit/MapBuilder";
cognitect.transit.MapBuilder.cljs$lang$ctorPrWriter = function(this__4890__auto__, writer__4891__auto__, opt__4892__auto__) {
  return cljs.core._write(writer__4891__auto__, "cognitect.transit/MapBuilder");
};
cognitect.transit.__GT_MapBuilder = function cognitect$transit$__GT_MapBuilder() {
  return new cognitect.transit.MapBuilder;
};
cognitect.transit.VectorBuilder = function() {
};
cognitect.transit.VectorBuilder.prototype.init = function(node) {
  var self__ = this;
  var _ = this;
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cognitect.transit.VectorBuilder.prototype.add = function(v, x, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, x);
};
cognitect.transit.VectorBuilder.prototype.finalize = function(v, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.persistent_BANG_(v);
};
cognitect.transit.VectorBuilder.prototype.fromArray = function(arr, node) {
  var self__ = this;
  var _ = this;
  return cljs.core.PersistentVector.fromArray.cljs$core$IFn$_invoke$arity$2 ? cljs.core.PersistentVector.fromArray.cljs$core$IFn$_invoke$arity$2(arr, true) : cljs.core.PersistentVector.fromArray.call(null, arr, true);
};
cognitect.transit.VectorBuilder.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.VectorBuilder.cljs$lang$type = true;
cognitect.transit.VectorBuilder.cljs$lang$ctorStr = "cognitect.transit/VectorBuilder";
cognitect.transit.VectorBuilder.cljs$lang$ctorPrWriter = function(this__4890__auto__, writer__4891__auto__, opt__4892__auto__) {
  return cljs.core._write(writer__4891__auto__, "cognitect.transit/VectorBuilder");
};
cognitect.transit.__GT_VectorBuilder = function cognitect$transit$__GT_VectorBuilder() {
  return new cognitect.transit.VectorBuilder;
};
cognitect.transit.reader = function cognitect$transit$reader() {
  var args8248 = [];
  var len__5350__auto___8253 = arguments.length;
  var i__5351__auto___8254 = 0;
  while (true) {
    if (i__5351__auto___8254 < len__5350__auto___8253) {
      args8248.push(arguments[i__5351__auto___8254]);
      var G__8255 = i__5351__auto___8254 + 1;
      i__5351__auto___8254 = G__8255;
      continue;
    } else {
    }
    break;
  }
  var G__8250 = args8248.length;
  switch(G__8250) {
    case 1:
      return cognitect.transit.reader.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8248.length)].join(""));;
  }
};
cognitect.transit.reader.cljs$core$IFn$_invoke$arity$1 = function(type) {
  return cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2(type, null);
};
cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2 = function(type, opts) {
  var G__8251 = cljs.core.name(type);
  var G__8252 = cognitect.transit.opts_merge({"handlers":cljs.core.clj__GT_js(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 5, ["$", function(G__8251) {
    return function(v) {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(v);
    };
  }(G__8251), ":", function(G__8251) {
    return function(v) {
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(v);
    };
  }(G__8251), "set", function(G__8251) {
    return function(v) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY, v);
    };
  }(G__8251), "list", function(G__8251) {
    return function(v) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.List.EMPTY, v.reverse());
    };
  }(G__8251), "cmap", function(G__8251) {
    return function(v) {
      var i = 0;
      var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
      while (true) {
        if (i < v.length) {
          var G__8257 = i + 2;
          var G__8258 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, v[i], v[i + 1]);
          i = G__8257;
          ret = G__8258;
          continue;
        } else {
          return cljs.core.persistent_BANG_(ret);
        }
        break;
      }
    };
  }(G__8251)], null), cljs.core.cst$kw$handlers.cljs$core$IFn$_invoke$arity$1(opts)], 0))), "mapBuilder":new cognitect.transit.MapBuilder, "arrayBuilder":new cognitect.transit.VectorBuilder, "prefersStrings":false}, cljs.core.clj__GT_js(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(opts, cljs.core.cst$kw$handlers)));
  return com.cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2 ? com.cognitect.transit.reader.cljs$core$IFn$_invoke$arity$2(G__8251, G__8252) : com.cognitect.transit.reader.call(null, G__8251, G__8252);
};
cognitect.transit.reader.cljs$lang$maxFixedArity = 2;
cognitect.transit.read = function cognitect$transit$read(r, str) {
  return r.read(str);
};
cognitect.transit.KeywordHandler = function() {
};
cognitect.transit.KeywordHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return ":";
};
cognitect.transit.KeywordHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.fqn;
};
cognitect.transit.KeywordHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return v.fqn;
};
cognitect.transit.KeywordHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.KeywordHandler.cljs$lang$type = true;
cognitect.transit.KeywordHandler.cljs$lang$ctorStr = "cognitect.transit/KeywordHandler";
cognitect.transit.KeywordHandler.cljs$lang$ctorPrWriter = function(this__4890__auto__, writer__4891__auto__, opt__4892__auto__) {
  return cljs.core._write(writer__4891__auto__, "cognitect.transit/KeywordHandler");
};
cognitect.transit.__GT_KeywordHandler = function cognitect$transit$__GT_KeywordHandler() {
  return new cognitect.transit.KeywordHandler;
};
cognitect.transit.SymbolHandler = function() {
};
cognitect.transit.SymbolHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "$";
};
cognitect.transit.SymbolHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.str;
};
cognitect.transit.SymbolHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return v.str;
};
cognitect.transit.SymbolHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.SymbolHandler.cljs$lang$type = true;
cognitect.transit.SymbolHandler.cljs$lang$ctorStr = "cognitect.transit/SymbolHandler";
cognitect.transit.SymbolHandler.cljs$lang$ctorPrWriter = function(this__4890__auto__, writer__4891__auto__, opt__4892__auto__) {
  return cljs.core._write(writer__4891__auto__, "cognitect.transit/SymbolHandler");
};
cognitect.transit.__GT_SymbolHandler = function cognitect$transit$__GT_SymbolHandler() {
  return new cognitect.transit.SymbolHandler;
};
cognitect.transit.ListHandler = function() {
};
cognitect.transit.ListHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "list";
};
cognitect.transit.ListHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__8259_8263 = cljs.core.seq(v);
  var chunk__8260_8264 = null;
  var count__8261_8265 = 0;
  var i__8262_8266 = 0;
  while (true) {
    if (i__8262_8266 < count__8261_8265) {
      var x_8267 = chunk__8260_8264.cljs$core$IIndexed$_nth$arity$2(null, i__8262_8266);
      ret.push(x_8267);
      var G__8268 = seq__8259_8263;
      var G__8269 = chunk__8260_8264;
      var G__8270 = count__8261_8265;
      var G__8271 = i__8262_8266 + 1;
      seq__8259_8263 = G__8268;
      chunk__8260_8264 = G__8269;
      count__8261_8265 = G__8270;
      i__8262_8266 = G__8271;
      continue;
    } else {
      var temp__4425__auto___8272 = cljs.core.seq(seq__8259_8263);
      if (temp__4425__auto___8272) {
        var seq__8259_8273__$1 = temp__4425__auto___8272;
        if (cljs.core.chunked_seq_QMARK_(seq__8259_8273__$1)) {
          var c__5095__auto___8274 = cljs.core.chunk_first(seq__8259_8273__$1);
          var G__8275 = cljs.core.chunk_rest(seq__8259_8273__$1);
          var G__8276 = c__5095__auto___8274;
          var G__8277 = cljs.core.count(c__5095__auto___8274);
          var G__8278 = 0;
          seq__8259_8263 = G__8275;
          chunk__8260_8264 = G__8276;
          count__8261_8265 = G__8277;
          i__8262_8266 = G__8278;
          continue;
        } else {
          var x_8279 = cljs.core.first(seq__8259_8273__$1);
          ret.push(x_8279);
          var G__8280 = cljs.core.next(seq__8259_8273__$1);
          var G__8281 = null;
          var G__8282 = 0;
          var G__8283 = 0;
          seq__8259_8263 = G__8280;
          chunk__8260_8264 = G__8281;
          count__8261_8265 = G__8282;
          i__8262_8266 = G__8283;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return com.cognitect.transit.tagged.cljs$core$IFn$_invoke$arity$2 ? com.cognitect.transit.tagged.cljs$core$IFn$_invoke$arity$2("array", ret) : com.cognitect.transit.tagged.call(null, "array", ret);
};
cognitect.transit.ListHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.ListHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.ListHandler.cljs$lang$type = true;
cognitect.transit.ListHandler.cljs$lang$ctorStr = "cognitect.transit/ListHandler";
cognitect.transit.ListHandler.cljs$lang$ctorPrWriter = function(this__4890__auto__, writer__4891__auto__, opt__4892__auto__) {
  return cljs.core._write(writer__4891__auto__, "cognitect.transit/ListHandler");
};
cognitect.transit.__GT_ListHandler = function cognitect$transit$__GT_ListHandler() {
  return new cognitect.transit.ListHandler;
};
cognitect.transit.MapHandler = function() {
};
cognitect.transit.MapHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "map";
};
cognitect.transit.MapHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v;
};
cognitect.transit.MapHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.MapHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.MapHandler.cljs$lang$type = true;
cognitect.transit.MapHandler.cljs$lang$ctorStr = "cognitect.transit/MapHandler";
cognitect.transit.MapHandler.cljs$lang$ctorPrWriter = function(this__4890__auto__, writer__4891__auto__, opt__4892__auto__) {
  return cljs.core._write(writer__4891__auto__, "cognitect.transit/MapHandler");
};
cognitect.transit.__GT_MapHandler = function cognitect$transit$__GT_MapHandler() {
  return new cognitect.transit.MapHandler;
};
cognitect.transit.SetHandler = function() {
};
cognitect.transit.SetHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "set";
};
cognitect.transit.SetHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__8284_8288 = cljs.core.seq(v);
  var chunk__8285_8289 = null;
  var count__8286_8290 = 0;
  var i__8287_8291 = 0;
  while (true) {
    if (i__8287_8291 < count__8286_8290) {
      var x_8292 = chunk__8285_8289.cljs$core$IIndexed$_nth$arity$2(null, i__8287_8291);
      ret.push(x_8292);
      var G__8293 = seq__8284_8288;
      var G__8294 = chunk__8285_8289;
      var G__8295 = count__8286_8290;
      var G__8296 = i__8287_8291 + 1;
      seq__8284_8288 = G__8293;
      chunk__8285_8289 = G__8294;
      count__8286_8290 = G__8295;
      i__8287_8291 = G__8296;
      continue;
    } else {
      var temp__4425__auto___8297 = cljs.core.seq(seq__8284_8288);
      if (temp__4425__auto___8297) {
        var seq__8284_8298__$1 = temp__4425__auto___8297;
        if (cljs.core.chunked_seq_QMARK_(seq__8284_8298__$1)) {
          var c__5095__auto___8299 = cljs.core.chunk_first(seq__8284_8298__$1);
          var G__8300 = cljs.core.chunk_rest(seq__8284_8298__$1);
          var G__8301 = c__5095__auto___8299;
          var G__8302 = cljs.core.count(c__5095__auto___8299);
          var G__8303 = 0;
          seq__8284_8288 = G__8300;
          chunk__8285_8289 = G__8301;
          count__8286_8290 = G__8302;
          i__8287_8291 = G__8303;
          continue;
        } else {
          var x_8304 = cljs.core.first(seq__8284_8298__$1);
          ret.push(x_8304);
          var G__8305 = cljs.core.next(seq__8284_8298__$1);
          var G__8306 = null;
          var G__8307 = 0;
          var G__8308 = 0;
          seq__8284_8288 = G__8305;
          chunk__8285_8289 = G__8306;
          count__8286_8290 = G__8307;
          i__8287_8291 = G__8308;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return com.cognitect.transit.tagged.cljs$core$IFn$_invoke$arity$2 ? com.cognitect.transit.tagged.cljs$core$IFn$_invoke$arity$2("array", ret) : com.cognitect.transit.tagged.call(null, "array", ret);
};
cognitect.transit.SetHandler.prototype.stringRep = function() {
  var self__ = this;
  var v = this;
  return null;
};
cognitect.transit.SetHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.SetHandler.cljs$lang$type = true;
cognitect.transit.SetHandler.cljs$lang$ctorStr = "cognitect.transit/SetHandler";
cognitect.transit.SetHandler.cljs$lang$ctorPrWriter = function(this__4890__auto__, writer__4891__auto__, opt__4892__auto__) {
  return cljs.core._write(writer__4891__auto__, "cognitect.transit/SetHandler");
};
cognitect.transit.__GT_SetHandler = function cognitect$transit$__GT_SetHandler() {
  return new cognitect.transit.SetHandler;
};
cognitect.transit.VectorHandler = function() {
};
cognitect.transit.VectorHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "array";
};
cognitect.transit.VectorHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  var ret = [];
  var seq__8309_8313 = cljs.core.seq(v);
  var chunk__8310_8314 = null;
  var count__8311_8315 = 0;
  var i__8312_8316 = 0;
  while (true) {
    if (i__8312_8316 < count__8311_8315) {
      var x_8317 = chunk__8310_8314.cljs$core$IIndexed$_nth$arity$2(null, i__8312_8316);
      ret.push(x_8317);
      var G__8318 = seq__8309_8313;
      var G__8319 = chunk__8310_8314;
      var G__8320 = count__8311_8315;
      var G__8321 = i__8312_8316 + 1;
      seq__8309_8313 = G__8318;
      chunk__8310_8314 = G__8319;
      count__8311_8315 = G__8320;
      i__8312_8316 = G__8321;
      continue;
    } else {
      var temp__4425__auto___8322 = cljs.core.seq(seq__8309_8313);
      if (temp__4425__auto___8322) {
        var seq__8309_8323__$1 = temp__4425__auto___8322;
        if (cljs.core.chunked_seq_QMARK_(seq__8309_8323__$1)) {
          var c__5095__auto___8324 = cljs.core.chunk_first(seq__8309_8323__$1);
          var G__8325 = cljs.core.chunk_rest(seq__8309_8323__$1);
          var G__8326 = c__5095__auto___8324;
          var G__8327 = cljs.core.count(c__5095__auto___8324);
          var G__8328 = 0;
          seq__8309_8313 = G__8325;
          chunk__8310_8314 = G__8326;
          count__8311_8315 = G__8327;
          i__8312_8316 = G__8328;
          continue;
        } else {
          var x_8329 = cljs.core.first(seq__8309_8323__$1);
          ret.push(x_8329);
          var G__8330 = cljs.core.next(seq__8309_8323__$1);
          var G__8331 = null;
          var G__8332 = 0;
          var G__8333 = 0;
          seq__8309_8313 = G__8330;
          chunk__8310_8314 = G__8331;
          count__8311_8315 = G__8332;
          i__8312_8316 = G__8333;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return ret;
};
cognitect.transit.VectorHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var _ = this;
  return null;
};
cognitect.transit.VectorHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.VectorHandler.cljs$lang$type = true;
cognitect.transit.VectorHandler.cljs$lang$ctorStr = "cognitect.transit/VectorHandler";
cognitect.transit.VectorHandler.cljs$lang$ctorPrWriter = function(this__4890__auto__, writer__4891__auto__, opt__4892__auto__) {
  return cljs.core._write(writer__4891__auto__, "cognitect.transit/VectorHandler");
};
cognitect.transit.__GT_VectorHandler = function cognitect$transit$__GT_VectorHandler() {
  return new cognitect.transit.VectorHandler;
};
cognitect.transit.UUIDHandler = function() {
};
cognitect.transit.UUIDHandler.prototype.tag = function(v) {
  var self__ = this;
  var _ = this;
  return "u";
};
cognitect.transit.UUIDHandler.prototype.rep = function(v) {
  var self__ = this;
  var _ = this;
  return v.uuid;
};
cognitect.transit.UUIDHandler.prototype.stringRep = function(v) {
  var self__ = this;
  var this$ = this;
  return this$.rep(v);
};
cognitect.transit.UUIDHandler.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cognitect.transit.UUIDHandler.cljs$lang$type = true;
cognitect.transit.UUIDHandler.cljs$lang$ctorStr = "cognitect.transit/UUIDHandler";
cognitect.transit.UUIDHandler.cljs$lang$ctorPrWriter = function(this__4890__auto__, writer__4891__auto__, opt__4892__auto__) {
  return cljs.core._write(writer__4891__auto__, "cognitect.transit/UUIDHandler");
};
cognitect.transit.__GT_UUIDHandler = function cognitect$transit$__GT_UUIDHandler() {
  return new cognitect.transit.UUIDHandler;
};
cognitect.transit.writer = function cognitect$transit$writer() {
  var args8334 = [];
  var len__5350__auto___8347 = arguments.length;
  var i__5351__auto___8348 = 0;
  while (true) {
    if (i__5351__auto___8348 < len__5350__auto___8347) {
      args8334.push(arguments[i__5351__auto___8348]);
      var G__8349 = i__5351__auto___8348 + 1;
      i__5351__auto___8348 = G__8349;
      continue;
    } else {
    }
    break;
  }
  var G__8336 = args8334.length;
  switch(G__8336) {
    case 1:
      return cognitect.transit.writer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8334.length)].join(""));;
  }
};
cognitect.transit.writer.cljs$core$IFn$_invoke$arity$1 = function(type) {
  return cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2(type, null);
};
cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2 = function(type, opts) {
  var keyword_handler = new cognitect.transit.KeywordHandler;
  var symbol_handler = new cognitect.transit.SymbolHandler;
  var list_handler = new cognitect.transit.ListHandler;
  var map_handler = new cognitect.transit.MapHandler;
  var set_handler = new cognitect.transit.SetHandler;
  var vector_handler = new cognitect.transit.VectorHandler;
  var uuid_handler = new cognitect.transit.UUIDHandler;
  var handlers = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.PersistentHashMap.fromArrays([cljs.core.PersistentHashMap, cljs.core.Cons, cljs.core.PersistentArrayMap, cljs.core.NodeSeq, cljs.core.PersistentQueue, cljs.core.IndexedSeq, cljs.core.Keyword, cljs.core.EmptyList, cljs.core.LazySeq, cljs.core.Subvec, cljs.core.PersistentQueueSeq, cljs.core.ArrayNodeSeq, cljs.core.ValSeq, cljs.core.PersistentArrayMapSeq, cljs.core.PersistentVector, cljs.core.List, cljs.core.RSeq, 
  cljs.core.PersistentHashSet, cljs.core.PersistentTreeMap, cljs.core.KeySeq, cljs.core.ChunkedSeq, cljs.core.PersistentTreeSet, cljs.core.ChunkedCons, cljs.core.Symbol, cljs.core.UUID, cljs.core.Range, cljs.core.PersistentTreeMapSeq], [map_handler, list_handler, map_handler, list_handler, list_handler, list_handler, keyword_handler, list_handler, list_handler, vector_handler, list_handler, list_handler, list_handler, list_handler, vector_handler, list_handler, list_handler, set_handler, map_handler, 
  list_handler, list_handler, set_handler, list_handler, symbol_handler, uuid_handler, list_handler, list_handler]), cljs.core.cst$kw$handlers.cljs$core$IFn$_invoke$arity$1(opts)], 0));
  var G__8337 = cljs.core.name(type);
  var G__8338 = cognitect.transit.opts_merge({"objectBuilder":function(G__8337, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
    return function(m, kfn, vfn) {
      return cljs.core.reduce_kv(function(G__8337, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
        return function(obj, k, v) {
          var G__8339 = obj;
          G__8339.push(kfn.cljs$core$IFn$_invoke$arity$1 ? kfn.cljs$core$IFn$_invoke$arity$1(k) : kfn.call(null, k), vfn.cljs$core$IFn$_invoke$arity$1 ? vfn.cljs$core$IFn$_invoke$arity$1(v) : vfn.call(null, v));
          return G__8339;
        };
      }(G__8337, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers), ["^ "], m);
    };
  }(G__8337, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers), "handlers":function() {
    var x8340 = cljs.core.clone(handlers);
    x8340.forEach = function(x8340, G__8337, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
      return function(f) {
        var coll = this;
        var seq__8341 = cljs.core.seq(coll);
        var chunk__8342 = null;
        var count__8343 = 0;
        var i__8344 = 0;
        while (true) {
          if (i__8344 < count__8343) {
            var vec__8345 = chunk__8342.cljs$core$IIndexed$_nth$arity$2(null, i__8344);
            var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8345, 0, null);
            var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8345, 1, null);
            f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
            var G__8351 = seq__8341;
            var G__8352 = chunk__8342;
            var G__8353 = count__8343;
            var G__8354 = i__8344 + 1;
            seq__8341 = G__8351;
            chunk__8342 = G__8352;
            count__8343 = G__8353;
            i__8344 = G__8354;
            continue;
          } else {
            var temp__4425__auto__ = cljs.core.seq(seq__8341);
            if (temp__4425__auto__) {
              var seq__8341__$1 = temp__4425__auto__;
              if (cljs.core.chunked_seq_QMARK_(seq__8341__$1)) {
                var c__5095__auto__ = cljs.core.chunk_first(seq__8341__$1);
                var G__8355 = cljs.core.chunk_rest(seq__8341__$1);
                var G__8356 = c__5095__auto__;
                var G__8357 = cljs.core.count(c__5095__auto__);
                var G__8358 = 0;
                seq__8341 = G__8355;
                chunk__8342 = G__8356;
                count__8343 = G__8357;
                i__8344 = G__8358;
                continue;
              } else {
                var vec__8346 = cljs.core.first(seq__8341__$1);
                var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8346, 0, null);
                var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8346, 1, null);
                f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
                var G__8359 = cljs.core.next(seq__8341__$1);
                var G__8360 = null;
                var G__8361 = 0;
                var G__8362 = 0;
                seq__8341 = G__8359;
                chunk__8342 = G__8360;
                count__8343 = G__8361;
                i__8344 = G__8362;
                continue;
              }
            } else {
              return null;
            }
          }
          break;
        }
      };
    }(x8340, G__8337, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers);
    return x8340;
  }(), "unpack":function(G__8337, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers) {
    return function(x) {
      if (x instanceof cljs.core.PersistentArrayMap) {
        return x.arr;
      } else {
        return false;
      }
    };
  }(G__8337, keyword_handler, symbol_handler, list_handler, map_handler, set_handler, vector_handler, uuid_handler, handlers)}, cljs.core.clj__GT_js(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(opts, cljs.core.cst$kw$handlers)));
  return com.cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2 ? com.cognitect.transit.writer.cljs$core$IFn$_invoke$arity$2(G__8337, G__8338) : com.cognitect.transit.writer.call(null, G__8337, G__8338);
};
cognitect.transit.writer.cljs$lang$maxFixedArity = 2;
cognitect.transit.write = function cognitect$transit$write(w, o) {
  return w.write(o);
};
cognitect.transit.read_handler = function cognitect$transit$read_handler(from_rep) {
  return from_rep;
};
cognitect.transit.write_handler = function cognitect$transit$write_handler() {
  var args8363 = [];
  var len__5350__auto___8369 = arguments.length;
  var i__5351__auto___8370 = 0;
  while (true) {
    if (i__5351__auto___8370 < len__5350__auto___8369) {
      args8363.push(arguments[i__5351__auto___8370]);
      var G__8371 = i__5351__auto___8370 + 1;
      i__5351__auto___8370 = G__8371;
      continue;
    } else {
    }
    break;
  }
  var G__8365 = args8363.length;
  switch(G__8365) {
    case 2:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8363.length)].join(""));;
  }
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$2 = function(tag_fn, rep_fn) {
  return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$4(tag_fn, rep_fn, null, null);
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$3 = function(tag_fn, rep_fn, str_rep_fn) {
  return cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$4(tag_fn, rep_fn, str_rep_fn, null);
};
cognitect.transit.write_handler.cljs$core$IFn$_invoke$arity$4 = function(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn) {
  if (typeof cognitect.transit.t8366 !== "undefined") {
  } else {
    cognitect.transit.t8366 = function(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn, meta8367) {
      this.tag_fn = tag_fn;
      this.rep_fn = rep_fn;
      this.str_rep_fn = str_rep_fn;
      this.verbose_handler_fn = verbose_handler_fn;
      this.meta8367 = meta8367;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cognitect.transit.t8366.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_8368, meta8367__$1) {
      var self__ = this;
      var _8368__$1 = this;
      return new cognitect.transit.t8366(self__.tag_fn, self__.rep_fn, self__.str_rep_fn, self__.verbose_handler_fn, meta8367__$1);
    };
    cognitect.transit.t8366.prototype.cljs$core$IMeta$_meta$arity$1 = function(_8368) {
      var self__ = this;
      var _8368__$1 = this;
      return self__.meta8367;
    };
    cognitect.transit.t8366.prototype.tag = function(o) {
      var self__ = this;
      var _ = this;
      return self__.tag_fn.cljs$core$IFn$_invoke$arity$1 ? self__.tag_fn.cljs$core$IFn$_invoke$arity$1(o) : self__.tag_fn.call(null, o);
    };
    cognitect.transit.t8366.prototype.rep = function(o) {
      var self__ = this;
      var _ = this;
      return self__.rep_fn.cljs$core$IFn$_invoke$arity$1 ? self__.rep_fn.cljs$core$IFn$_invoke$arity$1(o) : self__.rep_fn.call(null, o);
    };
    cognitect.transit.t8366.prototype.stringRep = function(o) {
      var self__ = this;
      var _ = this;
      if (self__.str_rep_fn) {
        return self__.str_rep_fn.cljs$core$IFn$_invoke$arity$1 ? self__.str_rep_fn.cljs$core$IFn$_invoke$arity$1(o) : self__.str_rep_fn.call(null, o);
      } else {
        return null;
      }
    };
    cognitect.transit.t8366.prototype.getVerboseHandler = function() {
      var self__ = this;
      var _ = this;
      if (self__.verbose_handler_fn) {
        return self__.verbose_handler_fn.cljs$core$IFn$_invoke$arity$0 ? self__.verbose_handler_fn.cljs$core$IFn$_invoke$arity$0() : self__.verbose_handler_fn.call(null);
      } else {
        return null;
      }
    };
    cognitect.transit.t8366.getBasis = function() {
      return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$tag_DASH_fn, cljs.core.cst$sym$rep_DASH_fn, cljs.core.cst$sym$str_DASH_rep_DASH_fn, cljs.core.cst$sym$verbose_DASH_handler_DASH_fn, cljs.core.cst$sym$meta8367], null);
    };
    cognitect.transit.t8366.cljs$lang$type = true;
    cognitect.transit.t8366.cljs$lang$ctorStr = "cognitect.transit/t8366";
    cognitect.transit.t8366.cljs$lang$ctorPrWriter = function(this__4890__auto__, writer__4891__auto__, opt__4892__auto__) {
      return cljs.core._write(writer__4891__auto__, "cognitect.transit/t8366");
    };
    cognitect.transit.__GT_t8366 = function cognitect$transit$__GT_t8366(tag_fn__$1, rep_fn__$1, str_rep_fn__$1, verbose_handler_fn__$1, meta8367) {
      return new cognitect.transit.t8366(tag_fn__$1, rep_fn__$1, str_rep_fn__$1, verbose_handler_fn__$1, meta8367);
    };
  }
  return new cognitect.transit.t8366(tag_fn, rep_fn, str_rep_fn, verbose_handler_fn, cljs.core.PersistentArrayMap.EMPTY);
};
cognitect.transit.write_handler.cljs$lang$maxFixedArity = 4;
cognitect.transit.tagged_value = function cognitect$transit$tagged_value(tag, rep) {
  return com.cognitect.transit.types.taggedValue.cljs$core$IFn$_invoke$arity$2 ? com.cognitect.transit.types.taggedValue.cljs$core$IFn$_invoke$arity$2(tag, rep) : com.cognitect.transit.types.taggedValue.call(null, tag, rep);
};
cognitect.transit.tagged_value_QMARK_ = function cognitect$transit$tagged_value_QMARK_(x) {
  return com.cognitect.transit.types.isTaggedValue.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.isTaggedValue.cljs$core$IFn$_invoke$arity$1(x) : com.cognitect.transit.types.isTaggedValue.call(null, x);
};
cognitect.transit.integer = function cognitect$transit$integer(s) {
  return com.cognitect.transit.types.intValue.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.intValue.cljs$core$IFn$_invoke$arity$1(s) : com.cognitect.transit.types.intValue.call(null, s);
};
cognitect.transit.integer_QMARK_ = function cognitect$transit$integer_QMARK_(x) {
  return com.cognitect.transit.types.isInteger.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.isInteger.cljs$core$IFn$_invoke$arity$1(x) : com.cognitect.transit.types.isInteger.call(null, x);
};
cognitect.transit.bigint = function cognitect$transit$bigint(s) {
  return com.cognitect.transit.types.bigInteger.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.bigInteger.cljs$core$IFn$_invoke$arity$1(s) : com.cognitect.transit.types.bigInteger.call(null, s);
};
cognitect.transit.bigint_QMARK_ = function cognitect$transit$bigint_QMARK_(x) {
  return com.cognitect.transit.types.isBigInteger.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.isBigInteger.cljs$core$IFn$_invoke$arity$1(x) : com.cognitect.transit.types.isBigInteger.call(null, x);
};
cognitect.transit.bigdec = function cognitect$transit$bigdec(s) {
  return com.cognitect.transit.types.bigDecimalValue.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.bigDecimalValue.cljs$core$IFn$_invoke$arity$1(s) : com.cognitect.transit.types.bigDecimalValue.call(null, s);
};
cognitect.transit.bigdec_QMARK_ = function cognitect$transit$bigdec_QMARK_(x) {
  return com.cognitect.transit.types.isBigDecimal.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.isBigDecimal.cljs$core$IFn$_invoke$arity$1(x) : com.cognitect.transit.types.isBigDecimal.call(null, x);
};
cognitect.transit.uri = function cognitect$transit$uri(s) {
  return com.cognitect.transit.types.uri.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.uri.cljs$core$IFn$_invoke$arity$1(s) : com.cognitect.transit.types.uri.call(null, s);
};
cognitect.transit.uri_QMARK_ = function cognitect$transit$uri_QMARK_(x) {
  return com.cognitect.transit.types.isURI.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.isURI.cljs$core$IFn$_invoke$arity$1(x) : com.cognitect.transit.types.isURI.call(null, x);
};
cognitect.transit.uuid = function cognitect$transit$uuid(s) {
  return com.cognitect.transit.types.uuid.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.uuid.cljs$core$IFn$_invoke$arity$1(s) : com.cognitect.transit.types.uuid.call(null, s);
};
cognitect.transit.uuid_QMARK_ = function cognitect$transit$uuid_QMARK_(x) {
  return com.cognitect.transit.types.isUUID.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.isUUID.cljs$core$IFn$_invoke$arity$1(x) : com.cognitect.transit.types.isUUID.call(null, x);
};
cognitect.transit.binary = function cognitect$transit$binary(s) {
  return com.cognitect.transit.types.binary.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.binary.cljs$core$IFn$_invoke$arity$1(s) : com.cognitect.transit.types.binary.call(null, s);
};
cognitect.transit.binary_QMARK_ = function cognitect$transit$binary_QMARK_(x) {
  return com.cognitect.transit.types.isBinary.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.isBinary.cljs$core$IFn$_invoke$arity$1(x) : com.cognitect.transit.types.isBinary.call(null, x);
};
cognitect.transit.quoted = function cognitect$transit$quoted(x) {
  return com.cognitect.transit.types.quoted.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.quoted.cljs$core$IFn$_invoke$arity$1(x) : com.cognitect.transit.types.quoted.call(null, x);
};
cognitect.transit.quoted_QMARK_ = function cognitect$transit$quoted_QMARK_(x) {
  return com.cognitect.transit.types.isQuoted.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.isQuoted.cljs$core$IFn$_invoke$arity$1(x) : com.cognitect.transit.types.isQuoted.call(null, x);
};
cognitect.transit.link = function cognitect$transit$link(x) {
  return com.cognitect.transit.types.link.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.link.cljs$core$IFn$_invoke$arity$1(x) : com.cognitect.transit.types.link.call(null, x);
};
cognitect.transit.link_QMARK_ = function cognitect$transit$link_QMARK_(x) {
  return com.cognitect.transit.types.isLink.cljs$core$IFn$_invoke$arity$1 ? com.cognitect.transit.types.isLink.cljs$core$IFn$_invoke$arity$1(x) : com.cognitect.transit.types.isLink.call(null, x);
};
goog.provide("cljs.repl");
goog.require("cljs.core");
cljs.repl.print_doc = function cljs$repl$print_doc(m) {
  cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["-------------------------"], 0));
  cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([[cljs.core.str(function() {
    var temp__4425__auto__ = cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(m);
    if (temp__4425__auto__) {
      var ns = temp__4425__auto__;
      return [cljs.core.str(ns), cljs.core.str("/")].join("");
    } else {
      return null;
    }
  }()), cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m))].join("")], 0));
  if (cljs.core.cst$kw$protocol.cljs$core$IFn$_invoke$arity$1(m)) {
    cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Protocol"], 0));
  } else {
  }
  if (cljs.core.cst$kw$forms.cljs$core$IFn$_invoke$arity$1(m)) {
    var seq__13164_13178 = cljs.core.seq(cljs.core.cst$kw$forms.cljs$core$IFn$_invoke$arity$1(m));
    var chunk__13165_13179 = null;
    var count__13166_13180 = 0;
    var i__13167_13181 = 0;
    while (true) {
      if (i__13167_13181 < count__13166_13180) {
        var f_13182 = chunk__13165_13179.cljs$core$IIndexed$_nth$arity$2(null, i__13167_13181);
        cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["  ", f_13182], 0));
        var G__13183 = seq__13164_13178;
        var G__13184 = chunk__13165_13179;
        var G__13185 = count__13166_13180;
        var G__13186 = i__13167_13181 + 1;
        seq__13164_13178 = G__13183;
        chunk__13165_13179 = G__13184;
        count__13166_13180 = G__13185;
        i__13167_13181 = G__13186;
        continue;
      } else {
        var temp__4425__auto___13187 = cljs.core.seq(seq__13164_13178);
        if (temp__4425__auto___13187) {
          var seq__13164_13188__$1 = temp__4425__auto___13187;
          if (cljs.core.chunked_seq_QMARK_(seq__13164_13188__$1)) {
            var c__5095__auto___13189 = cljs.core.chunk_first(seq__13164_13188__$1);
            var G__13190 = cljs.core.chunk_rest(seq__13164_13188__$1);
            var G__13191 = c__5095__auto___13189;
            var G__13192 = cljs.core.count(c__5095__auto___13189);
            var G__13193 = 0;
            seq__13164_13178 = G__13190;
            chunk__13165_13179 = G__13191;
            count__13166_13180 = G__13192;
            i__13167_13181 = G__13193;
            continue;
          } else {
            var f_13194 = cljs.core.first(seq__13164_13188__$1);
            cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["  ", f_13194], 0));
            var G__13195 = cljs.core.next(seq__13164_13188__$1);
            var G__13196 = null;
            var G__13197 = 0;
            var G__13198 = 0;
            seq__13164_13178 = G__13195;
            chunk__13165_13179 = G__13196;
            count__13166_13180 = G__13197;
            i__13167_13181 = G__13198;
            continue;
          }
        } else {
        }
      }
      break;
    }
  } else {
    if (cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m)) {
      var arglists_13199 = cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m);
      if (function() {
        var or__4311__auto__ = cljs.core.cst$kw$macro.cljs$core$IFn$_invoke$arity$1(m);
        if (or__4311__auto__) {
          return or__4311__auto__;
        } else {
          return cljs.core.cst$kw$repl_DASH_special_DASH_function.cljs$core$IFn$_invoke$arity$1(m);
        }
      }()) {
        cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([arglists_13199], 0));
      } else {
        cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$quote, cljs.core.first(arglists_13199)) ? cljs.core.second(arglists_13199) : arglists_13199], 0));
      }
    } else {
    }
  }
  if (cljs.core.cst$kw$special_DASH_form.cljs$core$IFn$_invoke$arity$1(m)) {
    cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Special Form"], 0));
    cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" ", cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m)], 0));
    if (cljs.core.contains_QMARK_(m, cljs.core.cst$kw$url)) {
      if (cljs.core.cst$kw$url.cljs$core$IFn$_invoke$arity$1(m)) {
        return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([[cljs.core.str("\n  Please see http://clojure.org/"), cljs.core.str(cljs.core.cst$kw$url.cljs$core$IFn$_invoke$arity$1(m))].join("")], 0));
      } else {
        return null;
      }
    } else {
      return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([[cljs.core.str("\n  Please see http://clojure.org/special_forms#"), cljs.core.str(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m))].join("")], 0));
    }
  } else {
    if (cljs.core.cst$kw$macro.cljs$core$IFn$_invoke$arity$1(m)) {
      cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Macro"], 0));
    } else {
    }
    if (cljs.core.cst$kw$repl_DASH_special_DASH_function.cljs$core$IFn$_invoke$arity$1(m)) {
      cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["REPL Special Function"], 0));
    } else {
    }
    cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" ", cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m)], 0));
    if (cljs.core.cst$kw$protocol.cljs$core$IFn$_invoke$arity$1(m)) {
      var seq__13168 = cljs.core.seq(cljs.core.cst$kw$methods.cljs$core$IFn$_invoke$arity$1(m));
      var chunk__13169 = null;
      var count__13170 = 0;
      var i__13171 = 0;
      while (true) {
        if (i__13171 < count__13170) {
          var vec__13172 = chunk__13169.cljs$core$IIndexed$_nth$arity$2(null, i__13171);
          var name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13172, 0, null);
          var map__13173 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13172, 1, null);
          var map__13173__$1 = (!(map__13173 == null) ? map__13173.cljs$lang$protocol_mask$partition0$ & 64 || map__13173.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__13173) : map__13173;
          var doc = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13173__$1, cljs.core.cst$kw$doc);
          var arglists = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13173__$1, cljs.core.cst$kw$arglists);
          cljs.core.println();
          cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" ", name], 0));
          cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" ", arglists], 0));
          if (doc) {
            cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" ", doc], 0));
          } else {
          }
          var G__13200 = seq__13168;
          var G__13201 = chunk__13169;
          var G__13202 = count__13170;
          var G__13203 = i__13171 + 1;
          seq__13168 = G__13200;
          chunk__13169 = G__13201;
          count__13170 = G__13202;
          i__13171 = G__13203;
          continue;
        } else {
          var temp__4425__auto__ = cljs.core.seq(seq__13168);
          if (temp__4425__auto__) {
            var seq__13168__$1 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_(seq__13168__$1)) {
              var c__5095__auto__ = cljs.core.chunk_first(seq__13168__$1);
              var G__13204 = cljs.core.chunk_rest(seq__13168__$1);
              var G__13205 = c__5095__auto__;
              var G__13206 = cljs.core.count(c__5095__auto__);
              var G__13207 = 0;
              seq__13168 = G__13204;
              chunk__13169 = G__13205;
              count__13170 = G__13206;
              i__13171 = G__13207;
              continue;
            } else {
              var vec__13175 = cljs.core.first(seq__13168__$1);
              var name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13175, 0, null);
              var map__13176 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13175, 1, null);
              var map__13176__$1 = (!(map__13176 == null) ? map__13176.cljs$lang$protocol_mask$partition0$ & 64 || map__13176.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__13176) : map__13176;
              var doc = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13176__$1, cljs.core.cst$kw$doc);
              var arglists = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13176__$1, cljs.core.cst$kw$arglists);
              cljs.core.println();
              cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" ", name], 0));
              cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" ", arglists], 0));
              if (doc) {
                cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([" ", doc], 0));
              } else {
              }
              var G__13208 = cljs.core.next(seq__13168__$1);
              var G__13209 = null;
              var G__13210 = 0;
              var G__13211 = 0;
              seq__13168 = G__13208;
              chunk__13169 = G__13209;
              count__13170 = G__13210;
              i__13171 = G__13211;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    } else {
      return null;
    }
  }
};
goog.provide("cljs_bootstrap.core");
goog.require("cljs.core");
goog.require("cljs.js");
goog.require("cljs.tools.reader");
goog.require("cljs.tagged_literals");
goog.require("cljs.analyzer");
goog.require("cognitect.transit");
goog.require("cljs.repl");
if (typeof cljs_bootstrap.core.st !== "undefined") {
} else {
  cljs_bootstrap.core.st = cljs.js.empty_state.cljs$core$IFn$_invoke$arity$0();
}
cljs_bootstrap.core.native_eval = function cljs_bootstrap$core$native_eval() {
  throw "eval function not set";
};
cljs_bootstrap.core.get_native_eval = function cljs_bootstrap$core$get_native_eval() {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_target_STAR_, "nodejs")) {
    var vm = require("vm");
    try {
      require("source-map-support").install();
    } catch (e6159) {
      var __6163 = e6159;
      cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["Could not load source-map support"], 0));
    }
    return function(vm) {
      return function(p__6160) {
        var map__6161 = p__6160;
        var map__6161__$1 = (!(map__6161 == null) ? map__6161.cljs$lang$protocol_mask$partition0$ & 64 || map__6161.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__6161) : map__6161;
        var res = map__6161__$1;
        var name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6161__$1, cljs.core.cst$kw$name);
        var source = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6161__$1, cljs.core.cst$kw$source);
        return cljs.js.js_eval(res);
      };
    }(vm);
  } else {
    return cljs.js.js_eval;
  }
};
cljs_bootstrap.core._STAR_lib_base_path_STAR_ = "src/";
cljs_bootstrap.core._STAR_file_extensions_STAR_ = new cljs.core.PersistentArrayMap(null, 2, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [".cljs", ".cljc", ".js"], null), true, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [".clj", ".cljc"], null)], null);
cljs_bootstrap.core.set_load_cfg = function cljs_bootstrap$core$set_load_cfg() {
  var args__5357__auto__ = [];
  var len__5350__auto___6168 = arguments.length;
  var i__5351__auto___6169 = 0;
  while (true) {
    if (i__5351__auto___6169 < len__5350__auto___6168) {
      args__5357__auto__.push(arguments[i__5351__auto___6169]);
      var G__6170 = i__5351__auto___6169 + 1;
      i__5351__auto___6169 = G__6170;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 0 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(0), 0) : null;
  return cljs_bootstrap.core.set_load_cfg.cljs$core$IFn$_invoke$arity$variadic(argseq__5358__auto__);
};
cljs_bootstrap.core.set_load_cfg.cljs$core$IFn$_invoke$arity$variadic = function(p__6165) {
  var map__6166 = p__6165;
  var map__6166__$1 = (!(map__6166 == null) ? map__6166.cljs$lang$protocol_mask$partition0$ & 64 || map__6166.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__6166) : map__6166;
  var lib_base_path = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6166__$1, cljs.core.cst$kw$lib_DASH_base_DASH_path);
  if (cljs.core.truth_(lib_base_path)) {
    cljs_bootstrap.core._STAR_lib_base_path_STAR_ = lib_base_path;
  } else {
  }
  return null;
};
cljs_bootstrap.core.set_load_cfg.cljs$lang$maxFixedArity = 0;
cljs_bootstrap.core.set_load_cfg.cljs$lang$applyTo = function(seq6164) {
  return cljs_bootstrap.core.set_load_cfg.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq6164));
};
cljs_bootstrap.core.get_file_STAR_ = function cljs_bootstrap$core$get_file_STAR_(extensions, p__6171, cb) {
  var map__6183 = p__6171;
  var map__6183__$1 = (!(map__6183 == null) ? map__6183.cljs$lang$protocol_mask$partition0$ & 64 || map__6183.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__6183) : map__6183;
  var cfg = map__6183__$1;
  var path = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6183__$1, cljs.core.cst$kw$path);
  var file = [cljs.core.str(cljs_bootstrap.core._STAR_lib_base_path_STAR_), cljs.core.str(path), cljs.core.str(cljs.core.first(extensions))].join("");
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_target_STAR_, "nodejs")) {
    var fs = require("fs");
    return fs.readFile(file, "utf-8", function(fs, file, map__6183, map__6183__$1, cfg, path) {
      return function(err, src) {
        if (cljs.core.not(err)) {
          var G__6185 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$lang, cljs.core.cst$kw$clj, cljs.core.cst$kw$source, src], null);
          return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__6185) : cb.call(null, G__6185);
        } else {
          if (cljs.core.seq(extensions)) {
            return cljs_bootstrap$core$get_file_STAR_(cljs.core.next(extensions), cfg, cb);
          } else {
            return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(null) : cb.call(null, null);
          }
        }
      };
    }(fs, file, map__6183, map__6183__$1, cfg, path));
  } else {
    var url = [cljs.core.str(window.location.origin), cljs.core.str("/"), cljs.core.str(file)].join("");
    var req = function() {
      var G__6186 = new XMLHttpRequest;
      G__6186.open("GET", url);
      return G__6186;
    }();
    req.onreadystatechange = function(url, req, file, map__6183, map__6183__$1, cfg, path) {
      return function() {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(4, req.readyState)) {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(200, req.status)) {
            var src = req.responseText;
            var G__6187 = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$lang, cljs.core.cst$kw$clj, cljs.core.cst$kw$source, src], null);
            return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(G__6187) : cb.call(null, G__6187);
          } else {
            var emsg = [cljs.core.str("XHR load failed:"), cljs.core.str(req.status)].join("");
            if (cljs.core.seq(extensions)) {
              return cljs_bootstrap$core$get_file_STAR_(cljs.core.next(extensions), cfg, cb);
            } else {
              return cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(null) : cb.call(null, null);
            }
          }
        } else {
          return null;
        }
      };
    }(url, req, file, map__6183, map__6183__$1, cfg, path);
    return req.send();
  }
};
cljs_bootstrap.core.native_load = function cljs_bootstrap$core$native_load(p__6188, cb) {
  var map__6191 = p__6188;
  var map__6191__$1 = (!(map__6191 == null) ? map__6191.cljs$lang$protocol_mask$partition0$ & 64 || map__6191.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__6191) : map__6191;
  var cfg = map__6191__$1;
  var macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6191__$1, cljs.core.cst$kw$macros);
  return cljs_bootstrap.core.get_file_STAR_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs_bootstrap.core._STAR_file_extensions_STAR_, macros), cfg, cb);
};
cljs_bootstrap.core.load_core_analysis_cache = function cljs_bootstrap$core$load_core_analysis_cache(json) {
  var rdr = cognitect.transit.reader.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$json);
  var cache = cognitect.transit.read(rdr, json);
  return cljs.js.load_analysis_cache_BANG_(cljs_bootstrap.core.st, cljs.core.cst$sym$cljs$core, cache);
};
cljs_bootstrap.core.init_repl = function cljs_bootstrap$core$init_repl() {
  var args__5357__auto__ = [];
  var len__5350__auto___6195 = arguments.length;
  var i__5351__auto___6196 = 0;
  while (true) {
    if (i__5351__auto___6196 < len__5350__auto___6195) {
      args__5357__auto__.push(arguments[i__5351__auto___6196]);
      var G__6197 = i__5351__auto___6196 + 1;
      i__5351__auto___6196 = G__6197;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 1 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(1), 0) : null;
  return cljs_bootstrap.core.init_repl.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5358__auto__);
};
cljs_bootstrap.core.init_repl.cljs$core$IFn$_invoke$arity$variadic = function(mode, init_opts) {
  cljs.core._STAR_target_STAR_ = mode;
  cljs_bootstrap.core.native_eval = cljs_bootstrap.core.get_native_eval();
  cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs_bootstrap.core.set_load_cfg, init_opts);
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_target_STAR_, "nodejs")) {
    return global.cljs.user = {};
  } else {
    return window.cljs.user = {};
  }
};
cljs_bootstrap.core.init_repl.cljs$lang$maxFixedArity = 1;
cljs_bootstrap.core.init_repl.cljs$lang$applyTo = function(seq6193) {
  var G__6194 = cljs.core.first(seq6193);
  var seq6193__$1 = cljs.core.next(seq6193);
  return cljs_bootstrap.core.init_repl.cljs$core$IFn$_invoke$arity$variadic(G__6194, seq6193__$1);
};
if (typeof cljs_bootstrap.core.current_ns !== "undefined") {
} else {
  cljs_bootstrap.core.current_ns = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$sym$cljs$user) : cljs.core.atom.call(null, cljs.core.cst$sym$cljs$user);
}
if (typeof cljs_bootstrap.core.app_env !== "undefined") {
} else {
  cljs_bootstrap.core.app_env = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null) : cljs.core.atom.call(null, null);
}
cljs_bootstrap.core.map_keys = function cljs_bootstrap$core$map_keys(f, m) {
  return cljs.core.reduce_kv(function(r, k, v) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(r, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(k) : f.call(null, k), v);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
cljs_bootstrap.core.init_app_env = function cljs_bootstrap$core$init_app_env(app_env) {
  var G__6200 = app_env;
  var G__6201 = cljs_bootstrap.core.map_keys(cljs.core.keyword, cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(app_env));
  return cljs.core.reset_BANG_.cljs$core$IFn$_invoke$arity$2 ? cljs.core.reset_BANG_.cljs$core$IFn$_invoke$arity$2(G__6200, G__6201) : cljs.core.reset_BANG_.call(null, G__6200, G__6201);
};
goog.exportSymbol("cljs_bootstrap.core.init_app_env", cljs_bootstrap.core.init_app_env);
cljs_bootstrap.core.repl_read_string = function cljs_bootstrap$core$repl_read_string(line) {
  return cljs.tools.reader.read_string.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$read_DASH_cond, cljs.core.cst$kw$allow, cljs.core.cst$kw$features, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$cljs, null], null), null)], null), line);
};
cljs_bootstrap.core.is_readable_QMARK_ = function cljs_bootstrap$core$is_readable_QMARK_(line) {
  var _STAR_data_readers_STAR_6204 = cljs.tools.reader._STAR_data_readers_STAR_;
  cljs.tools.reader._STAR_data_readers_STAR_ = cljs.tagged_literals._STAR_cljs_data_readers_STAR_;
  try {
    try {
      cljs_bootstrap.core.repl_read_string(line);
      return true;
    } catch (e6205) {
      var _ = e6205;
      return false;
    }
  } finally {
    cljs.tools.reader._STAR_data_readers_STAR_ = _STAR_data_readers_STAR_6204;
  }
};
goog.exportSymbol("cljs_bootstrap.core.is_readable_QMARK_", cljs_bootstrap.core.is_readable_QMARK_);
cljs_bootstrap.core.ns_form_QMARK_ = function cljs_bootstrap$core$ns_form_QMARK_(form) {
  return cljs.core.seq_QMARK_(form) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$ns, cljs.core.first(form));
};
cljs_bootstrap.core.repl_specials = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$sym$doc, null, cljs.core.cst$sym$in_DASH_ns, null, cljs.core.cst$sym$require, null, cljs.core.cst$sym$require_DASH_macros, null], null), null);
cljs_bootstrap.core.repl_special_QMARK_ = function cljs_bootstrap$core$repl_special_QMARK_(form) {
  var and__4299__auto__ = cljs.core.seq_QMARK_(form);
  if (and__4299__auto__) {
    var G__6209 = cljs.core.first(form);
    return cljs_bootstrap.core.repl_specials.cljs$core$IFn$_invoke$arity$1 ? cljs_bootstrap.core.repl_specials.cljs$core$IFn$_invoke$arity$1(G__6209) : cljs_bootstrap.core.repl_specials.call(null, G__6209);
  } else {
    return and__4299__auto__;
  }
};
cljs_bootstrap.core.repl_special_doc_map = new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$sym$in_DASH_ns, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$arglists, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$name], null)), cljs.core.cst$kw$doc, "Sets *cljs-ns* to the namespace named by the symbol, creating it if needed."], null), cljs.core.cst$sym$require, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$arglists, 
cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_, cljs.core.cst$sym$args], null)), cljs.core.cst$kw$doc, "Loads libs, skipping any that are already loaded."], null), cljs.core.cst$sym$require_DASH_macros, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$arglists, cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_, cljs.core.cst$sym$args], 
null)), cljs.core.cst$kw$doc, "Similar to the require REPL special function but\n                    only for macros."], null), cljs.core.cst$sym$doc, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$arglists, cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$name], null)), cljs.core.cst$kw$doc, "Prints documentation for a var or special form given its name"], null)], null);
cljs_bootstrap.core.repl_special_doc = function cljs_bootstrap$core$repl_special_doc(name_symbol) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(cljs_bootstrap.core.repl_special_doc_map.cljs$core$IFn$_invoke$arity$1 ? cljs_bootstrap.core.repl_special_doc_map.cljs$core$IFn$_invoke$arity$1(name_symbol) : cljs_bootstrap.core.repl_special_doc_map.call(null, name_symbol), cljs.core.cst$kw$name, name_symbol, cljs.core.array_seq([cljs.core.cst$kw$repl_DASH_special_DASH_function, true], 0));
};
cljs_bootstrap.core.resolve = function cljs_bootstrap$core$resolve(env, sym) {
  if (cljs.core.map_QMARK_(env)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$map_QMARK_, cljs.core.cst$sym$env)], 0)))].join(""));
  }
  if (sym instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(cljs.core.cst$sym$symbol_QMARK_, cljs.core.cst$sym$sym)], 0)))].join(""));
  }
  try {
    return cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env, sym, cljs.analyzer.confirm_var_exists_throw());
  } catch (e6211) {
    var _ = e6211;
    return cljs.analyzer.resolve_macro_var(env, sym);
  }
};
cljs_bootstrap.core.get_prompt = function cljs_bootstrap$core$get_prompt() {
  return [cljs.core.str(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs_bootstrap.core.current_ns) : cljs.core.deref.call(null, cljs_bootstrap.core.current_ns)), cljs.core.str("=> ")].join("");
};
goog.exportSymbol("cljs_bootstrap.core.get_prompt", cljs_bootstrap.core.get_prompt);
cljs_bootstrap.core.extension__GT_lang = function cljs_bootstrap$core$extension__GT_lang(extension) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(".js", extension)) {
    return cljs.core.cst$kw$js;
  } else {
    return cljs.core.cst$kw$clj;
  }
};
cljs_bootstrap.core.require = function cljs_bootstrap$core$require(macros_ns_QMARK_, sym, reload) {
  return cljs.js.require.cljs$core$IFn$_invoke$arity$5(new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$_STAR_compiler_STAR_, cljs_bootstrap.core.st, cljs.core.cst$kw$_STAR_data_DASH_readers_STAR_, cljs.tagged_literals._STAR_cljs_data_readers_STAR_, cljs.core.cst$kw$_STAR_load_DASH_fn_STAR_, cljs_bootstrap.core.native_load, cljs.core.cst$kw$_STAR_eval_DASH_fn_STAR_, cljs_bootstrap.core.native_eval], null), sym, reload, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$macros_DASH_ns, 
  macros_ns_QMARK_, cljs.core.cst$kw$verbose, cljs.core.cst$kw$verbose.cljs$core$IFn$_invoke$arity$1(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs_bootstrap.core.app_env) : cljs.core.deref.call(null, cljs_bootstrap.core.app_env))], null), function(res) {
    return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(["require result:", res], 0));
  });
};
cljs_bootstrap.core.require_destructure = function cljs_bootstrap$core$require_destructure(macros_ns_QMARK_, args) {
  var vec__6214 = args;
  var vec__6215 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6214, 0, null);
  var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6215, 0, null);
  var sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6215, 1, null);
  var reload = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__6214, 1, null);
  return cljs_bootstrap.core.require(macros_ns_QMARK_, sym, reload);
};
cljs_bootstrap.core.run_main = function cljs_bootstrap$core$run_main(main_ns, args) {
  var main_args = cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(args);
  cljs_bootstrap.core.require(false, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(main_ns), null);
  cljs.js.eval_str.cljs$core$IFn$_invoke$arity$5(cljs_bootstrap.core.st, [cljs.core.str("(var -main)")].join(""), null, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns, cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(main_ns), cljs.core.cst$kw$load, cljs_bootstrap.core.native_load, cljs.core.cst$kw$eval, cljs_bootstrap.core.native_eval, cljs.core.cst$kw$source_DASH_map, false, cljs.core.cst$kw$context, cljs.core.cst$kw$expr], null), function(main_args) {
    return function(p__6219) {
      var map__6220 = p__6219;
      var map__6220__$1 = (!(map__6220 == null) ? map__6220.cljs$lang$protocol_mask$partition0$ & 64 || map__6220.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__6220) : map__6220;
      var ret = map__6220__$1;
      var ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6220__$1, cljs.core.cst$kw$ns);
      var value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6220__$1, cljs.core.cst$kw$value);
      var error = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6220__$1, cljs.core.cst$kw$error);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(value, args);
    };
  }(main_args));
  return null;
};
goog.exportSymbol("cljs_bootstrap.core.run_main", cljs_bootstrap.core.run_main);
cljs_bootstrap.core.print_error = function cljs_bootstrap$core$print_error(error) {
  var cause = error.cause;
  if (cljs.core.truth_(cause)) {
    cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cause.message], 0));
    return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cause.stack], 0));
  } else {
    cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([error.message], 0));
    return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([error.stack], 0));
  }
};
cljs_bootstrap.core.read_eval_print = function cljs_bootstrap$core$read_eval_print() {
  var args6222 = [];
  var len__5350__auto___6241 = arguments.length;
  var i__5351__auto___6242 = 0;
  while (true) {
    if (i__5351__auto___6242 < len__5350__auto___6241) {
      args6222.push(arguments[i__5351__auto___6242]);
      var G__6243 = i__5351__auto___6242 + 1;
      i__5351__auto___6242 = G__6243;
      continue;
    } else {
    }
    break;
  }
  var G__6224 = args6222.length;
  switch(G__6224) {
    case 2:
      return cljs_bootstrap.core.read_eval_print.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs_bootstrap.core.read_eval_print.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args6222.length)].join(""));;
  }
};
goog.exportSymbol("cljs_bootstrap.core.read_eval_print", cljs_bootstrap.core.read_eval_print);
cljs_bootstrap.core.read_eval_print.cljs$core$IFn$_invoke$arity$2 = function(source, cb) {
  return cljs_bootstrap.core.read_eval_print.cljs$core$IFn$_invoke$arity$3(source, true, cb);
};
cljs_bootstrap.core.read_eval_print.cljs$core$IFn$_invoke$arity$3 = function(source, expression_QMARK_, cb) {
  var _STAR_cljs_ns_STAR_6225 = cljs.analyzer._STAR_cljs_ns_STAR_;
  var _STAR_ns_STAR_6226 = cljs.core._STAR_ns_STAR_;
  var _STAR_data_readers_STAR_6227 = cljs.tools.reader._STAR_data_readers_STAR_;
  cljs.analyzer._STAR_cljs_ns_STAR_ = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs_bootstrap.core.current_ns) : cljs.core.deref.call(null, cljs_bootstrap.core.current_ns);
  cljs.core._STAR_ns_STAR_ = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs_bootstrap.core.current_ns) : cljs.core.deref.call(null, cljs_bootstrap.core.current_ns));
  cljs.tools.reader._STAR_data_readers_STAR_ = cljs.tagged_literals._STAR_cljs_data_readers_STAR_;
  try {
    try {
      var expression_form = function() {
        var and__4299__auto__ = expression_QMARK_;
        if (cljs.core.truth_(and__4299__auto__)) {
          return cljs_bootstrap.core.repl_read_string(source);
        } else {
          return and__4299__auto__;
        }
      }();
      if (cljs.core.truth_(cljs_bootstrap.core.repl_special_QMARK_(expression_form))) {
        var env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.empty_env(), cljs.core.cst$kw$context, cljs.core.cst$kw$expr, cljs.core.array_seq([cljs.core.cst$kw$ns, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$name, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs_bootstrap.core.current_ns) : cljs.core.deref.call(null, cljs_bootstrap.core.current_ns)], null)], 0));
        var G__6229_6245 = cljs.core.first(expression_form);
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$in_DASH_ns, G__6229_6245)) {
          var G__6230_6246 = cljs_bootstrap.core.current_ns;
          var G__6231_6247 = cljs.core.second(cljs.core.second(expression_form));
          cljs.core.reset_BANG_.cljs$core$IFn$_invoke$arity$2 ? cljs.core.reset_BANG_.cljs$core$IFn$_invoke$arity$2(G__6230_6246, G__6231_6247) : cljs.core.reset_BANG_.call(null, G__6230_6246, G__6231_6247);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$require, G__6229_6245)) {
            cljs_bootstrap.core.require_destructure(false, cljs.core.rest(expression_form));
          } else {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$require_DASH_macros, G__6229_6245)) {
              cljs_bootstrap.core.require_destructure(true, cljs.core.rest(expression_form));
            } else {
              if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$sym$doc, G__6229_6245)) {
                if (cljs.core.truth_(function() {
                  var G__6232 = cljs.core.second(expression_form);
                  return cljs_bootstrap.core.repl_specials.cljs$core$IFn$_invoke$arity$1 ? cljs_bootstrap.core.repl_specials.cljs$core$IFn$_invoke$arity$1(G__6232) : cljs_bootstrap.core.repl_specials.call(null, G__6232);
                }())) {
                  cljs.repl.print_doc(cljs_bootstrap.core.repl_special_doc(cljs.core.second(expression_form)));
                } else {
                  cljs.repl.print_doc(function() {
                    var sym = cljs.core.second(expression_form);
                    var var$ = function() {
                      var env__5425__auto__ = cljs_bootstrap.core.st;
                      var env__5425__auto____$1 = cljs.core.map_QMARK_(env__5425__auto__) ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(env__5425__auto__) : cljs.core.atom.call(null, env__5425__auto__) : env__5425__auto__ instanceof cljs.core.Atom && cljs.core.map_QMARK_(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(env__5425__auto__) : cljs.core.deref.call(null, env__5425__auto__)) ? env__5425__auto__ : 
                      function() {
                        throw new Error([cljs.core.str("Compiler environment must be a map or atom containing a map, not "), cljs.core.str(cljs.core.type(env__5425__auto__))].join(""));
                      }();
                      var _STAR_compiler_STAR_6233 = cljs.env._STAR_compiler_STAR_;
                      cljs.env._STAR_compiler_STAR_ = env__5425__auto____$1;
                      try {
                        return cljs_bootstrap.core.resolve(env, sym);
                      } finally {
                        cljs.env._STAR_compiler_STAR_ = _STAR_compiler_STAR_6233;
                      }
                    }();
                    return cljs.core.cst$kw$meta.cljs$core$IFn$_invoke$arity$1(var$);
                  }());
                }
              } else {
                throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(cljs.core.first(expression_form))].join(""));
              }
            }
          }
        }
        var G__6234 = true;
        var G__6235 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([null], 0));
        return cb.cljs$core$IFn$_invoke$arity$2 ? cb.cljs$core$IFn$_invoke$arity$2(G__6234, G__6235) : cb.call(null, G__6234, G__6235);
      } else {
        return cljs.js.eval_str.cljs$core$IFn$_invoke$arity$5(cljs_bootstrap.core.st, source, cljs.core.truth_(expression_QMARK_) ? source : "File", cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs_bootstrap.core.current_ns) : cljs.core.deref.call(null, cljs_bootstrap.core.current_ns), cljs.core.cst$kw$load, cljs_bootstrap.core.native_load, 
        cljs.core.cst$kw$eval, cljs_bootstrap.core.native_eval, cljs.core.cst$kw$source_DASH_map, false, cljs.core.cst$kw$verbose, cljs.core.cst$kw$verbose.cljs$core$IFn$_invoke$arity$1(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs_bootstrap.core.app_env) : cljs.core.deref.call(null, cljs_bootstrap.core.app_env))], null), cljs.core.truth_(expression_QMARK_) ? new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$context, cljs.core.cst$kw$expr, 
        cljs.core.cst$kw$def_DASH_emits_DASH_var, true], null) : null], 0)), function(expression_form, _STAR_cljs_ns_STAR_6225, _STAR_ns_STAR_6226, _STAR_data_readers_STAR_6227) {
          return function(p__6236) {
            var map__6237 = p__6236;
            var map__6237__$1 = (!(map__6237 == null) ? map__6237.cljs$lang$protocol_mask$partition0$ & 64 || map__6237.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__6237) : map__6237;
            var ret = map__6237__$1;
            var ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6237__$1, cljs.core.cst$kw$ns);
            var value = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6237__$1, cljs.core.cst$kw$value);
            var error = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__6237__$1, cljs.core.cst$kw$error);
            if (cljs.core.truth_(expression_QMARK_)) {
              if (cljs.core.not(error)) {
                if (cljs.core.truth_(function() {
                  var or__4311__auto__ = (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$sym$_STAR_2, null, cljs.core.cst$sym$_STAR_1, null, cljs.core.cst$sym$_STAR_e, null, cljs.core.cst$sym$_STAR_3, null], null), null)).call(null, expression_form);
                  if (cljs.core.truth_(or__4311__auto__)) {
                    return or__4311__auto__;
                  } else {
                    return cljs_bootstrap.core.ns_form_QMARK_(expression_form);
                  }
                }())) {
                } else {
                  cljs.core._STAR_3 = cljs.core._STAR_2;
                  cljs.core._STAR_2 = cljs.core._STAR_1;
                  cljs.core._STAR_1 = value;
                }
                cljs.core.reset_BANG_.cljs$core$IFn$_invoke$arity$2 ? cljs.core.reset_BANG_.cljs$core$IFn$_invoke$arity$2(cljs_bootstrap.core.current_ns, ns) : cljs.core.reset_BANG_.call(null, cljs_bootstrap.core.current_ns, ns);
                var G__6239 = true;
                var G__6240 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([value], 0));
                return cb.cljs$core$IFn$_invoke$arity$2 ? cb.cljs$core$IFn$_invoke$arity$2(G__6239, G__6240) : cb.call(null, G__6239, G__6240);
              } else {
                cljs.core._STAR_e = error;
                return cb.cljs$core$IFn$_invoke$arity$2 ? cb.cljs$core$IFn$_invoke$arity$2(false, error) : cb.call(null, false, error);
              }
            } else {
              if (cljs.core.truth_(error)) {
                return cb.cljs$core$IFn$_invoke$arity$2 ? cb.cljs$core$IFn$_invoke$arity$2(false, error) : cb.call(null, false, error);
              } else {
                return null;
              }
            }
          };
        }(expression_form, _STAR_cljs_ns_STAR_6225, _STAR_ns_STAR_6226, _STAR_data_readers_STAR_6227));
      }
    } catch (e6228) {
      var e = e6228;
      return cb.cljs$core$IFn$_invoke$arity$2 ? cb.cljs$core$IFn$_invoke$arity$2(false, e) : cb.call(null, false, e);
    }
  } finally {
    cljs.tools.reader._STAR_data_readers_STAR_ = _STAR_data_readers_STAR_6227;
    cljs.core._STAR_ns_STAR_ = _STAR_ns_STAR_6226;
    cljs.analyzer._STAR_cljs_ns_STAR_ = _STAR_cljs_ns_STAR_6225;
  }
};
cljs_bootstrap.core.read_eval_print.cljs$lang$maxFixedArity = 3;
goog.provide("cljs_bootstrap.node");
goog.require("cljs.core");
goog.require("cljs_bootstrap.core");
cljs.core.enable_console_print_BANG_();
cljs_bootstrap.node.read_eval_print_loop = function cljs_bootstrap$node$read_eval_print_loop() {
  var node_readline = require("readline");
  var rl = node_readline.createInterface({"input":process.stdin, "output":process.stdout});
  var G__6251 = rl;
  G__6251.setPrompt(cljs_bootstrap.core.get_prompt());
  G__6251.on("line", function(G__6251, node_readline, rl) {
    return function(cmd) {
      return cljs_bootstrap.core.read_eval_print.cljs$core$IFn$_invoke$arity$2(cmd, function(G__6251, node_readline, rl) {
        return function(res, data) {
          if (cljs.core.truth_(res)) {
            cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([data], 0));
          } else {
            cljs_bootstrap.core.print_error(data);
          }
          rl.setPrompt(cljs_bootstrap.core.get_prompt());
          return rl.prompt();
        };
      }(G__6251, node_readline, rl));
    };
  }(G__6251, node_readline, rl));
  G__6251.prompt();
  return G__6251;
};
cljs_bootstrap.node._main = function cljs_bootstrap$node$_main() {
  var args__5357__auto__ = [];
  var len__5350__auto___6253 = arguments.length;
  var i__5351__auto___6254 = 0;
  while (true) {
    if (i__5351__auto___6254 < len__5350__auto___6253) {
      args__5357__auto__.push(arguments[i__5351__auto___6254]);
      var G__6255 = i__5351__auto___6254 + 1;
      i__5351__auto___6254 = G__6255;
      continue;
    } else {
    }
    break;
  }
  var argseq__5358__auto__ = 0 < args__5357__auto__.length ? new cljs.core.IndexedSeq(args__5357__auto__.slice(0), 0) : null;
  return cljs_bootstrap.node._main.cljs$core$IFn$_invoke$arity$variadic(argseq__5358__auto__);
};
cljs_bootstrap.node._main.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  cljs_bootstrap.core.init_repl("nodejs");
  if (cljs.core.count(args) > 2) {
    var path = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(args, 2);
    var fs = require("fs");
    return fs.readFile(path, "utf-8", function(path, fs) {
      return function(err, src) {
        if (cljs.core.truth_(err)) {
          throw new Error([cljs.core.str("Could not read"), cljs.core.str(path)].join(""));
        } else {
        }
        return cljs_bootstrap.core.read_eval_print.cljs$core$IFn$_invoke$arity$2(src, function(path, fs) {
          return function(res, data) {
            if (cljs.core.truth_(res)) {
              return null;
            } else {
              cljs_bootstrap.core.print_error(data);
              return process.exit(1);
            }
          };
        }(path, fs));
      };
    }(path, fs));
  } else {
    return cljs_bootstrap.node.read_eval_print_loop();
  }
};
cljs_bootstrap.node._main.cljs$lang$maxFixedArity = 0;
cljs_bootstrap.node._main.cljs$lang$applyTo = function(seq6252) {
  return cljs_bootstrap.node._main.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq6252));
};
cljs.core._STAR_main_cli_fn_STAR_ = cljs_bootstrap.node._main;

var core_json = '["^ ","~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$cljs.core","~:imports",["^ ","~$StringBuffer","~$goog.string.StringBuffer"],"~:requires",["^ ","~$gstring","~$goog.string","^:","^:","~$gobject","~$goog.object","^<","^<","~$garray","~$goog.array","^>","^>","^6","^7"],"~:uses",null,"~:defs",["^ ","~$->PersistentHashSet",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:protocols",["^2",["~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/IFn","~$cljs.core/ICollection","~$cljs.core/IEditableCollection","~$cljs.core/Object","~$cljs.core/ISet","~$cljs.core/IEmptyableCollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/ILookup"]],"~:file","cljs/core.cljs","~:end-column",27,"~:column",10,"~:factory","~:positional","~:line",7946,"~:end-line",7946,"~:arglists",["~#list",["~$quote",["^10",[["~$meta","~$hash-map","~$__hash"]]]]],"~:skip-protocol-flag",["^2",["^E","^F","^G","^H","^I","^K","^L","^M","^N","^O","^P","^R","^S"]]],"^D",["^2",["^E","^F","^G","^H","^I","^J","^K","^L","^M","^N","^O","^P","^Q","^R","^S"]],"^3","~$cljs.core/->PersistentHashSet","~:variadic",false,"^T","cljs/core.cljs","^U",27,"~:method-params",["^10",[["^12","^13","^14"]]],"~:protocol-impl",null,"~:arglists-meta",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",7946,"~:max-fixed-arity",3,"~:fn-var",true,"^[",["^10",["^11",["^10",[["^12","^13","^14"]]]]],"^15",["^2",["^E","^F","^G","^H","^I","^K","^L","^M","^N","^O","^P","^R","^S"]]],"~$js->clj",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9312,"^V",7,"^Z",9312,"^U",14,"^[",["^10",["^11",["^10",[["~$x"],["~$x","~$&","~$opts"]]]]],"~:doc","Recursively transforms JavaScript arrays into ClojureScript\\n  vectors, and JavaScript objects into ClojureScript maps.  With\\n  option \':keywordize-keys true\' will convert object fields from\\n  strings to keywords.","~:top-fn",["^ ","^17",true,"^1;",1,"^18",["^10",[["~$x"]]],"^[",["^10",[["~$x"],["~$x","~$&","^1>"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/js->clj","^17",true,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",true,"^1;",1,"^18",["^10",[["~$x"]]],"^[",["^10",[["~$x"],["~$x","~$&","^1>"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9312,"^1;",1,"^1<",true,"^[",["^10",[["~$x"],["~$x","~$&","^1>"]]],"^1?","Recursively transforms JavaScript arrays into ClojureScript\\n  vectors, and JavaScript objects into ClojureScript maps.  With\\n  option \':keywordize-keys true\' will convert object fields from\\n  strings to keywords."],"~$sort-by",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2113,"^V",7,"^Z",2113,"^U",14,"^[",["^10",["^11",["^10",[["~$keyfn","~$coll"],["^1C","~$comp","^1D"]]]]],"^1?","Returns a sorted sequence of the items in coll, where the sort\\n   order is determined by comparing (keyfn item).  Comp can be\\n   boolean-valued comparison funcion, or a -/0/+ valued comparator.\\n   Comp defaults to compare.","^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^1C","^1D"],["^1C","^1E","^1D"]]],"^[",["^10",[["^1C","^1D"],["^1C","^1E","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/sort-by","^17",false,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^1C","^1D"],["^1C","^1E","^1D"]]],"^[",["^10",[["^1C","^1D"],["^1C","^1E","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^1C","^1D"],["^1C","^1E","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2113,"^1;",3,"^1<",true,"^[",["^10",[["^1C","^1D"],["^1C","^1E","^1D"]]],"^1?","Returns a sorted sequence of the items in coll, where the sort\\n   order is determined by comparing (keyfn item).  Comp can be\\n   boolean-valued comparison funcion, or a -/0/+ valued comparator.\\n   Comp defaults to compare."],"~$ITransientAssociative",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",655,"^V",14,"^Z",655,"^U",35,"^1?","Protocol for adding associativity to transient collections.","~:protocol-symbol",true,"~:protocol-info",["^ ","~:methods",["^ ","~$-assoc!",[["~$tcoll","~$key","~$val"]]]]],"^1H",true,"^3","~$cljs.core/ITransientAssociative","^T","cljs/core.cljs","^U",35,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^1K",[["^1L","^1M","^1N"]]]],"~:info",null,"^Z",655,"~:impls",["^2",["~$cljs.core/TransientVector","~$cljs.core/TransientHashMap","~$cljs.core/TransientArrayMap"]],"^1?","Protocol for adding associativity to transient collections."],"~$chunk-first",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3171,"^V",7,"^Z",3171,"^U",18,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"^3","~$cljs.core/chunk-first","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3171,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"~$print-meta?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8767,"^V",16,"^Z",8767,"^U",27,"~:tag","~$boolean","^[",["^10",["^11",["^10",[["^1>","~$obj"]]]]]],"^3","~$cljs.core/print-meta?","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^1>","^1Z"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"~:ret-tag","^1Y","^Z",8767,"^1;",2,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["^1>","^1Z"]]]]]],"~$m3-hash-int",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",791,"^V",15,"^Z",791,"^U",26,"^1X","~$number","^[",["^10",["^11",["^10",[["~$in"]]]]]],"^3","~$cljs.core/m3-hash-int","^17",false,"^T","cljs/core.cljs","^U",26,"^18",["^10",[["^23"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^22","^Z",791,"^1;",1,"^1X","^22","^1<",true,"^[",["^10",["^11",["^10",[["^23"]]]]]],"~$stepper",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3575,"^V",7,"^Z",3575,"^U",14,"^[",["^10",["^11",["^10",[["~$xform","~$iter"]]]]]],"^3","~$cljs.core/stepper","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^26","^27"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3575,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^26","^27"]]]]]],"~$pr-str*",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",739,"^V",7,"^Z",739,"^U",14,"^[",["^10",["^11",["^10",[["^1Z"]]]]],"^1?","Support so that collections can implement toString without\\n   loading all the printing machinery."],"^3","~$cljs.core/pr-str*","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^1Z"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",739,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1Z"]]]]],"^1?","Support so that collections can implement toString without\\n   loading all the printing machinery."],"~$eduction",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9255,"^V",7,"^Z",9255,"^U",15,"^[",["^10",["^11",["^10",[["~$xform*","^1D"]]]]],"^1?","Returns a reducible/iterable application of the transducers\\n  to the items in coll. Transducers are applied in order as if\\n  combined with comp. Note that these applications will be\\n  performed every time reduce/iterator is called.","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["~$xforms"]]],"^[",["^10",[["~$&","^2="]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/eduction","^17",true,"^T","cljs/core.cljs","^U",15,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^2="]]],"^[",["^10",[["~$&","^2="]]],"^1:",["^10",[null]]],"^18",[["^10",["^2="]]],"^19",null,"^1:",["^10",[null]],"^V",null,"^Y",null,"^Z",9255,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^2="]]],"^1?","Returns a reducible/iterable application of the transducers\\n  to the items in coll. Transducers are applied in order as if\\n  combined with comp. Note that these applications will be\\n  performed every time reduce/iterator is called."],"~$tree-seq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4433,"^V",7,"^Z",4433,"^U",15,"^[",["^10",["^11",["^10",[["~$branch?","~$children","~$root"]]]]],"^1?","Returns a lazy sequence of the nodes in a tree, via a depth-first walk.\\n   branch? must be a fn of one arg that returns true if passed a node\\n   that can have children (but may not).  children must be a fn of one\\n   arg that returns a sequence of the children. Will only be called on\\n   nodes for which branch? returns true. Root is the root node of the\\n  tree."],"^3","~$cljs.core/tree-seq","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^2@","^2A","^2B"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4433,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^2@","^2A","^2B"]]]]],"^1?","Returns a lazy sequence of the nodes in a tree, via a depth-first walk.\\n   branch? must be a fn of one arg that returns true if passed a node\\n   that can have children (but may not).  children must be a fn of one\\n   arg that returns a sequence of the children. Will only be called on\\n   nodes for which branch? returns true. Root is the root node of the\\n  tree."],"~$unchecked-remainder-int",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2411,"^V",7,"^Z",2411,"^U",30,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]]],"^3","~$cljs.core/unchecked-remainder-int","^17",false,"^T","cljs/core.cljs","^U",30,"^18",["^10",[["~$x","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2411,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]]],"~$uuid",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9832,"^V",7,"^Z",9832,"^U",11,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"^3","~$cljs.core/uuid","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9832,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"~$seq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1046,"^V",12,"^Z",1046,"^U",15,"^1X","^2H","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a seq on the collection. If the collection is\\n  empty, returns nil.  (seq nil) returns nil. seq also works on\\n  Strings."],"^3","~$cljs.core/seq","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^2H","^Z",1046,"^1;",1,"^1X","^2H","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a seq on the collection. If the collection is\\n  empty, returns nil.  (seq nil) returns nil. seq also works on\\n  Strings."],"~$Volatile",["^ ","~:num-fields",1,"^D",["^2",["~$cljs.core/IVolatile","~$cljs.core/IDeref"]],"^3","~$cljs.core/Volatile","^T","cljs/core.cljs","^U",18,"~:type",true,"^V",10,"^Y",4031,"~:record",false,"^Z",4031,"^15",["^2",["^2M"]]],"~$reduce",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2147,"^V",7,"^Z",2147,"^U",13,"^[",["^10",["^11",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]]]],"^1?","f should be a function of 2 arguments. If val is not supplied,\\n  returns the result of applying f to the first 2 items in coll, then\\n  applying f to that result and the 3rd item, etc. If coll contains no\\n  items, f must accept no arguments as well, and reduce returns the\\n  result of calling f with no arguments.  If coll has only 1 item, it\\n  is returned and f is not called.  If val is supplied, returns the\\n  result of applying f to val and the first item in coll, then\\n  applying f to that result and the 2nd item, etc. If coll contains no\\n  items, returns val and f is not called.","^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]],"^[",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/reduce","^17",false,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]],"^[",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2147,"^1;",3,"^1<",true,"^[",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]],"^1?","f should be a function of 2 arguments. If val is not supplied,\\n  returns the result of applying f to the first 2 items in coll, then\\n  applying f to that result and the 3rd item, etc. If coll contains no\\n  items, f must accept no arguments as well, and reduce returns the\\n  result of calling f with no arguments.  If coll has only 1 item, it\\n  is returned and f is not called.  If val is supplied, returns the\\n  result of applying f to val and the first item in coll, then\\n  applying f to that result and the 2nd item, etc. If coll contains no\\n  items, returns val and f is not called."],"~$INIT",["^ ","^3","~$cljs.core/INIT","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",3524,"^U",10,"^C",["^ ","^T","cljs/core.cljs","^Y",3524,"^V",6,"^Z",3524,"^U",10]],"~$find-ns",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10130,"^V",7,"^Z",10130,"^U",14,"^[",["^10",["^11",["^10",[["~$ns"]]]]]],"^3","~$cljs.core/find-ns","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^2V"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",10130,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^2V"]]]]]],"~$contains?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2004,"^V",16,"^Z",2004,"^U",25,"^1X","^1Y","^[",["^10",["^11",["^10",[["^1D","~$v"]]]]],"^1?","Returns true if key is present in the given collection, otherwise\\n  returns false.  Note that for numerically indexed collections like\\n  vectors and arrays, this tests if the numeric key is within the\\n  range of indexes. \'contains?\' operates constant or logarithmic time;\\n  it will not perform a linear search for a value.  See also \'some\'."],"^3","~$cljs.core/contains?","^17",false,"^T","cljs/core.cljs","^U",25,"^18",["^10",[["^1D","~$v"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",2004,"^1;",2,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["^1D","~$v"]]]]],"^1?","Returns true if key is present in the given collection, otherwise\\n  returns false.  Note that for numerically indexed collections like\\n  vectors and arrays, this tests if the numeric key is within the\\n  range of indexes. \'contains?\' operates constant or logarithmic time;\\n  it will not perform a linear search for a value.  See also \'some\'."],"~$every?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3726,"^V",16,"^Z",3726,"^U",22,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$pred","^1D"]]]]],"^1?","Returns true if (pred x) is logical true for every x in coll, else\\n  false."],"^3","~$cljs.core/every?","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["^2[","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",3726,"^1;",2,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["^2[","^1D"]]]]],"^1?","Returns true if (pred x) is logical true for every x in coll, else\\n  false."],"~$->ES6IteratorSeq",["^ ","^B",null,"^C",["^ ","^D",["^2",["~$cljs.core/ISeq","^N"]],"^T","cljs/core.cljs","^U",24,"^V",10,"^W","^X","^Y",1137,"^Z",1137,"^[",["^10",["^11",["^10",[["~$value","^27","~$_rest"]]]]],"^15",["^2",["^32","^N"]]],"^D",["^2",["^32","^N"]],"^3","~$cljs.core/->ES6IteratorSeq","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["^33","^27","^34"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",1137,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^33","^27","^34"]]]]],"^15",["^2",["^32","^N"]]],"~$Var",["^ ","^2K",3,"^D",["^2",["^E","^G","^J","^O","~$cljs.core/Fn","^2M","^R"]],"^3","~$cljs.core/Var","^T","cljs/core.cljs","^U",13,"^2O",true,"^V",10,"^Y",959,"^2P",false,"^Z",959,"^15",["^2",["^E","^G","^O","^2M","^R"]]],"~$keep-indexed",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4053,"^V",7,"^Z",4053,"^U",19,"^[",["^10",["^11",["^10",[["~$f"],["~$f","^1D"]]]]],"^1?","Returns a lazy sequence of the non-nil results of (f index item). Note,\\n  this means false return values will be included.  f must be free of\\n  side-effects.  Returns a stateful transducer when no collection is\\n  provided.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$f"],["~$f","^1D"]]],"^[",["^10",[["~$f"],["~$f","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/keep-indexed","^17",false,"^T","cljs/core.cljs","^U",19,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$f"],["~$f","^1D"]]],"^[",["^10",[["~$f"],["~$f","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$f"],["~$f","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4053,"^1;",2,"^1<",true,"^[",["^10",[["~$f"],["~$f","^1D"]]],"^1?","Returns a lazy sequence of the non-nil results of (f index item). Note,\\n  this means false return values will be included.  f must be free of\\n  side-effects.  Returns a stateful transducer when no collection is\\n  provided."],"~$->PersistentQueueSeq",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^H","^J","^L","^32","^N","^O","~$cljs.core/ISequential","^R"]],"^T","cljs/core.cljs","^U",28,"^V",10,"^W","^X","^Y",5348,"^Z",5348,"^[",["^10",["^11",["^10",[["^12","~$front","~$rear","^14"]]]]],"^15",["^2",["^E","^F","^H","^L","^32","^N","^O","^3<","^R"]]],"^D",["^2",["^E","^F","^H","^J","^L","^32","^N","^O","^3<","^R"]],"^3","~$cljs.core/->PersistentQueueSeq","^17",false,"^T","cljs/core.cljs","^U",28,"^18",["^10",[["^12","^3=","^3>","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",5348,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^12","^3=","^3>","^14"]]]]],"^15",["^2",["^E","^F","^H","^L","^32","^N","^O","^3<","^R"]]],"~$subs",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2607,"^V",7,"^Z",2607,"^U",11,"^[",["^10",["^11",["^10",[["~$s","~$start"],["~$s","^3A","~$end"]]]]],"^1?","Returns the substring of s beginning at start inclusive, and ending\\n  at end (defaults to length of string), exclusive.","^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$s","^3A"],["~$s","^3A","^3B"]]],"^[",["^10",[["~$s","^3A"],["~$s","^3A","^3B"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/subs","^17",false,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$s","^3A"],["~$s","^3A","^3B"]]],"^[",["^10",[["~$s","^3A"],["~$s","^3A","^3B"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$s","^3A"],["~$s","^3A","^3B"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2607,"^1;",3,"^1<",true,"^[",["^10",[["~$s","^3A"],["~$s","^3A","^3B"]]],"^1?","Returns the substring of s beginning at start inclusive, and ending\\n  at end (defaults to length of string), exclusive."],"~$set",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8181,"^V",7,"^Z",8181,"^U",10,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a set of the distinct elements of coll."],"^3","~$cljs.core/set","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8181,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a set of the distinct elements of coll."],"~$compare-indexed",["^ ","^B",null,"^C",["^ ","~:private",true,"^T","cljs/core.cljs","^U",32,"^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["~$xs","~$ys"],["^3H","^3I","~$len","~$n"]]],"^[",["^10",[["^3H","^3I"],["^3H","^3I","^3J","~$n"]]],"^1:",["^10",[null,null]]],"^V",17,"^Y",2067,"^Z",2067,"^[",["^10",["^11",["^10",[["^3H","^3I"],["^3H","^3I","^3J","~$n"]]]]],"^1?","Compare indexed collection."],"^3G",true,"^3","~$cljs.core/compare-indexed","^17",false,"^T","cljs/core.cljs","^U",32,"^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["^3H","^3I"],["^3H","^3I","^3J","~$n"]]],"^[",["^10",[["^3H","^3I"],["^3H","^3I","^3J","~$n"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^3H","^3I"],["^3H","^3I","^3J","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2067,"^1;",4,"^1<",true,"^[",["^10",[["^3H","^3I"],["^3H","^3I","^3J","~$n"]]],"^1?","Compare indexed collection."],"~$take-last",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4271,"^V",7,"^Z",4271,"^U",16,"^[",["^10",["^11",["^10",[["~$n","^1D"]]]]],"^1?","Returns a seq of the last n items in coll.  Depending on the type\\n  of coll may be no better than linear time.  For vectors, see also subvec."],"^3","~$cljs.core/take-last","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["~$n","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4271,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$n","^1D"]]]]],"^1?","Returns a seq of the last n items in coll.  Depending on the type\\n  of coll may be no better than linear time.  For vectors, see also subvec."],"~$IndexedSeq",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",1029,"^V",29,"^Z",1029,"^U",39,"~:declared",true],"^2K",2,"^D",["^2",["~$cljs.core/IIndexed","~$cljs.core/IReversible","^E","^F","~$cljs.core/ASeq","^H","^J","^L","^M","^32","~$cljs.core/INext","^N","^P","^Q","^3<","~$cljs.core/IReduce"]],"^3","~$cljs.core/IndexedSeq","^T","cljs/core.cljs","^U",20,"^2O",true,"^V",10,"^Y",1361,"^2P",false,"^3O",true,"^Z",1361,"^15",["^2",["^3P","^3Q","^E","^F","^3R","^H","^L","^M","^32","^3S","^N","^P","^3<","^3T"]]],"~$bit-set",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2522,"^V",7,"^Z",2522,"^U",14,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Set bit at index n"],"^3","~$cljs.core/bit-set","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["~$x","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2522,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Set bit at index n"],"~$string-hash-cache-count",["^ ","^3","~$cljs.core/string-hash-cache-count","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",818,"^U",29,"^C",["^ ","^T","cljs/core.cljs","^Y",818,"^V",6,"^Z",818,"^U",29]],"~$->Eduction",["^ ","^B",null,"^C",["^ ","^D",["^2",["^N","~$cljs.core/IPrintWithWriter","^3<","^3T"]],"^T","cljs/core.cljs","^U",18,"^V",10,"^W","^X","^Y",9239,"^Z",9239,"^[",["^10",["^11",["^10",[["^26","^1D"]]]]],"^15",["^2",["^N","^3[","^3<","^3T"]]],"^D",["^2",["^N","^3[","^3<","^3T"]],"^3","~$cljs.core/->Eduction","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^26","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",9239,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^26","^1D"]]]]],"^15",["^2",["^N","^3[","^3<","^3T"]]],"~$tree-map-add",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7451,"^V",8,"^Z",7451,"^U",20,"^3G",true,"^[",["^10",["^11",["^10",[["^1E","~$tree","~$k","~$v","~$found"]]]]]],"^3G",true,"^3","~$cljs.core/tree-map-add","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^1E","^42","~$k","~$v","^43"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",7451,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^1E","^42","~$k","~$v","^43"]]]]]],"~$->ES6SetEntriesIterator",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",31,"^V",10,"^W","^X","^Y",5656,"^Z",5656,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->ES6SetEntriesIterator","^17",false,"^T","cljs/core.cljs","^U",31,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",5656,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^15",null],"~$-with-meta",["^ ","^B",null,"^C",["^ ","~:protocol","^R","^T","cljs/core.cljs","^U",19,"^V",9,"^Y",548,"^Z",548,"^1X","~$clj","^[",["^10",["^11",["^10",[["~$o","^12"]]]]],"^1?","Returns a new object with value of o and metadata meta added to it."],"^48","^R","^3","~$cljs.core/-with-meta","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["~$o","^12"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^49","^Z",548,"^1;",2,"^1X","^49","^1<",true,"^[",["^10",["^11",["^10",[["~$o","^12"]]]]],"^1?","Returns a new object with value of o and metadata meta added to it."],"~$reset-cache",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9516,"^V",8,"^Z",9516,"^U",19,"^3G",true,"^[",["^10",["^11",["^10",[["~$method-cache","~$method-table","~$cached-hierarchy","~$hierarchy"]]]]]],"^3G",true,"^3","~$cljs.core/reset-cache","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^4<","^4=","^4>","^4?"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9516,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^4<","^4=","^4>","^4?"]]]]]],"~$->PersistentArrayMapIterator",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",36,"^V",10,"^W","^X","^Y",5808,"^Z",5808,"^[",["^10",["^11",["^10",[["~$arr","~$i","~$cnt"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->PersistentArrayMapIterator","^17",false,"^T","cljs/core.cljs","^U",36,"^18",["^10",[["^4B","~$i","^4C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",5808,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^4B","~$i","^4C"]]]]],"^15",null],"~$PersistentArrayMapIterator",["^ ","^2K",3,"^D",["^2",["^J"]],"^3","~$cljs.core/PersistentArrayMapIterator","^T","cljs/core.cljs","^U",36,"^2O",true,"^V",10,"^Y",5808,"^2P",false,"^Z",5808,"^15",null],"~$butlast",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8258,"^V",7,"^Z",8258,"^U",14,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^1?","Return a seq of all but the last item in coll, in linear time"],"^3","~$cljs.core/butlast","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8258,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^1?","Return a seq of all but the last item in coll, in linear time"],"~$tail-off",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4606,"^V",8,"^Z",4606,"^U",16,"^3G",true,"^[",["^10",["^11",["^10",[["~$pv"]]]]]],"^3G",true,"^3","~$cljs.core/tail-off","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^4J"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4606,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^4J"]]]]]],"~$unchecked-subtract-int",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",37,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","~$more"]]],"^1:",["^10",[null,null,null]]],"^V",15,"^Y",2421,"^Z",2421,"^1X","^22","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]]]],"^1?","If no ys are supplied, returns the negation of x, else subtracts\\n  the ys from x and returns the result."],"^3","~$cljs.core/unchecked-subtract-int","^17",true,"^T","cljs/core.cljs","^U",37,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^20","^22","^Z",2421,"^1;",2,"^1X","^22","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1?","If no ys are supplied, returns the negation of x, else subtracts\\n  the ys from x and returns the result."],"~$-iterator",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",729,"^V",4,"^Z",729,"^U",13,"^48","^Q","^1?","Returns an iterator for coll.","^[",["^10",["^11",["^10",[["^1D"]]]]]],"^48","^Q","^3","~$cljs.core/-iterator","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",729,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns an iterator for coll."],"~$take-nth",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8508,"^V",7,"^Z",8508,"^U",15,"^[",["^10",["^11",["^10",[["~$n"],["~$n","^1D"]]]]],"^1?","Returns a lazy seq of every nth item in coll.  Returns a stateful\\n  transducer when no collection is provided.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$n"],["~$n","^1D"]]],"^[",["^10",[["~$n"],["~$n","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/take-nth","^17",false,"^T","cljs/core.cljs","^U",15,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$n"],["~$n","^1D"]]],"^[",["^10",[["~$n"],["~$n","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$n"],["~$n","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8508,"^1;",2,"^1<",true,"^[",["^10",[["~$n"],["~$n","^1D"]]],"^1?","Returns a lazy seq of every nth item in coll.  Returns a stateful\\n  transducer when no collection is provided."],"~$first",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1069,"^V",7,"^Z",1069,"^U",12,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns the first item in the collection. Calls seq on its\\n  argument. If coll is nil, returns nil."],"^3","~$cljs.core/first","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1069,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns the first item in the collection. Calls seq on its\\n  argument. If coll is nil, returns nil."],"~$native-satisfies?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",224,"^V",16,"^Z",224,"^U",33,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$p","~$x"]]]]],"^1?","Internal - do not use!"],"^3","~$cljs.core/native-satisfies?","^17",false,"^T","cljs/core.cljs","^U",33,"^18",["^10",[["~$p","~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",224,"^1;",2,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$p","~$x"]]]]],"^1?","Internal - do not use!"],"~$seq?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1971,"^V",16,"^Z",1971,"^U",20,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$s"]]]]],"^1?","Return true if s satisfies ISeq"],"^3","~$cljs.core/seq?","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",1971,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^1?","Return true if s satisfies ISeq"],"~$-global-hierarchy",["^ ","^3","~$cljs.core/-global-hierarchy","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",9406,"^U",33,"^3G",true,"^C",["^ ","^T","cljs/core.cljs","^Y",9406,"^V",16,"^Z",9406,"^U",33,"^3G",true]],"~$UUID",["^ ","^2K",2,"^D",["^2",["^E","^F","^J","^3[","~$cljs.core/IComparable"]],"^3","~$cljs.core/UUID","^T","cljs/core.cljs","^U",14,"^2O",true,"^V",10,"^Y",9808,"^2P",false,"^Z",9808,"^15",["^2",["^E","^F","^3[","^50"]]],"~$-sorted-seq-from",["^ ","^B",null,"^C",["^ ","^48","~$cljs.core/ISorted","^T","cljs/core.cljs","^U",25,"^V",9,"^Y",600,"^Z",600,"^1X","^49","^[",["^10",["^11",["^10",[["^1D","~$k","~$ascending?"]]]]],"^1?","Returns a sorted seq from coll in either ascending or descending order.\\n     If ascending is true, the result should contain all items which are > or >=\\n     than k. If ascending is false, the result should contain all items which\\n     are < or <= than k, e.g.\\n     (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 true) => (3 4 5)\\n     (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 false) => (3 2 1)"],"^48","^53","^3","~$cljs.core/-sorted-seq-from","^17",false,"^T","cljs/core.cljs","^U",25,"^18",["^10",[["^1D","~$k","^54"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^49","^Z",600,"^1;",3,"^1X","^49","^1<",true,"^[",["^10",["^11",["^10",[["^1D","~$k","^54"]]]]],"^1?","Returns a sorted seq from coll in either ascending or descending order.\\n     If ascending is true, the result should contain all items which are > or >=\\n     than k. If ascending is false, the result should contain all items which\\n     are < or <= than k, e.g.\\n     (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 true) => (3 4 5)\\n     (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 false) => (3 2 1)"],"~$println-str",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8938,"^V",7,"^Z",8938,"^U",18,"^[",["^10",["^11",["^10",[["~$&","~$objs"]]]]],"^1?","println to a string, returning it","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^57"]]],"^[",["^10",[["~$&","^57"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/println-str","^17",true,"^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^57"]]],"^[",["^10",[["~$&","^57"]]],"^1:",["^10",[null]]],"^18",[["^10",["^57"]]],"^19",null,"^1:",["^10",[null]],"^V",null,"^Y",null,"^Z",8938,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^57"]]],"^1?","println to a string, returning it"],"~$linear-traversal-nth",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1591,"^V",8,"^Z",1591,"^U",28,"^3G",true,"^[",["^10",["^11",["^10",[["^1D","~$n"],["^1D","~$n","~$not-found"]]]]],"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^1D","~$n"],["^1D","~$n","^5:"]]],"^[",["^10",[["^1D","~$n"],["^1D","~$n","^5:"]]],"^1:",["^10",[null,null]]]],"^3G",true,"^3","~$cljs.core/linear-traversal-nth","^17",false,"^T","cljs/core.cljs","^U",28,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^1D","~$n"],["^1D","~$n","^5:"]]],"^[",["^10",[["^1D","~$n"],["^1D","~$n","^5:"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^1D","~$n"],["^1D","~$n","^5:"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1591,"^1;",3,"^1<",true,"^[",["^10",[["^1D","~$n"],["^1D","~$n","^5:"]]]],"~$iterate",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4332,"^V",7,"^Z",4332,"^U",14,"^[",["^10",["^11",["^10",[["~$f","~$x"]]]]],"^1?","Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects","~:added","1.0"],"^5=","1.0","^3","~$cljs.core/iterate","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["~$f","~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4332,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$f","~$x"]]]]],"^1?","Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects"],"~$-empty",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",443,"^V",4,"^Z",443,"^U",10,"^48","^L","^1?","Returns an empty collection of the same category as coll. Used\\n     by cljs.core/count.","^[",["^10",["^11",["^10",[["^1D"]]]]]],"^48","^L","^3","~$cljs.core/-empty","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",443,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns an empty collection of the same category as coll. Used\\n     by cljs.core/count."],"~$newline",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8894,"^V",7,"^Z",8894,"^U",14,"^[",["^10",["^11",["^10",[[],["^1>"]]]]],"^1@",["^ ","^17",false,"^1;",1,"^18",["^10",[[],["^1>"]]],"^[",["^10",[[],["^1>"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/newline","^17",false,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",false,"^1;",1,"^18",["^10",[[],["^1>"]]],"^[",["^10",[[],["^1>"]]],"^1:",["^10",[null,null]]],"^18",["^10",[[],["^1>"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8894,"^1;",1,"^1<",true,"^[",["^10",[[],["^1>"]]]],"~$ILookup",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",485,"^V",14,"^Z",485,"^U",21,"^1?","Protocol for looking up a value in a data structure.","^1H",true,"^1I",["^ ","^1J",["^ ","~$-lookup",[["~$o","~$k"],["~$o","~$k","^5:"]]]]],"^1H",true,"^3","^S","^T","cljs/core.cljs","^U",21,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^5D",[["~$o","~$k"],["~$o","~$k","^5:"]]]],"^1P",null,"^Z",485,"^1Q",["^2",["~$cljs.core/PersistentHashMap","~$cljs.core/ObjMap","^1R","~$cljs.core/PersistentArrayMap","~$cljs.core/BlackNode","~$cljs.core/Subvec","^1S","~$cljs.core/TaggedLiteral","~$cljs.core/PersistentVector","^1T","~$cljs.core/TransientHashSet","~$cljs.core/PersistentHashSet","~$cljs.core/PersistentTreeMap","~$cljs.core/PersistentTreeSet","~$cljs.core/RedNode"]],"^1?","Protocol for looking up a value in a data structure."],"~$-chunked-rest",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",693,"^V",4,"^Z",693,"^U",17,"^48","~$cljs.core/IChunkedSeq","^1?","Return a new collection of coll with the first chunk removed.","^[",["^10",["^11",["^10",[["^1D"]]]]]],"^48","^5R","^3","~$cljs.core/-chunked-rest","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",693,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Return a new collection of coll with the first chunk removed."],"~$write-all",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8737,"^V",7,"^Z",8737,"^U",16,"^[",["^10",["^11",["^10",[["~$writer","~$&","~$ss"]]]]],"^1@",["^ ","^17",true,"^1;",1,"^18",[["^10",["^5U","^5V"]]],"^[",["^10",[["^5U","~$&","^5V"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/write-all","^17",true,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",true,"^1;",1,"^18",[["^10",["^5U","^5V"]]],"^[",["^10",[["^5U","~$&","^5V"]]],"^1:",["^10",[null]]],"^18",[["^10",["^5U","^5V"]]],"^19",null,"^1:",["^10",[null]],"^V",null,"^Y",null,"^Z",8737,"^1;",1,"^1<",true,"^[",["^10",[["^5U","~$&","^5V"]]]],"~$fn?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1756,"^V",16,"^Z",1756,"^U",19,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Return true if f is a JavaScript function or satisfies the Fn protocol."],"^3","~$cljs.core/fn?","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["~$f"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",1756,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Return true if f is a JavaScript function or satisfies the Fn protocol."],"~$-prefer-method",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9572,"^V",4,"^Z",9572,"^U",18,"^48","~$cljs.core/IMultiFn","^1?",null,"^[",["^10",["^11",["^10",[["~$mf","~$dispatch-val","~$dispatch-val-y"]]]]]],"^48","^5[","^3","~$cljs.core/-prefer-method","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^60","^61","^62"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9572,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^60","^61","^62"]]]]],"^1?",null],"~$-assoc",["^ ","^B",null,"^C",["^ ","^48","~$cljs.core/IAssociative","^T","cljs/core.cljs","^U",15,"^V",9,"^Y",496,"^Z",496,"^1X","^49","^[",["^10",["^11",["^10",[["^1D","~$k","~$v"]]]]],"^1?","Returns a new collection of coll with a mapping from key k to\\n     value v added to it."],"^48","^65","^3","~$cljs.core/-assoc","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^1D","~$k","~$v"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^49","^Z",496,"^1;",3,"^1X","^49","^1<",true,"^[",["^10",["^11",["^10",[["^1D","~$k","~$v"]]]]],"^1?","Returns a new collection of coll with a mapping from key k to\\n     value v added to it."],"~$doall",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8647,"^V",7,"^Z",8647,"^U",12,"^[",["^10",["^11",["^10",[["^1D"],["~$n","^1D"]]]]],"^1?","When lazy sequences are produced via functions that have side\\n  effects, any effects other than those needed to produce the first\\n  element in the seq do not occur until the seq is consumed. doall can\\n  be used to force any effects. Walks through the successive nexts of\\n  the seq, retains the head and returns it, thus causing the entire\\n  seq to reside in memory at one time.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^1D"],["~$n","^1D"]]],"^[",["^10",[["^1D"],["~$n","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/doall","^17",false,"^T","cljs/core.cljs","^U",12,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^1D"],["~$n","^1D"]]],"^[",["^10",[["^1D"],["~$n","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^1D"],["~$n","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8647,"^1;",2,"^1<",true,"^[",["^10",[["^1D"],["~$n","^1D"]]],"^1?","When lazy sequences are produced via functions that have side\\n  effects, any effects other than those needed to produce the first\\n  element in the seq do not occur until the seq is consumed. doall can\\n  be used to force any effects. Walks through the successive nexts of\\n  the seq, retains the head and returns it, thus causing the entire\\n  seq to reside in memory at one time."],"~$keyword-identical?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2939,"^V",16,"^Z",2939,"^U",34,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Efficient test to determine that two keywords are identical."],"^3","~$cljs.core/keyword-identical?","^17",false,"^T","cljs/core.cljs","^U",34,"^18",["^10",[["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",2939,"^1;",2,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Efficient test to determine that two keywords are identical."],"~$*print-err-fn*",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",54,"^V",3,"^Z",54,"^U",17,"^1?","Each runtime environment provides a different way to print error output.\\n  Whatever function *print-fn* is bound to will be passed any\\n  Strings which should be printed.","~:dynamic",true],"^3","~$cljs.core/*print-err-fn*","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["~$_"]]],"^19",null,"^1:",["^10",[]],"^V",null,"^6<",true,"^Y",null,"^Z",54,"^1;",1,"^1<",true,"^[",null,"^1?","Each runtime environment provides a different way to print error output.\\n  Whatever function *print-fn* is bound to will be passed any\\n  Strings which should be printed."],"~$pv-aset",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4600,"^V",8,"^Z",4600,"^U",15,"^3G",true,"^[",["^10",["^11",["^10",[["~$node","~$idx","^1N"]]]]]],"^3G",true,"^3","~$cljs.core/pv-aset","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^6?","^6@","^1N"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4600,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^6?","^6@","^1N"]]]]]],"~$prefers",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9794,"^V",7,"^Z",9794,"^U",14,"^[",["^10",["^11",["^10",[["~$multifn"]]]]],"^1?","Given a multimethod, returns a map of preferred value -> set of other values"],"^3","~$cljs.core/prefers","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^6C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9794,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^6C"]]]]],"^1?","Given a multimethod, returns a map of preferred value -> set of other values"],"~$-js->clj",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9310,"^V",4,"^Z",9310,"^U",12,"^48","~$cljs.core/IEncodeClojure","^1?","Transforms JavaScript values to Clojure","^[",["^10",["^11",["^10",[["~$x","~$options"]]]]]],"^48","^6F","^3","~$cljs.core/-js->clj","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["~$x","^6G"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9310,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","^6G"]]]]],"^1?","Transforms JavaScript values to Clojure"],"~$LazySeq",["^ ","^2K",4,"^D",["^2",["^E","^F","^H","^J","^L","^32","^3S","^N","^O","^3<","^R","^3T"]],"^3","~$cljs.core/LazySeq","^T","cljs/core.cljs","^U",17,"^2O",true,"^V",10,"^Y",2979,"^2P",false,"^Z",2979,"^15",["^2",["^E","^F","^H","^L","^32","^3S","^N","^O","^3<","^R","^3T"]]],"~$dedupe",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9212,"^V",7,"^Z",9212,"^U",13,"^[",["^10",["^11",["^10",[[],["^1D"]]]]],"^1?","Returns a lazy sequence removing consecutive duplicates in coll.\\n  Returns a transducer when no collection is provided.","^1@",["^ ","^17",false,"^1;",1,"^18",["^10",[[],["^1D"]]],"^[",["^10",[[],["^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/dedupe","^17",false,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",false,"^1;",1,"^18",["^10",[[],["^1D"]]],"^[",["^10",[[],["^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[[],["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9212,"^1;",1,"^1<",true,"^[",["^10",[[],["^1D"]]],"^1?","Returns a lazy sequence removing consecutive duplicates in coll.\\n  Returns a transducer when no collection is provided."],"~$unchecked-editable-array-for",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5184,"^V",8,"^Z",5184,"^U",36,"^3G",true,"^[",["^10",["^11",["^10",[["~$tv","~$i"]]]]]],"^3G",true,"^3","~$cljs.core/unchecked-editable-array-for","^17",false,"^T","cljs/core.cljs","^U",36,"^18",["^10",[["^6N","~$i"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",5184,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^6N","~$i"]]]]]],"~$->ES6Iterator",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",21,"^V",10,"^W","^X","^Y",1121,"^Z",1121,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->ES6Iterator","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",1121,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^15",null],"~$VectorNode",["^ ","^2K",2,"^D",["^2",[]],"^3","~$cljs.core/VectorNode","^T","cljs/core.cljs","^U",20,"^2O",true,"^V",10,"^Y",4592,"^2P",false,"^Z",4592,"^15",null],"~$dissoc",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1742,"^V",7,"^Z",1742,"^U",13,"^[",["^10",["^11",["^10",[["^1D"],["^1D","~$k"],["^1D","~$k","~$&","~$ks"]]]]],"^1?","dissoc[iate]. Returns a new map of the same (hashed/sorted) type,\\n  that does not contain a mapping for key(s).","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^1D"],["^1D","~$k"]]],"^[",["^10",[["^1D"],["^1D","~$k"],["^1D","~$k","~$&","^6U"]]],"^1:",["^10",[null,null,null]]]],"^3","~$cljs.core/dissoc","^17",true,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^1D"],["^1D","~$k"]]],"^[",["^10",[["^1D"],["^1D","~$k"],["^1D","~$k","~$&","^6U"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["^1D"],["^1D","~$k"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^Z",1742,"^1;",2,"^1<",true,"^[",["^10",[["^1D"],["^1D","~$k"],["^1D","~$k","~$&","^6U"]]],"^1?","dissoc[iate]. Returns a new map of the same (hashed/sorted) type,\\n  that does not contain a mapping for key(s)."],"~$atom",["^ ","^3","~$cljs.core/atom","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",6083,"^U",72,"^3O",true,"^C",["^ ","^T","cljs/core.cljs","^Y",6083,"^V",68,"^Z",6083,"^U",72,"^3O",true]],"~$bit-shift-right",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2536,"^V",7,"^Z",2536,"^U",22,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Bitwise shift right"],"^3","~$cljs.core/bit-shift-right","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["~$x","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2536,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Bitwise shift right"],"~$*clojurescript-version*",["^ ","^3","~$cljs.core/*clojurescript-version*","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",16,"^U",29,"^C",["^ ","^T","cljs/core.cljs","^Y",16,"^V",6,"^Z",16,"^U",29]],"~$-first",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",469,"^V",4,"^Z",469,"^U",10,"^48","^32","^1?","Returns the first item in the collection coll. Used by cljs.core/first.","^[",["^10",["^11",["^10",[["^1D"]]]]]],"^48","^32","^3","~$cljs.core/-first","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",469,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns the first item in the collection coll. Used by cljs.core/first."],"~$peek",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1830,"^V",7,"^Z",1830,"^U",11,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","For a list or queue, same as first, for a vector, same as, but much\\n  more efficient than, last. If the collection is empty, returns nil."],"^3","~$cljs.core/peek","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1830,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","For a list or queue, same as first, for a vector, same as, but much\\n  more efficient than, last. If the collection is empty, returns nil."],"~$IKVReduce",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",559,"^V",14,"^Z",559,"^U",23,"^1?","Protocol for associative types that can reduce themselves\\n  via a function of key and val. Called by cljs.core/reduce-kv.","^1H",true,"^1I",["^ ","^1J",["^ ","~$-kv-reduce",[["^1D","~$f","~$init"]]]]],"^1H",true,"^3","~$cljs.core/IKVReduce","^T","cljs/core.cljs","^U",23,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^76",[["^1D","~$f","^77"]]]],"^1P",null,"^Z",559,"^1Q",["^2",["^5E","^5F","^5G","^5I","^5K","^5N"]],"^1?","Protocol for associative types that can reduce themselves\\n  via a function of key and val. Called by cljs.core/reduce-kv."],"~$aget",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",363,"^V",7,"^Z",363,"^U",11,"^[",["^10",["^11",["^10",[["~$array","~$i"],["^7:","~$i","~$&","~$idxs"]]]]],"^1?","Returns the value at the index.","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^7:","~$i"]]],"^[",["^10",[["^7:","~$i"],["^7:","~$i","~$&","^7;"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/aget","^17",true,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^7:","~$i"]]],"^[",["^10",[["^7:","~$i"],["^7:","~$i","~$&","^7;"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^7:","~$i"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",363,"^1;",2,"^1<",true,"^[",["^10",[["^7:","~$i"],["^7:","~$i","~$&","^7;"]]],"^1?","Returns the value at the index."],"~$PersistentTreeMapSeq",["^ ","^2K",5,"^D",["^2",["^E","^F","^H","^J","^L","^M","^32","^N","^O","^3<","^R","^3T"]],"^3","~$cljs.core/PersistentTreeMapSeq","^T","cljs/core.cljs","^U",30,"^2O",true,"^V",10,"^Y",7045,"^2P",false,"^Z",7045,"^15",["^2",["^E","^F","^H","^L","^M","^32","^N","^O","^3<","^R","^3T"]]],"~$-write",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",614,"^V",4,"^Z",614,"^U",10,"^48","~$cljs.core/IWriter","^1?","Writes s with writer and returns the result.","^[",["^10",["^11",["^10",[["^5U","~$s"]]]]]],"^48","^7@","^3","~$cljs.core/-write","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["^5U","~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",614,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^5U","~$s"]]]]],"^1?","Writes s with writer and returns the result."],"^27",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3548,"^V",7,"^Z",3548,"^U",11,"^[",["^10",["^11",["^10",[["^1D"]]]]]],"^3","~$cljs.core/iter","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3548,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]]],"~$mk-bound-fn",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8362,"^V",7,"^Z",8362,"^U",18,"^[",["^10",["^11",["^10",[["~$sc","~$test","^1M"]]]]]],"^3","~$cljs.core/mk-bound-fn","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^7D","^7E","^1M"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8362,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^7D","^7E","^1M"]]]]]],"~$last",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1531,"^V",7,"^Z",1531,"^U",11,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^1?","Return the last item in coll, in linear time"],"^3","~$cljs.core/last","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1531,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^1?","Return the last item in coll, in linear time"],"~$-default-dispatch-val",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9576,"^V",4,"^Z",9576,"^U",25,"^48","^5[","^1?",null,"^[",["^10",["^11",["^10",[["^60"]]]]]],"^48","^5[","^3","~$cljs.core/-default-dispatch-val","^17",false,"^T","cljs/core.cljs","^U",25,"^18",["^10",[["^60"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9576,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^60"]]]]],"^1?",null],"~$pr",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8911,"^V",7,"^Z",8911,"^U",9,"^[",["^10",["^11",["^10",[["~$&","^57"]]]]],"^1?","Prints the object(s) using string-print.  Prints the\\n  object(s), separated by spaces if there is more than one.\\n  By default, pr and prn print in a way that objects can be\\n  read by the reader","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^57"]]],"^[",["^10",[["~$&","^57"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/pr","^17",true,"^T","cljs/core.cljs","^U",9,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^57"]]],"^[",["^10",[["~$&","^57"]]],"^1:",["^10",[null]]],"^18",[["^10",["^57"]]],"^19",null,"^1:",["^10",[null]],"^V",null,"^Y",null,"^Z",8911,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^57"]]],"^1?","Prints the object(s) using string-print.  Prints the\\n  object(s), separated by spaces if there is more than one.\\n  By default, pr and prn print in a way that objects can be\\n  read by the reader"],"~$tree-map-seq-push",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7038,"^V",8,"^Z",7038,"^U",25,"^3G",true,"^[",["^10",["^11",["^10",[["^6?","~$stack","^54"]]]]]],"^3G",true,"^3","~$cljs.core/tree-map-seq-push","^17",false,"^T","cljs/core.cljs","^U",25,"^18",["^10",[["^6?","^7N","^54"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",7038,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^6?","^7N","^54"]]]]]],"~$namespace",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2957,"^V",7,"^Z",2957,"^U",16,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns the namespace String of a symbol or keyword, or nil if not present."],"^3","~$cljs.core/namespace","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2957,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns the namespace String of a symbol or keyword, or nil if not present."],"~$empty-unordered-hash",["^ ","^3","~$cljs.core/empty-unordered-hash","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",1195,"^U",36,"^3G",true,"^C",["^ ","^T","cljs/core.cljs","^Y",1195,"^V",16,"^Z",1195,"^U",36,"^3G",true]],"~$obj-map",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7726,"^V",7,"^Z",7726,"^U",14,"^[",["^10",["^11",["^10",[["~$&","~$keyvals"]]]]],"^1?","keyval => key val\\n  Returns a new object map with supplied mappings.","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^7U"]]],"^[",["^10",[["~$&","^7U"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/obj-map","^17",true,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^7U"]]],"^[",["^10",[["~$&","^7U"]]],"^1:",["^10",[null]]],"^18",[["^10",["^7U"]]],"^19",null,"^1:",["^10",[null]],"^V",null,"^Y",null,"^Z",7726,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^7U"]]],"^1?","keyval => key val\\n  Returns a new object map with supplied mappings."],"~$Reduced",["^ ","^2K",1,"^D",["^2",["^2M"]],"^3","~$cljs.core/Reduced","^T","cljs/core.cljs","^U",17,"^2O",true,"^V",10,"^Y",1244,"^2P",false,"^Z",1244,"^15",["^2",["^2M"]]],"~$-conj",["^ ","^B",null,"^C",["^ ","^48","^H","^T","cljs/core.cljs","^U",14,"^V",9,"^Y",449,"^Z",449,"^1X","^49","^[",["^10",["^11",["^10",[["^1D","~$o"]]]]],"^1?","Returns a new collection of coll with o added to it. The new item\\n     should be added to the most efficient place, e.g.\\n     (conj [1 2 3 4] 5) => [1 2 3 4 5]\\n     (conj \'(2 3 4 5) 1) => \'(1 2 3 4 5)"],"^48","^H","^3","~$cljs.core/-conj","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^1D","~$o"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^49","^Z",449,"^1;",2,"^1X","^49","^1<",true,"^[",["^10",["^11",["^10",[["^1D","~$o"]]]]],"^1?","Returns a new collection of coll with o added to it. The new item\\n     should be added to the most efficient place, e.g.\\n     (conj [1 2 3 4] 5) => [1 2 3 4 5]\\n     (conj \'(2 3 4 5) 1) => \'(1 2 3 4 5)"],"~$NodeSeq",["^ ","^2K",5,"^D",["^2",["^E","^F","^H","^J","^L","^32","^N","^O","^3<","^R","^3T"]],"^3","~$cljs.core/NodeSeq","^T","cljs/core.cljs","^U",17,"^2O",true,"^V",10,"^Y",6647,"^2P",false,"^Z",6647,"^15",["^2",["^E","^F","^H","^L","^32","^N","^O","^3<","^R","^3T"]]],"~$=",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^V",16,"^Y",1102,"^Z",1102,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]]]],"^1?","Equality. Returns true if x equals y, false if not. Compares\\n  numbers and collections in a type-independent manner.  Clojure\'s immutable data\\n  structures define -equiv (and thus =) as a value, not an identity,\\n  comparison."],"^3","~$cljs.core/=","^17",true,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",1102,"^1;",2,"^1X","^1Y","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1?","Equality. Returns true if x equals y, false if not. Compares\\n  numbers and collections in a type-independent manner.  Clojure\'s immutable data\\n  structures define -equiv (and thus =) as a value, not an identity,\\n  comparison."],"~$ITransientMap",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",661,"^V",14,"^Z",661,"^U",27,"^1?","Protocol for adding mapping functionality to transient collections.","^1H",true,"^1I",["^ ","^1J",["^ ","~$-dissoc!",[["^1L","^1M"]]]]],"^1H",true,"^3","~$cljs.core/ITransientMap","^T","cljs/core.cljs","^U",27,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^83",[["^1L","^1M"]]]],"^1P",null,"^Z",661,"^1Q",["^2",["^1S","^1T"]],"^1?","Protocol for adding mapping functionality to transient collections."],"~$push-tail",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4622,"^V",8,"^Z",4622,"^U",17,"^3G",true,"^[",["^10",["^11",["^10",[["^4J","~$level","~$parent","~$tailnode"]]]]]],"^3G",true,"^3","~$cljs.core/push-tail","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^4J","^86","^87","^88"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4622,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^4J","^86","^87","^88"]]]]]],"~$take",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4214,"^V",7,"^Z",4214,"^U",11,"^[",["^10",["^11",["^10",[["~$n"],["~$n","^1D"]]]]],"^1?","Returns a lazy sequence of the first n items in coll, or all items if\\n  there are fewer than n.  Returns a stateful transducer when\\n  no collection is provided.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$n"],["~$n","^1D"]]],"^[",["^10",[["~$n"],["~$n","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/take","^17",false,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$n"],["~$n","^1D"]]],"^[",["^10",[["~$n"],["~$n","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$n"],["~$n","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4214,"^1;",2,"^1<",true,"^[",["^10",[["~$n"],["~$n","^1D"]]],"^1?","Returns a lazy sequence of the first n items in coll, or all items if\\n  there are fewer than n.  Returns a stateful transducer when\\n  no collection is provided."],"~$vector?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1907,"^V",16,"^Z",1907,"^U",23,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x satisfies IVector"],"^3","~$cljs.core/vector?","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",1907,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x satisfies IVector"],"~$array-index-of-equiv?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5706,"^V",8,"^Z",5706,"^U",29,"^3G",true,"^[",["^10",["^11",["^10",[["^4B","~$k"]]]]]],"^3G",true,"^3","~$cljs.core/array-index-of-equiv?","^17",false,"^T","cljs/core.cljs","^U",29,"^18",["^10",[["^4B","~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",5706,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^4B","~$k"]]]]]],"~$bitmap-indexed-node-index",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6109,"^V",8,"^Z",6109,"^U",33,"^3G",true,"^[",["^10",["^11",["^10",[["~$bitmap","~$bit"]]]]]],"^3G",true,"^3","~$cljs.core/bitmap-indexed-node-index","^17",false,"^T","cljs/core.cljs","^U",33,"^18",["^10",[["^8A","^8B"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",6109,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^8A","^8B"]]]]]],"^1Y",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1983,"^V",16,"^Z",1983,"^U",23,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Coerce to boolean"],"^3","~$cljs.core/boolean","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",1983,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Coerce to boolean"],"~$IChunk",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",684,"^V",14,"^Z",684,"^U",20,"^1?","Protocol for accessing the items of a chunk.","^1H",true,"^1I",["^ ","^1J",["^ ","~$-drop-first",[["^1D"]]]]],"^1H",true,"^3","~$cljs.core/IChunk","^T","cljs/core.cljs","^U",20,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^8F",[["^1D"]]]],"^1P",null,"^Z",684,"^1Q",["^2",["~$cljs.core/ArrayChunk"]],"^1?","Protocol for accessing the items of a chunk."],"~$bit-shift-left",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2532,"^V",7,"^Z",2532,"^U",21,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Bitwise shift left"],"^3","~$cljs.core/bit-shift-left","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$x","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2532,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Bitwise shift left"],"~$random-uuid",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9835,"^V",7,"^Z",9835,"^U",18,"^[",["^10",["^11",["^10",[[]]]]]],"^3","~$cljs.core/random-uuid","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[[]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9835,"^1;",0,"^1<",true,"^[",["^10",["^11",["^10",[[]]]]]],"~$rand-int",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9379,"^V",7,"^Z",9379,"^U",15,"^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns a random integer between 0 (inclusive) and n (exclusive)."],"^3","~$cljs.core/rand-int","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9379,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns a random integer between 0 (inclusive) and n (exclusive)."],"~$aclone",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",340,"^V",7,"^Z",340,"^U",13,"^[",["^10",["^11",["^10",[["^4B"]]]]],"^1?","Returns a javascript array, cloned from the passed in array"],"^3","~$cljs.core/aclone","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["^4B"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",340,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^4B"]]]]],"^1?","Returns a javascript array, cloned from the passed in array"],"~$BlackNode",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",7101,"^V",18,"^Z",7101,"^U",27,"^3O",true],"^2K",5,"^D",["^2",["^3P","~$cljs.core/IVector","^E","^F","^G","^H","^J","^L","^M","^N","^O","~$cljs.core/IStack","~$cljs.core/IMapEntry","^3<","^R","^65","^S","^3T"]],"^3","^5H","^T","cljs/core.cljs","^U",19,"^2O",true,"^V",10,"^Y",7204,"^2P",false,"^3O",true,"^Z",7204,"^15",["^2",["^3P","^8R","^E","^F","^G","^H","^L","^M","^N","^O","^8S","^8T","^3<","^R","^65","^S","^3T"]]],"~$vreset!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4048,"^V",7,"^Z",4048,"^U",14,"^[",["^10",["^11",["^10",[["~$vol","~$newval"]]]]],"^1?","Sets the value of volatile to newval without regard for the\\n   current value. Returns newval."],"^3","~$cljs.core/vreset!","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^8V","^8W"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4048,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^8V","^8W"]]]]],"^1?","Sets the value of volatile to newval without regard for the\\n   current value. Returns newval."],"~$chunk",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3168,"^V",7,"^Z",3168,"^U",12,"^[",["^10",["^11",["^10",[["~$b"]]]]]],"^3","~$cljs.core/chunk","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["~$b"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3168,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$b"]]]]]],"~$dec",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2314,"^V",7,"^Z",2314,"^U",10,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns a number one less than num."],"^3","~$cljs.core/dec","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2314,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns a number one less than num."],"~$map",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4167,"^V",7,"^Z",4167,"^U",10,"^[",["^10",["^11",["^10",[["~$f"],["~$f","^1D"],["~$f","~$c1","~$c2"],["~$f","^92","^93","~$c3"],["~$f","^92","^93","^94","~$&","~$colls"]]]]],"^1?","Returns a lazy sequence consisting of the result of applying f to\\n  the set of first items of each coll, followed by applying f to the\\n  set of second items in each coll, until any one of the colls is\\n  exhausted.  Any remaining items in other colls are ignored. Function\\n  f should accept number-of-colls arguments. Returns a transducer when\\n  no collection is provided.","^1@",["^ ","^17",true,"^1;",4,"^18",["^10",[["~$f"],["~$f","^1D"],["~$f","^92","^93"],["~$f","^92","^93","^94"]]],"^[",["^10",[["~$f"],["~$f","^1D"],["~$f","^92","^93"],["~$f","^92","^93","^94"],["~$f","^92","^93","^94","~$&","^95"]]],"^1:",["^10",[null,null,null,null,null]]]],"^3","~$cljs.core/map","^17",true,"^T","cljs/core.cljs","^U",10,"^1@",["^ ","^17",true,"^1;",4,"^18",["^10",[["~$f"],["~$f","^1D"],["~$f","^92","^93"],["~$f","^92","^93","^94"]]],"^[",["^10",[["~$f"],["~$f","^1D"],["~$f","^92","^93"],["~$f","^92","^93","^94"],["~$f","^92","^93","^94","~$&","^95"]]],"^1:",["^10",[null,null,null,null,null]]],"^18",["^10",[["~$f"],["~$f","^1D"],["~$f","^92","^93"],["~$f","^92","^93","^94"]]],"^19",null,"^1:",["^10",[null,null,null,null,null]],"^V",null,"^Y",null,"^Z",4167,"^1;",4,"^1<",true,"^[",["^10",[["~$f"],["~$f","^1D"],["~$f","^92","^93"],["~$f","^92","^93","^94"],["~$f","^92","^93","^94","~$&","^95"]]],"^1?","Returns a lazy sequence consisting of the result of applying f to\\n  the set of first items of each coll, followed by applying f to the\\n  set of second items in each coll, until any one of the colls is\\n  exhausted.  Any remaining items in other colls are ignored. Function\\n  f should accept number-of-colls arguments. Returns a transducer when\\n  no collection is provided."],"~$juxt",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8598,"^V",7,"^Z",8598,"^U",11,"^[",["^10",["^11",["^10",[["~$f"],["~$f","~$g"],["~$f","~$g","~$h"],["~$f","~$g","~$h","~$&","~$fs"]]]]],"^1?","Takes a set of functions and returns a fn that is the juxtaposition\\n  of those fns.  The returned fn takes a variable number of args, and\\n  returns a vector containing the result of applying each fn to the\\n  args (left-to-right).\\n  ((juxt a b c) x) => [(a x) (b x) (c x)]","^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["~$f"],["~$f","~$g"],["~$f","~$g","~$h"]]],"^[",["^10",[["~$f"],["~$f","~$g"],["~$f","~$g","~$h"],["~$f","~$g","~$h","~$&","^98"]]],"^1:",["^10",[null,null,null,null]]]],"^3","~$cljs.core/juxt","^17",true,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["~$f"],["~$f","~$g"],["~$f","~$g","~$h"]]],"^[",["^10",[["~$f"],["~$f","~$g"],["~$f","~$g","~$h"],["~$f","~$g","~$h","~$&","^98"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[["~$f"],["~$f","~$g"],["~$f","~$g","~$h"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",null,"^Y",null,"^Z",8598,"^1;",3,"^1<",true,"^[",["^10",[["~$f"],["~$f","~$g"],["~$f","~$g","~$h"],["~$f","~$g","~$h","~$&","^98"]]],"^1?","Takes a set of functions and returns a fn that is the juxtaposition\\n  of those fns.  The returned fn takes a variable number of args, and\\n  returns a vector containing the result of applying each fn to the\\n  args (left-to-right).\\n  ((juxt a b c) x) => [(a x) (b x) (c x)]"],"~$->PersistentQueueIter",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",29,"^V",10,"^W","^X","^Y",5333,"^Z",5333,"^[",["^10",["^11",["^10",[["~$fseq","~$riter"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->PersistentQueueIter","^17",false,"^T","cljs/core.cljs","^U",29,"^18",["^10",[["^9;","^9<"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",5333,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^9;","^9<"]]]]],"^15",null],"~$<",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^V",16,"^Y",2266,"^Z",2266,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]]]],"^1?","Returns non-nil if nums are in monotonically increasing order,\\n  otherwise false."],"^3","~$cljs.core/<","^17",true,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",2266,"^1;",2,"^1X","^1Y","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1?","Returns non-nil if nums are in monotonically increasing order,\\n  otherwise false."],"~$inode-kv-reduce",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6126,"^V",8,"^Z",6126,"^U",23,"^3G",true,"^[",["^10",["^11",["^10",[["^4B","~$f","^77"]]]]]],"^3G",true,"^3","~$cljs.core/inode-kv-reduce","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["^4B","~$f","^77"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",6126,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^4B","~$f","^77"]]]]]],"~$obj-map->hash-map",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5495,"^V",8,"^Z",5495,"^U",25,"^3G",true,"^[",["^10",["^11",["^10",[["~$m","~$k","~$v"]]]]]],"^3G",true,"^3","~$cljs.core/obj-map->hash-map","^17",false,"^T","cljs/core.cljs","^U",25,"^18",["^10",[["~$m","~$k","~$v"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",5495,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["~$m","~$k","~$v"]]]]]],"^7E",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9935,"^V",7,"^Z",9935,"^U",11,"^[",["^10",["^11",["^10",[["~$v"]]]]],"^1?","test [v] finds fn at key :test in var metadata and calls it,\\n  presuming failure will throw exception"],"^3","~$cljs.core/test","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$v"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9935,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$v"]]]]],"^1?","test [v] finds fn at key :test in var metadata and calls it,\\n  presuming failure will throw exception"],"~$rest",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1080,"^V",12,"^Z",1080,"^U",16,"^1X","^2H","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a possibly empty seq of the items after the first. Calls seq on its\\n  argument."],"^3","~$cljs.core/rest","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^2H","^Z",1080,"^1;",1,"^1X","^2H","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a possibly empty seq of the items after the first. Calls seq on its\\n  argument."],"~$ex-data",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9898,"^V",7,"^Z",9898,"^U",14,"^[",["^10",["^11",["^10",[["~$ex"]]]]],"^1?","Alpha - subject to change.\\n  Returns exception data (a map) if ex is an ExceptionInfo.\\n  Otherwise returns nil."],"^3","~$cljs.core/ex-data","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^9G"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9898,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^9G"]]]]],"^1?","Alpha - subject to change.\\n  Returns exception data (a map) if ex is an ExceptionInfo.\\n  Otherwise returns nil."],"~$PersistentArrayMapSeq",["^ ","^2K",3,"^D",["^2",["^E","^F","^H","^J","^L","^M","^32","^3S","^N","^O","^3<","^R","^3T"]],"^3","~$cljs.core/PersistentArrayMapSeq","^T","cljs/core.cljs","^U",31,"^2O",true,"^V",10,"^Y",5747,"^2P",false,"^Z",5747,"^15",["^2",["^E","^F","^H","^L","^M","^32","^3S","^N","^O","^3<","^R","^3T"]]],"^8F",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",686,"^V",4,"^Z",686,"^U",15,"^48","^8G","^1?","Return a new chunk of coll with the first item removed.","^[",["^10",["^11",["^10",[["^1D"]]]]]],"^48","^8G","^3","~$cljs.core/-drop-first","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",686,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Return a new chunk of coll with the first item removed."],"~$isa?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",20,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$child","^87"],["~$h","^9M","^87"]]],"^[",["^10",[["^9M","^87"],["~$h","^9M","^87"]]],"^1:",["^10",[null,null]]],"^V",16,"^Y",9416,"^Z",9416,"^1X","^1Y","^[",["^10",["^11",["^10",[["^9M","^87"],["~$h","^9M","^87"]]]]],"^1?","Returns true if (= child parent), or child is directly or indirectly derived from\\n  parent, either via a JavaScript type inheritance relationship or a\\n  relationship established via derive. h must be a hierarchy obtained\\n  from make-hierarchy, if not supplied defaults to the global\\n  hierarchy"],"^3","~$cljs.core/isa?","^17",false,"^T","cljs/core.cljs","^U",20,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^9M","^87"],["~$h","^9M","^87"]]],"^[",["^10",[["^9M","^87"],["~$h","^9M","^87"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^9M","^87"],["~$h","^9M","^87"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",9416,"^1;",3,"^1X","^1Y","^1<",true,"^[",["^10",[["^9M","^87"],["~$h","^9M","^87"]]],"^1?","Returns true if (= child parent), or child is directly or indirectly derived from\\n  parent, either via a JavaScript type inheritance relationship or a\\n  relationship established via derive. h must be a hierarchy obtained\\n  from make-hierarchy, if not supplied defaults to the global\\n  hierarchy"],"~$-clone",["^ ","^B",null,"^C",["^ ","^48","^P","^T","cljs/core.cljs","^U",15,"^V",9,"^Y",433,"^Z",433,"^1X","^49","^[",["^10",["^11",["^10",[["^33"]]]]],"^1?","Creates a clone of value."],"^48","^P","^3","~$cljs.core/-clone","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^33"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^49","^Z",433,"^1;",1,"^1X","^49","^1<",true,"^[",["^10",["^11",["^10",[["^33"]]]]],"^1?","Creates a clone of value."],"~$munge",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10039,"^V",7,"^Z",10039,"^U",12,"^[",["^10",["^11",["^10",[["~$name"]]]]]],"^3","~$cljs.core/munge","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["^9R"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",10039,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^9R"]]]]]],"~$empty-ordered-hash",["^ ","^3","~$cljs.core/empty-ordered-hash","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",1180,"^U",34,"^3G",true,"^C",["^ ","^T","cljs/core.cljs","^Y",1180,"^V",16,"^Z",1180,"^U",34,"^3G",true]],"~$DEMUNGE_MAP",["^ ","^3","~$cljs.core/DEMUNGE_MAP","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",302,"^U",14,"~:jsdoc",["@enum {string}"],"^C",["^ ","^T","cljs/core.cljs","^Y",302,"^V",3,"^Z",302,"^U",14,"^9X",["@enum {string}"]]],"~$ES6IteratorSeq",["^ ","^2K",3,"^D",["^2",["^32","^N"]],"^3","~$cljs.core/ES6IteratorSeq","^T","cljs/core.cljs","^U",24,"^2O",true,"^V",10,"^Y",1137,"^2P",false,"^Z",1137,"^15",["^2",["^32","^N"]]],"~$->NeverEquiv",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^J"]],"^T","cljs/core.cljs","^U",20,"^V",10,"^W","^X","^Y",5450,"^Z",5450,"^[",["^10",["^11",["^10",[[]]]]],"^15",["^2",["^E"]]],"^D",["^2",["^E","^J"]],"^3","~$cljs.core/->NeverEquiv","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[[]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",5450,"^1;",0,"^1<",true,"^[",["^10",["^11",["^10",[[]]]]],"^15",["^2",["^E"]]],"~$re-seq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8694,"^V",7,"^Z",8694,"^U",13,"^[",["^10",["^11",["^10",[["~$re","~$s"]]]]],"^1?","Returns a lazy sequence of successive matches of re in s."],"^3","~$cljs.core/re-seq","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["^:2","~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8694,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^:2","~$s"]]]]],"^1?","Returns a lazy sequence of successive matches of re in s."],"~$char?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",218,"^V",16,"^Z",218,"^U",21,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is a JavaScript char."],"^3","~$cljs.core/char?","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",218,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is a JavaScript char."],"~$make-hierarchy",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9402,"^V",7,"^Z",9402,"^U",21,"^[",["^10",["^11",["^10",[[]]]]],"^1?","Creates a hierarchy object for use with derive, isa? etc."],"^3","~$cljs.core/make-hierarchy","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[[]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9402,"^1;",0,"^1<",true,"^[",["^10",["^11",["^10",[[]]]]],"^1?","Creates a hierarchy object for use with derive, isa? etc."],"~$Symbol",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",814,"^V",15,"^Z",814,"^U",21,"^3O",true],"^2K",5,"^D",["^2",["^E","^F","^G","^J","~$cljs.core/INamed","^O","^3[","^R"]],"^3","~$cljs.core/Symbol","^T","cljs/core.cljs","^U",16,"^2O",true,"^V",10,"^Y",910,"^2P",false,"^3O",true,"^Z",910,"^15",["^2",["^E","^F","^G","^:9","^O","^3[","^R"]]],"~$tv-push-tail",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5158,"^V",8,"^Z",5158,"^U",20,"^3G",true,"^[",["^10",["^11",["^10",[["^6N","^86","^87","~$tail-node"]]]]]],"^3G",true,"^3","~$cljs.core/tv-push-tail","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^6N","^86","^87","^:<"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",5158,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^6N","^86","^87","^:<"]]]]]],"~$-reduce",["^ ","^B",null,"^C",["^ ","^48","^3T","^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^1D","~$f"],["^1D","~$f","^3A"]]],"^[",["^10",[["^1D","~$f"],["^1D","~$f","^3A"]]],"^1:",["^10",[null,null]]],"^V",4,"^Y",554,"^Z",554,"^[",["^10",["^11",["^10",[["^1D","~$f"],["^1D","~$f","^3A"]]]]],"^1?","f should be a function of 2 arguments. If start is not supplied,\\n     returns the result of applying f to the first 2 items in coll, then\\n     applying f to that result and the 3rd item, etc."],"^48","^3T","^3","~$cljs.core/-reduce","^17",false,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^1D","~$f"],["^1D","~$f","^3A"]]],"^[",["^10",[["^1D","~$f"],["^1D","~$f","^3A"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^1D","~$f"],["^1D","~$f","^3A"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",554,"^1;",3,"^1<",true,"^[",["^10",[["^1D","~$f"],["^1D","~$f","^3A"]]],"^1?","f should be a function of 2 arguments. If start is not supplied,\\n     returns the result of applying f to the first 2 items in coll, then\\n     applying f to that result and the 3rd item, etc."],"~$-count",["^ ","^B",null,"^C",["^ ","^48","^M","^T","cljs/core.cljs","^U",18,"^V",12,"^Y",438,"^Z",438,"^1X","^22","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Calculates the count of coll in constant time. Used by cljs.core/count."],"^48","^M","^3","~$cljs.core/-count","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^22","^Z",438,"^1;",1,"^1X","^22","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Calculates the count of coll in constant time. Used by cljs.core/count."],"~$keep",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3888,"^V",7,"^Z",3888,"^U",11,"^[",["^10",["^11",["^10",[["~$f"],["~$f","^1D"]]]]],"^1?","Returns a lazy sequence of the non-nil results of (f item). Note,\\n  this means false return values will be included.  f must be free of\\n  side-effects.  Returns a transducer when no collection is provided.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$f"],["~$f","^1D"]]],"^[",["^10",[["~$f"],["~$f","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/keep","^17",false,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$f"],["~$f","^1D"]]],"^[",["^10",[["~$f"],["~$f","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$f"],["~$f","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3888,"^1;",2,"^1<",true,"^[",["^10",[["~$f"],["~$f","^1D"]]],"^1?","Returns a lazy sequence of the non-nil results of (f item). Note,\\n  this means false return values will be included.  f must be free of\\n  side-effects.  Returns a transducer when no collection is provided."],"~$char",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2334,"^V",7,"^Z",2334,"^U",11,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Coerce to char"],"^3","~$cljs.core/char","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2334,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Coerce to char"],"~$mapcat",["^ ","^B",null,"^C",["^ ","^5=","1.0","^T","cljs/core.cljs","^U",13,"~:static",true,"^1@",["^ ","^17",true,"^1;",1,"^18",["^10",[["~$f"]]],"^[",["^10",[["~$f"],["~$f","~$&","^95"]]],"^1:",["^10",[null,null]]],"^V",7,"^Y",4386,"^Z",4386,"^[",["^10",["^11",["^10",[["~$f"],["~$f","~$&","^95"]]]]],"^1?","Returns the result of applying concat to the result of applying map\\n  to f and colls.  Thus function f should return a collection. Returns\\n  a transducer when no collections are provided"],"^5=","1.0","^3","~$cljs.core/mapcat","^17",true,"^T","cljs/core.cljs","^U",13,"^:G",true,"^1@",["^ ","^17",true,"^1;",1,"^18",["^10",[["~$f"]]],"^[",["^10",[["~$f"],["~$f","~$&","^95"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$f"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4386,"^1;",1,"^1<",true,"^[",["^10",[["~$f"],["~$f","~$&","^95"]]],"^1?","Returns the result of applying concat to the result of applying map\\n  to f and colls.  Thus function f should return a collection. Returns\\n  a transducer when no collections are provided"],"~$unchecked-long",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2448,"^V",7,"^Z",2448,"^U",21,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Coerce to long by stripping decimal places. Identical to `int\'."],"^3","~$cljs.core/unchecked-long","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2448,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Coerce to long by stripping decimal places. Identical to `int\'."],"~$m3-seed",["^ ","^3","~$cljs.core/m3-seed","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",772,"^U",13,"^C",["^ ","^T","cljs/core.cljs","^Y",772,"^V",6,"^Z",772,"^U",13]],"~$some?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",202,"^V",16,"^Z",202,"^U",21,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is not nil, false otherwise."],"^3","~$cljs.core/some?","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",202,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is not nil, false otherwise."],"~$unchecked-negate",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2403,"^V",7,"^Z",2403,"^U",23,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/unchecked-negate","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2403,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$symbol-identical?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2948,"^V",16,"^Z",2948,"^U",33,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Efficient test to determine that two symbol are identical."],"^3","~$cljs.core/symbol-identical?","^17",false,"^T","cljs/core.cljs","^U",33,"^18",["^10",[["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",2948,"^1;",2,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Efficient test to determine that two symbol are identical."],"~$reverse",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2810,"^V",7,"^Z",2810,"^U",14,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a seq of the items in coll in reverse order. Not lazy."],"^3","~$cljs.core/reverse","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2810,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a seq of the items in coll in reverse order. Not lazy."],"~$range",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8499,"^V",7,"^Z",8499,"^U",12,"^[",["^10",["^11",["^10",[[],["^3B"],["^3A","^3B"],["^3A","^3B","~$step"]]]]],"^1?","Returns a lazy seq of nums from start (inclusive) to end\\n   (exclusive), by step, where start defaults to 0, step to 1,\\n   and end to infinity.","^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[[],["^3B"],["^3A","^3B"],["^3A","^3B","^:V"]]],"^[",["^10",[[],["^3B"],["^3A","^3B"],["^3A","^3B","^:V"]]],"^1:",["^10",[null,null,null,null]]]],"^3","~$cljs.core/range","^17",false,"^T","cljs/core.cljs","^U",12,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[[],["^3B"],["^3A","^3B"],["^3A","^3B","^:V"]]],"^[",["^10",[[],["^3B"],["^3A","^3B"],["^3A","^3B","^:V"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[[],["^3B"],["^3A","^3B"],["^3A","^3B","^:V"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",null,"^Y",null,"^Z",8499,"^1;",3,"^1<",true,"^[",["^10",[[],["^3B"],["^3A","^3B"],["^3A","^3B","^:V"]]],"^1?","Returns a lazy seq of nums from start (inclusive) to end\\n   (exclusive), by step, where start defaults to 0, step to 1,\\n   and end to infinity."],"~$bit-count",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2548,"^V",7,"^Z",2548,"^U",16,"^[",["^10",["^11",["^10",[["~$v"]]]]],"^1?","Counts the number of bits set in n"],"^3","~$cljs.core/bit-count","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["~$v"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2548,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$v"]]]]],"^1?","Counts the number of bits set in n"],"~$create-node",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6629,"^V",8,"^Z",6629,"^U",19,"^3G",true,"^[",["^10",["^11",["^10",[["~$shift","~$key1","~$val1","~$key2hash","~$key2","~$val2"],["~$edit","^:[","^;0","^;1","^;2","^;3","^;4"]]]]],"^1@",["^ ","^17",false,"^1;",7,"^18",["^10",[["^:[","^;0","^;1","^;2","^;3","^;4"],["^;5","^:[","^;0","^;1","^;2","^;3","^;4"]]],"^[",["^10",[["^:[","^;0","^;1","^;2","^;3","^;4"],["^;5","^:[","^;0","^;1","^;2","^;3","^;4"]]],"^1:",["^10",[null,null]]]],"^3G",true,"^3","~$cljs.core/create-node","^17",false,"^T","cljs/core.cljs","^U",19,"^1@",["^ ","^17",false,"^1;",7,"^18",["^10",[["^:[","^;0","^;1","^;2","^;3","^;4"],["^;5","^:[","^;0","^;1","^;2","^;3","^;4"]]],"^[",["^10",[["^:[","^;0","^;1","^;2","^;3","^;4"],["^;5","^:[","^;0","^;1","^;2","^;3","^;4"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^:[","^;0","^;1","^;2","^;3","^;4"],["^;5","^:[","^;0","^;1","^;2","^;3","^;4"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",6629,"^1;",7,"^1<",true,"^[",["^10",[["^:[","^;0","^;1","^;2","^;3","^;4"],["^;5","^:[","^;0","^;1","^;2","^;3","^;4"]]]],"~$sort",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2099,"^V",7,"^Z",2099,"^U",11,"^[",["^10",["^11",["^10",[["^1D"],["^1E","^1D"]]]]],"^1?","Returns a sorted sequence of the items in coll. Comp can be\\n   boolean-valued comparison function, or a -/0/+ valued comparator.\\n   Comp defaults to compare.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^1D"],["^1E","^1D"]]],"^[",["^10",[["^1D"],["^1E","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/sort","^17",false,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^1D"],["^1E","^1D"]]],"^[",["^10",[["^1D"],["^1E","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^1D"],["^1E","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2099,"^1;",2,"^1<",true,"^[",["^10",[["^1D"],["^1E","^1D"]]],"^1?","Returns a sorted sequence of the items in coll. Comp can be\\n   boolean-valued comparison function, or a -/0/+ valued comparator.\\n   Comp defaults to compare."],"~$->MetaFn",["^ ","^B",null,"^C",["^ ","^D",["^2",["^G","^O","^37","^R"]],"^T","cljs/core.cljs","^U",16,"^V",10,"^W","^X","^Y",1761,"^Z",1761,"^[",["^10",["^11",["^10",[["~$afn","^12"]]]]],"^15",["^2",["^G","^O","^R"]]],"^D",["^2",["^G","^O","^37","^R"]],"^3","~$cljs.core/->MetaFn","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^;:","^12"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",1761,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^;:","^12"]]]]],"^15",["^2",["^G","^O","^R"]]],"~$unchecked-inc-int",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2386,"^V",7,"^Z",2386,"^U",24,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/unchecked-inc-int","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2386,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$-compare",["^ ","^B",null,"^C",["^ ","^48","^50","^T","cljs/core.cljs","^U",20,"^V",12,"^Y",680,"^Z",680,"^1X","^22","^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Returns a negative number, zero, or a positive number when x is logically\\n     \'less than\', \'equal to\', or \'greater than\' y."],"^48","^50","^3","~$cljs.core/-compare","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^22","^Z",680,"^1;",2,"^1X","^22","^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Returns a negative number, zero, or a positive number when x is logically\\n     \'less than\', \'equal to\', or \'greater than\' y."],"~$map-indexed",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3861,"^V",7,"^Z",3861,"^U",18,"^[",["^10",["^11",["^10",[["~$f"],["~$f","^1D"]]]]],"^1?","Returns a lazy sequence consisting of the result of applying f to 0\\n  and the first item of coll, followed by applying f to 1 and the second\\n  item in coll, etc, until coll is exhausted. Thus function f should\\n  accept 2 arguments, index and item.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$f"],["~$f","^1D"]]],"^[",["^10",[["~$f"],["~$f","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/map-indexed","^17",false,"^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$f"],["~$f","^1D"]]],"^[",["^10",[["~$f"],["~$f","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$f"],["~$f","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3861,"^1;",2,"^1<",true,"^[",["^10",[["~$f"],["~$f","^1D"]]],"^1?","Returns a lazy sequence consisting of the result of applying f to 0\\n  and the first item of coll, followed by applying f to 1 and the second\\n  item in coll, etc, until coll is exhausted. Thus function f should\\n  accept 2 arguments, index and item."],"~$array-list",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8309,"^V",7,"^Z",8309,"^U",17,"^[",["^10",["^11",["^10",[[]]]]]],"^3","~$cljs.core/array-list","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[[]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8309,"^1;",0,"^1<",true,"^[",["^10",["^11",["^10",[[]]]]]],"~$rand-nth",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9383,"^V",7,"^Z",9383,"^U",15,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Return a random element of the (sequential) collection. Will have\\n  the same performance characteristics as nth for the given\\n  collection."],"^3","~$cljs.core/rand-nth","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9383,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Return a random element of the (sequential) collection. Will have\\n  the same performance characteristics as nth for the given\\n  collection."],"^1E",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3778,"^V",7,"^Z",3778,"^U",11,"^[",["^10",["^11",["^10",[[],["~$f"],["~$f","~$g"],["~$f","~$g","~$h"],["~$f1","~$f2","~$f3","~$&","^98"]]]]],"^1?","Takes a set of functions and returns a fn that is the composition\\n  of those fns.  The returned fn takes a variable number of args,\\n  applies the rightmost of fns to the args, the next\\n  fn (right-to-left) to the result, etc.","^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[[],["~$f"],["~$f","~$g"],["~$f","~$g","~$h"]]],"^[",["^10",[[],["~$f"],["~$f","~$g"],["~$f","~$g","~$h"],["^;F","^;G","^;H","~$&","^98"]]],"^1:",["^10",[null,null,null,null,null]]]],"^3","~$cljs.core/comp","^17",true,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[[],["~$f"],["~$f","~$g"],["~$f","~$g","~$h"]]],"^[",["^10",[[],["~$f"],["~$f","~$g"],["~$f","~$g","~$h"],["^;F","^;G","^;H","~$&","^98"]]],"^1:",["^10",[null,null,null,null,null]]],"^18",["^10",[[],["~$f"],["~$f","~$g"],["~$f","~$g","~$h"]]],"^19",null,"^1:",["^10",[null,null,null,null,null]],"^V",null,"^Y",null,"^Z",3778,"^1;",3,"^1<",true,"^[",["^10",[[],["~$f"],["~$f","~$g"],["~$f","~$g","~$h"],["^;F","^;G","^;H","~$&","^98"]]],"^1?","Takes a set of functions and returns a fn that is the composition\\n  of those fns.  The returned fn takes a variable number of args,\\n  applies the rightmost of fns to the args, the next\\n  fn (right-to-left) to the result, etc."],"~$array-chunk",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3088,"^V",7,"^Z",3088,"^U",18,"^[",["^10",["^11",["^10",[["^4B"],["^4B","~$off"],["^4B","^;K","^3B"]]]]],"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^4B"],["^4B","^;K"],["^4B","^;K","^3B"]]],"^[",["^10",[["^4B"],["^4B","^;K"],["^4B","^;K","^3B"]]],"^1:",["^10",[null,null,null]]]],"^3","~$cljs.core/array-chunk","^17",false,"^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^4B"],["^4B","^;K"],["^4B","^;K","^3B"]]],"^[",["^10",[["^4B"],["^4B","^;K"],["^4B","^;K","^3B"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["^4B"],["^4B","^;K"],["^4B","^;K","^3B"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^Z",3088,"^1;",3,"^1<",true,"^[",["^10",[["^4B"],["^4B","^;K"],["^4B","^;K","^3B"]]]],"~$dispatch-fn",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9802,"^V",7,"^Z",9802,"^U",18,"^[",["^10",["^11",["^10",[["^6C"]]]]],"^1?","Given a multimethod, return it\'s dispatch-fn."],"^3","~$cljs.core/dispatch-fn","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^6C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9802,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^6C"]]]]],"^1?","Given a multimethod, return it\'s dispatch-fn."],"~$bit-shift-right-zero-fill",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2540,"^V",7,"^Z",2540,"^U",32,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","DEPRECATED: Bitwise shift right with zero fill"],"^3","~$cljs.core/bit-shift-right-zero-fill","^17",false,"^T","cljs/core.cljs","^U",32,"^18",["^10",[["~$x","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2540,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","DEPRECATED: Bitwise shift right with zero fill"],"~$js-reserved?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10004,"^V",8,"^Z",10004,"^U",20,"^3G",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3G",true,"^3","~$cljs.core/js-reserved?","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",10004,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$-as-transient",["^ ","^B",null,"^C",["^ ","^48","^I","^T","cljs/core.cljs","^U",22,"^V",9,"^Y",645,"^Z",645,"^1X","^49","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a new, transient version of the collection, in constant time."],"^48","^I","^3","~$cljs.core/-as-transient","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^49","^Z",645,"^1;",1,"^1X","^49","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a new, transient version of the collection, in constant time."],"~$dorun",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8634,"^V",7,"^Z",8634,"^U",12,"^[",["^10",["^11",["^10",[["^1D"],["~$n","^1D"]]]]],"^1?","When lazy sequences are produced via functions that have side\\n  effects, any effects other than those needed to produce the first\\n  element in the seq do not occur until the seq is consumed. dorun can\\n  be used to force any effects. Walks through the successive nexts of\\n  the seq, does not retain the head and returns nil.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^1D"],["~$n","^1D"]]],"^[",["^10",[["^1D"],["~$n","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/dorun","^17",false,"^T","cljs/core.cljs","^U",12,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^1D"],["~$n","^1D"]]],"^[",["^10",[["^1D"],["~$n","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^1D"],["~$n","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8634,"^1;",2,"^1<",true,"^[",["^10",[["^1D"],["~$n","^1D"]]],"^1?","When lazy sequences are produced via functions that have side\\n  effects, any effects other than those needed to produce the first\\n  element in the seq do not occur until the seq is consumed. dorun can\\n  be used to force any effects. Walks through the successive nexts of\\n  the seq, does not retain the head and returns nil."],"~$pr-sequential-writer",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8714,"^V",7,"^Z",8714,"^U",27,"^[",["^10",["^11",["^10",[["^5U","~$print-one","~$begin","~$sep","^3B","^1>","^1D"]]]]]],"^3","~$cljs.core/pr-sequential-writer","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^5U","^;X","^;Y","^;Z","^3B","^1>","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8714,"^1;",7,"^1<",true,"^[",["^10",["^11",["^10",[["^5U","^;X","^;Y","^;Z","^3B","^1>","^1D"]]]]]],"~$accumulating-seq-count",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1564,"^V",8,"^Z",1564,"^U",30,"^3G",true,"^[",["^10",["^11",["^10",[["^1D"]]]]]],"^3G",true,"^3","~$cljs.core/accumulating-seq-count","^17",false,"^T","cljs/core.cljs","^U",30,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1564,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]]],"~$IIndexed",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",458,"^V",14,"^Z",458,"^U",22,"^1?","Protocol for collections to provide idexed-based access to their items.","^1H",true,"^1I",["^ ","^1J",["^ ","~$-nth",[["^1D","~$n"],["^1D","~$n","^5:"]]]]],"^1H",true,"^3","^3P","^T","cljs/core.cljs","^U",22,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^<3",[["^1D","~$n"],["^1D","~$n","^5:"]]]],"^1P",null,"^Z",458,"^1Q",["^2",["^1R","^3U","^5H","^5I","^5K","^8H","~$cljs.core/Range","^5P"]],"^1?","Protocol for collections to provide idexed-based access to their items."],"~$disj",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1845,"^V",7,"^Z",1845,"^U",11,"^[",["^10",["^11",["^10",[["^1D"],["^1D","~$k"],["^1D","~$k","~$&","^6U"]]]]],"^1?","disj[oin]. Returns a new set of the same (hashed/sorted) type, that\\n  does not contain key(s).","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^1D"],["^1D","~$k"]]],"^[",["^10",[["^1D"],["^1D","~$k"],["^1D","~$k","~$&","^6U"]]],"^1:",["^10",[null,null,null]]]],"^3","~$cljs.core/disj","^17",true,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^1D"],["^1D","~$k"]]],"^[",["^10",[["^1D"],["^1D","~$k"],["^1D","~$k","~$&","^6U"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["^1D"],["^1D","~$k"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^Z",1845,"^1;",2,"^1<",true,"^[",["^10",[["^1D"],["^1D","~$k"],["^1D","~$k","~$&","^6U"]]],"^1?","disj[oin]. Returns a new set of the same (hashed/sorted) type, that\\n  does not contain key(s)."],"~$IPrintWithWriter",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",619,"^V",14,"^Z",619,"^U",30,"^1?","The old IPrintable protocol\'s implementation consisted of building a giant\\n   list of strings to concatenate.  This involved lots of concat calls,\\n   intermediate vectors, and lazy-seqs, and was very slow in some older JS\\n   engines.  IPrintWithWriter implements printing via the IWriter protocol, so it\\n   be implemented efficiently in terms of e.g. a StringBuffer append.","^1H",true,"^1I",["^ ","^1J",["^ ","~$-pr-writer",[["~$o","^5U","^1>"]]]]],"^1H",true,"^3","^3[","^T","cljs/core.cljs","^U",30,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^<8",[["~$o","^5U","^1>"]]]],"^1P",null,"^Z",619,"^1Q",["^2",["^5E","^5F","~$cljs.core/Cons","~$cljs.core/Eduction","^5G","^80","~$cljs.core/PersistentQueue","^3U","^2N","~$cljs.core/Keyword","^5H","~$cljs.core/EmptyList","^6J","^5I","~$cljs.core/PersistentQueueSeq","~$cljs.core/ExceptionInfo","^38","~$cljs.core/ArrayNodeSeq","~$cljs.core/ValSeq","^5J","^9Z","^9J","^5K","~$cljs.core/List","~$cljs.core/RSeq","^5M","^5N","~$cljs.core/KeySeq","~$cljs.core/ChunkedSeq","~$cljs.core/Atom","^5O","~$cljs.core/ChunkedCons","^::","~$cljs.core/LazyTransformer","^51","^<4","^7>","^5P"]],"^1?","The old IPrintable protocol\'s implementation consisted of building a giant\\n   list of strings to concatenate.  This involved lots of concat calls,\\n   intermediate vectors, and lazy-seqs, and was very slow in some older JS\\n   engines.  IPrintWithWriter implements printing via the IWriter protocol, so it\\n   be implemented efficiently in terms of e.g. a StringBuffer append."],"~$->UUID",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^J","^3[","^50"]],"^T","cljs/core.cljs","^U",14,"^V",10,"^W","^X","^Y",9808,"^Z",9808,"^[",["^10",["^11",["^10",[["^2F","^14"]]]]],"^15",["^2",["^E","^F","^3[","^50"]]],"^D",["^2",["^E","^F","^J","^3[","^50"]],"^3","~$cljs.core/->UUID","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^2F","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",9808,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^2F","^14"]]]]],"^15",["^2",["^E","^F","^3[","^50"]]],"~$IVector",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",528,"^V",14,"^Z",528,"^U",21,"^1?","Protocol for adding vector functionality to collections.","^1H",true,"^1I",["^ ","^1J",["^ ","~$-assoc-n",[["^1D","~$n","^1N"]]]]],"^1H",true,"^3","^8R","^T","cljs/core.cljs","^U",21,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^<L",[["^1D","~$n","^1N"]]]],"^1P",null,"^Z",528,"^1Q",["^2",["^5H","^5I","^5K","^5P"]],"^1?","Protocol for adding vector functionality to collections."],"~$IIterable",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",727,"^V",14,"^Z",727,"^U",23,"^1?","Protocol for iterating over a collection.","^1H",true,"^1I",["^ ","^1J",["^ ","^4O",[["^1D"]]]]],"^1H",true,"^3","^Q","^T","cljs/core.cljs","^U",23,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^4O",[["^1D"]]]],"^1P",null,"^Z",727,"^1Q",["^2",["^5E","^5G","^<;","^3U","^5K","~$cljs.core/ArrayNode","^5M","~$cljs.core/HashCollisionNode","^<4","~$cljs.core/BitmapIndexedNode"]],"^1?","Protocol for iterating over a collection."],"~$*2",["^ ","^3","~$cljs.core/*2","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",153,"^U",5,"^1?","bound in a repl thread to the second most recent value printed","^C",["^ ","^T","cljs/core.cljs","^Y",153,"^V",3,"^Z",153,"^U",5,"^1?","bound in a repl thread to the second most recent value printed"]],"~$Eduction",["^ ","^2K",2,"^D",["^2",["^N","^3[","^3<","^3T"]],"^3","^<:","^T","cljs/core.cljs","^U",18,"^2O",true,"^V",10,"^Y",9239,"^2P",false,"^Z",9239,"^15",["^2",["^N","^3[","^3<","^3T"]]],"~$pv-clone-node",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4603,"^V",8,"^Z",4603,"^U",21,"^3G",true,"^[",["^10",["^11",["^10",[["^6?"]]]]]],"^3G",true,"^3","~$cljs.core/pv-clone-node","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["^6?"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4603,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^6?"]]]]]],"~$cons",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2883,"^V",7,"^Z",2883,"^U",11,"^[",["^10",["^11",["^10",[["~$x","^1D"]]]]],"^1?","Returns a new seq where x is the first element and seq is the rest."],"^3","~$cljs.core/cons","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$x","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2883,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","^1D"]]]]],"^1?","Returns a new seq where x is the first element and seq is the rest."],"~$PersistentTreeSet",["^ ","^2K",3,"^D",["^2",["^3Q","^E","^F","^G","^H","^J","^K","^L","^M","^53","^N","^O","^P","^R","^S"]],"^3","^5O","^T","cljs/core.cljs","^U",27,"^2O",true,"^V",10,"^Y",8082,"^2P",false,"^Z",8082,"^15",["^2",["^3Q","^E","^F","^G","^H","^K","^L","^M","^53","^N","^O","^P","^R","^S"]]],"~$->HashSetIter",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",21,"^V",10,"^W","^X","^Y",7936,"^Z",7936,"^[",["^10",["^11",["^10",[["^27"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->HashSetIter","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["^27"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",7936,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^27"]]]]],"^15",null],"~$ns-lookup",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10073,"^V",8,"^Z",10073,"^U",17,"^3G",true,"^[",["^10",["^11",["^10",[["~$ns-obj","~$k"]]]]]],"^3G",true,"^3","~$cljs.core/ns-lookup","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^=0","~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",10073,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^=0","~$k"]]]]]],"~$floats",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2458,"^V",7,"^Z",2458,"^U",13,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/floats","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2458,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$TransientVector",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",4708,"^V",44,"^Z",4708,"^U",59,"^3O",true],"^2K",4,"^D",["^2",["^3P","^G","^M","~$cljs.core/ITransientCollection","~$cljs.core/ITransientVector","^1O","^S"]],"^3","^1R","^T","cljs/core.cljs","^U",25,"^2O",true,"^V",10,"^Y",5200,"^2P",false,"^3O",true,"^Z",5200,"^15",["^2",["^3P","^G","^M","^=5","^=6","^1O","^S"]]],"~$pos?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2568,"^V",16,"^Z",2568,"^U",20,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns true if num is greater than zero, else false"],"^3","~$cljs.core/pos?","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",2568,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns true if num is greater than zero, else false"],"~$fnil",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3836,"^V",7,"^Z",3836,"^U",11,"^[",["^10",["^11",["^10",[["~$f","~$x"],["~$f","~$x","~$y"],["~$f","~$x","~$y","~$z"]]]]],"^1?","Takes a function f, and returns a function that calls f, replacing\\n  a nil first argument to f with the supplied value x. Higher arity\\n  versions can replace arguments in the second and third\\n  positions (y, z). Note that the function f can take any number of\\n  arguments, not just the one(s) being nil-patched.","^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["~$f","~$x"],["~$f","~$x","~$y"],["~$f","~$x","~$y","~$z"]]],"^[",["^10",[["~$f","~$x"],["~$f","~$x","~$y"],["~$f","~$x","~$y","~$z"]]],"^1:",["^10",[null,null,null]]]],"^3","~$cljs.core/fnil","^17",false,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["~$f","~$x"],["~$f","~$x","~$y"],["~$f","~$x","~$y","~$z"]]],"^[",["^10",[["~$f","~$x"],["~$f","~$x","~$y"],["~$f","~$x","~$y","~$z"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$f","~$x"],["~$f","~$x","~$y"],["~$f","~$x","~$y","~$z"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^Z",3836,"^1;",4,"^1<",true,"^[",["^10",[["~$f","~$x"],["~$f","~$x","~$y"],["~$f","~$x","~$y","~$z"]]],"^1?","Takes a function f, and returns a function that calls f, replacing\\n  a nil first argument to f with the supplied value x. Higher arity\\n  versions can replace arguments in the second and third\\n  positions (y, z). Note that the function f can take any number of\\n  arguments, not just the one(s) being nil-patched."],"~$merge-with",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7902,"^V",7,"^Z",7902,"^U",17,"^[",["^10",["^11",["^10",[["~$f","~$&","~$maps"]]]]],"^1?","Returns a map that consists of the rest of the maps conj-ed onto\\n  the first.  If a key occurs in more than one map, the mapping(s)\\n  from the latter (left-to-right) will be combined with the mapping in\\n  the result by calling (f val-in-result val-in-latter).","^1@",["^ ","^17",true,"^1;",1,"^18",[["^10",["~$f","^=<"]]],"^[",["^10",[["~$f","~$&","^=<"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/merge-with","^17",true,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",true,"^1;",1,"^18",[["^10",["~$f","^=<"]]],"^[",["^10",[["~$f","~$&","^=<"]]],"^1:",["^10",[null]]],"^18",[["^10",["~$f","^=<"]]],"^19",null,"^1:",["^10",[null]],"^V",null,"^Y",null,"^Z",7902,"^1;",1,"^1<",true,"^[",["^10",[["~$f","~$&","^=<"]]],"^1?","Returns a map that consists of the rest of the maps conj-ed onto\\n  the first.  If a key occurs in more than one map, the mapping(s)\\n  from the latter (left-to-right) will be combined with the mapping in\\n  the result by calling (f val-in-result val-in-latter)."],"~$nthrest",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1675,"^V",7,"^Z",1675,"^U",14,"^[",["^10",["^11",["^10",[["^1D","~$n"]]]]],"^1?","Returns the nth rest of coll, coll when n is 0."],"^3","~$cljs.core/nthrest","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^1D","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1675,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^1D","~$n"]]]]],"^1?","Returns the nth rest of coll, coll when n is 0."],"~$sequential?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1883,"^V",16,"^Z",1883,"^U",27,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if coll satisfies ISequential"],"^3","~$cljs.core/sequential?","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",1883,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if coll satisfies ISequential"],"~$tree-map-replace",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7549,"^V",8,"^Z",7549,"^U",24,"^3G",true,"^[",["^10",["^11",["^10",[["^1E","^42","~$k","~$v"]]]]]],"^3G",true,"^3","~$cljs.core/tree-map-replace","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["^1E","^42","~$k","~$v"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",7549,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^1E","^42","~$k","~$v"]]]]]],"~$m3-mix-H1",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",779,"^V",15,"^Z",779,"^U",24,"^1X","^22","^[",["^10",["^11",["^10",[["~$h1","~$k1"]]]]]],"^3","~$cljs.core/m3-mix-H1","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["^=E","^=F"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^22","^Z",779,"^1;",2,"^1X","^22","^1<",true,"^[",["^10",["^11",["^10",[["^=E","^=F"]]]]]],"~$RecordIter",["^ ","^2K",5,"^D",["^2",["^J"]],"^3","~$cljs.core/RecordIter","^T","cljs/core.cljs","^U",20,"^2O",true,"^V",10,"^Y",5630,"^2P",false,"^Z",5630,"^15",null],"~$->TransientArrayMap",["^ ","^B",null,"^C",["^ ","^D",["^2",["^84","^M","^=5","^1O","^S"]],"^T","cljs/core.cljs","^U",27,"^V",10,"^W","^X","^Y",6002,"^Z",6002,"^[",["^10",["^11",["^10",[["~$editable?","^3J","^4B"]]]]],"^15",["^2",["^84","^M","^=5","^1O","^S"]]],"^D",["^2",["^84","^M","^=5","^1O","^S"]],"^3","~$cljs.core/->TransientArrayMap","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^=K","^3J","^4B"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",6002,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^=K","^3J","^4B"]]]]],"^15",["^2",["^84","^M","^=5","^1O","^S"]]],"~$prim-seq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1434,"^V",7,"^Z",1434,"^U",15,"^[",["^10",["^11",["^10",[["~$prim"],["^=N","~$i"]]]]],"^1?","Create seq from a primitive JavaScript Array-like.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^=N"],["^=N","~$i"]]],"^[",["^10",[["^=N"],["^=N","~$i"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/prim-seq","^17",false,"^T","cljs/core.cljs","^U",15,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^=N"],["^=N","~$i"]]],"^[",["^10",[["^=N"],["^=N","~$i"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^=N"],["^=N","~$i"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1434,"^1;",2,"^1<",true,"^[",["^10",[["^=N"],["^=N","~$i"]]],"^1?","Create seq from a primitive JavaScript Array-like."],"~$*print-level*",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",122,"^V",3,"^Z",122,"^U",16,"^6<",true,"^1?","*print-level* controls how many levels deep the printer will\\n  print nested objects. If it is bound to logical false, there is no\\n  limit. Otherwise, it must be bound to an integer indicating the maximum\\n  level to print. Each argument to print is at level 0; if an argument is a\\n  collection, its items are at level 1; and so on. If an object is a\\n  collection and is at a level greater than or equal to the value bound to\\n  *print-level*, the printer prints \'#\' to represent it. The root binding\\n  is nil indicating no limit."],"^3","~$cljs.core/*print-level*","^T","cljs/core.cljs","^U",16,"^V",null,"^6<",true,"^Y",null,"^Z",122,"^1?","*print-level* controls how many levels deep the printer will\\n  print nested objects. If it is bound to logical false, there is no\\n  limit. Otherwise, it must be bound to an integer indicating the maximum\\n  level to print. Each argument to print is at level 0; if an argument is a\\n  collection, its items are at level 1; and so on. If an object is a\\n  collection and is at a level greater than or equal to the value bound to\\n  *print-level*, the printer prints \'#\' to represent it. The root binding\\n  is nil indicating no limit."],"~$shuffle",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2140,"^V",7,"^Z",2140,"^U",14,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Return a random permutation of coll"],"^3","~$cljs.core/shuffle","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2140,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Return a random permutation of coll"],"~$ChunkedSeq",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",1911,"^V",22,"^Z",1911,"^U",32,"^3O",true],"^2K",6,"^D",["^2",["^E","^F","^3R","^H","~$cljs.core/IChunkedNext","^J","^L","^32","^3S","^N","^O","^5R","^3<","^R","^3T"]],"^3","^<E","^T","cljs/core.cljs","^U",20,"^2O",true,"^V",10,"^Y",4933,"^2P",false,"^3O",true,"^Z",4933,"^15",["^2",["^E","^F","^3R","^H","^=U","^L","^32","^3S","^N","^O","^5R","^3<","^R","^3T"]]],"~$hash-keyword",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2891,"^V",7,"^Z",2891,"^U",19,"^[",["^10",["^11",["^10",[["~$k"]]]]]],"^3","~$cljs.core/hash-keyword","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2891,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$k"]]]]]],"~$find",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2015,"^V",7,"^Z",2015,"^U",11,"^[",["^10",["^11",["^10",[["^1D","~$k"]]]]],"^1?","Returns the map entry for key, or nil if key not present."],"^3","~$cljs.core/find","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["^1D","~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2015,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^1D","~$k"]]]]],"^1?","Returns the map entry for key, or nil if key not present."],"~$alength",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",377,"^V",15,"^Z",377,"^U",22,"^1X","^22","^[",["^10",["^11",["^10",[["^7:"]]]]],"^1?","Returns the length of the array. Works on arrays of all types."],"^3","~$cljs.core/alength","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["^7:"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^22","^Z",377,"^1;",1,"^1X","^22","^1<",true,"^[",["^10",["^11",["^10",[["^7:"]]]]],"^1?","Returns the length of the array. Works on arrays of all types."],"~$bit-xor",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2484,"^V",7,"^Z",2484,"^U",14,"^[",["^10",["^11",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4M"]]]]],"^1?","Bitwise exclusive or","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x","~$y"]]],"^[",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/bit-xor","^17",true,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x","~$y"]]],"^[",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2484,"^1;",2,"^1<",true,"^[",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1?","Bitwise exclusive or"],"~$->IndexedSeq",["^ ","^B",null,"^C",["^ ","^D",["^2",["^3P","^3Q","^E","^F","^3R","^H","^J","^L","^M","^32","^3S","^N","^P","^Q","^3<","^3T"]],"^T","cljs/core.cljs","^U",20,"^V",10,"^W","^X","^Y",1361,"^Z",1361,"^[",["^10",["^11",["^10",[["^4B","~$i"]]]]],"^15",["^2",["^3P","^3Q","^E","^F","^3R","^H","^L","^M","^32","^3S","^N","^P","^3<","^3T"]]],"^D",["^2",["^3P","^3Q","^E","^F","^3R","^H","^J","^L","^M","^32","^3S","^N","^P","^Q","^3<","^3T"]],"^3","~$cljs.core/->IndexedSeq","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^4B","~$i"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",1361,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^4B","~$i"]]]]],"^15",["^2",["^3P","^3Q","^E","^F","^3R","^H","^L","^M","^32","^3S","^N","^P","^3<","^3T"]]],"~$ObjMap",["^ ","^2K",5,"^D",["^2",["^78","^E","^F","^G","^H","^I","^J","^L","^M","^N","^O","^R","^65","~$cljs.core/IMap","^S"]],"^3","^5F","^T","cljs/core.cljs","^U",16,"^2O",true,"^V",10,"^Y",5519,"^2P",false,"^Z",5519,"^15",["^2",["^78","^E","^F","^G","^H","^I","^L","^M","^N","^O","^R","^65","^>5","^S"]]],"~$unsigned-bit-shift-right",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2544,"^V",7,"^Z",2544,"^U",31,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Bitwise shift right with zero fill"],"^3","~$cljs.core/unsigned-bit-shift-right","^17",false,"^T","cljs/core.cljs","^U",31,"^18",["^10",[["~$x","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2544,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Bitwise shift right with zero fill"],"~$ES6SetEntriesIterator",["^ ","^2K",1,"^D",["^2",["^J"]],"^3","~$cljs.core/ES6SetEntriesIterator","^T","cljs/core.cljs","^U",31,"^2O",true,"^V",10,"^Y",5656,"^2P",false,"^Z",5656,"^15",null],"~$neg?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2577,"^V",16,"^Z",2577,"^U",20,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if num is less than zero, else false"],"^3","~$cljs.core/neg?","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",2577,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if num is less than zero, else false"],"~$Cons",["^ ","^2K",4,"^D",["^2",["~$cljs.core/IList","^E","^F","^3R","^H","^J","^L","^32","^3S","^N","^O","^P","^3<","^R","^3T"]],"^3","^<9","^T","cljs/core.cljs","^U",14,"^2O",true,"^V",10,"^Y",2834,"^2P",false,"^Z",2834,"^15",["^2",["^>=","^E","^F","^3R","^H","^L","^32","^3S","^N","^O","^P","^3<","^R","^3T"]]],"~$-remove-method",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9571,"^V",4,"^Z",9571,"^U",18,"^48","^5[","^1?",null,"^[",["^10",["^11",["^10",[["^60","^61"]]]]]],"^48","^5[","^3","~$cljs.core/-remove-method","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^60","^61"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9571,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^60","^61"]]]]],"^1?",null],"~$->StringIter",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",20,"^V",10,"^W","^X","^Y",3500,"^Z",3500,"^[",["^10",["^11",["^10",[["~$s","~$i"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->StringIter","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$s","~$i"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",3500,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$s","~$i"]]]]],"^15",null],"~$js-invoke",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",392,"^V",7,"^Z",392,"^U",16,"^[",["^10",["^11",["^10",[["^1Z","~$s","~$&","~$args"]]]]],"^1?","Invoke JavaScript object method via string. Needed when the\\n  string is not a valid unquoted property name.","^1@",["^ ","^17",true,"^1;",2,"^18",[["^10",["^1Z","~$s","^>C"]]],"^[",["^10",[["^1Z","~$s","~$&","^>C"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/js-invoke","^17",true,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",true,"^1;",2,"^18",[["^10",["^1Z","~$s","^>C"]]],"^[",["^10",[["^1Z","~$s","~$&","^>C"]]],"^1:",["^10",[null]]],"^18",[["^10",["^1Z","~$s","^>C"]]],"^19",null,"^1:",["^10",[null]],"^V",null,"^Y",null,"^Z",392,"^1;",2,"^1<",true,"^[",["^10",[["^1Z","~$s","~$&","^>C"]]],"^1?","Invoke JavaScript object method via string. Needed when the\\n  string is not a valid unquoted property name."],"~$->List",["^ ","^B",null,"^C",["^ ","^D",["^2",["^>=","^E","^F","^3R","^H","^J","^L","^M","^32","^3S","^N","^O","^P","^8S","^3<","^R","^3T"]],"^T","cljs/core.cljs","^U",14,"^V",10,"^W","^X","^Y",2673,"^Z",2673,"^[",["^10",["^11",["^10",[["^12","^4S","^9D","~$count","^14"]]]]],"^15",["^2",["^>=","^E","^F","^3R","^H","^L","^M","^32","^3S","^N","^O","^P","^8S","^3<","^R","^3T"]]],"^D",["^2",["^>=","^E","^F","^3R","^H","^J","^L","^M","^32","^3S","^N","^O","^P","^8S","^3<","^R","^3T"]],"^3","~$cljs.core/->List","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^12","^4S","^9D","^>F","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",2673,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^12","^4S","^9D","^>F","^14"]]]]],"^15",["^2",["^>=","^E","^F","^3R","^H","^L","^M","^32","^3S","^N","^O","^P","^8S","^3<","^R","^3T"]]],"~$m3-mix-K1",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",776,"^V",15,"^Z",776,"^U",24,"^1X","^22","^[",["^10",["^11",["^10",[["^=F"]]]]]],"^3","~$cljs.core/m3-mix-K1","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["^=F"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^22","^Z",776,"^1;",1,"^1X","^22","^1<",true,"^[",["^10",["^11",["^10",[["^=F"]]]]]],"~$unchecked-float",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2349,"^V",15,"^Z",2349,"^U",30,"^1X","^22","^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/unchecked-float","^17",false,"^T","cljs/core.cljs","^U",30,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^22","^Z",2349,"^1;",1,"^1X","^22","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$undefined?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1966,"^V",16,"^Z",1966,"^U",26,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x identical to the JavaScript undefined value."],"^3","~$cljs.core/undefined?","^17",false,"^T","cljs/core.cljs","^U",26,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",1966,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x identical to the JavaScript undefined value."],"~$IMeta",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",541,"^V",14,"^Z",541,"^U",19,"^1?","Protocol for accessing the metadata of an object.","^1H",true,"^1I",["^ ","^1J",["^ ","~$-meta",[["~$o"]]]]],"^1H",true,"^3","^O","^T","cljs/core.cljs","^U",19,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^>O",[["~$o"]]]],"^1P",null,"^Z",541,"^1Q",["^2",["^5E","^5F","^<9","^5G","^80","^<;","^5H","^<=","^6J","^5I","^<>","^38","^<@","^<A","~$cljs.core/t7487","~$cljs.core/t7490","^9J","^5K","^<B","^<C","^5M","~$function","^5N","^<D","^<E","^<F","^5O","^<G","^::","~$cljs.core/MetaFn","^<4","^7>","^5P"]],"^1?","Protocol for accessing the metadata of an object."],"~$reduced?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1253,"^V",16,"^Z",1253,"^U",24,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$r"]]]]],"^1?","Returns true if x is the result of a call to reduced"],"^3","~$cljs.core/reduced?","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["~$r"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",1253,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$r"]]]]],"^1?","Returns true if x is the result of a call to reduced"],"~$t7490",["^ ","^2K",2,"^D",["^2",["^J","^O","^R"]],"^3","^>Q","^T","cljs/core.cljs","^2O",true,"~:anonymous",true,"^V",null,"^Y",null,"^2P",false,"^15",["^2",["^O","^R"]]],"~$apply-to",["^ ","^B",null,"^C",["^ ","^[",["^10",["^11",["^10",[["~$f","~$argc","^>C"]]]]],"^T","cljs/core.cljs"],"^3","~$cljs.core/apply-to","^17",false,"^T","cljs/core.cljs","^18",["^10",[["~$f","^>Y","^>C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["~$f","^>Y","^>C"]]]]]],"~$disj!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3400,"^V",7,"^Z",3400,"^U",12,"^[",["^10",["^11",["^10",[["^1L","^1N"],["^1L","^1N","~$&","~$vals"]]]]],"^1?","disj[oin]. Returns a transient set of the same (hashed/sorted) type, that\\n  does not contain key(s).","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^1L","^1N"]]],"^[",["^10",[["^1L","^1N"],["^1L","^1N","~$&","^?0"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/disj!","^17",true,"^T","cljs/core.cljs","^U",12,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^1L","^1N"]]],"^[",["^10",[["^1L","^1N"],["^1L","^1N","~$&","^?0"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^1L","^1N"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3400,"^1;",2,"^1<",true,"^[",["^10",[["^1L","^1N"],["^1L","^1N","~$&","^?0"]]],"^1?","disj[oin]. Returns a transient set of the same (hashed/sorted) type, that\\n  does not contain key(s)."],"^5D",["^ ","^B",null,"^C",["^ ","^48","^S","^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$o","~$k"],["~$o","~$k","^5:"]]],"^[",["^10",[["~$o","~$k"],["~$o","~$k","^5:"]]],"^1:",["^10",[null,null]]],"^V",4,"^Y",487,"^Z",487,"^[",["^10",["^11",["^10",[["~$o","~$k"],["~$o","~$k","^5:"]]]]],"^1?","Use k to look up a value in o. If not-found is supplied and k is not\\n     a valid value that can be used for look up, not-found is returned."],"^48","^S","^3","~$cljs.core/-lookup","^17",false,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$o","~$k"],["~$o","~$k","^5:"]]],"^[",["^10",[["~$o","~$k"],["~$o","~$k","^5:"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$o","~$k"],["~$o","~$k","^5:"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",487,"^1;",3,"^1<",true,"^[",["^10",[["~$o","~$k"],["~$o","~$k","^5:"]]],"^1?","Use k to look up a value in o. If not-found is supplied and k is not\\n     a valid value that can be used for look up, not-found is returned."],"~$ICloneable",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",431,"^V",14,"^Z",431,"^U",24,"^1?","Protocol for cloning a value.","^1H",true,"^1I",["^ ","^1J",["^ ","^9O",[["^33"]]]]],"^1H",true,"^3","^P","^T","cljs/core.cljs","^U",24,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^9O",[["^33"]]]],"^1P",null,"^Z",431,"^1Q",["^2",["^5E","^<9","^5G","^<;","^3U","^<=","^5I","^5K","^<B","^<C","^5M","^5N","^5O","^<4"]],"^1?","Protocol for cloning a value."],"~$IEncodeClojure",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",9309,"^V",14,"^Z",9309,"^U",28,"^1?",null,"^1H",true,"^1I",["^ ","^1J",["^ ","^6E",[["~$x","^6G"]]]]],"^1H",true,"^3","^6F","^T","cljs/core.cljs","^U",28,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^6E",[["~$x","^6G"]]]],"^1P",null,"^Z",9309,"^1Q",["^2",[]],"^1?",null],"~$booleans",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2453,"^V",7,"^Z",2453,"^U",15,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/booleans","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2453,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$->ArrayList",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",19,"^V",10,"^W","^X","^Y",8301,"^Z",8301,"^[",["^10",["^11",["^10",[["^4B"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->ArrayList","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^4B"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",8301,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^4B"]]]]],"^15",null],"~$RSeq",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",1342,"^V",25,"^Z",1342,"^U",29,"^3O",true],"^2K",3,"^D",["^2",["^E","^F","^H","^J","^L","^M","^32","^3S","^N","^O","^P","^3<","^R","^3T"]],"^3","^<C","^T","cljs/core.cljs","^U",14,"^2O",true,"^V",10,"^Y",1451,"^2P",false,"^3O",true,"^Z",1451,"^15",["^2",["^E","^F","^H","^L","^M","^32","^3S","^N","^O","^P","^3<","^R","^3T"]]],"~$mask",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6091,"^V",8,"^Z",6091,"^U",12,"^3G",true,"^[",["^10",["^11",["^10",[["~$hash","^:["]]]]]],"^3G",true,"^3","~$cljs.core/mask","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["^?;","^:["]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",6091,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^?;","^:["]]]]]],"~$int-array",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3205,"^V",7,"^Z",3205,"^U",16,"^[",["^10",["^11",["^10",[["~$size-or-seq"],["~$size","~$init-val-or-seq"]]]]],"^1?","Creates an array of ints. Does not coerce array, provided for compatibility\\n  with Clojure.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^?>"],["^??","^?@"]]],"^[",["^10",[["^?>"],["^??","^?@"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/int-array","^17",false,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^?>"],["^??","^?@"]]],"^[",["^10",[["^?>"],["^??","^?@"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^?>"],["^??","^?@"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3205,"^1;",2,"^1<",true,"^[",["^10",[["^?>"],["^??","^?@"]]],"^1?","Creates an array of ints. Does not coerce array, provided for compatibility\\n  with Clojure."],"~$find-and-cache-best-method",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9543,"^V",8,"^Z",9543,"^U",34,"^3G",true,"^[",["^10",["^11",["^10",[["^9R","^61","^4?","^4=","~$prefer-table","^4<","^4>"]]]]]],"^3G",true,"^3","~$cljs.core/find-and-cache-best-method","^17",false,"^T","cljs/core.cljs","^U",34,"^18",["^10",[["^9R","^61","^4?","^4=","^?C","^4<","^4>"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9543,"^1;",7,"^1<",true,"^[",["^10",["^11",["^10",[["^9R","^61","^4?","^4=","^?C","^4<","^4>"]]]]]],"~$set?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1872,"^V",16,"^Z",1872,"^U",20,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x satisfies ISet"],"^3","~$cljs.core/set?","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",1872,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x satisfies ISet"],"~$iterable?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1031,"^V",7,"^Z",1031,"^U",16,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x implements IIterable protocol."],"^3","~$cljs.core/iterable?","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1031,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x implements IIterable protocol."],"~$cat",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9200,"^V",7,"^Z",9200,"^U",10,"^[",["^10",["^11",["^10",[["~$rf"]]]]],"^1?","A transducer which concatenates the contents of each input, which must be a\\n  collection, into the reduction.","^5=","1.7"],"^5=","1.7","^3","~$cljs.core/cat","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["^?J"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9200,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^?J"]]]]],"^1?","A transducer which concatenates the contents of each input, which must be a\\n  collection, into the reduction."],"~$->ES6EntriesIterator",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",28,"^V",10,"^W","^X","^Y",5643,"^Z",5643,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->ES6EntriesIterator","^17",false,"^T","cljs/core.cljs","^U",28,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",5643,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^15",null],"~$divide",["^ ","^3","~$cljs.core/divide","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",2257,"^U",16,"^3O",true,"^C",["^ ","^T","cljs/core.cljs","^Y",2257,"^V",10,"^Z",2257,"^U",16,"^3O",true]],"~$js-reserved-arr",["^ ","^3","~$cljs.core/js-reserved-arr","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",9987,"^U",31,"^3G",true,"^C",["^ ","^T","cljs/core.cljs","^Y",9987,"^V",16,"^Z",9987,"^U",31,"^3G",true]],"^<8",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",625,"^V",4,"^Z",625,"^U",14,"^48","^3[","^1?",null,"^[",["^10",["^11",["^10",[["~$o","^5U","^1>"]]]]]],"^48","^3[","^3","~$cljs.core/-pr-writer","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["~$o","^5U","^1>"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",625,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["~$o","^5U","^1>"]]]]],"^1?",null],"~$flush",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8745,"^V",7,"^Z",8745,"^U",12,"^[",["^10",["^11",["^10",[[]]]]]],"^3","~$cljs.core/flush","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[[]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8745,"^1;",0,"^1<",true,"^[",["^10",["^11",["^10",[[]]]]]],"~$set-from-indexed-seq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8175,"^V",7,"^Z",8175,"^U",27,"^[",["^10",["^11",["^10",[["~$iseq"]]]]]],"^3","~$cljs.core/set-from-indexed-seq","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^?V"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8175,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^?V"]]]]]],"~$take-while",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8343,"^V",7,"^Z",8343,"^U",17,"^[",["^10",["^11",["^10",[["^2["],["^2[","^1D"]]]]],"^1?","Returns a lazy sequence of successive items from coll while\\n  (pred item) returns true. pred must be free of side-effects.\\n  Returns a transducer when no collection is provided.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^2["],["^2[","^1D"]]],"^[",["^10",[["^2["],["^2[","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/take-while","^17",false,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^2["],["^2[","^1D"]]],"^[",["^10",[["^2["],["^2[","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^2["],["^2[","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8343,"^1;",2,"^1<",true,"^[",["^10",[["^2["],["^2[","^1D"]]],"^1?","Returns a lazy sequence of successive items from coll while\\n  (pred item) returns true. pred must be free of side-effects.\\n  Returns a transducer when no collection is provided."],"~$vary-meta",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3466,"^V",7,"^Z",3466,"^U",16,"^[",["^10",["^11",["^10",[["^1Z","~$f"],["^1Z","~$f","~$a"],["^1Z","~$f","~$a","~$b"],["^1Z","~$f","~$a","~$b","~$c"],["^1Z","~$f","~$a","~$b","~$c","~$d"],["^1Z","~$f","~$a","~$b","~$c","~$d","~$&","^>C"]]]]],"^1?","Returns an object of the same type and value as obj, with\\n  (apply f (meta obj) args) as its metadata.","^1@",["^ ","^17",true,"^1;",6,"^18",["^10",[["^1Z","~$f"],["^1Z","~$f","~$a"],["^1Z","~$f","~$a","~$b"],["^1Z","~$f","~$a","~$b","~$c"],["^1Z","~$f","~$a","~$b","~$c","~$d"]]],"^[",["^10",[["^1Z","~$f"],["^1Z","~$f","~$a"],["^1Z","~$f","~$a","~$b"],["^1Z","~$f","~$a","~$b","~$c"],["^1Z","~$f","~$a","~$b","~$c","~$d"],["^1Z","~$f","~$a","~$b","~$c","~$d","~$&","^>C"]]],"^1:",["^10",[null,null,null,null,null,null]]]],"^3","~$cljs.core/vary-meta","^17",true,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",true,"^1;",6,"^18",["^10",[["^1Z","~$f"],["^1Z","~$f","~$a"],["^1Z","~$f","~$a","~$b"],["^1Z","~$f","~$a","~$b","~$c"],["^1Z","~$f","~$a","~$b","~$c","~$d"]]],"^[",["^10",[["^1Z","~$f"],["^1Z","~$f","~$a"],["^1Z","~$f","~$a","~$b"],["^1Z","~$f","~$a","~$b","~$c"],["^1Z","~$f","~$a","~$b","~$c","~$d"],["^1Z","~$f","~$a","~$b","~$c","~$d","~$&","^>C"]]],"^1:",["^10",[null,null,null,null,null,null]]],"^18",["^10",[["^1Z","~$f"],["^1Z","~$f","~$a"],["^1Z","~$f","~$a","~$b"],["^1Z","~$f","~$a","~$b","~$c"],["^1Z","~$f","~$a","~$b","~$c","~$d"]]],"^19",null,"^1:",["^10",[null,null,null,null,null,null]],"^V",null,"^Y",null,"^Z",3466,"^1;",6,"^1<",true,"^[",["^10",[["^1Z","~$f"],["^1Z","~$f","~$a"],["^1Z","~$f","~$a","~$b"],["^1Z","~$f","~$a","~$b","~$c"],["^1Z","~$f","~$a","~$b","~$c","~$d"],["^1Z","~$f","~$a","~$b","~$c","~$d","~$&","^>C"]]],"^1?","Returns an object of the same type and value as obj, with\\n  (apply f (meta obj) args) as its metadata."],"~$INext",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",477,"^V",14,"^Z",477,"^U",19,"^1?","Protocol for accessing the next items of a collection.","^1H",true,"^1I",["^ ","^1J",["^ ","~$-next",[["^1D"]]]]],"^1H",true,"^3","^3S","^T","cljs/core.cljs","^U",19,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^@1",[["^1D"]]]],"^1P",null,"^Z",477,"^1Q",["^2",["^<9","^3U","^<=","^6J","^<A","^9J","^<B","^<C","^<D","^<E","^<G","^<H","^<4"]],"^1?","Protocol for accessing the next items of a collection."],"~$is_proto_",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",234,"^V",7,"^Z",234,"^U",16,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/is_proto_","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",234,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$START",["^ ","^3","~$cljs.core/START","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",3525,"^U",11,"^C",["^ ","^T","cljs/core.cljs","^Y",3525,"^V",6,"^Z",3525,"^U",11]],"~$ICounted",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",436,"^V",14,"^Z",436,"^U",22,"^1?","Protocol for adding the ability to count a collection in constant time.","^1H",true,"^1I",["^ ","^1J",["^ ","^:@",[["^1D"]]]]],"^1H",true,"^3","^M","^T","cljs/core.cljs","^U",22,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^:@",[["^1D"]]]],"^1P",null,"^Z",436,"^1Q",["^2",[null,"^5E","^5F","^1R","^5G","^<;","^3U","^5H","^<=","^5I","^1S","~$cljs.core/ChunkBuffer","^9J","^5K","^<B","^1T","^<C","^5L","^5M","^5N","^8H","^5O","^<4","^7>","^5P"]],"^1?","Protocol for adding the ability to count a collection in constant time."],"~$IMapEntry",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",506,"^V",14,"^Z",506,"^U",23,"^1?","Protocol for examining a map entry.","^1H",true,"^1I",["^ ","^1J",["^ ","~$-key",[["^1D"]],"~$-val",[["^1D"]]]]],"^1H",true,"^3","^8T","^T","cljs/core.cljs","^U",23,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^@9",[["^1D"]],"^@:",[["^1D"]]]],"^1P",null,"^Z",506,"^1Q",["^2",["^5H","^5K","^5P"]],"^1?","Protocol for examining a map entry."],"~$<=",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^V",16,"^Y",2278,"^Z",2278,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]]]],"^1?","Returns non-nil if nums are in monotonically non-decreasing order,\\n  otherwise false."],"^3","~$cljs.core/<=","^17",true,"^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",2278,"^1;",2,"^1X","^1Y","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1?","Returns non-nil if nums are in monotonically non-decreasing order,\\n  otherwise false."],"~$conj!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3359,"^V",7,"^Z",3359,"^U",12,"^[",["^10",["^11",["^10",[[],["^1D"],["^1L","^1N"],["^1L","^1N","~$&","^?0"]]]]],"^1?","Adds x to the transient collection, and return coll. The \'addition\'\\n  may happen at different \'places\' depending on the concrete type.","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["^1D"],["^1L","^1N"]]],"^[",["^10",[[],["^1D"],["^1L","^1N"],["^1L","^1N","~$&","^?0"]]],"^1:",["^10",[null,null,null,null]]]],"^3","~$cljs.core/conj!","^17",true,"^T","cljs/core.cljs","^U",12,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["^1D"],["^1L","^1N"]]],"^[",["^10",[[],["^1D"],["^1L","^1N"],["^1L","^1N","~$&","^?0"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[[],["^1D"],["^1L","^1N"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",null,"^Y",null,"^Z",3359,"^1;",2,"^1<",true,"^[",["^10",[[],["^1D"],["^1L","^1N"],["^1L","^1N","~$&","^?0"]]],"^1?","Adds x to the transient collection, and return coll. The \'addition\'\\n  may happen at different \'places\' depending on the concrete type."],"~$-pop",["^ ","^B",null,"^C",["^ ","^48","^8S","^T","cljs/core.cljs","^U",13,"^V",9,"^Y",524,"^Z",524,"^1X","^49","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a new stack without the item on top of the stack. Is used\\n     by cljs.core/pop."],"^48","^8S","^3","~$cljs.core/-pop","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^49","^Z",524,"^1;",1,"^1X","^49","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a new stack without the item on top of the stack. Is used\\n     by cljs.core/pop."],"~$array-index-of-identical?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5698,"^V",8,"^Z",5698,"^U",33,"^3G",true,"^[",["^10",["^11",["^10",[["^4B","~$k"]]]]]],"^3G",true,"^3","~$cljs.core/array-index-of-identical?","^17",false,"^T","cljs/core.cljs","^U",33,"^18",["^10",[["^4B","~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",5698,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^4B","~$k"]]]]]],"~$repeatedly",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4325,"^V",7,"^Z",4325,"^U",17,"^[",["^10",["^11",["^10",[["~$f"],["~$n","~$f"]]]]],"^1?","Takes a function of no args, presumably with side effects, and\\n  returns an infinite (or length n if supplied) lazy sequence of calls\\n  to it","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$f"],["~$n","~$f"]]],"^[",["^10",[["~$f"],["~$n","~$f"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/repeatedly","^17",false,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$f"],["~$n","~$f"]]],"^[",["^10",[["~$f"],["~$n","~$f"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$f"],["~$n","~$f"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4325,"^1;",2,"^1<",true,"^[",["^10",[["~$f"],["~$n","~$f"]]],"^1?","Takes a function of no args, presumably with side effects, and\\n  returns an infinite (or length n if supplied) lazy sequence of calls\\n  to it"],"~$zipmap",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8275,"^V",7,"^Z",8275,"^U",13,"^[",["^10",["^11",["^10",[["~$keys","^?0"]]]]],"^1?","Returns a map with the keys mapped to the corresponding vals."],"^3","~$cljs.core/zipmap","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["^@F","^?0"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8275,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^@F","^?0"]]]]],"^1?","Returns a map with the keys mapped to the corresponding vals."],"~$IStack",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",518,"^V",14,"^Z",518,"^U",20,"^1?","Protocol for collections to provide access to their items as stacks. The top\\n  of the stack should be accessed in the most efficient way for the different\\n  data structures.","^1H",true,"^1I",["^ ","^1J",["^ ","~$-peek",[["^1D"]],"^@?",[["^1D"]]]]],"^1H",true,"^3","^8S","^T","cljs/core.cljs","^U",20,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^@I",[["^1D"]],"^@?",[["^1D"]]]],"^1P",null,"^Z",518,"^1Q",["^2",["^<;","^5H","^<=","^5I","^5K","^<B","^5P"]],"^1?","Protocol for collections to provide access to their items as stacks. The top\\n  of the stack should be accessed in the most efficient way for the different\\n  data structures."],"~$-remove-watch",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",640,"^V",4,"^Z",640,"^U",17,"^48","~$cljs.core/IWatchable","^1?","Removes watcher that corresponds to key from this.","^[",["^10",["^11",["^10",[["~$this","^1M"]]]]]],"^48","^@K","^3","~$cljs.core/-remove-watch","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^@L","^1M"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",640,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^@L","^1M"]]]]],"^1?","Removes watcher that corresponds to key from this."],"~$IVolatile",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",721,"^V",14,"^Z",721,"^U",23,"^1?","Protocol for adding volatile functionality.","^1H",true,"^1I",["^ ","^1J",["^ ","~$-vreset!",[["~$o","~$new-value"]]]]],"^1H",true,"^3","^2L","^T","cljs/core.cljs","^U",23,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^@O",[["~$o","^@P"]]]],"^1P",null,"^Z",721,"^1Q",["^2",["^2N"]],"^1?","Protocol for adding volatile functionality."],"~$remove",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4425,"^V",7,"^Z",4425,"^U",13,"^[",["^10",["^11",["^10",[["^2["],["^2[","^1D"]]]]],"^1?","Returns a lazy sequence of the items in coll for which\\n  (pred item) returns false. pred must be free of side-effects.\\n  Returns a transducer when no collection is provided.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^2["],["^2[","^1D"]]],"^[",["^10",[["^2["],["^2[","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/remove","^17",false,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^2["],["^2[","^1D"]]],"^[",["^10",[["^2["],["^2[","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^2["],["^2[","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4425,"^1;",2,"^1<",true,"^[",["^10",[["^2["],["^2[","^1D"]]],"^1?","Returns a lazy sequence of the items in coll for which\\n  (pred item) returns false. pred must be free of side-effects.\\n  Returns a transducer when no collection is provided."],"~$->BitmapIndexedNode",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J","^Q"]],"^T","cljs/core.cljs","^U",27,"^V",10,"^W","^X","^Y",6182,"^Z",6182,"^[",["^10",["^11",["^10",[["^;5","^8A","^4B"]]]]],"^15",null],"^D",["^2",["^J","^Q"]],"^3","~$cljs.core/->BitmapIndexedNode","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^;5","^8A","^4B"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",6182,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^;5","^8A","^4B"]]]]],"^15",null],"~$*",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null,null]]],"^V",15,"^Y",2250,"^Z",2250,"^1X","^22","^[",["^10",["^11",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]]]],"^1?","Returns the product of nums. (*) returns 1."],"^3","~$cljs.core/*","^17",true,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",null,"^Y",null,"^20","^22","^Z",2250,"^1;",2,"^1X","^22","^1<",true,"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1?","Returns the product of nums. (*) returns 1."],"~$re-pattern",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8703,"^V",7,"^Z",8703,"^U",17,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^1?","Returns an instance of RegExp which has compiled the provided string."],"^3","~$cljs.core/re-pattern","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8703,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^1?","Returns an instance of RegExp which has compiled the provided string."],"~$min",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^V",15,"^Y",2325,"^Z",2325,"^1X","^22","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]]]],"^1?","Returns the least of the nums."],"^3","~$cljs.core/min","^17",true,"^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^20","^22","^Z",2325,"^1;",2,"^1X","^22","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1?","Returns the least of the nums."],"~$array-index-of-nil?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5670,"^V",8,"^Z",5670,"^U",27,"^3G",true,"^[",["^10",["^11",["^10",[["^4B"]]]]]],"^3G",true,"^3","~$cljs.core/array-index-of-nil?","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^4B"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",5670,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^4B"]]]]]],"~$-persistent!",["^ ","^B",null,"^C",["^ ","^48","^=5","^T","cljs/core.cljs","^U",21,"^V",9,"^Y",652,"^Z",652,"^1X","^49","^[",["^10",["^11",["^10",[["^1L"]]]]],"^1?","Creates a persistent data structure from tcoll and returns it."],"^48","^=5","^3","~$cljs.core/-persistent!","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["^1L"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^49","^Z",652,"^1;",1,"^1X","^49","^1<",true,"^[",["^10",["^11",["^10",[["^1L"]]]]],"^1?","Creates a persistent data structure from tcoll and returns it."],"^<3",["^ ","^B",null,"^C",["^ ","^48","^3P","^T","cljs/core.cljs","^U",8,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^1D","~$n"],["^1D","~$n","^5:"]]],"^[",["^10",[["^1D","~$n"],["^1D","~$n","^5:"]]],"^1:",["^10",[null,null]]],"^V",4,"^Y",460,"^Z",460,"^[",["^10",["^11",["^10",[["^1D","~$n"],["^1D","~$n","^5:"]]]]],"^1?","Returns the value at the index n in the collection coll.\\n     Returns not-found if index n is out of bounds and not-found is supplied."],"^48","^3P","^3","~$cljs.core/-nth","^17",false,"^T","cljs/core.cljs","^U",8,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^1D","~$n"],["^1D","~$n","^5:"]]],"^[",["^10",[["^1D","~$n"],["^1D","~$n","^5:"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^1D","~$n"],["^1D","~$n","^5:"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",460,"^1;",3,"^1<",true,"^[",["^10",[["^1D","~$n"],["^1D","~$n","^5:"]]],"^1?","Returns the value at the index n in the collection coll.\\n     Returns not-found if index n is out of bounds and not-found is supplied."],"~$pop!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3394,"^V",7,"^Z",3394,"^U",11,"^[",["^10",["^11",["^10",[["^1L"]]]]],"^1?","Removes the last item from a transient vector. If\\n  the collection is empty, throws an exception. Returns coll"],"^3","~$cljs.core/pop!","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["^1L"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3394,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1L"]]]]],"^1?","Removes the last item from a transient vector. If\\n  the collection is empty, throws an exception. Returns coll"],"~$chunk-append",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3165,"^V",7,"^Z",3165,"^U",19,"^[",["^10",["^11",["^10",[["~$b","~$x"]]]]]],"^3","~$cljs.core/chunk-append","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["~$b","~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3165,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$b","~$x"]]]]]],"~$prn-str",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8906,"^V",7,"^Z",8906,"^U",14,"^[",["^10",["^11",["^10",[["~$&","^57"]]]]],"^1?","Same as pr-str followed by (newline)","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^57"]]],"^[",["^10",[["~$&","^57"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/prn-str","^17",true,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^57"]]],"^[",["^10",[["~$&","^57"]]],"^1:",["^10",[null]]],"^18",[["^10",["^57"]]],"^19",null,"^1:",["^10",[null]],"^V",null,"^Y",null,"^Z",8906,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^57"]]],"^1?","Same as pr-str followed by (newline)"],"~$IReversible",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",590,"^V",14,"^Z",590,"^U",25,"^1?","Protocol for reversing a seq.","^1H",true,"^1I",["^ ","^1J",["^ ","~$-rseq",[["^1D"]]]]],"^1H",true,"^3","^3Q","^T","cljs/core.cljs","^U",25,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^A:",[["^1D"]]]],"^1P",null,"^Z",590,"^1Q",["^2",["^3U","^5I","^5K","^5N","^5O"]],"^1?","Protocol for reversing a seq."],"~$reversible?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2799,"^V",16,"^Z",2799,"^U",27,"^1X","^1Y","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns true if coll satisfies? IReversible."],"^3","~$cljs.core/reversible?","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",2799,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns true if coll satisfies? IReversible."],"~$-realized?",["^ ","^B",null,"^C",["^ ","^48","~$cljs.core/IPending","^T","cljs/core.cljs","^U",23,"^V",13,"^Y",630,"^Z",630,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$d"]]]]],"^1?","Returns true if a value for d has been produced, false otherwise."],"^48","^A>","^3","~$cljs.core/-realized?","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$d"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",630,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$d"]]]]],"^1?","Returns true if a value for d has been produced, false otherwise."],"~$-add-watch",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",637,"^V",4,"^Z",637,"^U",14,"^48","^@K","^1?","Adds a watcher function f to this. Keys must be unique per reference,\\n     and can be used to remove the watch with -remove-watch.","^[",["^10",["^11",["^10",[["^@L","^1M","~$f"]]]]]],"^48","^@K","^3","~$cljs.core/-add-watch","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^@L","^1M","~$f"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",637,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^@L","^1M","~$f"]]]]],"^1?","Adds a watcher function f to this. Keys must be unique per reference,\\n     and can be used to remove the watch with -remove-watch."],"~$-deref-with-timeout",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",539,"^V",4,"^Z",539,"^U",23,"^48","~$cljs.core/IDerefWithTimeout","^1?",null,"^[",["^10",["^11",["^10",[["~$o","~$msec","~$timeout-val"]]]]]],"^48","^AC","^3","~$cljs.core/-deref-with-timeout","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$o","^AD","^AE"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",539,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["~$o","^AD","^AE"]]]]],"^1?",null],"~$conj",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1543,"^V",7,"^Z",1543,"^U",11,"^[",["^10",["^11",["^10",[[],["^1D"],["^1D","~$x"],["^1D","~$x","~$&","^3H"]]]]],"^1?","conj[oin]. Returns a new collection with the xs\\n  \'added\'. (conj nil item) returns (item).  The \'addition\' may\\n  happen at different \'places\' depending on the concrete type.","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["^1D"],["^1D","~$x"]]],"^[",["^10",[[],["^1D"],["^1D","~$x"],["^1D","~$x","~$&","^3H"]]],"^1:",["^10",[null,null,null,null]]]],"^3","~$cljs.core/conj","^17",true,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["^1D"],["^1D","~$x"]]],"^[",["^10",[[],["^1D"],["^1D","~$x"],["^1D","~$x","~$&","^3H"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[[],["^1D"],["^1D","~$x"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",null,"^Y",null,"^Z",1543,"^1;",2,"^1<",true,"^[",["^10",[[],["^1D"],["^1D","~$x"],["^1D","~$x","~$&","^3H"]]],"^1?","conj[oin]. Returns a new collection with the xs\\n  \'added\'. (conj nil item) returns (item).  The \'addition\' may\\n  happen at different \'places\' depending on the concrete type."],"~$-sorted-seq",["^ ","^B",null,"^C",["^ ","^48","^53","^T","cljs/core.cljs","^U",20,"^V",9,"^Y",598,"^Z",598,"^1X","^49","^[",["^10",["^11",["^10",[["^1D","^54"]]]]],"^1?","Returns a sorted seq from coll in either ascending or descending order."],"^48","^53","^3","~$cljs.core/-sorted-seq","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^1D","^54"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^49","^Z",598,"^1;",2,"^1X","^49","^1<",true,"^[",["^10",["^11",["^10",[["^1D","^54"]]]]],"^1?","Returns a sorted seq from coll in either ascending or descending order."],"~$flatten1",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4372,"^V",8,"^Z",4372,"^U",16,"^3G",true,"^[",["^10",["^11",["^10",[["^95"]]]]],"^1?","Take a collection of collections, and return a lazy seq\\n  of items from the inner collection"],"^3G",true,"^3","~$cljs.core/flatten1","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^95"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4372,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^95"]]]]],"^1?","Take a collection of collections, and return a lazy seq\\n  of items from the inner collection"],"~$transduce",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2217,"^V",7,"^Z",2217,"^U",16,"^[",["^10",["^11",["^10",[["^26","~$f","^1D"],["^26","~$f","^77","^1D"]]]]],"^1?","reduce with a transformation of f (xf). If init is not\\n  supplied, (f) will be called to produce it. f should be a reducing\\n  step function that accepts both 1 and 2 arguments, if it accepts\\n  only 2 you can add the arity-1 with \'completing\'. Returns the result\\n  of applying (the transformed) xf to init and the first item in coll,\\n  then applying xf to that result and the 2nd item, etc. If coll\\n  contains no items, returns init and f is not called. Note that\\n  certain transforms may inject or skip items.","^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["^26","~$f","^1D"],["^26","~$f","^77","^1D"]]],"^[",["^10",[["^26","~$f","^1D"],["^26","~$f","^77","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/transduce","^17",false,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["^26","~$f","^1D"],["^26","~$f","^77","^1D"]]],"^[",["^10",[["^26","~$f","^1D"],["^26","~$f","^77","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^26","~$f","^1D"],["^26","~$f","^77","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2217,"^1;",4,"^1<",true,"^[",["^10",[["^26","~$f","^1D"],["^26","~$f","^77","^1D"]]],"^1?","reduce with a transformation of f (xf). If init is not\\n  supplied, (f) will be called to produce it. f should be a reducing\\n  step function that accepts both 1 and 2 arguments, if it accepts\\n  only 2 you can add the arity-1 with \'completing\'. Returns the result\\n  of applying (the transformed) xf to init and the first item in coll,\\n  then applying xf to that result and the 2nd item, etc. If coll\\n  contains no items, returns init and f is not called. Note that\\n  certain transforms may inject or skip items."],"~$fixture1",["^ ","^3","~$cljs.core/fixture1","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",9160,"^U",14,"^C",["^ ","^T","cljs/core.cljs","^Y",9160,"^V",6,"^Z",9160,"^U",14]],"~$-swap!",["^ ","^B",null,"^C",["^ ","^48","~$cljs.core/ISwap","^T","cljs/core.cljs","^U",10,"^1@",["^ ","^17",false,"^1;",5,"^18",["^10",[["~$o","~$f"],["~$o","~$f","~$a"],["~$o","~$f","~$a","~$b"],["~$o","~$f","~$a","~$b","^3H"]]],"^[",["^10",[["~$o","~$f"],["~$o","~$f","~$a"],["~$o","~$f","~$a","~$b"],["~$o","~$f","~$a","~$b","^3H"]]],"^1:",["^10",[null,null,null,null]]],"^V",4,"^Y",718,"^Z",718,"^[",["^10",["^11",["^10",[["~$o","~$f"],["~$o","~$f","~$a"],["~$o","~$f","~$a","~$b"],["~$o","~$f","~$a","~$b","^3H"]]]]],"^1?","Swaps the value of o to be (apply f current-value-of-atom args)."],"^48","^AR","^3","~$cljs.core/-swap!","^17",false,"^T","cljs/core.cljs","^U",10,"^1@",["^ ","^17",false,"^1;",5,"^18",["^10",[["~$o","~$f"],["~$o","~$f","~$a"],["~$o","~$f","~$a","~$b"],["~$o","~$f","~$a","~$b","^3H"]]],"^[",["^10",[["~$o","~$f"],["~$o","~$f","~$a"],["~$o","~$f","~$a","~$b"],["~$o","~$f","~$a","~$b","^3H"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[["~$o","~$f"],["~$o","~$f","~$a"],["~$o","~$f","~$a","~$b"],["~$o","~$f","~$a","~$b","^3H"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",null,"^Y",null,"^Z",718,"^1;",5,"^1<",true,"^[",["^10",[["~$o","~$f"],["~$o","~$f","~$a"],["~$o","~$f","~$a","~$b"],["~$o","~$f","~$a","~$b","^3H"]]],"^1?","Swaps the value of o to be (apply f current-value-of-atom args)."],"~$*print-length*",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",110,"^V",3,"^Z",110,"^U",17,"^6<",true,"^1?","When set to logical true, objects will be printed in a way that preserves\\n  their type when read in later.\\n\\n  Defaults to false."],"^3","~$cljs.core/*print-length*","^T","cljs/core.cljs","^U",17,"^V",null,"^6<",true,"^Y",null,"^Z",110,"^1?","When set to logical true, objects will be printed in a way that preserves\\n  their type when read in later.\\n\\n  Defaults to false."],"~$js-delete",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1933,"^V",7,"^Z",1933,"^U",16,"^[",["^10",["^11",["^10",[["^1Z","^1M"]]]]],"^1?","Delete a property from a JavaScript object."],"^3","~$cljs.core/js-delete","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^1Z","^1M"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1933,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^1Z","^1M"]]]]],"^1?","Delete a property from a JavaScript object."],"~$truth_",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",163,"^V",7,"^Z",163,"^U",13,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Internal - do not use!"],"^3","~$cljs.core/truth_","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",163,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Internal - do not use!"],"~$array-index-of",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5714,"^V",7,"^Z",5714,"^U",21,"^[",["^10",["^11",["^10",[["^4B","~$k"]]]]]],"^3","~$cljs.core/array-index-of","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["^4B","~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",5714,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^4B","~$k"]]]]]],"~$->MultiFn",["^ ","^B",null,"^C",["^ ","^D",["^2",["^F","^G","^5[","^:9"]],"^T","cljs/core.cljs","^U",17,"^V",10,"^W","^X","^Y",9582,"^Z",9582,"^[",["^10",["^11",["^10",[["^9R","^;M","~$default-dispatch-val","^4?","^4=","^?C","^4<","^4>"]]]]],"^15",["^2",["^F","^G","^5[","^:9"]]],"^D",["^2",["^F","^G","^5[","^:9"]],"^3","~$cljs.core/->MultiFn","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^9R","^;M","^B1","^4?","^4=","^?C","^4<","^4>"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",9582,"^1;",8,"^1<",true,"^[",["^10",["^11",["^10",[["^9R","^;M","^B1","^4?","^4=","^?C","^4<","^4>"]]]]],"^15",["^2",["^F","^G","^5[","^:9"]]],"~$key->js",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9278,"^V",7,"^Z",9278,"^U",14,"^[",["^10",["^11",["^10",[["~$k"]]]]]],"^3","~$cljs.core/key->js","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9278,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$k"]]]]]],"~$->MultiStepper",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",22,"^V",10,"^W","^X","^Y",3591,"^Z",3591,"^[",["^10",["^11",["^10",[["^26","~$iters","~$nexts"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->MultiStepper","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["^26","^B6","^B7"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",3591,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^26","^B6","^B7"]]]]],"^15",null],"~$IEncodeJS",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",9271,"^V",14,"^Z",9271,"^U",23,"^1?",null,"^1H",true,"^1I",["^ ","^1J",["^ ","~$-clj->js",[["~$x"]],"~$-key->js",[["~$x"]]]]],"^1H",true,"^3","~$cljs.core/IEncodeJS","^T","cljs/core.cljs","^U",23,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^B:",[["~$x"]],"^B;",[["~$x"]]]],"^1P",null,"^Z",9271,"^1Q",["^2",[]],"^1?",null],"~$new-path",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4612,"^V",8,"^Z",4612,"^U",16,"^3G",true,"^[",["^10",["^11",["^10",[["^;5","^86","^6?"]]]]]],"^3G",true,"^3","~$cljs.core/new-path","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^;5","^86","^6?"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4612,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^;5","^86","^6?"]]]]]],"~$compare-and-set!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4007,"^V",7,"^Z",4007,"^U",23,"^[",["^10",["^11",["^10",[["~$a","~$oldval","^8W"]]]]],"^1?","Atomically sets the value of atom to newval if and only if the\\n  current value of the atom is equal to oldval. Returns true if\\n  set happened, else false."],"^3","~$cljs.core/compare-and-set!","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$a","^B@","^8W"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4007,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["~$a","^B@","^8W"]]]]],"^1?","Atomically sets the value of atom to newval if and only if the\\n  current value of the atom is equal to oldval. Returns true if\\n  set happened, else false."],"~$array-seq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1442,"^V",7,"^Z",1442,"^U",16,"^[",["^10",["^11",["^10",[["^7:"],["^7:","~$i"]]]]],"^1?","Create a seq from a JavaScript array.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^7:"],["^7:","~$i"]]],"^[",["^10",[["^7:"],["^7:","~$i"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/array-seq","^17",false,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^7:"],["^7:","~$i"]]],"^[",["^10",[["^7:"],["^7:","~$i"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^7:"],["^7:","~$i"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1442,"^1;",2,"^1<",true,"^[",["^10",[["^7:"],["^7:","~$i"]]],"^1?","Create a seq from a JavaScript array."],"~$array-copy-downward",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1946,"^V",8,"^Z",1946,"^U",27,"^3G",true,"^[",["^10",["^11",["^10",[["~$from","~$i","~$to","~$j","^3J"]]]]]],"^3G",true,"^3","~$cljs.core/array-copy-downward","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^BE","~$i","^BF","~$j","^3J"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1946,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^BE","~$i","^BF","~$j","^3J"]]]]]],"~$pack-array-node",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6384,"^V",8,"^Z",6384,"^U",23,"^3G",true,"^[",["^10",["^11",["^10",[["~$array-node","^;5","^6@"]]]]]],"^3G",true,"^3","~$cljs.core/pack-array-node","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["^BI","^;5","^6@"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",6384,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^BI","^;5","^6@"]]]]]],"~$interleave",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4337,"^V",7,"^Z",4337,"^U",17,"^[",["^10",["^11",["^10",[["^92","^93"],["^92","^93","~$&","^95"]]]]],"^1?","Returns a lazy seq of the first item in each coll, then the second etc.","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^92","^93"]]],"^[",["^10",[["^92","^93"],["^92","^93","~$&","^95"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/interleave","^17",true,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^92","^93"]]],"^[",["^10",[["^92","^93"],["^92","^93","~$&","^95"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^92","^93"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4337,"^1;",2,"^1<",true,"^[",["^10",[["^92","^93"],["^92","^93","~$&","^95"]]],"^1?","Returns a lazy seq of the first item in each coll, then the second etc."],"~$print-map",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8950,"^V",7,"^Z",8950,"^U",16,"^[",["^10",["^11",["^10",[["~$m","^;X","^5U","^1>"]]]]]],"^3","~$cljs.core/print-map","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["~$m","^;X","^5U","^1>"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8950,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["~$m","^;X","^5U","^1>"]]]]]],"~$->t5785",["^ ","^B",null,"^C",["^ ","^>W",true,"^D",["^2",["^J","^O","^R"]],"^15",["^2",["^O","^R"]],"^W","^X","^[",["^10",["^11",["^10",[["~$nil-iter","~$meta5786"]]]]],"^T","cljs/core.cljs"],"^D",["^2",["^J","^O","^R"]],"^3","~$cljs.core/->t5785","^17",false,"^T","cljs/core.cljs","^18",["^10",[["^BP","^BQ"]]],"^19",null,"^1:",["^10",[null,null]],"^>W",true,"^V",null,"^W","^X","^Y",null,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^BP","^BQ"]]]]],"^15",["^2",["^O","^R"]]],"~$map?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1895,"^V",16,"^Z",1895,"^U",20,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x satisfies IMap"],"^3","~$cljs.core/map?","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",1895,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x satisfies IMap"],"~$m3-C1",["^ ","^3","~$cljs.core/m3-C1","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",773,"^U",11,"^C",["^ ","^T","cljs/core.cljs","^Y",773,"^V",6,"^Z",773,"^U",11]],"~$get",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1683,"^V",7,"^Z",1683,"^U",10,"^[",["^10",["^11",["^10",[["~$o","~$k"],["~$o","~$k","^5:"]]]]],"^1?","Returns the value mapped to key, not-found or nil if key not present.","^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$o","~$k"],["~$o","~$k","^5:"]]],"^[",["^10",[["~$o","~$k"],["~$o","~$k","^5:"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/get","^17",false,"^T","cljs/core.cljs","^U",10,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$o","~$k"],["~$o","~$k","^5:"]]],"^[",["^10",[["~$o","~$k"],["~$o","~$k","^5:"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$o","~$k"],["~$o","~$k","^5:"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1683,"^1;",3,"^1<",true,"^[",["^10",[["~$o","~$k"],["~$o","~$k","^5:"]]],"^1?","Returns the value mapped to key, not-found or nil if key not present."],"~$identity",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2202,"^V",7,"^Z",2202,"^U",15,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns its argument."],"^3","~$cljs.core/identity","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2202,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns its argument."],"~$into",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4456,"^V",7,"^Z",4456,"^U",11,"^[",["^10",["^11",["^10",[["^BF","^BE"],["^BF","^26","^BE"]]]]],"^1?","Returns a new coll consisting of to-coll with all of the items of\\n  from-coll conjoined. A transducer may be supplied.","^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^BF","^BE"],["^BF","^26","^BE"]]],"^[",["^10",[["^BF","^BE"],["^BF","^26","^BE"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/into","^17",false,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^BF","^BE"],["^BF","^26","^BE"]]],"^[",["^10",[["^BF","^BE"],["^BF","^26","^BE"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^BF","^BE"],["^BF","^26","^BE"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4456,"^1;",3,"^1<",true,"^[",["^10",[["^BF","^BE"],["^BF","^26","^BE"]]],"^1?","Returns a new coll consisting of to-coll with all of the items of\\n  from-coll conjoined. A transducer may be supplied."],"~$long",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2443,"^V",7,"^Z",2443,"^U",11,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Coerce to long by stripping decimal places. Identical to `int\'."],"^3","~$cljs.core/long","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2443,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Coerce to long by stripping decimal places. Identical to `int\'."],"~$double",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2344,"^V",15,"^Z",2344,"^U",21,"^1X","^22","^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/double","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^22","^Z",2344,"^1;",1,"^1X","^22","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$volatile?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4044,"^V",7,"^Z",4044,"^U",16,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is a volatile."],"^3","~$cljs.core/volatile?","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4044,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is a volatile."],"~$ChunkBuffer",["^ ","^2K",2,"^D",["^2",["^J","^M"]],"^3","^@7","^T","cljs/core.cljs","^U",21,"^2O",true,"^V",10,"^Y",3047,"^2P",false,"^Z",3047,"^15",["^2",["^M"]]],"~$HashSetIter",["^ ","^2K",1,"^D",["^2",["^J"]],"^3","~$cljs.core/HashSetIter","^T","cljs/core.cljs","^U",21,"^2O",true,"^V",10,"^Y",7936,"^2P",false,"^Z",7936,"^15",null],"^@9",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",508,"^V",4,"^Z",508,"^U",8,"^48","^8T","^1?","Returns the key of the map entry.","^[",["^10",["^11",["^10",[["^1D"]]]]]],"^48","^8T","^3","~$cljs.core/-key","^17",false,"^T","cljs/core.cljs","^U",8,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",508,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns the key of the map entry."],"~$t7487",["^ ","^2K",2,"^D",["^2",["^J","^O","^R"]],"^3","^>P","^T","cljs/core.cljs","^2O",true,"^>W",true,"^V",null,"^Y",null,"^2P",false,"^15",["^2",["^O","^R"]]],"~$nfirst",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1516,"^V",7,"^Z",1516,"^U",13,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Same as (next (first x))"],"^3","~$cljs.core/nfirst","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1516,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Same as (next (first x))"],"~$StringBufferWriter",["^ ","^2K",1,"^D",["^2",["^7@"]],"^3","~$cljs.core/StringBufferWriter","^T","cljs/core.cljs","^U",28,"^2O",true,"^V",10,"^Y",734,"^2P",false,"^Z",734,"^15",["^2",["^7@"]]],"^12",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1823,"^V",7,"^Z",1823,"^U",11,"^[",["^10",["^11",["^10",[["~$o"]]]]],"^1?","Returns the metadata of obj, returns nil if there is no metadata."],"^3","~$cljs.core/meta","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$o"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1823,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$o"]]]]],"^1?","Returns the metadata of obj, returns nil if there is no metadata."],"~$tv-editable-tail",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5153,"^V",8,"^Z",5153,"^U",24,"^3G",true,"^[",["^10",["^11",["^10",[["~$tl"]]]]]],"^3G",true,"^3","~$cljs.core/tv-editable-tail","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["^CB"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",5153,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^CB"]]]]]],"^76",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",562,"^V",4,"^Z",562,"^U",14,"^48","^78","^1?","Reduces an associative collection and returns the result. f should be\\n     a function that takes three arguments.","^[",["^10",["^11",["^10",[["^1D","~$f","^77"]]]]]],"^48","^78","^3","~$cljs.core/-kv-reduce","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^1D","~$f","^77"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",562,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^1D","~$f","^77"]]]]],"^1?","Reduces an associative collection and returns the result. f should be\\n     a function that takes three arguments."],"~$IHash",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",571,"^V",14,"^Z",571,"^U",19,"^1?","Protocol for adding hashing functionality to a type.","^1H",true,"^1I",["^ ","^1J",["^ ","~$-hash",[["~$o"]]]]],"^1H",true,"^3","^F","^T","cljs/core.cljs","^U",19,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^CF",[["~$o"]]]],"^1P",null,"^Z",571,"^1Q",["^2",["~$cljs.core/Namespace","^5E","~$cljs.core/MultiFn","^5F","^<9","^5G","^80","^<;","^3U","^<<","^5H","^<=","^6J","^5I","^<>","^<@","^<A","^5J","~$default","^9J","^5K","^<B","^<C","^5M","^5N","^<D","^<E","^<F","^5O","^<G","^::","^<H","^51","^<4","^7>","^5P"]],"^1?","Protocol for adding hashing functionality to a type."],"~$bit-and-not",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2502,"^V",7,"^Z",2502,"^U",18,"^[",["^10",["^11",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4M"]]]]],"^1?","Bitwise and","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x","~$y"]]],"^[",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/bit-and-not","^17",true,"^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x","~$y"]]],"^[",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2502,"^1;",2,"^1<",true,"^[",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1?","Bitwise and"],"~$var?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1022,"^V",7,"^Z",1022,"^U",11,"^[",["^10",["^11",["^10",[["~$v"]]]]],"^1?","Returns true if v is of type cljs.core.Var"],"^3","~$cljs.core/var?","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$v"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1022,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$v"]]]]],"^1?","Returns true if v is of type cljs.core.Var"],"~$-comparator",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",609,"^V",4,"^Z",609,"^U",15,"^48","^53","^1?","Returns the comparator for coll.","^[",["^10",["^11",["^10",[["^1D"]]]]]],"^48","^53","^3","~$cljs.core/-comparator","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",609,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns the comparator for coll."],"~$unchecked-add-int",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",32,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null,null]]],"^V",15,"^Y",2359,"^Z",2359,"^1X","^22","^[",["^10",["^11",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]]]],"^1?","Returns the sum of nums. (+) returns 0."],"^3","~$cljs.core/unchecked-add-int","^17",true,"^T","cljs/core.cljs","^U",32,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",null,"^Y",null,"^20","^22","^Z",2359,"^1;",2,"^1X","^22","^1<",true,"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1?","Returns the sum of nums. (+) returns 0."],"~$hash-ordered-coll",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1169,"^V",15,"^Z",1169,"^U",32,"^1X","^22","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns the hash code, consistent with =, for an external ordered\\n   collection implementing Iterable.\\n   See http://clojure.org/data_structures#hash for full algorithms."],"^3","~$cljs.core/hash-ordered-coll","^17",false,"^T","cljs/core.cljs","^U",32,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^22","^Z",1169,"^1;",1,"^1X","^22","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns the hash code, consistent with =, for an external ordered\\n   collection implementing Iterable.\\n   See http://clojure.org/data_structures#hash for full algorithms."],"~$extend-object!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2661,"^V",8,"^Z",2661,"^U",22,"^3G",true,"^[",["^10",["^11",["^10",[["^1Z","~$fn-map"]]]]],"^1?","Takes a JavaScript object and a map of names to functions and\\n  attaches said functions as methods on the object.  Any references to\\n  JavaScript\'s implicit this (via the this-as macro) will resolve to the\\n  object that the function is attached."],"^3G",true,"^3","~$cljs.core/extend-object!","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["^1Z","^CU"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2661,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^1Z","^CU"]]]]],"^1?","Takes a JavaScript object and a map of names to functions and\\n  attaches said functions as methods on the object.  Any references to\\n  JavaScript\'s implicit this (via the this-as macro) will resolve to the\\n  object that the function is attached."],"~$do-assoc",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4665,"^V",8,"^Z",4665,"^U",16,"^3G",true,"^[",["^10",["^11",["^10",[["^4J","^86","^6?","~$i","^1N"]]]]]],"^3G",true,"^3","~$cljs.core/do-assoc","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^4J","^86","^6?","~$i","^1N"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4665,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^4J","^86","^6?","~$i","^1N"]]]]]],"~$reset-meta!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9106,"^V",7,"^Z",9106,"^U",18,"^[",["^10",["^11",["^10",[["~$iref","~$m"]]]]],"^1?","Atomically resets the metadata for an atom"],"^3","~$cljs.core/reset-meta!","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^CZ","~$m"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9106,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^CZ","~$m"]]]]],"^1?","Atomically resets the metadata for an atom"],"~$->KeySeq",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^H","^J","^L","^32","^3S","^N","^O","^3<","^R","^3T"]],"^T","cljs/core.cljs","^U",16,"^V",10,"^W","^X","^Y",7758,"^Z",7758,"^[",["^10",["^11",["^10",[["~$mseq","~$_meta"]]]]],"^15",["^2",["^E","^F","^H","^L","^32","^3S","^N","^O","^3<","^R","^3T"]]],"^D",["^2",["^E","^F","^H","^J","^L","^32","^3S","^N","^O","^3<","^R","^3T"]],"^3","~$cljs.core/->KeySeq","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^D1","^D2"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",7758,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^D1","^D2"]]]]],"^15",["^2",["^E","^F","^H","^L","^32","^3S","^N","^O","^3<","^R","^3T"]]],"~$IEquiv",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",566,"^V",14,"^Z",566,"^U",20,"^1?","Protocol for adding value comparison functionality to a type.","^1H",true,"^1I",["^ ","^1J",["^ ","~$-equiv",[["~$o","~$other"]]]]],"^1H",true,"^3","^E","^T","cljs/core.cljs","^U",20,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^D5",[["~$o","^D6"]]]],"^1P",null,"^Z",566,"^1Q",["^2",["^CG","^5E","^5F","^<9","^5G","^80","~$js/Date","^<;","^3U","^<<","^5H","^<=","^6J","^5I","^<>","^38","^<@","^<A","^5J","^22","^CI","^9J","^5K","^<B","^<C","^5M","^5N","^<D","^<E","^<F","^5O","^<G","^::","~$cljs.core/NeverEquiv","^<H","^51","^<4","^7>","^5P"]],"^1?","Protocol for adding value comparison functionality to a type."],"~$tree-map-kv-reduce",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7188,"^V",8,"^Z",7188,"^U",26,"^3G",true,"^[",["^10",["^11",["^10",[["^6?","~$f","^77"]]]]]],"^3G",true,"^3","~$cljs.core/tree-map-kv-reduce","^17",false,"^T","cljs/core.cljs","^U",26,"^18",["^10",[["^6?","~$f","^77"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",7188,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^6?","~$f","^77"]]]]]],"~$cycle",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4305,"^V",7,"^Z",4305,"^U",12,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a lazy (infinite!) sequence of repetitions of the items in coll."],"^3","~$cljs.core/cycle","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4305,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a lazy (infinite!) sequence of repetitions of the items in coll."],"~$-deref",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",535,"^V",4,"^Z",535,"^U",10,"^48","^2M","^1?","Returns the value of the reference o.","^[",["^10",["^11",["^10",[["~$o"]]]]]],"^48","^2M","^3","~$cljs.core/-deref","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["~$o"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",535,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$o"]]]]],"^1?","Returns the value of the reference o."],"~$pr-writer-ex-info",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9850,"^V",8,"^Z",9850,"^U",25,"^3G",true,"^[",["^10",["^11",["^10",[["^1Z","^5U","^1>"]]]]]],"^3G",true,"^3","~$cljs.core/pr-writer-ex-info","^17",false,"^T","cljs/core.cljs","^U",25,"^18",["^10",[["^1Z","^5U","^1>"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9850,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^1Z","^5U","^1>"]]]]]],"~$empty?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1859,"^V",16,"^Z",1859,"^U",22,"^1X","^1Y","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns true if coll has no items - same as (not (seq coll)).\\n  Please use the idiom (seq x) rather than (not (empty? x))"],"^3","~$cljs.core/empty?","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",1859,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns true if coll has no items - same as (not (seq coll)).\\n  Please use the idiom (seq x) rather than (not (empty? x))"],"~$TaggedLiteral",["^ ","^2K",2,"^D",["^2",["^E","^F","^J","^3[","^S"]],"^3","^5J","^T","cljs/core.cljs","^U",23,"^2O",true,"^V",10,"^Y",9945,"^2P",false,"^Z",9945,"^15",["^2",["^E","^F","^3[","^S"]]],"~$short",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2342,"^V",15,"^Z",2342,"^U",20,"^1X","^22","^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/short","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^22","^Z",2342,"^1;",1,"^1X","^22","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^B:",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9272,"^V",4,"^Z",9272,"^U",12,"^48","^B<","^1?","Recursively transforms clj values to JavaScript","^[",["^10",["^11",["^10",[["~$x"]]]]]],"^48","^B<","^3","~$cljs.core/-clj->js","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9272,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Recursively transforms clj values to JavaScript"],"~$-chunked-first",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",691,"^V",4,"^Z",691,"^U",18,"^48","^5R","^1?","Returns the first chunk in coll.","^[",["^10",["^11",["^10",[["^1D"]]]]]],"^48","^5R","^3","~$cljs.core/-chunked-first","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",691,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns the first chunk in coll."],"~$filterv",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4486,"^V",7,"^Z",4486,"^U",14,"^[",["^10",["^11",["^10",[["^2[","^1D"]]]]],"^1?","Returns a vector of the items in coll for which\\n  (pred item) returns true. pred must be free of side-effects."],"^3","~$cljs.core/filterv","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^2[","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4486,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^2[","^1D"]]]]],"^1?","Returns a vector of the items in coll for which\\n  (pred item) returns true. pred must be free of side-effects."],"~$->TaggedLiteral",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^J","^3[","^S"]],"^T","cljs/core.cljs","^U",23,"^V",10,"^W","^X","^Y",9945,"^Z",9945,"^[",["^10",["^11",["^10",[["~$tag","~$form"]]]]],"^15",["^2",["^E","^F","^3[","^S"]]],"^D",["^2",["^E","^F","^J","^3[","^S"]],"^3","~$cljs.core/->TaggedLiteral","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["^DL","^DM"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",9945,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^DL","^DM"]]]]],"^15",["^2",["^E","^F","^3[","^S"]]],"~$tv-editable-root",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5150,"^V",8,"^Z",5150,"^U",24,"^3G",true,"^[",["^10",["^11",["^10",[["^6?"]]]]]],"^3G",true,"^3","~$cljs.core/tv-editable-root","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["^6?"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",5150,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^6?"]]]]]],"^?;",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",847,"^V",7,"^Z",847,"^U",11,"^[",["^10",["^11",["^10",[["~$o"]]]]],"^1?","Returns the hash code of its argument. Note this is the hash code\\n   consistent with =."],"^3","~$cljs.core/hash","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$o"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",847,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$o"]]]]],"^1?","Returns the hash code of its argument. Note this is the hash code\\n   consistent with =."],"~$quot",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2472,"^V",7,"^Z",2472,"^U",11,"^[",["^10",["^11",["^10",[["~$n","~$d"]]]]],"^1?","quot[ient] of dividing numerator by denominator."],"^3","~$cljs.core/quot","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$n","~$d"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2472,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$n","~$d"]]]]],"^1?","quot[ient] of dividing numerator by denominator."],"~$ns-interns*",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10114,"^V",7,"^Z",10114,"^U",18,"^[",["^10",["^11",["^10",[["~$sym"]]]]]],"^3","~$cljs.core/ns-interns*","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^DU"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",10114,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^DU"]]]]]],"~$unchecked-double",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2350,"^V",15,"^Z",2350,"^U",31,"^1X","^22","^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/unchecked-double","^17",false,"^T","cljs/core.cljs","^U",31,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^22","^Z",2350,"^1;",1,"^1X","^22","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$*target*",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",27,"^V",3,"^Z",27,"^U",11,"^6<",true,"^1?","Var bound to the name value of the compiler build :target option.\\n  For example, if the compiler build :target is :nodejs, *target* will be bound\\n  to \\"nodejs\\". *target* is a Google Closure define and can be set by compiler\\n  :closure-defines option.","^9X",["@define {string}"]],"^3","~$cljs.core/*target*","^T","cljs/core.cljs","^U",11,"^V",null,"^6<",true,"^Y",null,"^Z",27,"^1?","Var bound to the name value of the compiler build :target option.\\n  For example, if the compiler build :target is :nodejs, *target* will be bound\\n  to \\"nodejs\\". *target* is a Google Closure define and can be set by compiler\\n  :closure-defines option.","^9X",["@define {string}"]],"~$->ChunkedCons",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^3R","^H","^=U","^J","^L","^32","^3S","^N","^O","^5R","^3<","^R"]],"^T","cljs/core.cljs","^U",21,"^V",10,"^W","^X","^Y",3096,"^Z",3096,"^[",["^10",["^11",["^10",[["^8Y","^4M","^12","^14"]]]]],"^15",["^2",["^E","^F","^3R","^H","^=U","^L","^32","^3S","^N","^O","^5R","^3<","^R"]]],"^D",["^2",["^E","^F","^3R","^H","^=U","^J","^L","^32","^3S","^N","^O","^5R","^3<","^R"]],"^3","~$cljs.core/->ChunkedCons","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["^8Y","^4M","^12","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",3096,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^8Y","^4M","^12","^14"]]]]],"^15",["^2",["^E","^F","^3R","^H","^=U","^L","^32","^3S","^N","^O","^5R","^3<","^R"]]],"~$ranged-iterator",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4701,"^V",7,"^Z",4701,"^U",22,"^[",["^10",["^11",["^10",[["~$v","^3A","^3B"]]]]]],"^3","~$cljs.core/ranged-iterator","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["~$v","^3A","^3B"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4701,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["~$v","^3A","^3B"]]]]]],"~$ITransientVector",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",666,"^V",14,"^Z",666,"^U",30,"^1?","Protocol for adding vector functionality to transient collections.","^1H",true,"^1I",["^ ","^1J",["^ ","~$-assoc-n!",[["^1L","~$n","^1N"]],"~$-pop!",[["^1L"]]]]],"^1H",true,"^3","^=6","^T","cljs/core.cljs","^U",30,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^E4",[["^1L","~$n","^1N"]],"^E5",[["^1L"]]]],"^1P",null,"^Z",666,"^1Q",["^2",["^1R"]],"^1?","Protocol for adding vector functionality to transient collections."],"^1M",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7821,"^V",7,"^Z",7821,"^U",10,"^[",["^10",["^11",["^10",[["~$map-entry"]]]]],"^1?","Returns the key of the map entry."],"^3","~$cljs.core/key","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["^E6"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",7821,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^E6"]]]]],"^1?","Returns the key of the map entry."],"~$longs",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2460,"^V",7,"^Z",2460,"^U",12,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/longs","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2460,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$not=",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",20,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^V",16,"^Y",3482,"^Z",3482,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]]]],"^1?","Same as (not (= obj1 obj2))"],"^3","~$cljs.core/not=","^17",true,"^T","cljs/core.cljs","^U",20,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",3482,"^1;",2,"^1X","^1Y","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1?","Same as (not (= obj1 obj2))"],"~$set-print-err-fn!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",62,"^V",7,"^Z",62,"^U",24,"^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Set *print-err-fn* to f."],"^3","~$cljs.core/set-print-err-fn!","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["~$f"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",62,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Set *print-err-fn* to f."],"~$string?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",213,"^V",16,"^Z",213,"^U",23,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is a JavaScript string."],"^3","~$cljs.core/string?","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",213,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is a JavaScript string."],"~$es6-iterator",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1130,"^V",7,"^Z",1130,"^U",19,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","EXPERIMENTAL: Return a ES2015 compatible iterator for coll."],"^3","~$cljs.core/es6-iterator","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1130,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","EXPERIMENTAL: Return a ES2015 compatible iterator for coll."],"~$Delay",["^ ","^2K",2,"^D",["^2",["^A>","^2M"]],"^3","~$cljs.core/Delay","^T","cljs/core.cljs","^U",15,"^2O",true,"^V",10,"^Y",9165,"^2P",false,"^Z",9165,"^15",["^2",["^A>","^2M"]]],"~$munge-str",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10027,"^V",8,"^Z",10027,"^U",17,"^3G",true,"^[",["^10",["^11",["^10",[["^9R"]]]]]],"^3G",true,"^3","~$cljs.core/munge-str","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^9R"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",10027,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^9R"]]]]]],"~$pr-str-with-opts",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8871,"^V",7,"^Z",8871,"^U",23,"^[",["^10",["^11",["^10",[["^57","^1>"]]]]],"^1?","Prints a sequence of objects to a string, observing all the\\n  options given in opts"],"^3","~$cljs.core/pr-str-with-opts","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["^57","^1>"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8871,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^57","^1>"]]]]],"^1?","Prints a sequence of objects to a string, observing all the\\n  options given in opts"],"~$->RecordIter",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",20,"^V",10,"^W","^X","^Y",5630,"^Z",5630,"^[",["^10",["^11",["^10",[["~$i","~$record","~$base-count","~$fields","~$ext-map-iter"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->RecordIter","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$i","^EI","^EJ","^EK","^EL"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",5630,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["~$i","^EI","^EJ","^EK","^EL"]]]]],"^15",null],"~$m3-C2",["^ ","^3","~$cljs.core/m3-C2","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",774,"^U",11,"^C",["^ ","^T","cljs/core.cljs","^Y",774,"^V",6,"^Z",774,"^U",11]],"~$->Symbol",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^G","^J","^:9","^O","^3[","^R"]],"^T","cljs/core.cljs","^U",16,"^V",10,"^W","^X","^Y",910,"^Z",910,"^[",["^10",["^11",["^10",[["^2V","^9R","~$str","~$_hash","^D2"]]]]],"^15",["^2",["^E","^F","^G","^:9","^O","^3[","^R"]]],"^D",["^2",["^E","^F","^G","^J","^:9","^O","^3[","^R"]],"^3","~$cljs.core/->Symbol","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^2V","^9R","^EQ","^ER","^D2"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",910,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^2V","^9R","^EQ","^ER","^D2"]]]]],"^15",["^2",["^E","^F","^G","^:9","^O","^3[","^R"]]],"~$*print-newline*",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",78,"^V",3,"^Z",78,"^U",18,"^6<",true,"^1?","When set to logical false will drop newlines from printing calls.\\n  This is to work around the implicit newlines emitted by standard JavaScript\\n  console objects."],"^3","~$cljs.core/*print-newline*","^T","cljs/core.cljs","^U",18,"^V",null,"^6<",true,"^Y",null,"^Z",78,"^1?","When set to logical false will drop newlines from printing calls.\\n  This is to work around the implicit newlines emitted by standard JavaScript\\n  console objects."],"~$unchecked-multiply-int",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",37,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null,null]]],"^V",15,"^Y",2396,"^Z",2396,"^1X","^22","^[",["^10",["^11",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]]]],"^1?","Returns the product of nums. (*) returns 1."],"^3","~$cljs.core/unchecked-multiply-int","^17",true,"^T","cljs/core.cljs","^U",37,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",null,"^Y",null,"^20","^22","^Z",2396,"^1;",2,"^1X","^22","^1<",true,"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1?","Returns the product of nums. (*) returns 1."],"~$chunk-rest",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3174,"^V",7,"^Z",3174,"^U",17,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"^3","~$cljs.core/chunk-rest","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3174,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"~$remove-all-methods",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9769,"^V",7,"^Z",9769,"^U",25,"^[",["^10",["^11",["^10",[["^6C"]]]]],"^1?","Removes all of the methods of multimethod."],"^3","~$cljs.core/remove-all-methods","^17",false,"^T","cljs/core.cljs","^U",25,"^18",["^10",[["^6C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9769,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^6C"]]]]],"^1?","Removes all of the methods of multimethod."],"~$trampoline",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9357,"^V",7,"^Z",9357,"^U",17,"^[",["^10",["^11",["^10",[["~$f"],["~$f","~$&","^>C"]]]]],"^1?","trampoline can be used to convert algorithms requiring mutual\\n  recursion without stack consumption. Calls f with supplied args, if\\n  any. If f returns a fn, calls that fn with no arguments, and\\n  continues to repeat, until the return value is not a fn, then\\n  returns that non-fn value. Note that if you want to return a fn as a\\n  final value, you must wrap it in some data structure and unpack it\\n  after trampoline returns.","^1@",["^ ","^17",true,"^1;",1,"^18",["^10",[["~$f"]]],"^[",["^10",[["~$f"],["~$f","~$&","^>C"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/trampoline","^17",true,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",true,"^1;",1,"^18",["^10",[["~$f"]]],"^[",["^10",[["~$f"],["~$f","~$&","^>C"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$f"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9357,"^1;",1,"^1<",true,"^[",["^10",[["~$f"],["~$f","~$&","^>C"]]],"^1?","trampoline can be used to convert algorithms requiring mutual\\n  recursion without stack consumption. Calls f with supplied args, if\\n  any. If f returns a fn, calls that fn with no arguments, and\\n  continues to repeat, until the return value is not a fn, then\\n  returns that non-fn value. Note that if you want to return a fn as a\\n  final value, you must wrap it in some data structure and unpack it\\n  after trampoline returns."],"~$pr-opts",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",126,"^V",8,"^Z",126,"^U",15,"^3G",true,"^[",["^10",["^11",["^10",[[]]]]]],"^3G",true,"^3","~$cljs.core/pr-opts","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[[]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",126,"^1;",0,"^1<",true,"^[",["^10",["^11",["^10",[[]]]]]],"~$*1",["^ ","^3","~$cljs.core/*1","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",149,"^U",5,"^1?","bound in a repl thread to the most recent value printed","^C",["^ ","^T","cljs/core.cljs","^Y",149,"^V",3,"^Z",149,"^U",5,"^1?","bound in a repl thread to the most recent value printed"]],"~$vec",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4913,"^V",7,"^Z",4913,"^U",10,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Creates a new vector containing the contents of coll. JavaScript arrays\\n  will be aliased and should not be modified."],"^3","~$cljs.core/vec","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4913,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Creates a new vector containing the contents of coll. JavaScript arrays\\n  will be aliased and should not be modified."],"~$*print-meta*",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",94,"^V",3,"^Z",94,"^U",15,"^6<",true,"^1?","If set to logical true, when printing an object, its metadata will also\\n  be printed in a form that can be read back by the reader.\\n\\n  Defaults to false."],"^3","~$cljs.core/*print-meta*","^T","cljs/core.cljs","^U",15,"^V",null,"^6<",true,"^Y",null,"^Z",94,"^1?","If set to logical true, when printing an object, its metadata will also\\n  be printed in a form that can be read back by the reader.\\n\\n  Defaults to false."],"~$-notify-watches",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",635,"^V",4,"^Z",635,"^U",19,"^48","^@K","^1?","Calls all watchers with this, oldval and newval.","^[",["^10",["^11",["^10",[["^@L","^B@","^8W"]]]]]],"^48","^@K","^3","~$cljs.core/-notify-watches","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^@L","^B@","^8W"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",635,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^@L","^B@","^8W"]]]]],"^1?","Calls all watchers with this, oldval and newval."],"~$MultiFn",["^ ","^2K",8,"^D",["^2",["^F","^G","^5[","^:9"]],"^3","^CH","^T","cljs/core.cljs","^U",17,"^2O",true,"^V",10,"^Y",9582,"^2P",false,"^Z",9582,"^15",["^2",["^F","^G","^5[","^:9"]]],"~$int",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2433,"^V",7,"^Z",2433,"^U",10,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Coerce to int by stripping decimal places."],"^3","~$cljs.core/int","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2433,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Coerce to int by stripping decimal places."],"~$->ValSeq",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^H","^J","^L","^32","^3S","^N","^O","^3<","^R","^3T"]],"^T","cljs/core.cljs","^U",16,"^V",10,"^W","^X","^Y",7826,"^Z",7826,"^[",["^10",["^11",["^10",[["^D1","^D2"]]]]],"^15",["^2",["^E","^F","^H","^L","^32","^3S","^N","^O","^3<","^R","^3T"]]],"^D",["^2",["^E","^F","^H","^J","^L","^32","^3S","^N","^O","^3<","^R","^3T"]],"^3","~$cljs.core/->ValSeq","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^D1","^D2"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",7826,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^D1","^D2"]]]]],"^15",["^2",["^E","^F","^H","^L","^32","^3S","^N","^O","^3<","^R","^3T"]]],"~$rand",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9373,"^V",7,"^Z",9373,"^U",11,"^[",["^10",["^11",["^10",[[],["~$n"]]]]],"^1?","Returns a random floating point number between 0 (inclusive) and\\n  n (default 1) (exclusive).","^1@",["^ ","^17",false,"^1;",1,"^18",["^10",[[],["~$n"]]],"^[",["^10",[[],["~$n"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/rand","^17",false,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",false,"^1;",1,"^18",["^10",[[],["~$n"]]],"^[",["^10",[[],["~$n"]]],"^1:",["^10",[null,null]]],"^18",["^10",[[],["~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9373,"^1;",1,"^1<",true,"^[",["^10",[[],["~$n"]]],"^1?","Returns a random floating point number between 0 (inclusive) and\\n  n (default 1) (exclusive)."],"~$second",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1506,"^V",7,"^Z",1506,"^U",13,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Same as (first (next x))"],"^3","~$cljs.core/second","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1506,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Same as (first (next x))"],"~$find-ns-obj",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10104,"^V",7,"^Z",10104,"^U",18,"^[",["^10",["^11",["^10",[["^2V"]]]]]],"^3","~$cljs.core/find-ns-obj","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^2V"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",10104,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^2V"]]]]]],"~$IEditableCollection",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",643,"^V",14,"^Z",643,"^U",33,"^1?","Protocol for collections which can transformed to transients.","^1H",true,"^1I",["^ ","^1J",["^ ","^;S",[["^1D"]]]]],"^1H",true,"^3","^I","^T","cljs/core.cljs","^U",33,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^;S",[["^1D"]]]],"^1P",null,"^Z",643,"^1Q",["^2",["^5E","^5F","^5G","^5K","^5M"]],"^1?","Protocol for collections which can transformed to transients."],"~$hash-combine",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",873,"^V",7,"^Z",873,"^U",19,"^[",["^10",["^11",["^10",[["~$seed","^?;"]]]]]],"^3","~$cljs.core/hash-combine","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^FI","^?;"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",873,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^FI","^?;"]]]]]],"~$>",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^V",16,"^Y",2290,"^Z",2290,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]]]],"^1?","Returns non-nil if nums are in monotonically decreasing order,\\n  otherwise false."],"^3","~$cljs.core/>","^17",true,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",2290,"^1;",2,"^1X","^1Y","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1?","Returns non-nil if nums are in monotonically decreasing order,\\n  otherwise false."],"~$-name",["^ ","^B",null,"^C",["^ ","^48","^:9","^T","cljs/core.cljs","^U",17,"^V",12,"^Y",703,"^Z",703,"^1X","~$string","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns the name String of x."],"^48","^:9","^3","~$cljs.core/-name","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^FM","^Z",703,"^1;",1,"^1X","^FM","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns the name String of x."],"~$replace",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8216,"^V",7,"^Z",8216,"^U",14,"^[",["^10",["^11",["^10",[["~$smap"],["^FP","^1D"]]]]],"^1?","Given a map of replacement pairs and a vector/collection, returns a\\n  vector/seq with any elements = a key in smap replaced with the\\n  corresponding val in smap.  Returns a transducer when no collection\\n  is provided.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^FP"],["^FP","^1D"]]],"^[",["^10",[["^FP"],["^FP","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/replace","^17",false,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^FP"],["^FP","^1D"]]],"^[",["^10",[["^FP"],["^FP","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^FP"],["^FP","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8216,"^1;",2,"^1<",true,"^[",["^10",[["^FP"],["^FP","^1D"]]],"^1?","Given a map of replacement pairs and a vector/collection, returns a\\n  vector/seq with any elements = a key in smap replaced with the\\n  corresponding val in smap.  Returns a transducer when no collection\\n  is provided."],"~$->Subvec",["^ ","^B",null,"^C",["^ ","^D",["^2",["^3P","^8R","^3Q","^78","^E","^F","^G","^H","^J","^L","^M","^N","^O","^P","^8S","^3<","^R","^65","^S","^3T"]],"^T","cljs/core.cljs","^U",16,"^V",10,"^W","^X","^Y",5017,"^Z",5017,"^[",["^10",["^11",["^10",[["^12","~$v","^3A","^3B","^14"]]]]],"^15",["^2",["^3P","^8R","^3Q","^78","^E","^F","^G","^H","^L","^M","^N","^O","^P","^8S","^3<","^R","^65","^S","^3T"]]],"^D",["^2",["^3P","^8R","^3Q","^78","^E","^F","^G","^H","^J","^L","^M","^N","^O","^P","^8S","^3<","^R","^65","^S","^3T"]],"^3","~$cljs.core/->Subvec","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^12","~$v","^3A","^3B","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",5017,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^12","~$v","^3A","^3B","^14"]]]]],"^15",["^2",["^3P","^8R","^3Q","^78","^E","^F","^G","^H","^L","^M","^N","^O","^P","^8S","^3<","^R","^65","^S","^3T"]]],"~$associative?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1879,"^V",16,"^Z",1879,"^U",28,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if coll implements Associative"],"^3","~$cljs.core/associative?","^17",false,"^T","cljs/core.cljs","^U",28,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",1879,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if coll implements Associative"],"~$unchecked-int",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2438,"^V",7,"^Z",2438,"^U",20,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Coerce to int by stripping decimal places."],"^3","~$cljs.core/unchecked-int","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2438,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Coerce to int by stripping decimal places."],"~$js-keys",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1926,"^V",7,"^Z",1926,"^U",14,"^[",["^10",["^11",["^10",[["^1Z"]]]]],"^1?","Return the JavaScript keys for an object."],"^3","~$cljs.core/js-keys","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^1Z"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1926,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1Z"]]]]],"^1?","Return the JavaScript keys for an object."],"~$ES6EntriesIterator",["^ ","^2K",1,"^D",["^2",["^J"]],"^3","~$cljs.core/ES6EntriesIterator","^T","cljs/core.cljs","^U",28,"^2O",true,"^V",10,"^Y",5643,"^2P",false,"^Z",5643,"^15",null],"~$keyword?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2934,"^V",16,"^Z",2934,"^U",24,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x is a Keyword"],"^3","~$cljs.core/keyword?","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",2934,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x is a Keyword"],"~$array-iter",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3521,"^V",7,"^Z",3521,"^U",17,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/array-iter","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3521,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$force",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9181,"^V",7,"^Z",9181,"^U",12,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","If x is a Delay, returns the (possibly cached) value of its expression, else returns x"],"^3","~$cljs.core/force","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9181,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","If x is a Delay, returns the (possibly cached) value of its expression, else returns x"],"~$group-by",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9390,"^V",7,"^Z",9390,"^U",15,"^[",["^10",["^11",["^10",[["~$f","^1D"]]]]],"^1?","Returns a map of the elements of coll keyed by the result of\\n  f on each element. The value at each key will be a vector of the\\n  corresponding elements, in the order they appeared in coll."],"^3","~$cljs.core/group-by","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["~$f","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9390,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$f","^1D"]]]]],"^1?","Returns a map of the elements of coll keyed by the result of\\n  f on each element. The value at each key will be a vector of the\\n  corresponding elements, in the order they appeared in coll."],"^A:",["^ ","^B",null,"^C",["^ ","^48","^3Q","^T","cljs/core.cljs","^U",14,"^V",9,"^Y",592,"^Z",592,"^1X","^49","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a seq of the items in coll in reversed order."],"^48","^3Q","^3","~$cljs.core/-rseq","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^49","^Z",592,"^1;",1,"^1X","^49","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a seq of the items in coll in reversed order."],"~$prn",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8943,"^V",7,"^Z",8943,"^U",10,"^[",["^10",["^11",["^10",[["~$&","^57"]]]]],"^1?","Same as pr followed by (newline).","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^57"]]],"^[",["^10",[["~$&","^57"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/prn","^17",true,"^T","cljs/core.cljs","^U",10,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^57"]]],"^[",["^10",[["~$&","^57"]]],"^1:",["^10",[null]]],"^18",[["^10",["^57"]]],"^19",null,"^1:",["^10",[null]],"^V",null,"^Y",null,"^Z",8943,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^57"]]],"^1?","Same as pr followed by (newline)."],"~$tv-pop-tail",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5170,"^V",8,"^Z",5170,"^U",19,"^3G",true,"^[",["^10",["^11",["^10",[["^6N","^86","^6?"]]]]]],"^3G",true,"^3","~$cljs.core/tv-pop-tail","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^6N","^86","^6?"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",5170,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^6N","^86","^6?"]]]]]],"^B1",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9798,"^V",7,"^Z",9798,"^U",27,"^[",["^10",["^11",["^10",[["^6C"]]]]],"^1?","Given a multimethod, return it\'s default-dispatch-val."],"^3","~$cljs.core/default-dispatch-val","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^6C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9798,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^6C"]]]]],"^1?","Given a multimethod, return it\'s default-dispatch-val."],"~$->Atom",["^ ","^B",null,"^C",["^ ","^D",["^2",["^@K","~$cljs.core/IAtom","^E","^F","^J","^O","^2M"]],"^T","cljs/core.cljs","^U",14,"^V",10,"^W","^X","^Y",3922,"^Z",3922,"^[",["^10",["^11",["^10",[["~$state","^12","~$validator","~$watches"]]]]],"^15",["^2",["^@K","^G?","^E","^F","^O","^2M"]]],"^D",["^2",["^@K","^G?","^E","^F","^J","^O","^2M"]],"^3","~$cljs.core/->Atom","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^G@","^12","^GA","^GB"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",3922,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^G@","^12","^GA","^GB"]]]]],"^15",["^2",["^@K","^G?","^E","^F","^O","^2M"]]],"~$PersistentHashMap",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",6070,"^V",27,"^Z",6070,"^U",44,"^3O",true],"^2K",6,"^D",["^2",["^78","^E","^F","^G","^H","^I","^J","^L","^M","^N","^O","^P","^Q","^R","^65","^>5","^S"]],"^3","^5E","^T","cljs/core.cljs","^U",27,"^2O",true,"^V",10,"^Y",6777,"^2P",false,"^3O",true,"^Z",6777,"^15",["^2",["^78","^E","^F","^G","^H","^I","^L","^M","^N","^O","^P","^R","^65","^>5","^S"]]],"~$unchecked-multiply",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",33,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null,null]]],"^V",15,"^Y",2389,"^Z",2389,"^1X","^22","^[",["^10",["^11",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]]]],"^1?","Returns the product of nums. (*) returns 1."],"^3","~$cljs.core/unchecked-multiply","^17",true,"^T","cljs/core.cljs","^U",33,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",null,"^Y",null,"^20","^22","^Z",2389,"^1;",2,"^1X","^22","^1<",true,"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1?","Returns the product of nums. (*) returns 1."],"~$ArrayNodeSeq",["^ ","^2K",5,"^D",["^2",["^E","^F","^H","^J","^L","^32","^N","^O","^3<","^R","^3T"]],"^3","^<@","^T","cljs/core.cljs","^U",22,"^2O",true,"^V",10,"^Y",6710,"^2P",false,"^Z",6710,"^15",["^2",["^E","^F","^H","^L","^32","^N","^O","^3<","^R","^3T"]]],"~$even?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3754,"^V",16,"^Z",3754,"^U",21,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns true if n is even, throws an exception if n is not an integer"],"^3","~$cljs.core/even?","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",3754,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns true if n is even, throws an exception if n is not an integer"],"~$es6-iterator-seq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1147,"^V",7,"^Z",1147,"^U",23,"^[",["^10",["^11",["^10",[["^27"]]]]],"^1?","EXPERIMENTAL: Given an ES2015 compatible iterator return a seq."],"^3","~$cljs.core/es6-iterator-seq","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["^27"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1147,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^27"]]]]],"^1?","EXPERIMENTAL: Given an ES2015 compatible iterator return a seq."],"~$unchecked-dec",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2366,"^V",7,"^Z",2366,"^U",20,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns a number one less than x, an int."],"^3","~$cljs.core/unchecked-dec","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2366,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns a number one less than x, an int."],"~$hash-collision-node-find-index",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6518,"^V",8,"^Z",6518,"^U",38,"^3G",true,"^[",["^10",["^11",["^10",[["^4B","^4C","^1M"]]]]]],"^3G",true,"^3","~$cljs.core/hash-collision-node-find-index","^17",false,"^T","cljs/core.cljs","^U",38,"^18",["^10",[["^4B","^4C","^1M"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",6518,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^4B","^4C","^1M"]]]]]],"~$persistent-array-map-seq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5802,"^V",7,"^Z",5802,"^U",31,"^[",["^10",["^11",["^10",[["^4B","~$i","^D2"]]]]]],"^3","~$cljs.core/persistent-array-map-seq","^17",false,"^T","cljs/core.cljs","^U",31,"^18",["^10",[["^4B","~$i","^D2"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",5802,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^4B","~$i","^D2"]]]]]],"~$RangeIterator",["^ ","^2K",3,"^D",["^2",["^J"]],"^3","~$cljs.core/RangeIterator","^T","cljs/core.cljs","^U",23,"^2O",true,"^V",10,"^Y",8398,"^2P",false,"^Z",8398,"^15",null],"~$MultiStepper",["^ ","^2K",3,"^D",["^2",["^J"]],"^3","~$cljs.core/MultiStepper","^T","cljs/core.cljs","^U",22,"^2O",true,"^V",10,"^Y",3591,"^2P",false,"^Z",3591,"^15",null],"~$tagged-literal?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9975,"^V",7,"^Z",9975,"^U",22,"^[",["^10",["^11",["^10",[["^33"]]]]],"^1?","Return true if the value is the data representation of a tagged literal"],"^3","~$cljs.core/tagged-literal?","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["^33"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9975,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^33"]]]]],"^1?","Return true if the value is the data representation of a tagged literal"],"~$double-array",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3249,"^V",7,"^Z",3249,"^U",19,"^[",["^10",["^11",["^10",[["^?>"],["^??","^?@"]]]]],"^1?","Creates an array of doubles. Does not coerce array, provided for compatibility\\n  with Clojure.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^?>"],["^??","^?@"]]],"^[",["^10",[["^?>"],["^??","^?@"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/double-array","^17",false,"^T","cljs/core.cljs","^U",19,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^?>"],["^??","^?@"]]],"^[",["^10",[["^?>"],["^??","^?@"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^?>"],["^??","^?@"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3249,"^1;",2,"^1<",true,"^[",["^10",[["^?>"],["^??","^?@"]]],"^1?","Creates an array of doubles. Does not coerce array, provided for compatibility\\n  with Clojure."],"~$create-ns",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10124,"^V",7,"^Z",10124,"^U",16,"^[",["^10",["^11",["^10",[["^DU"],["^DU","^=0"]]]]],"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^DU"],["^DU","^=0"]]],"^[",["^10",[["^DU"],["^DU","^=0"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/create-ns","^17",false,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^DU"],["^DU","^=0"]]],"^[",["^10",[["^DU"],["^DU","^=0"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^DU"],["^DU","^=0"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",10124,"^1;",2,"^1<",true,"^[",["^10",[["^DU"],["^DU","^=0"]]]],"~$->EmptyList",["^ ","^B",null,"^C",["^ ","^D",["^2",["^>=","^E","^F","^H","^J","^L","^M","^32","^3S","^N","^O","^P","^8S","^3<","^R","^3T"]],"^T","cljs/core.cljs","^U",19,"^V",10,"^W","^X","^Y",2739,"^Z",2739,"^[",["^10",["^11",["^10",[["^12"]]]]],"^15",["^2",["^>=","^E","^F","^H","^L","^M","^32","^3S","^N","^O","^P","^8S","^3<","^R","^3T"]]],"^D",["^2",["^>=","^E","^F","^H","^J","^L","^M","^32","^3S","^N","^O","^P","^8S","^3<","^R","^3T"]],"^3","~$cljs.core/->EmptyList","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^12"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",2739,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^12"]]]]],"^15",["^2",["^>=","^E","^F","^H","^L","^M","^32","^3S","^N","^O","^P","^8S","^3<","^R","^3T"]]],"~$seq-reduce",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2124,"^V",8,"^Z",2124,"^U",18,"^3G",true,"^[",["^10",["^11",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]]]],"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]],"^[",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]],"^1:",["^10",[null,null]]]],"^3G",true,"^3","~$cljs.core/seq-reduce","^17",false,"^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]],"^[",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2124,"^1;",3,"^1<",true,"^[",["^10",[["~$f","^1D"],["~$f","^1N","^1D"]]]],"~$spread",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3301,"^V",7,"^Z",3301,"^U",13,"^[",["^10",["^11",["^10",[["~$arglist"]]]]]],"^3","~$cljs.core/spread","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["^H5"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3301,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^H5"]]]]]],"~$balance-left",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7103,"^V",8,"^Z",7103,"^U",20,"^3G",true,"^[",["^10",["^11",["^10",[["^1M","^1N","~$ins","~$right"]]]]]],"^3G",true,"^3","~$cljs.core/balance-left","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^1M","^1N","^H8","^H9"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",7103,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^1M","^1N","^H8","^H9"]]]]]],"~$rseq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2804,"^V",12,"^Z",2804,"^U",16,"^1X","^2H","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns, in constant time, a seq of the items in rev (which\\n  can be a vector or sorted-map), in reverse order. If rev is empty returns nil"],"^3","~$cljs.core/rseq","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^2H","^Z",2804,"^1;",1,"^1X","^2H","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns, in constant time, a seq of the items in rev (which\\n  can be a vector or sorted-map), in reverse order. If rev is empty returns nil"],"~$ex-cause",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9914,"^V",7,"^Z",9914,"^U",15,"^[",["^10",["^11",["^10",[["^9G"]]]]],"^1?","Alpha - subject to change.\\n  Returns exception cause (an Error / ExceptionInfo) if ex is an\\n  ExceptionInfo.\\n  Otherwise returns nil."],"^3","~$cljs.core/ex-cause","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^9G"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9914,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^9G"]]]]],"^1?","Alpha - subject to change.\\n  Returns exception cause (an Error / ExceptionInfo) if ex is an\\n  ExceptionInfo.\\n  Otherwise returns nil."],"~$IReset",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",711,"^V",14,"^Z",711,"^U",20,"^1?","Protocol for adding resetting functionality.","^1H",true,"^1I",["^ ","^1J",["^ ","~$-reset!",[["~$o","^@P"]]]]],"^1H",true,"^3","~$cljs.core/IReset","^T","cljs/core.cljs","^U",20,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^H@",[["~$o","^@P"]]]],"^1P",null,"^Z",711,"^1Q",["^2",[]],"^1?","Protocol for adding resetting functionality."],"~$IEmptyableCollection",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",441,"^V",14,"^Z",441,"^U",34,"^1?","Protocol for creating an empty collection.","^1H",true,"^1I",["^ ","^1J",["^ ","^5?",[["^1D"]]]]],"^1H",true,"^3","^L","^T","cljs/core.cljs","^U",34,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^5?",[["^1D"]]]],"^1P",null,"^Z",441,"^1Q",["^2",["^5E","^5F","^<9","^5G","^80","^<;","^3U","^5H","^<=","^6J","^5I","^<>","^<@","^<A","^9J","^5K","^<B","^<C","^5M","^5N","^<D","^<E","^5O","^<G","^<H","^<4","^7>","^5P"]],"^1?","Protocol for creating an empty collection."],"~$array-map-index-of",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5728,"^V",8,"^Z",5728,"^U",26,"^3G",true,"^[",["^10",["^11",["^10",[["~$m","~$k"]]]]]],"^3G",true,"^3","~$cljs.core/array-map-index-of","^17",false,"^T","cljs/core.cljs","^U",26,"^18",["^10",[["~$m","~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",5728,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$m","~$k"]]]]]],"~$ex-message",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9906,"^V",7,"^Z",9906,"^U",17,"^[",["^10",["^11",["^10",[["^9G"]]]]],"^1?","Alpha - subject to change.\\n  Returns the message attached to the given Error / ExceptionInfo object.\\n  For non-Errors returns nil."],"^3","~$cljs.core/ex-message","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^9G"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9906,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^9G"]]]]],"^1?","Alpha - subject to change.\\n  Returns the message attached to the given Error / ExceptionInfo object.\\n  For non-Errors returns nil."],"~$->NodeIterator",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",23,"^V",11,"^W","^X","^Y",6144,"^Z",6144,"^[",["^10",["^11",["^10",[["^4B","~$i","~$next-entry","~$next-iter"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->NodeIterator","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["^4B","~$i","^HH","^HI"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",6144,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^4B","~$i","^HH","^HI"]]]]],"^15",null],"~$string-print",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8741,"^V",7,"^Z",8741,"^U",19,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/string-print","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8741,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$float",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2343,"^V",15,"^Z",2343,"^U",20,"^1X","^22","^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/float","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^22","^Z",2343,"^1;",1,"^1X","^22","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$fixture2",["^ ","^3","~$cljs.core/fixture2","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",9161,"^U",14,"^C",["^ ","^T","cljs/core.cljs","^Y",9161,"^V",6,"^Z",9161,"^U",14]],"~$IRecord",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",587,"^V",14,"^Z",587,"^U",21,"^1?","Marker interface indicating a record object","^1H",true,"^1I",["^ ","^1J",["^ "]]],"^1H",true,"^3","~$cljs.core/IRecord","^T","cljs/core.cljs","^U",21,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ "]],"^1P",null,"^Z",587,"^1Q",["^2",[]],"^1?","Marker interface indicating a record object"],"~$pr-str",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8901,"^V",7,"^Z",8901,"^U",13,"^[",["^10",["^11",["^10",[["~$&","^57"]]]]],"^1?","pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^57"]]],"^[",["^10",[["~$&","^57"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/pr-str","^17",true,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^57"]]],"^[",["^10",[["~$&","^57"]]],"^1:",["^10",[null]]],"^18",[["^10",["^57"]]],"^19",null,"^1:",["^10",[null]],"^V",null,"^Y",null,"^Z",8901,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^57"]]],"^1?","pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter."],"~$first-array-for-longvec",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4641,"^V",8,"^Z",4641,"^U",31,"^3G",true,"^[",["^10",["^11",["^10",[["^4J"]]]]]],"^3G",true,"^3","~$cljs.core/first-array-for-longvec","^17",false,"^T","cljs/core.cljs","^U",31,"^18",["^10",[["^4J"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4641,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^4J"]]]]]],"~$es6-set-entries-iterator",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5665,"^V",7,"^Z",5665,"^U",31,"^[",["^10",["^11",["^10",[["^1D"]]]]]],"^3","~$cljs.core/es6-set-entries-iterator","^17",false,"^T","cljs/core.cljs","^U",31,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",5665,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]]],"~$concat",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3309,"^V",7,"^Z",3309,"^U",13,"^[",["^10",["^11",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","~$zs"]]]]],"^1?","Returns a lazy seq representing the concatenation of the elements in the supplied colls.","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^HZ"]]],"^1:",["^10",[null,null,null,null]]]],"^3","~$cljs.core/concat","^17",true,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^HZ"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",null,"^Y",null,"^Z",3309,"^1;",2,"^1<",true,"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^HZ"]]],"^1?","Returns a lazy seq representing the concatenation of the elements in the supplied colls."],"~$-methods",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9574,"^V",4,"^Z",9574,"^U",12,"^48","^5[","^1?",null,"^[",["^10",["^11",["^10",[["^60"]]]]]],"^48","^5[","^3","~$cljs.core/-methods","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["^60"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9574,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^60"]]]]],"^1?",null],"~$js-reserved",["^ ","^3","~$cljs.core/js-reserved","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",10002,"^U",17,"^C",["^ ","^T","cljs/core.cljs","^Y",10002,"^V",6,"^Z",10002,"^U",17]],"~$IDerefWithTimeout",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",538,"^V",14,"^Z",538,"^U",31,"^1?",null,"^1H",true,"^1I",["^ ","^1J",["^ ","^AB",[["~$o","^AD","^AE"]]]]],"^1H",true,"^3","^AC","^T","cljs/core.cljs","^U",31,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^AB",[["~$o","^AD","^AE"]]]],"^1P",null,"^Z",538,"^1Q",["^2",[]],"^1?",null],"~$symbol",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",944,"^V",7,"^Z",944,"^U",13,"^[",["^10",["^11",["^10",[["^9R"],["^2V","^9R"]]]]],"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^9R"],["^2V","^9R"]]],"^[",["^10",[["^9R"],["^2V","^9R"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/symbol","^17",false,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^9R"],["^2V","^9R"]]],"^[",["^10",[["^9R"],["^2V","^9R"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^9R"],["^2V","^9R"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",944,"^1;",2,"^1<",true,"^[",["^10",[["^9R"],["^2V","^9R"]]]],"~$to-array-2d",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3194,"^V",7,"^Z",3194,"^U",18,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a (potentially-ragged) 2-dimensional array\\n  containing the contents of coll."],"^3","~$cljs.core/to-array-2d","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3194,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a (potentially-ragged) 2-dimensional array\\n  containing the contents of coll."],"~$Subvec",["^ ","^2K",5,"^D",["^2",["^3P","^8R","^3Q","^78","^E","^F","^G","^H","^J","^L","^M","^N","^O","^P","^8S","^3<","^R","^65","^S","^3T"]],"^3","^5I","^T","cljs/core.cljs","^U",16,"^2O",true,"^V",10,"^Y",5017,"^2P",false,"^Z",5017,"^15",["^2",["^3P","^8R","^3Q","^78","^E","^F","^G","^H","^L","^M","^N","^O","^P","^8S","^3<","^R","^65","^S","^3T"]]],"~$ExceptionInfo",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9862,"^V",3,"^Z",9862,"^U",16,"^9X",["@constructor"],"^[",["^10",["^11",["^10",[["~$message","~$data","~$cause"]]]]]],"^3","^<?","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^I;","^I<","^I="]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9862,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^I;","^I<","^I="]]]]],"^9X",["@constructor"]],"~$mod",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2467,"^V",7,"^Z",2467,"^U",10,"^[",["^10",["^11",["^10",[["~$n","~$d"]]]]],"^1?","Modulus of num and div. Truncates toward negative infinity."],"^3","~$cljs.core/mod","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["~$n","~$d"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2467,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$n","~$d"]]]]],"^1?","Modulus of num and div. Truncates toward negative infinity."],"~$ISet",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",513,"^V",14,"^Z",513,"^U",18,"^1?","Protocol for adding set functionality to a collection.","^1H",true,"^1I",["^ ","^1J",["^ ","~$-disjoin",[["^1D","~$v"]]]]],"^1H",true,"^3","^K","^T","cljs/core.cljs","^U",18,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^IA",[["^1D","~$v"]]]],"^1P",null,"^Z",513,"^1Q",["^2",["^5M","^5O"]],"^1?","Protocol for adding set functionality to a collection."],"~$pop",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1837,"^V",7,"^Z",1837,"^U",10,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","For a list or queue, returns a new list/queue without the first\\n  item, for a vector, returns a new vector without the last item.\\n  Note - not the same as next/butlast."],"^3","~$cljs.core/pop","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1837,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","For a list or queue, returns a new list/queue without the first\\n  item, for a vector, returns a new vector without the last item.\\n  Note - not the same as next/butlast."],"~$IPending",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",627,"^V",14,"^Z",627,"^U",22,"^1?","Protocol for types which can have a deferred realization. Currently only\\n  implemented by Delay.","^1H",true,"^1I",["^ ","^1J",["^ ","^A=",[["~$d"]]]]],"^1H",true,"^3","^A>","^T","cljs/core.cljs","^U",22,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^A=",[["~$d"]]]],"^1P",null,"^Z",627,"^1Q",["^2",["^EC"]],"^1?","Protocol for types which can have a deferred realization. Currently only\\n  implemented by Delay."],"~$t5788",["^ ","^2K",2,"^D",["^2",["^J","^O","^R"]],"^3","~$cljs.core/t5788","^T","cljs/core.cljs","^2O",true,"^>W",true,"^V",null,"^Y",null,"^2P",false,"^15",["^2",["^O","^R"]]],"~$-entry-key",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",607,"^V",4,"^Z",607,"^U",14,"^48","^53","^1?","Returns the key for entry.","^[",["^10",["^11",["^10",[["^1D","~$entry"]]]]]],"^48","^53","^3","~$cljs.core/-entry-key","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^1D","^IH"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",607,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^1D","^IH"]]]]],"^1?","Returns the key for entry."],"~$CHAR_MAP",["^ ","^3","~$cljs.core/CHAR_MAP","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",275,"^U",11,"^9X",["@enum {string"],"^C",["^ ","^T","cljs/core.cljs","^Y",275,"^V",3,"^Z",275,"^U",11,"^9X",["@enum {string"]]],"~$pop-tail",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4675,"^V",8,"^Z",4675,"^U",16,"^3G",true,"^[",["^10",["^11",["^10",[["^4J","^86","^6?"]]]]]],"^3G",true,"^3","~$cljs.core/pop-tail","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^4J","^86","^6?"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4675,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^4J","^86","^6?"]]]]]],"~$dissoc!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3384,"^V",7,"^Z",3384,"^U",14,"^[",["^10",["^11",["^10",[["^1L","^1M"],["^1L","^1M","~$&","^6U"]]]]],"^1?","Returns a transient map that doesn\'t contain a mapping for key(s).","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^1L","^1M"]]],"^[",["^10",[["^1L","^1M"],["^1L","^1M","~$&","^6U"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/dissoc!","^17",true,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^1L","^1M"]]],"^[",["^10",[["^1L","^1M"],["^1L","^1M","~$&","^6U"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^1L","^1M"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3384,"^1;",2,"^1<",true,"^[",["^10",[["^1L","^1M"],["^1L","^1M","~$&","^6U"]]],"^1?","Returns a transient map that doesn\'t contain a mapping for key(s)."],"~$reductions",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8584,"^V",7,"^Z",8584,"^U",17,"^[",["^10",["^11",["^10",[["~$f","^1D"],["~$f","^77","^1D"]]]]],"^1?","Returns a lazy seq of the intermediate values of the reduction (as\\n  per reduce) of coll by f, starting with init.","^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$f","^1D"],["~$f","^77","^1D"]]],"^[",["^10",[["~$f","^1D"],["~$f","^77","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/reductions","^17",false,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$f","^1D"],["~$f","^77","^1D"]]],"^[",["^10",[["~$f","^1D"],["~$f","^77","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$f","^1D"],["~$f","^77","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8584,"^1;",3,"^1<",true,"^[",["^10",[["~$f","^1D"],["~$f","^77","^1D"]]],"^1?","Returns a lazy seq of the intermediate values of the reduction (as\\n  per reduce) of coll by f, starting with init."],"~$indexed?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1348,"^V",16,"^Z",1348,"^U",24,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if coll implements nth in constant time"],"^3","~$cljs.core/indexed?","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",1348,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if coll implements nth in constant time"],"~$-",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^V",15,"^Y",2243,"^Z",2243,"^1X","^22","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]]]],"^1?","If no ys are supplied, returns the negation of x, else subtracts\\n  the ys from x and returns the result."],"^3","~$cljs.core/-","^17",true,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^20","^22","^Z",2243,"^1;",2,"^1X","^22","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1?","If no ys are supplied, returns the negation of x, else subtracts\\n  the ys from x and returns the result."],"^D5",["^ ","^B",null,"^C",["^ ","^48","^E","^T","cljs/core.cljs","^U",19,"^V",13,"^Y",568,"^Z",568,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$o","^D6"]]]]],"^1?","Returns true if o and other are equal, false otherwise."],"^48","^E","^3","~$cljs.core/-equiv","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["~$o","^D6"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",568,"^1;",2,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$o","^D6"]]]]],"^1?","Returns true if o and other are equal, false otherwise."],"~$->RangeIterator",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",23,"^V",10,"^W","^X","^Y",8398,"^Z",8398,"^[",["^10",["^11",["^10",[["~$i","^3B","^:V"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->RangeIterator","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$i","^3B","^:V"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",8398,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["~$i","^3B","^:V"]]]]],"^15",null],"~$->ArrayNode",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J","^Q"]],"^T","cljs/core.cljs","^U",19,"^V",10,"^W","^X","^Y",6417,"^Z",6417,"^[",["^10",["^11",["^10",[["^;5","^4C","^4B"]]]]],"^15",null],"^D",["^2",["^J","^Q"]],"^3","~$cljs.core/->ArrayNode","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^;5","^4C","^4B"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",6417,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^;5","^4C","^4B"]]]]],"^15",null],"~$assoc!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3372,"^V",7,"^Z",3372,"^U",13,"^[",["^10",["^11",["^10",[["^1L","^1M","^1N"],["^1L","^1M","^1N","~$&","~$kvs"]]]]],"^1?","When applied to a transient map, adds mapping of key(s) to\\n  val(s). When applied to a transient vector, sets the val at index.\\n  Note - index must be <= (count vector). Returns coll.","^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["^1L","^1M","^1N"]]],"^[",["^10",[["^1L","^1M","^1N"],["^1L","^1M","^1N","~$&","^I["]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/assoc!","^17",true,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["^1L","^1M","^1N"]]],"^[",["^10",[["^1L","^1M","^1N"],["^1L","^1M","^1N","~$&","^I["]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^1L","^1M","^1N"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3372,"^1;",3,"^1<",true,"^[",["^10",[["^1L","^1M","^1N"],["^1L","^1M","^1N","~$&","^I["]]],"^1?","When applied to a transient map, adds mapping of key(s) to\\n  val(s). When applied to a transient vector, sets the val at index.\\n  Note - index must be <= (count vector). Returns coll."],"~$hash-set",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8198,"^V",7,"^Z",8198,"^U",15,"^[",["^10",["^11",["^10",[[],["~$&","^@F"]]]]],"^1?","Returns a new hash set with supplied keys.  Any equal keys are\\n  handled as if by repeated uses of conj.","^1@",["^ ","^17",true,"^1;",0,"^18",["^10",[[]]],"^[",["^10",[[],["~$&","^@F"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/hash-set","^17",true,"^T","cljs/core.cljs","^U",15,"^1@",["^ ","^17",true,"^1;",0,"^18",["^10",[[]]],"^[",["^10",[[],["~$&","^@F"]]],"^1:",["^10",[null,null]]],"^18",["^10",[[]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8198,"^1;",0,"^1<",true,"^[",["^10",[[],["~$&","^@F"]]],"^1?","Returns a new hash set with supplied keys.  Any equal keys are\\n  handled as if by repeated uses of conj."],"~$reduce-kv",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2190,"^V",7,"^Z",2190,"^U",16,"^[",["^10",["^11",["^10",[["~$f","^77","^1D"]]]]],"^1?","Reduces an associative collection. f should be a function of 3\\n  arguments. Returns the result of applying f to init, the first key\\n  and the first value in coll, then applying f to that result and the\\n  2nd key and value, etc. If coll contains no entries, returns init\\n  and f is not called. Note that reduce-kv is supported on vectors,\\n  where the keys will be the ordinals."],"^3","~$cljs.core/reduce-kv","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["~$f","^77","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2190,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["~$f","^77","^1D"]]]]],"^1?","Reduces an associative collection. f should be a function of 3\\n  arguments. Returns the result of applying f to init, the first key\\n  and the first value in coll, then applying f to that result and the\\n  2nd key and value, etc. If coll contains no entries, returns init\\n  and f is not called. Note that reduce-kv is supported on vectors,\\n  where the keys will be the ordinals."],"~$reset!",["^ ","^3","~$cljs.core/reset!","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",6083,"^U",55,"^3O",true,"^C",["^ ","^T","cljs/core.cljs","^Y",6083,"^V",49,"^Z",6083,"^U",55,"^3O",true]],"^9R",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8266,"^V",7,"^Z",8266,"^U",11,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns the name String of a string, symbol or keyword."],"^3","~$cljs.core/name","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8266,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns the name String of a string, symbol or keyword."],"~$->t7487",["^ ","^B",null,"^C",["^ ","^>W",true,"^D",["^2",["^J","^O","^R"]],"^15",["^2",["^O","^R"]],"^W","^X","^[",["^10",["^11",["^10",[["^BP","~$meta7488"]]]]],"^T","cljs/core.cljs"],"^D",["^2",["^J","^O","^R"]],"^3","~$cljs.core/->t7487","^17",false,"^T","cljs/core.cljs","^18",["^10",[["^BP","^J9"]]],"^19",null,"^1:",["^10",[null,null]],"^>W",true,"^V",null,"^W","^X","^Y",null,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^BP","^J9"]]]]],"^15",["^2",["^O","^R"]]],"~$->RedNode",["^ ","^B",null,"^C",["^ ","^D",["^2",["^3P","^8R","^E","^F","^G","^H","^J","^L","^M","^N","^O","^8S","^8T","^3<","^R","^65","^S","^3T"]],"^T","cljs/core.cljs","^U",17,"^V",10,"^W","^X","^Y",7308,"^Z",7308,"^[",["^10",["^11",["^10",[["^1M","^1N","~$left","^H9","^14"]]]]],"^15",["^2",["^3P","^8R","^E","^F","^G","^H","^L","^M","^N","^O","^8S","^8T","^3<","^R","^65","^S","^3T"]]],"^D",["^2",["^3P","^8R","^E","^F","^G","^H","^J","^L","^M","^N","^O","^8S","^8T","^3<","^R","^65","^S","^3T"]],"^3","~$cljs.core/->RedNode","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^1M","^1N","^J<","^H9","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",7308,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^1M","^1N","^J<","^H9","^14"]]]]],"^15",["^2",["^3P","^8R","^E","^F","^G","^H","^L","^M","^N","^O","^8S","^8T","^3<","^R","^65","^S","^3T"]]],"~$unchecked-array-for",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4649,"^V",8,"^Z",4649,"^U",27,"^3G",true,"^[",["^10",["^11",["^10",[["^4J","~$i"]]]]]],"^3G",true,"^3","~$cljs.core/unchecked-array-for","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^4J","~$i"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4649,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^4J","~$i"]]]]]],"~$Fn",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",400,"^V",14,"^Z",400,"^U",16,"^1?","Marker protocol","^1H",true,"^1I",["^ ","^1J",["^ "]]],"^1H",true,"^3","^37","^T","cljs/core.cljs","^U",16,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ "]],"^1P",null,"^Z",400,"^1Q",["^2",["^38","^>R","^>S"]],"^1?","Marker protocol"],"~$ffirst",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1511,"^V",7,"^Z",1511,"^U",13,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Same as (first (first x))"],"^3","~$cljs.core/ffirst","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1511,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Same as (first (first x))"],"~$->ArrayNodeIterator",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",27,"^V",10,"^W","^X","^Y",6397,"^Z",6397,"^[",["^10",["^11",["^10",[["^4B","~$i","^HI"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->ArrayNodeIterator","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^4B","~$i","^HI"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",6397,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^4B","~$i","^HI"]]]]],"^15",null],"~$sorted-set",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8204,"^V",7,"^Z",8204,"^U",17,"^[",["^10",["^11",["^10",[["~$&","^@F"]]]]],"^1?","Returns a new sorted set with supplied keys.","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^@F"]]],"^[",["^10",[["~$&","^@F"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/sorted-set","^17",true,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^@F"]]],"^[",["^10",[["~$&","^@F"]]],"^1:",["^10",[null]]],"^18",[["^10",["^@F"]]],"^19",null,"^1:",["^10",[null]],"^V",null,"^Y",null,"^Z",8204,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^@F"]]],"^1?","Returns a new sorted set with supplied keys."],"~$pr-with-opts",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8888,"^V",8,"^Z",8888,"^U",20,"^3G",true,"^[",["^10",["^11",["^10",[["^57","^1>"]]]]],"^1?","Prints a sequence of objects using string-print, observing all\\n  the options given in opts"],"^3G",true,"^3","~$cljs.core/pr-with-opts","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^57","^1>"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8888,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^57","^1>"]]]]],"^1?","Prints a sequence of objects using string-print, observing all\\n  the options given in opts"],"~$PersistentTreeMap",["^ ","^2K",5,"^D",["^2",["^3Q","^78","^E","^F","^G","^H","^J","^L","^M","^53","^N","^O","^P","^R","^65","^>5","^S"]],"^3","^5N","^T","cljs/core.cljs","^U",27,"^2O",true,"^V",10,"^Y",7558,"^2P",false,"^Z",7558,"^15",["^2",["^3Q","^78","^E","^F","^G","^H","^L","^M","^53","^N","^O","^P","^R","^65","^>5","^S"]]],"~$->PersistentTreeMap",["^ ","^B",null,"^C",["^ ","^D",["^2",["^3Q","^78","^E","^F","^G","^H","^J","^L","^M","^53","^N","^O","^P","^R","^65","^>5","^S"]],"^T","cljs/core.cljs","^U",27,"^V",10,"^W","^X","^Y",7558,"^Z",7558,"^[",["^10",["^11",["^10",[["^1E","^42","^4C","^12","^14"]]]]],"^15",["^2",["^3Q","^78","^E","^F","^G","^H","^L","^M","^53","^N","^O","^P","^R","^65","^>5","^S"]]],"^D",["^2",["^3Q","^78","^E","^F","^G","^H","^J","^L","^M","^53","^N","^O","^P","^R","^65","^>5","^S"]],"^3","~$cljs.core/->PersistentTreeMap","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^1E","^42","^4C","^12","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",7558,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^1E","^42","^4C","^12","^14"]]]]],"^15",["^2",["^3Q","^78","^E","^F","^G","^H","^L","^M","^53","^N","^O","^P","^R","^65","^>5","^S"]]],"~$array-reduce",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1311,"^V",8,"^Z",1311,"^U",20,"^3G",true,"^[",["^10",["^11",["^10",[["^4B","~$f"],["^4B","~$f","^1N"],["^4B","~$f","^1N","^6@"]]]]],"^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["^4B","~$f"],["^4B","~$f","^1N"],["^4B","~$f","^1N","^6@"]]],"^[",["^10",[["^4B","~$f"],["^4B","~$f","^1N"],["^4B","~$f","^1N","^6@"]]],"^1:",["^10",[null,null,null]]]],"^3G",true,"^3","~$cljs.core/array-reduce","^17",false,"^T","cljs/core.cljs","^U",20,"^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["^4B","~$f"],["^4B","~$f","^1N"],["^4B","~$f","^1N","^6@"]]],"^[",["^10",[["^4B","~$f"],["^4B","~$f","^1N"],["^4B","~$f","^1N","^6@"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["^4B","~$f"],["^4B","~$f","^1N"],["^4B","~$f","^1N","^6@"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^Z",1311,"^1;",4,"^1<",true,"^[",["^10",[["^4B","~$f"],["^4B","~$f","^1N"],["^4B","~$f","^1N","^6@"]]]],"~$counted?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1344,"^V",16,"^Z",1344,"^U",24,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if coll implements count in constant time"],"^3","~$cljs.core/counted?","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",1344,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if coll implements count in constant time"],"~$tagged-literal",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9980,"^V",7,"^Z",9980,"^U",21,"^[",["^10",["^11",["^10",[["^DL","^DM"]]]]],"^1?","Construct a data representation of a tagged literal from a\\n  tag symbol and a form."],"^3","~$cljs.core/tagged-literal","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["^DL","^DM"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9980,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^DL","^DM"]]]]],"^1?","Construct a data representation of a tagged literal from a\\n  tag symbol and a form."],"~$println",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8931,"^V",7,"^Z",8931,"^U",14,"^[",["^10",["^11",["^10",[["~$&","^57"]]]]],"^1?","Same as print followed by (newline)","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^57"]]],"^[",["^10",[["~$&","^57"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/println","^17",true,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^57"]]],"^[",["^10",[["~$&","^57"]]],"^1:",["^10",[null]]],"^18",[["^10",["^57"]]],"^19",null,"^1:",["^10",[null]],"^V",null,"^Y",null,"^Z",8931,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^57"]]],"^1?","Same as print followed by (newline)"],"~$assoc-in",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4538,"^V",7,"^Z",4538,"^U",15,"^[",["^10",["^11",["^10",[["~$m",["~$k","~$&","^6U"],"~$v"]]]]],"^1?","Associates a value in a nested associative structure, where ks is a\\n  sequence of keys and v is the new value and returns a new nested structure.\\n  If any levels do not exist, hash-maps will be created."],"^3","~$cljs.core/assoc-in","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["~$m","~$p__8088","~$v"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4538,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["~$m",["~$k","~$&","^6U"],"~$v"]]]]],"^1?","Associates a value in a nested associative structure, where ks is a\\n  sequence of keys and v is the new value and returns a new nested structure.\\n  If any levels do not exist, hash-maps will be created."],"~$PersistentHashSet",["^ ","^2K",3,"^D",["^2",["^E","^F","^G","^H","^I","^J","^K","^L","^M","^N","^O","^P","^Q","^R","^S"]],"^3","^5M","^T","cljs/core.cljs","^U",27,"^2O",true,"^V",10,"^Y",7946,"^2P",false,"^Z",7946,"^15",["^2",["^E","^F","^G","^H","^I","^K","^L","^M","^N","^O","^P","^R","^S"]]],"~$bit-test",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2527,"^V",16,"^Z",2527,"^U",24,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Test bit at index n"],"^3","~$cljs.core/bit-test","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["~$x","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",2527,"^1;",2,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Test bit at index n"],"~$->Namespace",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^J"]],"^T","cljs/core.cljs","^U",19,"^V",10,"^W","^X","^Y",10076,"^Z",10076,"^[",["^10",["^11",["^10",[["^1Z","^9R"]]]]],"^15",["^2",["^E","^F"]]],"^D",["^2",["^E","^F","^J"]],"^3","~$cljs.core/->Namespace","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^1Z","^9R"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",10076,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^1Z","^9R"]]]]],"^15",["^2",["^E","^F"]]],"~$TransientHashMap",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",6763,"^V",10,"^Z",6763,"^U",26,"^3O",true],"^2K",5,"^D",["^2",["^84","^J","^M","^=5","^1O","^S"]],"^3","^1S","^T","cljs/core.cljs","^U",26,"^2O",true,"^V",10,"^Y",6933,"^2P",false,"^3O",true,"^Z",6933,"^15",["^2",["^84","^M","^=5","^1O","^S"]]],"~$->PersistentHashMap",["^ ","^B",null,"^C",["^ ","^D",["^2",["^78","^E","^F","^G","^H","^I","^J","^L","^M","^N","^O","^P","^Q","^R","^65","^>5","^S"]],"^T","cljs/core.cljs","^U",27,"^V",10,"^W","^X","^Y",6777,"^Z",6777,"^[",["^10",["^11",["^10",[["^12","^4C","^2B","~$has-nil?","~$nil-val","^14"]]]]],"^15",["^2",["^78","^E","^F","^G","^H","^I","^L","^M","^N","^O","^P","^R","^65","^>5","^S"]]],"^D",["^2",["^78","^E","^F","^G","^H","^I","^J","^L","^M","^N","^O","^P","^Q","^R","^65","^>5","^S"]],"^3","~$cljs.core/->PersistentHashMap","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^12","^4C","^2B","^K2","^K3","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",6777,"^1;",6,"^1<",true,"^[",["^10",["^11",["^10",[["^12","^4C","^2B","^K2","^K3","^14"]]]]],"^15",["^2",["^78","^E","^F","^G","^H","^I","^L","^M","^N","^O","^P","^R","^65","^>5","^S"]]],"~$array-extend-kv",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5731,"^V",8,"^Z",5731,"^U",23,"^3G",true,"^[",["^10",["^11",["^10",[["^4B","~$k","~$v"]]]]]],"^3G",true,"^3","~$cljs.core/array-extend-kv","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["^4B","~$k","~$v"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",5731,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^4B","~$k","~$v"]]]]]],"~$ISwap",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",716,"^V",14,"^Z",716,"^U",19,"^1?","Protocol for adding swapping functionality.","^1H",true,"^1I",["^ ","^1J",["^ ","^AQ",[["~$o","~$f"],["~$o","~$f","~$a"],["~$o","~$f","~$a","~$b"],["~$o","~$f","~$a","~$b","^3H"]]]]],"^1H",true,"^3","^AR","^T","cljs/core.cljs","^U",19,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^AQ",[["~$o","~$f"],["~$o","~$f","~$a"],["~$o","~$f","~$a","~$b"],["~$o","~$f","~$a","~$b","^3H"]]]],"^1P",null,"^Z",716,"^1Q",["^2",[]],"^1?","Protocol for adding swapping functionality."],"~$ChunkedCons",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",1911,"^V",10,"^Z",1911,"^U",21,"^3O",true],"^2K",4,"^D",["^2",["^E","^F","^3R","^H","^=U","^J","^L","^32","^3S","^N","^O","^5R","^3<","^R"]],"^3","^<G","^T","cljs/core.cljs","^U",21,"^2O",true,"^V",10,"^Y",3096,"^2P",false,"^3O",true,"^Z",3096,"^15",["^2",["^E","^F","^3R","^H","^=U","^L","^32","^3S","^N","^O","^5R","^3<","^R"]]],"~$memoize",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9342,"^V",7,"^Z",9342,"^U",14,"^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Returns a memoized version of a referentially transparent function. The\\n  memoized version of the function keeps a cache of the mapping from arguments\\n  to results and, when calls with the same arguments are repeated often, has\\n  higher performance at the expense of higher memory use."],"^3","~$cljs.core/memoize","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["~$f"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9342,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Returns a memoized version of a referentially transparent function. The\\n  memoized version of the function keeps a cache of the mapping from arguments\\n  to results and, when calls with the same arguments are repeated often, has\\n  higher performance at the expense of higher memory use."],"~$alter-meta!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9097,"^V",7,"^Z",9097,"^U",18,"^[",["^10",["^11",["^10",[["^CZ","~$f","~$&","^>C"]]]]],"^1?","Atomically sets the metadata for a namespace/var/ref/agent/atom to be:\\n\\n  (apply f its-current-meta args)\\n\\n  f must be free of side-effects","^1@",["^ ","^17",true,"^1;",2,"^18",[["^10",["^CZ","~$f","^>C"]]],"^[",["^10",[["^CZ","~$f","~$&","^>C"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/alter-meta!","^17",true,"^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",true,"^1;",2,"^18",[["^10",["^CZ","~$f","^>C"]]],"^[",["^10",[["^CZ","~$f","~$&","^>C"]]],"^1:",["^10",[null]]],"^18",[["^10",["^CZ","~$f","^>C"]]],"^19",null,"^1:",["^10",[null]],"^V",null,"^Y",null,"^Z",9097,"^1;",2,"^1<",true,"^[",["^10",[["^CZ","~$f","~$&","^>C"]]],"^1?","Atomically sets the metadata for a namespace/var/ref/agent/atom to be:\\n\\n  (apply f its-current-meta args)\\n\\n  f must be free of side-effects"],"~$->StringBufferWriter",["^ ","^B",null,"^C",["^ ","^D",["^2",["^7@"]],"^T","cljs/core.cljs","^U",28,"^V",10,"^W","^X","^Y",734,"^Z",734,"^[",["^10",["^11",["^10",[["~$sb"]]]]],"^15",["^2",["^7@"]]],"^D",["^2",["^7@"]],"^3","~$cljs.core/->StringBufferWriter","^17",false,"^T","cljs/core.cljs","^U",28,"^18",["^10",[["^K>"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",734,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^K>"]]]]],"^15",["^2",["^7@"]]],"~$zero?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2572,"^V",16,"^Z",2572,"^U",21,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns true if num is zero, else false"],"^3","~$cljs.core/zero?","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",2572,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns true if num is zero, else false"],"~$tv-ensure-editable",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5145,"^V",8,"^Z",5145,"^U",26,"^3G",true,"^[",["^10",["^11",["^10",[["^;5","^6?"]]]]]],"^3G",true,"^3","~$cljs.core/tv-ensure-editable","^17",false,"^T","cljs/core.cljs","^U",26,"^18",["^10",[["^;5","^6?"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",5145,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^;5","^6?"]]]]]],"~$*main-cli-fn*",["^ ","^3","~$cljs.core/*main-cli-fn*","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",242,"^U",16,"^1?","When compiled for a command-line target, whatever\\n  function *main-fn* is set to will be called with the command-line\\n  argv as arguments","^C",["^ ","^T","cljs/core.cljs","^Y",242,"^V",3,"^Z",242,"^U",16,"^1?","When compiled for a command-line target, whatever\\n  function *main-fn* is set to will be called with the command-line\\n  argv as arguments"]],"^<L",["^ ","^B",null,"^C",["^ ","^48","^8R","^T","cljs/core.cljs","^U",17,"^V",9,"^Y",530,"^Z",530,"^1X","^49","^[",["^10",["^11",["^10",[["^1D","~$n","^1N"]]]]],"^1?","Returns a new vector with value val added at position n."],"^48","^8R","^3","~$cljs.core/-assoc-n","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^1D","~$n","^1N"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^49","^Z",530,"^1;",3,"^1X","^49","^1<",true,"^[",["^10",["^11",["^10",[["^1D","~$n","^1N"]]]]],"^1?","Returns a new vector with value val added at position n."],"~$unchecked-dec-int",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2371,"^V",7,"^Z",2371,"^U",24,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns a number one less than x, an int."],"^3","~$cljs.core/unchecked-dec-int","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2371,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns a number one less than x, an int."],"~$hash-imap",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2640,"^V",8,"^Z",2640,"^U",17,"^3G",true,"^[",["^10",["^11",["^10",[["~$m"]]]]]],"^3G",true,"^3","~$cljs.core/hash-imap","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["~$m"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2640,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$m"]]]]]],"~$dominates",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9539,"^V",8,"^Z",9539,"^U",17,"^3G",true,"^[",["^10",["^11",["^10",[["~$x","~$y","^?C"]]]]]],"^3G",true,"^3","~$cljs.core/dominates","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["~$x","~$y","^?C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9539,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$y","^?C"]]]]]],"~$persistent!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3352,"^V",7,"^Z",3352,"^U",18,"^[",["^10",["^11",["^10",[["^1L"]]]]],"^1?","Returns a new, persistent version of the transient collection, in\\n  constant time. The transient collection cannot be used after this\\n  call, any such use will throw an exception."],"^3","~$cljs.core/persistent!","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^1L"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3352,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1L"]]]]],"^1?","Returns a new, persistent version of the transient collection, in\\n  constant time. The transient collection cannot be used after this\\n  call, any such use will throw an exception."],"~$set-print-fn!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",58,"^V",7,"^Z",58,"^U",20,"^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Set *print-fn* to f."],"^3","~$cljs.core/set-print-fn!","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$f"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",58,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Set *print-fn* to f."],"~$nnext",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1526,"^V",7,"^Z",1526,"^U",12,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Same as (next (next x))"],"^3","~$cljs.core/nnext","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1526,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Same as (next (next x))"],"~$Box",["^ ","^2K",1,"^D",["^2",[]],"^3","~$cljs.core/Box","^T","cljs/core.cljs","^U",13,"^2O",true,"^V",10,"^Y",6081,"^2P",false,"^Z",6081,"^15",null],"~$balance-right",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7128,"^V",8,"^Z",7128,"^U",21,"^3G",true,"^[",["^10",["^11",["^10",[["^1M","^1N","^J<","^H8"]]]]]],"^3G",true,"^3","~$cljs.core/balance-right","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["^1M","^1N","^J<","^H8"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",7128,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^1M","^1N","^J<","^H8"]]]]]],"~$throw-no-method-error",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9579,"^V",8,"^Z",9579,"^U",29,"^3G",true,"^[",["^10",["^11",["^10",[["^9R","^61"]]]]]],"^3G",true,"^3","~$cljs.core/throw-no-method-error","^17",false,"^T","cljs/core.cljs","^U",29,"^18",["^10",[["^9R","^61"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9579,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^9R","^61"]]]]]],"~$demunge-str",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10049,"^V",8,"^Z",10049,"^U",19,"^3G",true,"^[",["^10",["^11",["^10",[["~$munged-name"]]]]]],"^3G",true,"^3","~$cljs.core/demunge-str","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^KZ"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",10049,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^KZ"]]]]]],"~$add-watch",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9111,"^V",7,"^Z",9111,"^U",16,"^[",["^10",["^11",["^10",[["^CZ","^1M","~$f"]]]]],"^1?","Alpha - subject to change.\\n\\n  Adds a watch function to an atom reference. The watch fn must be a\\n  fn of 4 args: a key, the reference, its old-state, its\\n  new-state. Whenever the reference\'s state might have been changed,\\n  any registered watches will have their functions called. The watch\\n  fn will be called synchronously. Note that an atom\'s state\\n  may have changed again prior to the fn call, so use old/new-state\\n  rather than derefing the reference. Keys must be unique per\\n  reference, and can be used to remove the watch with remove-watch,\\n  but are otherwise considered opaque by the watch mechanism.  Bear in\\n  mind that regardless of the result or action of the watch fns the\\n  atom\'s value will change.  Example:\\n\\n      (def a (atom 0))\\n      (add-watch a :inc (fn [k r o n] (assert (== 0 n))))\\n      (swap! a inc)\\n      ;; Assertion Error\\n      (deref a)\\n      ;=> 1"],"^3","~$cljs.core/add-watch","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^CZ","^1M","~$f"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9111,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^CZ","^1M","~$f"]]]]],"^1?","Alpha - subject to change.\\n\\n  Adds a watch function to an atom reference. The watch fn must be a\\n  fn of 4 args: a key, the reference, its old-state, its\\n  new-state. Whenever the reference\'s state might have been changed,\\n  any registered watches will have their functions called. The watch\\n  fn will be called synchronously. Note that an atom\'s state\\n  may have changed again prior to the fn call, so use old/new-state\\n  rather than derefing the reference. Keys must be unique per\\n  reference, and can be used to remove the watch with remove-watch,\\n  but are otherwise considered opaque by the watch mechanism.  Bear in\\n  mind that regardless of the result or action of the watch fns the\\n  atom\'s value will change.  Example:\\n\\n      (def a (atom 0))\\n      (add-watch a :inc (fn [k r o n] (assert (== 0 n))))\\n      (swap! a inc)\\n      ;; Assertion Error\\n      (deref a)\\n      ;=> 1"],"~$not-every?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3735,"^V",16,"^Z",3735,"^U",26,"^1X","^1Y","^[",["^10",["^11",["^10",[["^2[","^1D"]]]]],"^1?","Returns false if (pred x) is logical true for every x in\\n  coll, else true."],"^3","~$cljs.core/not-every?","^17",false,"^T","cljs/core.cljs","^U",26,"^18",["^10",[["^2[","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",3735,"^1;",2,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["^2[","^1D"]]]]],"^1?","Returns false if (pred x) is logical true for every x in\\n  coll, else true."],"~$rem",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2478,"^V",7,"^Z",2478,"^U",10,"^[",["^10",["^11",["^10",[["~$n","~$d"]]]]],"^1?","remainder of dividing numerator by denominator."],"^3","~$cljs.core/rem","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["~$n","~$d"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2478,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$n","~$d"]]]]],"^1?","remainder of dividing numerator by denominator."],"~$pr-sb-with-opts",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8864,"^V",8,"^Z",8864,"^U",23,"^3G",true,"^[",["^10",["^11",["^10",[["^57","^1>"]]]]]],"^3G",true,"^3","~$cljs.core/pr-sb-with-opts","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["^57","^1>"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8864,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^57","^1>"]]]]]],"~$->HashMapIter",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",21,"^V",10,"^W","^X","^Y",6765,"^Z",6765,"^[",["^10",["^11",["^10",[["^K3","~$root-iter","~$seen"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->HashMapIter","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["^K3","^L9","^L:"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",6765,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^K3","^L9","^L:"]]]]],"^15",null],"~$BitmapIndexedNode",["^ ","^2K",3,"^D",["^2",["^J","^Q"]],"^3","^<P","^T","cljs/core.cljs","^U",27,"^2O",true,"^V",10,"^Y",6182,"^2P",false,"^Z",6182,"^15",null],"~$->NodeSeq",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^H","^J","^L","^32","^N","^O","^3<","^R","^3T"]],"^T","cljs/core.cljs","^U",17,"^V",10,"^W","^X","^Y",6647,"^Z",6647,"^[",["^10",["^11",["^10",[["^12","~$nodes","~$i","~$s","^14"]]]]],"^15",["^2",["^E","^F","^H","^L","^32","^N","^O","^3<","^R","^3T"]]],"^D",["^2",["^E","^F","^H","^J","^L","^32","^N","^O","^3<","^R","^3T"]],"^3","~$cljs.core/->NodeSeq","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^12","^L>","~$i","~$s","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",6647,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^12","^L>","~$i","~$s","^14"]]]]],"^15",["^2",["^E","^F","^H","^L","^32","^N","^O","^3<","^R","^3T"]]],"~$some",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3740,"^V",7,"^Z",3740,"^U",11,"^[",["^10",["^11",["^10",[["^2[","^1D"]]]]],"^1?","Returns the first logical true value of (pred x) for any x in coll,\\n  else nil.  One common idiom is to use a set as pred, for example\\n  this will return :fred if :fred is in the sequence, otherwise nil:\\n  (some #{:fred} coll)"],"^3","~$cljs.core/some","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["^2[","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3740,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^2[","^1D"]]]]],"^1?","Returns the first logical true value of (pred x) for any x in coll,\\n  else nil.  One common idiom is to use a set as pred, for example\\n  this will return :fred if :fred is in the sequence, otherwise nil:\\n  (some #{:fred} coll)"],"~$INamed",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",701,"^V",14,"^Z",701,"^U",20,"^1?","Protocol for adding a name.","^1H",true,"^1I",["^ ","^1J",["^ ","^FL",[["~$x"]],"~$-namespace",[["~$x"]]]]],"^1H",true,"^3","^:9","^T","cljs/core.cljs","^U",20,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^FL",[["~$x"]],"^LC",[["~$x"]]]],"^1P",null,"^Z",701,"^1Q",["^2",["^CH","^<<","^::"]],"^1?","Protocol for adding a name."],"~$->Box",["^ ","^B",null,"^C",["^ ","^D",["^2",[]],"^T","cljs/core.cljs","^U",13,"^V",10,"^W","^X","^Y",6081,"^Z",6081,"^[",["^10",["^11",["^10",[["^1N"]]]]],"^15",null],"^D",["^2",[]],"^3","~$cljs.core/->Box","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["^1N"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",6081,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1N"]]]]],"^15",null],"~$IReduce",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",551,"^V",14,"^Z",551,"^U",21,"^1?","Protocol for seq types that can reduce themselves.\\n  Called by cljs.core/reduce.","^1H",true,"^1I",["^ ","^1J",["^ ","^:>",[["^1D","~$f"],["^1D","~$f","^3A"]]]]],"^1H",true,"^3","^3T","^T","cljs/core.cljs","^U",21,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^:>",[["^1D","~$f"],["^1D","~$f","^3A"]]]],"^1P",null,"^Z",551,"^1Q",["^2",["^<9","^<:","^5G","^80","^3U","^5H","^<=","^6J","^5I","^<@","^<A","^9J","^5K","^<B","^<C","^<D","^<E","^8H","^<4","^7>","^5P"]],"^1?","Protocol for seq types that can reduce themselves.\\n  Called by cljs.core/reduce."],"~$drop",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4241,"^V",7,"^Z",4241,"^U",11,"^[",["^10",["^11",["^10",[["~$n"],["~$n","^1D"]]]]],"^1?","Returns a lazy sequence of all but the first n items in coll.\\n  Returns a stateful transducer when no collection is provided.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$n"],["~$n","^1D"]]],"^[",["^10",[["~$n"],["~$n","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/drop","^17",false,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$n"],["~$n","^1D"]]],"^[",["^10",[["~$n"],["~$n","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$n"],["~$n","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4241,"^1;",2,"^1<",true,"^[",["^10",[["~$n"],["~$n","^1D"]]],"^1?","Returns a lazy sequence of all but the first n items in coll.\\n  Returns a stateful transducer when no collection is provided."],"~$NodeIterator",["^ ","^2K",4,"^D",["^2",["^J"]],"^3","~$cljs.core/NodeIterator","^T","cljs/core.cljs","^U",23,"^2O",true,"^V",11,"^Y",6144,"^2P",false,"^Z",6144,"^15",null],"~$js-obj",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1918,"^V",7,"^Z",1918,"^U",13,"^[",["^10",["^11",["^10",[[],["~$&","^7U"]]]]],"^1?","Create JavaSript object from an even number arguments representing\\n  interleaved keys and values.","^1@",["^ ","^17",true,"^1;",0,"^18",["^10",[[]]],"^[",["^10",[[],["~$&","^7U"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/js-obj","^17",true,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",true,"^1;",0,"^18",["^10",[[]]],"^[",["^10",[[],["~$&","^7U"]]],"^1:",["^10",[null,null]]],"^18",["^10",[[]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1918,"^1;",0,"^1<",true,"^[",["^10",[[],["~$&","^7U"]]],"^1?","Create JavaSript object from an even number arguments representing\\n  interleaved keys and values."],"~$ITransientCollection",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",648,"^V",14,"^Z",648,"^U",34,"^1?","Protocol for adding basic functionality to transient collections.","^1H",true,"^1I",["^ ","^1J",["^ ","~$-conj!",[["^1L","^1N"]],"^A0",[["^1L"]]]]],"^1H",true,"^3","^=5","^T","cljs/core.cljs","^U",34,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^LN",[["^1L","^1N"]],"^A0",[["^1L"]]]],"^1P",null,"^Z",648,"^1Q",["^2",["^1R","^1S","^1T","^5L"]],"^1?","Protocol for adding basic functionality to transient collections."],"~$Atom",["^ ","^2K",4,"^D",["^2",["^@K","^G?","^E","^F","^J","^O","^2M"]],"^3","^<F","^T","cljs/core.cljs","^U",14,"^2O",true,"^V",10,"^Y",3922,"^2P",false,"^Z",3922,"^15",["^2",["^@K","^G?","^E","^F","^O","^2M"]]],"~$nth",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1611,"^V",7,"^Z",1611,"^U",10,"^[",["^10",["^11",["^10",[["^1D","~$n"],["^1D","~$n","^5:"]]]]],"^1?","Returns the value at the index. get returns nil if index out of\\n  bounds, nth throws an exception unless not-found is supplied.  nth\\n  also works for strings, arrays, regex Matchers and Lists, and,\\n  in O(n) time, for sequences.","^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^1D","~$n"],["^1D","~$n","^5:"]]],"^[",["^10",[["^1D","~$n"],["^1D","~$n","^5:"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/nth","^17",false,"^T","cljs/core.cljs","^U",10,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^1D","~$n"],["^1D","~$n","^5:"]]],"^[",["^10",[["^1D","~$n"],["^1D","~$n","^5:"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^1D","~$n"],["^1D","~$n","^5:"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1611,"^1;",3,"^1<",true,"^[",["^10",[["^1D","~$n"],["^1D","~$n","^5:"]]],"^1?","Returns the value at the index. get returns nil if index out of\\n  bounds, nth throws an exception unless not-found is supplied.  nth\\n  also works for strings, arrays, regex Matchers and Lists, and,\\n  in O(n) time, for sequences."],"~$sorted?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1887,"^V",16,"^Z",1887,"^U",23,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if coll satisfies ISorted"],"^3","~$cljs.core/sorted?","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",1887,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if coll satisfies ISorted"],"~$nil?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",177,"^V",16,"^Z",177,"^U",20,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is nil, false otherwise."],"^3","~$cljs.core/nil?","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",177,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is nil, false otherwise."],"~$split-at",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4311,"^V",7,"^Z",4311,"^U",15,"^[",["^10",["^11",["^10",[["~$n","^1D"]]]]],"^1?","Returns a vector of [(take n coll) (drop n coll)]"],"^3","~$cljs.core/split-at","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["~$n","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4311,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$n","^1D"]]]]],"^1?","Returns a vector of [(take n coll) (drop n coll)]"],"~$TransientHashSet",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",7934,"^V",10,"^Z",7934,"^U",26,"^3O",true],"^2K",1,"^D",["^2",["~$cljs.core/ITransientSet","^G","^M","^=5","^S"]],"^3","^5L","^T","cljs/core.cljs","^U",26,"^2O",true,"^V",10,"^Y",8045,"^2P",false,"^3O",true,"^Z",8045,"^15",["^2",["^LY","^G","^M","^=5","^S"]]],"~$*e",["^ ","^3","~$cljs.core/*e","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",161,"^U",5,"^1?","bound in a repl thread to the most recent exception caught by the repl","^C",["^ ","^T","cljs/core.cljs","^Y",161,"^V",3,"^Z",161,"^U",5,"^1?","bound in a repl thread to the most recent exception caught by the repl"]],"~$array-map-extend-kv",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5742,"^V",8,"^Z",5742,"^U",27,"^3G",true,"^[",["^10",["^11",["^10",[["~$m","~$k","~$v"]]]]]],"^3G",true,"^3","~$cljs.core/array-map-extend-kv","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["~$m","~$k","~$v"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",5742,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["~$m","~$k","~$v"]]]]]],"~$prn-str-with-opts",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8879,"^V",7,"^Z",8879,"^U",24,"^[",["^10",["^11",["^10",[["^57","^1>"]]]]],"^1?","Same as pr-str-with-opts followed by (newline)"],"^3","~$cljs.core/prn-str-with-opts","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["^57","^1>"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8879,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^57","^1>"]]]]],"^1?","Same as pr-str-with-opts followed by (newline)"],"~$not-native",["^ ","^3","~$cljs.core/not-native","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",168,"^U",16,"^C",["^ ","^T","cljs/core.cljs","^Y",168,"^V",6,"^Z",168,"^U",16]],"~$random-sample",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9231,"^V",7,"^Z",9231,"^U",20,"^[",["^10",["^11",["^10",[["~$prob"],["^M7","^1D"]]]]],"^1?","Returns items from coll with random probability of prob (0.0 -\\n  1.0).  Returns a transducer when no collection is provided.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^M7"],["^M7","^1D"]]],"^[",["^10",[["^M7"],["^M7","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/random-sample","^17",false,"^T","cljs/core.cljs","^U",20,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^M7"],["^M7","^1D"]]],"^[",["^10",[["^M7"],["^M7","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^M7"],["^M7","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9231,"^1;",2,"^1<",true,"^[",["^10",[["^M7"],["^M7","^1D"]]],"^1?","Returns items from coll with random probability of prob (0.0 -\\n  1.0).  Returns a transducer when no collection is provided."],"~$select-keys",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7918,"^V",7,"^Z",7918,"^U",18,"^[",["^10",["^11",["^10",[["^91","~$keyseq"]]]]],"^1?","Returns a map containing only those entries in map whose key is in keys"],"^3","~$cljs.core/select-keys","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^91","^M:"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",7918,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^91","^M:"]]]]],"^1?","Returns a map containing only those entries in map whose key is in keys"],"~$bit-and",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2490,"^V",7,"^Z",2490,"^U",14,"^[",["^10",["^11",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4M"]]]]],"^1?","Bitwise and","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x","~$y"]]],"^[",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/bit-and","^17",true,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x","~$y"]]],"^[",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2490,"^1;",2,"^1<",true,"^[",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1?","Bitwise and"],"~$bounded-count",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3293,"^V",8,"^Z",3293,"^U",21,"^3G",true,"^[",["^10",["^11",["^10",[["~$s","~$n"]]]]]],"^3G",true,"^3","~$cljs.core/bounded-count","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$s","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3293,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$s","~$n"]]]]]],"~$update",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4574,"^V",7,"^Z",4574,"^U",13,"^[",["^10",["^11",["^10",[["~$m","~$k","~$f"],["~$m","~$k","~$f","~$x"],["~$m","~$k","~$f","~$x","~$y"],["~$m","~$k","~$f","~$x","~$y","~$z"],["~$m","~$k","~$f","~$x","~$y","~$z","~$&","^4M"]]]]],"^1?","\'Updates\' a value in an associative structure, where k is a\\n  key and f is a function that will take the old value\\n  and any supplied args and return the new value, and returns a new\\n  structure.  If the key does not exist, nil is passed as the old value.","^1@",["^ ","^17",true,"^1;",6,"^18",["^10",[["~$m","~$k","~$f"],["~$m","~$k","~$f","~$x"],["~$m","~$k","~$f","~$x","~$y"],["~$m","~$k","~$f","~$x","~$y","~$z"]]],"^[",["^10",[["~$m","~$k","~$f"],["~$m","~$k","~$f","~$x"],["~$m","~$k","~$f","~$x","~$y"],["~$m","~$k","~$f","~$x","~$y","~$z"],["~$m","~$k","~$f","~$x","~$y","~$z","~$&","^4M"]]],"^1:",["^10",[null,null,null,null,null]]]],"^3","~$cljs.core/update","^17",true,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",true,"^1;",6,"^18",["^10",[["~$m","~$k","~$f"],["~$m","~$k","~$f","~$x"],["~$m","~$k","~$f","~$x","~$y"],["~$m","~$k","~$f","~$x","~$y","~$z"]]],"^[",["^10",[["~$m","~$k","~$f"],["~$m","~$k","~$f","~$x"],["~$m","~$k","~$f","~$x","~$y"],["~$m","~$k","~$f","~$x","~$y","~$z"],["~$m","~$k","~$f","~$x","~$y","~$z","~$&","^4M"]]],"^1:",["^10",[null,null,null,null,null]]],"^18",["^10",[["~$m","~$k","~$f"],["~$m","~$k","~$f","~$x"],["~$m","~$k","~$f","~$x","~$y"],["~$m","~$k","~$f","~$x","~$y","~$z"]]],"^19",null,"^1:",["^10",[null,null,null,null,null]],"^V",null,"^Y",null,"^Z",4574,"^1;",6,"^1<",true,"^[",["^10",[["~$m","~$k","~$f"],["~$m","~$k","~$f","~$x"],["~$m","~$k","~$f","~$x","~$y"],["~$m","~$k","~$f","~$x","~$y","~$z"],["~$m","~$k","~$f","~$x","~$y","~$z","~$&","^4M"]]],"^1?","\'Updates\' a value in an associative structure, where k is a\\n  key and f is a function that will take the old value\\n  and any supplied args and return the new value, and returns a new\\n  structure.  If the key does not exist, nil is passed as the old value."],"~$gensym_counter",["^ ","^3","~$cljs.core/gensym_counter","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",9146,"^U",20,"^C",["^ ","^T","cljs/core.cljs","^Y",9146,"^V",6,"^Z",9146,"^U",20]],"~$find-macros-ns",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10142,"^V",7,"^Z",10142,"^U",21,"^[",["^10",["^11",["^10",[["^2V"]]]]]],"^3","~$cljs.core/find-macros-ns","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["^2V"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",10142,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^2V"]]]]]],"~$list*",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3334,"^V",7,"^Z",3334,"^U",12,"^[",["^10",["^11",["^10",[["^>C"],["~$a","^>C"],["~$a","~$b","^>C"],["~$a","~$b","~$c","^>C"],["~$a","~$b","~$c","~$d","~$&","^4M"]]]]],"^1?","Creates a new list containing the items prepended to the rest, the\\n  last of which will be treated as a sequence.","^1@",["^ ","^17",true,"^1;",4,"^18",["^10",[["^>C"],["~$a","^>C"],["~$a","~$b","^>C"],["~$a","~$b","~$c","^>C"]]],"^[",["^10",[["^>C"],["~$a","^>C"],["~$a","~$b","^>C"],["~$a","~$b","~$c","^>C"],["~$a","~$b","~$c","~$d","~$&","^4M"]]],"^1:",["^10",[null,null,null,null,null]]]],"^3","~$cljs.core/list*","^17",true,"^T","cljs/core.cljs","^U",12,"^1@",["^ ","^17",true,"^1;",4,"^18",["^10",[["^>C"],["~$a","^>C"],["~$a","~$b","^>C"],["~$a","~$b","~$c","^>C"]]],"^[",["^10",[["^>C"],["~$a","^>C"],["~$a","~$b","^>C"],["~$a","~$b","~$c","^>C"],["~$a","~$b","~$c","~$d","~$&","^4M"]]],"^1:",["^10",[null,null,null,null,null]]],"^18",["^10",[["^>C"],["~$a","^>C"],["~$a","~$b","^>C"],["~$a","~$b","~$c","^>C"]]],"^19",null,"^1:",["^10",[null,null,null,null,null]],"^V",null,"^Y",null,"^Z",3334,"^1;",4,"^1<",true,"^[",["^10",[["^>C"],["~$a","^>C"],["~$a","~$b","^>C"],["~$a","~$b","~$c","^>C"],["~$a","~$b","~$c","~$d","~$&","^4M"]]],"^1?","Creates a new list containing the items prepended to the rest, the\\n  last of which will be treated as a sequence."],"~$array-index-of-keyword?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5678,"^V",8,"^Z",5678,"^U",31,"^3G",true,"^[",["^10",["^11",["^10",[["^4B","~$k"]]]]]],"^3G",true,"^3","~$cljs.core/array-index-of-keyword?","^17",false,"^T","cljs/core.cljs","^U",31,"^18",["^10",[["^4B","~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",5678,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^4B","~$k"]]]]]],"~$->Keyword",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^G","^J","^:9","^3["]],"^T","cljs/core.cljs","^U",17,"^V",10,"^W","^X","^Y",2906,"^Z",2906,"^[",["^10",["^11",["^10",[["^2V","^9R","~$fqn","^ER"]]]]],"^15",["^2",["^E","^F","^G","^:9","^3["]]],"^D",["^2",["^E","^F","^G","^J","^:9","^3["]],"^3","~$cljs.core/->Keyword","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^2V","^9R","^MK","^ER"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",2906,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^2V","^9R","^MK","^ER"]]]]],"^15",["^2",["^E","^F","^G","^:9","^3["]]],"~$update-in",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4547,"^V",7,"^Z",4547,"^U",16,"^[",["^10",["^11",["^10",[["~$m",["~$k","~$&","^6U"],"~$f"],["~$m",["~$k","~$&","^6U"],"~$f","~$a"],["~$m",["~$k","~$&","^6U"],"~$f","~$a","~$b"],["~$m",["~$k","~$&","^6U"],"~$f","~$a","~$b","~$c"],["~$m",["~$k","~$&","^6U"],"~$f","~$a","~$b","~$c","~$&","^>C"]]]]],"^1?","\'Updates\' a value in a nested associative structure, where ks is a\\n  sequence of keys and f is a function that will take the old value\\n  and any supplied args and return the new value, and returns a new\\n  nested structure.  If any levels do not exist, hash-maps will be\\n  created.","^1@",["^ ","^17",true,"^1;",6,"^18",["^10",[["~$m",["~$k","~$&","^6U"],"~$f"],["~$m",["~$k","~$&","^6U"],"~$f","~$a"],["~$m",["~$k","~$&","^6U"],"~$f","~$a","~$b"],["~$m",["~$k","~$&","^6U"],"~$f","~$a","~$b","~$c"]]],"^[",["^10",[["~$m",["~$k","~$&","^6U"],"~$f"],["~$m",["~$k","~$&","^6U"],"~$f","~$a"],["~$m",["~$k","~$&","^6U"],"~$f","~$a","~$b"],["~$m",["~$k","~$&","^6U"],"~$f","~$a","~$b","~$c"],["~$m",["~$k","~$&","^6U"],"~$f","~$a","~$b","~$c","~$&","^>C"]]],"^1:",["^10",[null,null,null,null,null]]]],"^3","~$cljs.core/update-in","^17",true,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",true,"^1;",6,"^18",["^10",[["~$m",["~$k","~$&","^6U"],"~$f"],["~$m",["~$k","~$&","^6U"],"~$f","~$a"],["~$m",["~$k","~$&","^6U"],"~$f","~$a","~$b"],["~$m",["~$k","~$&","^6U"],"~$f","~$a","~$b","~$c"]]],"^[",["^10",[["~$m",["~$k","~$&","^6U"],"~$f"],["~$m",["~$k","~$&","^6U"],"~$f","~$a"],["~$m",["~$k","~$&","^6U"],"~$f","~$a","~$b"],["~$m",["~$k","~$&","^6U"],"~$f","~$a","~$b","~$c"],["~$m",["~$k","~$&","^6U"],"~$f","~$a","~$b","~$c","~$&","^>C"]]],"^1:",["^10",[null,null,null,null,null]]],"^18",["^10",[["~$m",["~$k","~$&","^6U"],"~$f"],["~$m",["~$k","~$&","^6U"],"~$f","~$a"],["~$m",["~$k","~$&","^6U"],"~$f","~$a","~$b"],["~$m",["~$k","~$&","^6U"],"~$f","~$a","~$b","~$c"]]],"^19",null,"^1:",["^10",[null,null,null,null,null]],"^V",null,"^Y",null,"^Z",4547,"^1;",6,"^1<",true,"^[",["^10",[["~$m",["~$k","~$&","^6U"],"~$f"],["~$m",["~$k","~$&","^6U"],"~$f","~$a"],["~$m",["~$k","~$&","^6U"],"~$f","~$a","~$b"],["~$m",["~$k","~$&","^6U"],"~$f","~$a","~$b","~$c"],["~$m",["~$k","~$&","^6U"],"~$f","~$a","~$b","~$c","~$&","^>C"]]],"^1?","\'Updates\' a value in a nested associative structure, where ks is a\\n  sequence of keys and f is a function that will take the old value\\n  and any supplied args and return the new value, and returns a new\\n  nested structure.  If any levels do not exist, hash-maps will be\\n  created."],"~$prefer-method",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9779,"^V",7,"^Z",9779,"^U",20,"^[",["^10",["^11",["^10",[["^6C","~$dispatch-val-x","^62"]]]]],"^1?","Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y\\n   when there is a conflict"],"^3","~$cljs.core/prefer-method","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^6C","^MP","^62"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9779,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^6C","^MP","^62"]]]]],"^1?","Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y\\n   when there is a conflict"],"~$hash-symbol",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",891,"^V",8,"^Z",891,"^U",19,"^3G",true,"^[",["^10",["^11",["^10",[["^DU"]]]]]],"^3G",true,"^3","~$cljs.core/hash-symbol","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^DU"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",891,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^DU"]]]]]],"~$ensure-reduced",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1258,"^V",7,"^Z",1258,"^U",21,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","If x is already reduced?, returns it, else returns (reduced x)"],"^3","~$cljs.core/ensure-reduced","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1258,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","If x is already reduced?, returns it, else returns (reduced x)"],"~$edit-and-set",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6115,"^V",8,"^Z",6115,"^U",20,"^3G",true,"^[",["^10",["^11",["^10",[["~$inode","^;5","~$i","~$a"],["^MW","^;5","~$i","~$a","~$j","~$b"]]]]],"^1@",["^ ","^17",false,"^1;",6,"^18",["^10",[["^MW","^;5","~$i","~$a"],["^MW","^;5","~$i","~$a","~$j","~$b"]]],"^[",["^10",[["^MW","^;5","~$i","~$a"],["^MW","^;5","~$i","~$a","~$j","~$b"]]],"^1:",["^10",[null,null]]]],"^3G",true,"^3","~$cljs.core/edit-and-set","^17",false,"^T","cljs/core.cljs","^U",20,"^1@",["^ ","^17",false,"^1;",6,"^18",["^10",[["^MW","^;5","~$i","~$a"],["^MW","^;5","~$i","~$a","~$j","~$b"]]],"^[",["^10",[["^MW","^;5","~$i","~$a"],["^MW","^;5","~$i","~$a","~$j","~$b"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^MW","^;5","~$i","~$a"],["^MW","^;5","~$i","~$a","~$j","~$b"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",6115,"^1;",6,"^1<",true,"^[",["^10",[["^MW","^;5","~$i","~$a"],["^MW","^;5","~$i","~$a","~$j","~$b"]]]],"~$->PersistentArrayMap",["^ ","^B",null,"^C",["^ ","^D",["^2",["^78","^E","^F","^G","^H","^I","^J","^L","^M","^N","^O","^P","^Q","^R","^65","^>5","^S","^3T"]],"^T","cljs/core.cljs","^U",28,"^V",10,"^W","^X","^Y",5817,"^Z",5817,"^[",["^10",["^11",["^10",[["^12","^4C","^4B","^14"]]]]],"^15",["^2",["^78","^E","^F","^G","^H","^I","^L","^M","^N","^O","^P","^R","^65","^>5","^S","^3T"]]],"^D",["^2",["^78","^E","^F","^G","^H","^I","^J","^L","^M","^N","^O","^P","^Q","^R","^65","^>5","^S","^3T"]],"^3","~$cljs.core/->PersistentArrayMap","^17",false,"^T","cljs/core.cljs","^U",28,"^18",["^10",[["^12","^4C","^4B","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",5817,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^12","^4C","^4B","^14"]]]]],"^15",["^2",["^78","^E","^F","^G","^H","^I","^L","^M","^N","^O","^P","^R","^65","^>5","^S","^3T"]]],"~$instance?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",880,"^V",16,"^Z",880,"^U",25,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$t","~$o"]]]]],"^1?","Evaluates x and tests if it is an instance of the type\\n  c. Returns true or false"],"^3","~$cljs.core/instance?","^17",false,"^T","cljs/core.cljs","^U",25,"^18",["^10",[["~$t","~$o"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",880,"^1;",2,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$t","~$o"]]]]],"^1?","Evaluates x and tests if it is an instance of the type\\n  c. Returns true or false"],"~$mix-collection-hash",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1157,"^V",15,"^Z",1157,"^U",34,"^1X","^22","^[",["^10",["^11",["^10",[["~$hash-basis","^>F"]]]]],"^1?","Mix final collection hash for ordered or unordered collections.\\n   hash-basis is the combined collection hash, count is the number\\n   of elements included in the basis. Note this is the hash code\\n   consistent with =, different from .hashCode.\\n   See http://clojure.org/data_structures#hash for full algorithms."],"^3","~$cljs.core/mix-collection-hash","^17",false,"^T","cljs/core.cljs","^U",34,"^18",["^10",[["^N2","^>F"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^22","^Z",1157,"^1;",2,"^1X","^22","^1<",true,"^[",["^10",["^11",["^10",[["^N2","^>F"]]]]],"^1?","Mix final collection hash for ordered or unordered collections.\\n   hash-basis is the combined collection hash, count is the number\\n   of elements included in the basis. Note this is the hash code\\n   consistent with =, different from .hashCode.\\n   See http://clojure.org/data_structures#hash for full algorithms."],"~$re-find",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8680,"^V",7,"^Z",8680,"^U",14,"^[",["^10",["^11",["^10",[["^:2","~$s"]]]]],"^1?","Returns the first regex match, if any, of s to re, using\\n  re.exec(s). Returns a vector, containing first the matching\\n  substring, then any capturing groups if the regular expression contains\\n  capturing groups."],"^3","~$cljs.core/re-find","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^:2","~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8680,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^:2","~$s"]]]]],"^1?","Returns the first regex match, if any, of s to re, using\\n  re.exec(s). Returns a vector, containing first the matching\\n  substring, then any capturing groups if the regular expression contains\\n  capturing groups."],"~$run!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9264,"^V",7,"^Z",9264,"^U",11,"^[",["^10",["^11",["^10",[["~$proc","^1D"]]]]],"^1?","Runs the supplied procedure (via reduce), for purposes of side\\n  effects, on successive items in the collection. Returns nil"],"^3","~$cljs.core/run!","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["^N7","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9264,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^N7","^1D"]]]]],"^1?","Runs the supplied procedure (via reduce), for purposes of side\\n  effects, on successive items in the collection. Returns nil"],"~$char-escapes",["^ ","^3","~$cljs.core/char-escapes","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",8748,"^U",28,"^3G",true,"^C",["^ ","^T","cljs/core.cljs","^Y",8748,"^V",16,"^Z",8748,"^U",28,"^3G",true]],"~$ES6Iterator",["^ ","^2K",1,"^D",["^2",["^J"]],"^3","~$cljs.core/ES6Iterator","^T","cljs/core.cljs","^U",21,"^2O",true,"^V",10,"^Y",1121,"^2P",false,"^Z",1121,"^15",null],"^1N",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7889,"^V",7,"^Z",7889,"^U",10,"^[",["^10",["^11",["^10",[["^E6"]]]]],"^1?","Returns the value in the map entry."],"^3","~$cljs.core/val","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["^E6"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",7889,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^E6"]]]]],"^1?","Returns the value in the map entry."],"~$unchecked-add",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",28,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null,null]]],"^V",15,"^Y",2352,"^Z",2352,"^1X","^22","^[",["^10",["^11",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]]]],"^1?","Returns the sum of nums. (+) returns 0."],"^3","~$cljs.core/unchecked-add","^17",true,"^T","cljs/core.cljs","^U",28,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",null,"^Y",null,"^20","^22","^Z",2352,"^1;",2,"^1X","^22","^1<",true,"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1?","Returns the sum of nums. (+) returns 0."],"~$not",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",194,"^V",16,"^Z",194,"^U",19,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is logical false, false otherwise."],"^3","~$cljs.core/not","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",194,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is logical false, false otherwise."],"^@O",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",723,"^V",4,"^Z",723,"^U",12,"^48","^2L","^1?","Sets the value of volatile o to new-value without regard for the\\n     current value. Returns new-value.","^[",["^10",["^11",["^10",[["~$o","^@P"]]]]]],"^48","^2L","^3","~$cljs.core/-vreset!","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["~$o","^@P"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",723,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$o","^@P"]]]]],"^1?","Sets the value of volatile o to new-value without regard for the\\n     current value. Returns new-value."],"~$fn->comparator",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2083,"^V",17,"^Z",2083,"^U",31,"^3G",true,"^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Given a fn that might be boolean valued or a comparator,\\n   return a fn that is a comparator."],"^3G",true,"^3","~$cljs.core/fn->comparator","^17",false,"^T","cljs/core.cljs","^U",31,"^18",["^10",[["~$f"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2083,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Given a fn that might be boolean valued or a comparator,\\n   return a fn that is a comparator."],"~$with-meta",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1814,"^V",7,"^Z",1814,"^U",16,"^[",["^10",["^11",["^10",[["~$o","^12"]]]]],"^1?","Returns an object of the same type and value as obj, with\\n  map m as its metadata."],"^3","~$cljs.core/with-meta","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["~$o","^12"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1814,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$o","^12"]]]]],"^1?","Returns an object of the same type and value as obj, with\\n  map m as its metadata."],"~$unreduced",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1263,"^V",7,"^Z",1263,"^U",16,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","If x is reduced?, returns (deref x), else returns x"],"^3","~$cljs.core/unreduced","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1263,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","If x is reduced?, returns (deref x), else returns x"],"~$record?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1902,"^V",16,"^Z",1902,"^U",23,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x satisfies IRecord"],"^3","~$cljs.core/record?","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",1902,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x satisfies IRecord"],"~$type",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",244,"^V",7,"^Z",244,"^U",11,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return x\'s constructor."],"^3","~$cljs.core/type","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",244,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return x\'s constructor."],"~$identical?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",172,"^V",16,"^Z",172,"^U",26,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Tests if 2 arguments are the same object"],"^3","~$cljs.core/identical?","^17",false,"^T","cljs/core.cljs","^U",26,"^18",["^10",[["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",172,"^1;",2,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Tests if 2 arguments are the same object"],"^LC",["^ ","^B",null,"^C",["^ ","^48","^:9","^T","cljs/core.cljs","^U",22,"^V",12,"^Y",705,"^Z",705,"^1X","^FM","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns the namespace String of x."],"^48","^:9","^3","~$cljs.core/-namespace","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^FM","^Z",705,"^1;",1,"^1X","^FM","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns the namespace String of x."],"~$unchecked-divide-int",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",35,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^V",15,"^Y",2376,"^Z",2376,"^1X","^22","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]]]],"^1?","If no denominators are supplied, returns 1/numerator,\\n  else returns numerator divided by all of the denominators."],"^3","~$cljs.core/unchecked-divide-int","^17",true,"^T","cljs/core.cljs","^U",35,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^20","^22","^Z",2376,"^1;",2,"^1X","^22","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1?","If no denominators are supplied, returns 1/numerator,\\n  else returns numerator divided by all of the denominators."],"~$ns-name",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10158,"^V",7,"^Z",10158,"^U",14,"^[",["^10",["^11",["^10",[["^=0"]]]]]],"^3","~$cljs.core/ns-name","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^=0"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",10158,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^=0"]]]]]],"~$swap-global-hierarchy!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9413,"^V",8,"^Z",9413,"^U",30,"^3G",true,"^[",["^10",["^11",["^10",[["~$f","~$&","^>C"]]]]],"^1@",["^ ","^17",true,"^1;",1,"^18",[["^10",["~$f","^>C"]]],"^[",["^10",[["~$f","~$&","^>C"]]],"^1:",["^10",[null]]]],"^3G",true,"^3","~$cljs.core/swap-global-hierarchy!","^17",true,"^T","cljs/core.cljs","^U",30,"^1@",["^ ","^17",true,"^1;",1,"^18",[["^10",["~$f","^>C"]]],"^[",["^10",[["~$f","~$&","^>C"]]],"^1:",["^10",[null]]],"^18",[["^10",["~$f","^>C"]]],"^19",null,"^1:",["^10",[null]],"^V",null,"^Y",null,"^Z",9413,"^1;",1,"^1<",true,"^[",["^10",[["~$f","~$&","^>C"]]]],"~$max-key",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8287,"^V",7,"^Z",8287,"^U",14,"^[",["^10",["^11",["^10",[["~$k","~$x"],["~$k","~$x","~$y"],["~$k","~$x","~$y","~$&","^4M"]]]]],"^1?","Returns the x for which (k x), a number, is greatest.","^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["~$k","~$x"],["~$k","~$x","~$y"]]],"^[",["^10",[["~$k","~$x"],["~$k","~$x","~$y"],["~$k","~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]]],"^3","~$cljs.core/max-key","^17",true,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["~$k","~$x"],["~$k","~$x","~$y"]]],"^[",["^10",[["~$k","~$x"],["~$k","~$x","~$y"],["~$k","~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$k","~$x"],["~$k","~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^Z",8287,"^1;",3,"^1<",true,"^[",["^10",[["~$k","~$x"],["~$k","~$x","~$y"],["~$k","~$x","~$y","~$&","^4M"]]],"^1?","Returns the x for which (k x), a number, is greatest."],"~$->PersistentTreeSet",["^ ","^B",null,"^C",["^ ","^D",["^2",["^3Q","^E","^F","^G","^H","^J","^K","^L","^M","^53","^N","^O","^P","^R","^S"]],"^T","cljs/core.cljs","^U",27,"^V",10,"^W","^X","^Y",8082,"^Z",8082,"^[",["^10",["^11",["^10",[["^12","~$tree-map","^14"]]]]],"^15",["^2",["^3Q","^E","^F","^G","^H","^K","^L","^M","^53","^N","^O","^P","^R","^S"]]],"^D",["^2",["^3Q","^E","^F","^G","^H","^J","^K","^L","^M","^53","^N","^O","^P","^R","^S"]],"^3","~$cljs.core/->PersistentTreeSet","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^12","^NY","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",8082,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^12","^NY","^14"]]]]],"^15",["^2",["^3Q","^E","^F","^G","^H","^K","^L","^M","^53","^N","^O","^P","^R","^S"]]],"~$*out*",["^ ","^3","~$cljs.core/*out*","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",36,"^U",8,"^6<",true,"^C",["^ ","^T","cljs/core.cljs","^Y",36,"^V",3,"^Z",36,"^U",8,"^6<",true]],"~$->ChunkBuffer",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J","^M"]],"^T","cljs/core.cljs","^U",21,"^V",10,"^W","^X","^Y",3047,"^Z",3047,"^[",["^10",["^11",["^10",[["~$buf","^3B"]]]]],"^15",["^2",["^M"]]],"^D",["^2",["^J","^M"]],"^3","~$cljs.core/->ChunkBuffer","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["^O2","^3B"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",3047,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^O2","^3B"]]]]],"^15",["^2",["^M"]]],"~$hash-string",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",838,"^V",7,"^Z",838,"^U",18,"^[",["^10",["^11",["^10",[["~$k"]]]]]],"^3","~$cljs.core/hash-string","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",838,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$k"]]]]]],"~$ValSeq",["^ ","^2K",2,"^D",["^2",["^E","^F","^H","^J","^L","^32","^3S","^N","^O","^3<","^R","^3T"]],"^3","^<A","^T","cljs/core.cljs","^U",16,"^2O",true,"^V",10,"^Y",7826,"^2P",false,"^Z",7826,"^15",["^2",["^E","^F","^H","^L","^32","^3S","^N","^O","^3<","^R","^3T"]]],"~$-prefers",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9575,"^V",4,"^Z",9575,"^U",12,"^48","^5[","^1?",null,"^[",["^10",["^11",["^10",[["^60"]]]]]],"^48","^5[","^3","~$cljs.core/-prefers","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["^60"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9575,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^60"]]]]],"^1?",null],"~$set-validator!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4016,"^V",7,"^Z",4016,"^U",21,"^[",["^10",["^11",["^10",[["^CZ","^1N"]]]]],"^1?","Sets the validator-fn for an atom. validator-fn must be nil or a\\n  side-effect-free fn of one argument, which will be passed the intended\\n  new state on any state change. If the new state is unacceptable, the\\n  validator-fn should return false or throw an Error. If the current state\\n  is not acceptable to the new validator, an Error will be thrown and the\\n  validator will not be changed."],"^3","~$cljs.core/set-validator!","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["^CZ","^1N"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4016,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^CZ","^1N"]]]]],"^1?","Sets the validator-fn for an atom. validator-fn must be nil or a\\n  side-effect-free fn of one argument, which will be passed the intended\\n  new state on any state change. If the new state is unacceptable, the\\n  validator-fn should return false or throw an Error. If the current state\\n  is not acceptable to the new validator, an Error will be thrown and the\\n  validator will not be changed."],"^>O",["^ ","^B",null,"^C",["^ ","^48","^O","^T","cljs/core.cljs","^U",21,"^V",16,"^Y",543,"^Z",543,"^1X","~$clj-or-nil","^[",["^10",["^11",["^10",[["~$o"]]]]],"^1?","Returns the metadata of object o."],"^48","^O","^3","~$cljs.core/-meta","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$o"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^O;","^Z",543,"^1;",1,"^1X","^O;","^1<",true,"^[",["^10",["^11",["^10",[["~$o"]]]]],"^1?","Returns the metadata of object o."],"~$RedNode",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",7101,"^V",10,"^Z",7101,"^U",17,"^3O",true],"^2K",5,"^D",["^2",["^3P","^8R","^E","^F","^G","^H","^J","^L","^M","^N","^O","^8S","^8T","^3<","^R","^65","^S","^3T"]],"^3","^5P","^T","cljs/core.cljs","^U",17,"^2O",true,"^V",10,"^Y",7308,"^2P",false,"^3O",true,"^Z",7308,"^15",["^2",["^3P","^8R","^E","^F","^G","^H","^L","^M","^N","^O","^8S","^8T","^3<","^R","^65","^S","^3T"]]],"~$-dispatch-fn",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9577,"^V",4,"^Z",9577,"^U",16,"^48","^5[","^1?",null,"^[",["^10",["^11",["^10",[["^60"]]]]]],"^48","^5[","^3","~$cljs.core/-dispatch-fn","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^60"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9577,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^60"]]]]],"^1?",null],"~$->IndexedSeqIterator",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",28,"^V",10,"^W","^X","^Y",1352,"^Z",1352,"^[",["^10",["^11",["^10",[["^4B","~$i"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->IndexedSeqIterator","^17",false,"^T","cljs/core.cljs","^U",28,"^18",["^10",[["^4B","~$i"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",1352,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^4B","~$i"]]]]],"^15",null],"~$-add-method",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9570,"^V",4,"^Z",9570,"^U",15,"^48","^5[","^1?",null,"^[",["^10",["^11",["^10",[["^60","^61","~$method"]]]]]],"^48","^5[","^3","~$cljs.core/-add-method","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^60","^61","^OC"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9570,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^60","^61","^OC"]]]]],"^1?",null],"~$balance-left-del",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7150,"^V",8,"^Z",7150,"^U",24,"^3G",true,"^[",["^10",["^11",["^10",[["^1M","^1N","~$del","^H9"]]]]]],"^3G",true,"^3","~$cljs.core/balance-left-del","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["^1M","^1N","^OF","^H9"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",7150,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^1M","^1N","^OF","^H9"]]]]]],"~$swap!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3985,"^V",7,"^Z",3985,"^U",12,"^[",["^10",["^11",["^10",[["~$a","~$f"],["~$a","~$f","~$x"],["~$a","~$f","~$x","~$y"],["~$a","~$f","~$x","~$y","~$&","^4M"]]]]],"^1?","Atomically swaps the value of atom to be:\\n  (apply f current-value-of-atom args). Note that f may be called\\n  multiple times, and thus should be free of side effects.  Returns\\n  the value that was swapped in.","^1@",["^ ","^17",true,"^1;",4,"^18",["^10",[["~$a","~$f"],["~$a","~$f","~$x"],["~$a","~$f","~$x","~$y"]]],"^[",["^10",[["~$a","~$f"],["~$a","~$f","~$x"],["~$a","~$f","~$x","~$y"],["~$a","~$f","~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null,null]]]],"^3","~$cljs.core/swap!","^17",true,"^T","cljs/core.cljs","^U",12,"^1@",["^ ","^17",true,"^1;",4,"^18",["^10",[["~$a","~$f"],["~$a","~$f","~$x"],["~$a","~$f","~$x","~$y"]]],"^[",["^10",[["~$a","~$f"],["~$a","~$f","~$x"],["~$a","~$f","~$x","~$y"],["~$a","~$f","~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[["~$a","~$f"],["~$a","~$f","~$x"],["~$a","~$f","~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",null,"^Y",null,"^Z",3985,"^1;",4,"^1<",true,"^[",["^10",[["~$a","~$f"],["~$a","~$f","~$x"],["~$a","~$f","~$x","~$y"],["~$a","~$f","~$x","~$y","~$&","^4M"]]],"^1?","Atomically swaps the value of atom to be:\\n  (apply f current-value-of-atom args). Note that f may be called\\n  multiple times, and thus should be free of side effects.  Returns\\n  the value that was swapped in."],"^?0",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7883,"^V",7,"^Z",7883,"^U",11,"^[",["^10",["^11",["^10",[["^13"]]]]],"^1?","Returns a sequence of the map\'s values."],"^3","~$cljs.core/vals","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["^13"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",7883,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^13"]]]]],"^1?","Returns a sequence of the map\'s values."],"~$-chunked-next",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",698,"^V",4,"^Z",698,"^U",17,"^48","^=U","^1?","Returns a new collection of coll without the first chunk.","^[",["^10",["^11",["^10",[["^1D"]]]]]],"^48","^=U","^3","~$cljs.core/-chunked-next","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",698,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a new collection of coll without the first chunk."],"~$unchecked-subtract",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",33,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^V",15,"^Y",2414,"^Z",2414,"^1X","^22","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]]]],"^1?","If no ys are supplied, returns the negation of x, else subtracts\\n  the ys from x and returns the result."],"^3","~$cljs.core/unchecked-subtract","^17",true,"^T","cljs/core.cljs","^U",33,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^20","^22","^Z",2414,"^1;",2,"^1X","^22","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1?","If no ys are supplied, returns the negation of x, else subtracts\\n  the ys from x and returns the result."],"~$remove-pair",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6103,"^V",8,"^Z",6103,"^U",19,"^3G",true,"^[",["^10",["^11",["^10",[["^4B","~$i"]]]]]],"^3G",true,"^3","~$cljs.core/remove-pair","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^4B","~$i"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",6103,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^4B","~$i"]]]]]],"~$IMap",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",500,"^V",14,"^Z",500,"^U",18,"^1?","Protocol for adding mapping functionality to collections.","^1H",true,"^1I",["^ ","^1J",["^ ","~$-dissoc",[["^1D","~$k"]]]]],"^1H",true,"^3","^>5","^T","cljs/core.cljs","^U",18,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^OR",[["^1D","~$k"]]]],"^1P",null,"^Z",500,"^1Q",["^2",["^5E","^5F","^5G","^5N"]],"^1?","Protocol for adding mapping functionality to collections."],"~$->SeqIter",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",17,"^V",10,"^W","^X","^Y",3527,"^Z",3527,"^[",["^10",["^11",["^10",[["~$_seq","~$_next"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->SeqIter","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^OT","^OU"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",3527,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^OT","^OU"]]]]],"^15",null],"~$sorted-set-by",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8209,"^V",7,"^Z",8209,"^U",20,"^[",["^10",["^11",["^10",[["~$comparator","~$&","^@F"]]]]],"^1?","Returns a new sorted set with supplied keys, using the supplied comparator.","^1@",["^ ","^17",true,"^1;",1,"^18",[["^10",["^OX","^@F"]]],"^[",["^10",[["^OX","~$&","^@F"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/sorted-set-by","^17",true,"^T","cljs/core.cljs","^U",20,"^1@",["^ ","^17",true,"^1;",1,"^18",[["^10",["^OX","^@F"]]],"^[",["^10",[["^OX","~$&","^@F"]]],"^1:",["^10",[null]]],"^18",[["^10",["^OX","^@F"]]],"^19",null,"^1:",["^10",[null]],"^V",null,"^Y",null,"^Z",8209,"^1;",1,"^1<",true,"^[",["^10",[["^OX","~$&","^@F"]]],"^1?","Returns a new sorted set with supplied keys, using the supplied comparator."],"~$PersistentVector",["^ ","^2K",6,"^D",["^2",["^3P","^8R","^3Q","^78","^E","^F","^G","^H","^I","^J","^L","^M","^N","^O","^P","^8S","^8T","^Q","^3<","^R","^65","^S","^3T"]],"^3","^5K","^T","cljs/core.cljs","^U",26,"^2O",true,"^V",10,"^Y",4711,"^2P",false,"^Z",4711,"^15",["^2",["^3P","^8R","^3Q","^78","^E","^F","^G","^H","^I","^L","^M","^N","^O","^P","^8S","^8T","^3<","^R","^65","^S","^3T"]]],"~$cloneable?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1041,"^V",7,"^Z",1041,"^U",17,"^[",["^10",["^11",["^10",[["^33"]]]]],"^1?","Return true if x implements ICloneable protocol."],"^3","~$cljs.core/cloneable?","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^33"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1041,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^33"]]]]],"^1?","Return true if x implements ICloneable protocol."],"~$hash-string*",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",821,"^V",7,"^Z",821,"^U",19,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"^3","~$cljs.core/hash-string*","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",821,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"~$key-test",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6085,"^V",16,"^Z",6085,"^U",24,"^1X","^1Y","^[",["^10",["^11",["^10",[["^1M","^D6"]]]]]],"^3","~$cljs.core/key-test","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["^1M","^D6"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",6085,"^1;",2,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["^1M","^D6"]]]]]],"~$->LazyTransformer",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^H","^L","^32","^3S","^N","^3<","^R"]],"^T","cljs/core.cljs","^U",25,"^V",10,"^W","^X","^Y",3636,"^Z",3636,"^[",["^10",["^11",["^10",[["^25","^4S","^9D","^12"]]]]],"^15",["^2",["^E","^F","^H","^L","^32","^3S","^N","^3<","^R"]]],"^D",["^2",["^E","^F","^H","^L","^32","^3S","^N","^3<","^R"]],"^3","~$cljs.core/->LazyTransformer","^17",false,"^T","cljs/core.cljs","^U",25,"^18",["^10",[["^25","^4S","^9D","^12"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",3636,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^25","^4S","^9D","^12"]]]]],"^15",["^2",["^E","^F","^H","^L","^32","^3S","^N","^3<","^R"]]],"~$-reset",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9569,"^V",4,"^Z",9569,"^U",10,"^48","^5[","^1?",null,"^[",["^10",["^11",["^10",[["^60"]]]]]],"^48","^5[","^3","~$cljs.core/-reset","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["^60"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9569,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^60"]]]]],"^1?",null],"~$true?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1962,"^V",16,"^Z",1962,"^U",21,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is the value true, false otherwise."],"^3","~$cljs.core/true?","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",1962,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is the value true, false otherwise."],"~$find-ns-obj*",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10098,"^V",8,"^Z",10098,"^U",20,"^3G",true,"^[",["^10",["^11",["^10",[["~$ctxt","^3H"]]]]]],"^3G",true,"^3","~$cljs.core/find-ns-obj*","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^P<","^3H"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",10098,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^P<","^3H"]]]]]],"^7:",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",349,"^V",14,"^Z",349,"^U",19,"^1X","^7:","^[",["^10",["^11",["^10",[["~$var-args"]]]]],"^1?","Creates a new javascript array.\\n@param {...*} var_args"],"^3","~$cljs.core/array","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^P>"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^7:","^Z",349,"^1;",1,"^1X","^7:","^1<",true,"^[",["^10",["^11",["^10",[["^P>"]]]]],"^1?","Creates a new javascript array.\\n@param {...*} var_args"],"~$print",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8922,"^V",3,"^Z",8922,"^U",8,"^1?","Prints the object(s) using string-print.\\n  print and println produce output for human consumption."],"^3","~$cljs.core/print","^17",true,"^T","cljs/core.cljs","^U",8,"^18",["^10",[["^57"]]],"^19",null,"^1:",["^10",[]],"^V",null,"^Y",null,"^Z",8922,"^1;",0,"^1<",true,"^[",null,"^1?","Prints the object(s) using string-print.\\n  print and println produce output for human consumption."],"^@I",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",522,"^V",4,"^Z",522,"^U",9,"^48","^8S","^1?","Returns the item from the top of the stack. Is used by cljs.core/peek.","^[",["^10",["^11",["^10",[["^1D"]]]]]],"^48","^8S","^3","~$cljs.core/-peek","^17",false,"^T","cljs/core.cljs","^U",9,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",522,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns the item from the top of the stack. Is used by cljs.core/peek."],"~$ISeq",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",467,"^V",14,"^Z",467,"^U",18,"^1?","Protocol for collections to provide access to their items as sequences.","^1H",true,"^1I",["^ ","^1J",["^ ","^71",[["^1D"]],"~$-rest",[["^1D"]]]]],"^1H",true,"^3","^32","^T","cljs/core.cljs","^U",18,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^71",[["^1D"]],"^PD",[["^1D"]]]],"^1P",null,"^Z",467,"^1Q",["^2",["^<9","^80","^<;","^3U","^<=","^6J","^<>","^<@","^<A","^9Z","^9J","^<B","^<C","^<D","^<E","^<G","^<H","^<4","^7>"]],"^1?","Protocol for collections to provide access to their items as sequences."],"~$empty",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1558,"^V",7,"^Z",1558,"^U",12,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns an empty collection of the same category as coll, or nil"],"^3","~$cljs.core/empty","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1558,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns an empty collection of the same category as coll, or nil"],"~$remove-method",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9774,"^V",7,"^Z",9774,"^U",20,"^[",["^10",["^11",["^10",[["^6C","^61"]]]]],"^1?","Removes the method of multimethod associated with dispatch-value."],"^3","~$cljs.core/remove-method","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^6C","^61"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9774,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^6C","^61"]]]]],"^1?","Removes the method of multimethod associated with dispatch-value."],"~$PersistentQueueSeq",["^ ","^2K",4,"^D",["^2",["^E","^F","^H","^J","^L","^32","^N","^O","^3<","^R"]],"^3","^<>","^T","cljs/core.cljs","^U",28,"^2O",true,"^V",10,"^Y",5348,"^2P",false,"^Z",5348,"^15",["^2",["^E","^F","^H","^L","^32","^N","^O","^3<","^R"]]],"~$balance-right-del",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7169,"^V",8,"^Z",7169,"^U",25,"^3G",true,"^[",["^10",["^11",["^10",[["^1M","^1N","^J<","^OF"]]]]]],"^3G",true,"^3","~$cljs.core/balance-right-del","^17",false,"^T","cljs/core.cljs","^U",25,"^18",["^10",[["^1M","^1N","^J<","^OF"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",7169,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^1M","^1N","^J<","^OF"]]]]]],"~$volatile!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4039,"^V",7,"^Z",4039,"^U",16,"^[",["^10",["^11",["^10",[["^1N"]]]]],"^1?","Creates and returns a Volatile with an initial value of val."],"^3","~$cljs.core/volatile!","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^1N"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4039,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1N"]]]]],"^1?","Creates and returns a Volatile with an initial value of val."],"~$/",["^ ","^B",null,"^C",["^ ","^1X","^22","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]]]],"^1?","If no denominators are supplied, returns 1/numerator,\\n  else returns numerator divided by all of the denominators.","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^T","cljs/core.cljs"],"^3","~$cljs.core//","^17",true,"^T","cljs/core.cljs","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^20","^22","^1;",2,"^1X","^22","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1?","If no denominators are supplied, returns 1/numerator,\\n  else returns numerator divided by all of the denominators."],"~$bitpos",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6112,"^V",8,"^Z",6112,"^U",14,"^3G",true,"^[",["^10",["^11",["^10",[["^?;","^:["]]]]]],"^3G",true,"^3","~$cljs.core/bitpos","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^?;","^:["]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",6112,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^?;","^:["]]]]]],"~$bit-or",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2496,"^V",7,"^Z",2496,"^U",13,"^[",["^10",["^11",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4M"]]]]],"^1?","Bitwise or","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x","~$y"]]],"^[",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/bit-or","^17",true,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x","~$y"]]],"^[",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2496,"^1;",2,"^1<",true,"^[",["^10",[["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1?","Bitwise or"],"~$m3-fmix",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",782,"^V",15,"^Z",782,"^U",22,"^1X","^22","^[",["^10",["^11",["^10",[["^=E","^3J"]]]]]],"^3","~$cljs.core/m3-fmix","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["^=E","^3J"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^22","^Z",782,"^1;",2,"^1X","^22","^1<",true,"^[",["^10",["^11",["^10",[["^=E","^3J"]]]]]],"~$vector",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4924,"^V",7,"^Z",4924,"^U",13,"^[",["^10",["^11",["^10",[["~$&","^>C"]]]]],"^1?","Creates a new vector containing the args.","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^>C"]]],"^[",["^10",[["~$&","^>C"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/vector","^17",true,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^>C"]]],"^[",["^10",[["~$&","^>C"]]],"^1:",["^10",[null]]],"^18",[["^10",["^>C"]]],"^19",null,"^1:",["^10",[null]],"^V",null,"^Y",null,"^Z",4924,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^>C"]]],"^1?","Creates a new vector containing the args."],"~$hash-coll",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2630,"^V",8,"^Z",2630,"^U",17,"^3G",true,"^[",["^10",["^11",["^10",[["^1D"]]]]]],"^3G",true,"^3","~$cljs.core/hash-coll","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2630,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]]],"~$clone-and-set",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6094,"^V",8,"^Z",6094,"^U",21,"^3G",true,"^[",["^10",["^11",["^10",[["^4B","~$i","~$a"],["^4B","~$i","~$a","~$j","~$b"]]]]],"^1@",["^ ","^17",false,"^1;",5,"^18",["^10",[["^4B","~$i","~$a"],["^4B","~$i","~$a","~$j","~$b"]]],"^[",["^10",[["^4B","~$i","~$a"],["^4B","~$i","~$a","~$j","~$b"]]],"^1:",["^10",[null,null]]]],"^3G",true,"^3","~$cljs.core/clone-and-set","^17",false,"^T","cljs/core.cljs","^U",21,"^1@",["^ ","^17",false,"^1;",5,"^18",["^10",[["^4B","~$i","~$a"],["^4B","~$i","~$a","~$j","~$b"]]],"^[",["^10",[["^4B","~$i","~$a"],["^4B","~$i","~$a","~$j","~$b"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^4B","~$i","~$a"],["^4B","~$i","~$a","~$j","~$b"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",6094,"^1;",5,"^1<",true,"^[",["^10",[["^4B","~$i","~$a"],["^4B","~$i","~$a","~$j","~$b"]]]],"~$array->transient-hash-map",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6072,"^V",8,"^Z",6072,"^U",33,"^3G",true,"^[",["^10",["^11",["^10",[["^3J","^4B"]]]]]],"^3G",true,"^3","~$cljs.core/array->transient-hash-map","^17",false,"^T","cljs/core.cljs","^U",33,"^18",["^10",[["^3J","^4B"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",6072,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^3J","^4B"]]]]]],"~$>=",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^V",16,"^Y",2302,"^Z",2302,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]]]],"^1?","Returns non-nil if nums are in monotonically non-increasing order,\\n  otherwise false."],"^3","~$cljs.core/>=","^17",true,"^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",2302,"^1;",2,"^1X","^1Y","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1?","Returns non-nil if nums are in monotonically non-increasing order,\\n  otherwise false."],"~$->TransientHashSet",["^ ","^B",null,"^C",["^ ","^D",["^2",["^LY","^G","^M","^=5","^S"]],"^T","cljs/core.cljs","^U",26,"^V",10,"^W","^X","^Y",8045,"^Z",8045,"^[",["^10",["^11",["^10",[["~$transient-map"]]]]],"^15",["^2",["^LY","^G","^M","^=5","^S"]]],"^D",["^2",["^LY","^G","^M","^=5","^S"]],"^3","~$cljs.core/->TransientHashSet","^17",false,"^T","cljs/core.cljs","^U",26,"^18",["^10",[["^Q4"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",8045,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^Q4"]]]]],"^15",["^2",["^LY","^G","^M","^=5","^S"]]],"~$drop-last",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4266,"^V",7,"^Z",4266,"^U",16,"^[",["^10",["^11",["^10",[["~$s"],["~$n","~$s"]]]]],"^1?","Return a lazy sequence of all but the last n (default 1) items in coll","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$s"],["~$n","~$s"]]],"^[",["^10",[["~$s"],["~$n","~$s"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/drop-last","^17",false,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$s"],["~$n","~$s"]]],"^[",["^10",[["~$s"],["~$n","~$s"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$s"],["~$n","~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4266,"^1;",2,"^1<",true,"^[",["^10",[["~$s"],["~$n","~$s"]]],"^1?","Return a lazy sequence of all but the last n (default 1) items in coll"],"~$->ArrayIter",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",19,"^V",10,"^W","^X","^Y",3512,"^Z",3512,"^[",["^10",["^11",["^10",[["^4B","~$i"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->ArrayIter","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^4B","~$i"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",3512,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^4B","~$i"]]]]],"^15",null],"~$object?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",206,"^V",16,"^Z",206,"^U",23,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x\'s constructor is Object"],"^3","~$cljs.core/object?","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",206,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x\'s constructor is Object"],"~$->ArrayNodeSeq",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^H","^J","^L","^32","^N","^O","^3<","^R","^3T"]],"^T","cljs/core.cljs","^U",22,"^V",10,"^W","^X","^Y",6710,"^Z",6710,"^[",["^10",["^11",["^10",[["^12","^L>","~$i","~$s","^14"]]]]],"^15",["^2",["^E","^F","^H","^L","^32","^N","^O","^3<","^R","^3T"]]],"^D",["^2",["^E","^F","^H","^J","^L","^32","^N","^O","^3<","^R","^3T"]],"^3","~$cljs.core/->ArrayNodeSeq","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["^12","^L>","~$i","~$s","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",6710,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^12","^L>","~$i","~$s","^14"]]]]],"^15",["^2",["^E","^F","^H","^L","^32","^N","^O","^3<","^R","^3T"]]],"~$tree-map-append",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7470,"^V",8,"^Z",7470,"^U",23,"^3G",true,"^[",["^10",["^11",["^10",[["^J<","^H9"]]]]]],"^3G",true,"^3","~$cljs.core/tree-map-append","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["^J<","^H9"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",7470,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^J<","^H9"]]]]]],"~$not-empty",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3489,"^V",7,"^Z",3489,"^U",16,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","If coll is empty, returns nil, else coll"],"^3","~$cljs.core/not-empty","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3489,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","If coll is empty, returns nil, else coll"],"~$distinct",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8233,"^V",7,"^Z",8233,"^U",15,"^[",["^10",["^11",["^10",[[],["^1D"]]]]],"^1?","Returns a lazy sequence of the elements of coll with duplicates removed","^1@",["^ ","^17",false,"^1;",1,"^18",["^10",[[],["^1D"]]],"^[",["^10",[[],["^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/distinct","^17",false,"^T","cljs/core.cljs","^U",15,"^1@",["^ ","^17",false,"^1;",1,"^18",["^10",[[],["^1D"]]],"^[",["^10",[[],["^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[[],["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8233,"^1;",1,"^1<",true,"^[",["^10",[[],["^1D"]]],"^1?","Returns a lazy sequence of the elements of coll with duplicates removed"],"~$partition",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4495,"^V",7,"^Z",4495,"^U",16,"^[",["^10",["^11",["^10",[["~$n","^1D"],["~$n","^:V","^1D"],["~$n","^:V","~$pad","^1D"]]]]],"^1?","Returns a lazy sequence of lists of n items each, at offsets step\\n  apart. If step is not supplied, defaults to n, i.e. the partitions\\n  do not overlap. If a pad collection is supplied, use its elements as\\n  necessary to complete last partition up to n items. In case there are\\n  not enough padding elements, return a partition with less than n items.","^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["~$n","^1D"],["~$n","^:V","^1D"],["~$n","^:V","^QE","^1D"]]],"^[",["^10",[["~$n","^1D"],["~$n","^:V","^1D"],["~$n","^:V","^QE","^1D"]]],"^1:",["^10",[null,null,null]]]],"^3","~$cljs.core/partition","^17",false,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["~$n","^1D"],["~$n","^:V","^1D"],["~$n","^:V","^QE","^1D"]]],"^[",["^10",[["~$n","^1D"],["~$n","^:V","^1D"],["~$n","^:V","^QE","^1D"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$n","^1D"],["~$n","^:V","^1D"],["~$n","^:V","^QE","^1D"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^Z",4495,"^1;",4,"^1<",true,"^[",["^10",[["~$n","^1D"],["~$n","^:V","^1D"],["~$n","^:V","^QE","^1D"]]],"^1?","Returns a lazy sequence of lists of n items each, at offsets step\\n  apart. If step is not supplied, defaults to n, i.e. the partitions\\n  do not overlap. If a pad collection is supplied, use its elements as\\n  necessary to complete last partition up to n items. In case there are\\n  not enough padding elements, return a partition with less than n items."],"~$IMultiFn",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",9568,"^V",14,"^Z",9568,"^U",22,"^1?",null,"^1H",true,"^1I",["^ ","^1J",["^ ","^5Z",[["^60","^61","^62"]],"^7I",[["^60"]],"^>>",[["^60","^61"]],"^I0",[["^60"]],"^O7",[["^60"]],"^O>",[["^60"]],"^OB",[["^60","^61","^OC"]],"^P7",[["^60"]],"~$-get-method",[["^60","^61"]]]]],"^1H",true,"^3","^5[","^T","cljs/core.cljs","^U",22,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^5Z",[["^60","^61","^62"]],"^7I",[["^60"]],"^>>",[["^60","^61"]],"^I0",[["^60"]],"^O7",[["^60"]],"^O>",[["^60"]],"^OB",[["^60","^61","^OC"]],"^P7",[["^60"]],"^QH",[["^60","^61"]]]],"^1P",null,"^Z",9568,"^1Q",["^2",["^CH"]],"^1?",null],"~$DEMUNGE_PATTERN",["^ ","^3","~$cljs.core/DEMUNGE_PATTERN","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",328,"^U",21,"^C",["^ ","^T","cljs/core.cljs","^Y",328,"^V",6,"^Z",328,"^U",21]],"~$fix",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2428,"^V",16,"^Z",2428,"^U",19,"^1X","^22","^3G",true,"^[",["^10",["^11",["^10",[["~$q"]]]]]],"^3G",true,"^3","~$cljs.core/fix","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["~$q"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^22","^Z",2428,"^1;",1,"^1X","^22","^1<",true,"^[",["^10",["^11",["^10",[["~$q"]]]]]],"~$EmptyList",["^ ","^2K",1,"^D",["^2",["^>=","^E","^F","^H","^J","^L","^M","^32","^3S","^N","^O","^P","^8S","^3<","^R","^3T"]],"^3","^<=","^T","cljs/core.cljs","^U",19,"^2O",true,"^V",10,"^Y",2739,"^2P",false,"^Z",2739,"^15",["^2",["^>=","^E","^F","^H","^L","^M","^32","^3S","^N","^O","^P","^8S","^3<","^R","^3T"]]],"~$HashMapIter",["^ ","^2K",3,"^D",["^2",["^J"]],"^3","~$cljs.core/HashMapIter","^T","cljs/core.cljs","^U",21,"^2O",true,"^V",10,"^Y",6765,"^2P",false,"^Z",6765,"^15",null],"~$IAssociative",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",491,"^V",14,"^Z",491,"^U",26,"^1?","Protocol for adding associativity to collections.","^1H",true,"^1I",["^ ","^1J",["^ ","~$-contains-key?",[["^1D","~$k"]],"^64",[["^1D","~$k","~$v"]]]]],"^1H",true,"^3","^65","^T","cljs/core.cljs","^U",26,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^QQ",[["^1D","~$k"]],"^64",[["^1D","~$k","~$v"]]]],"^1P",null,"^Z",491,"^1Q",["^2",["^5E","^5F","^5G","^5H","^5I","^5K","^5N","^5P"]],"^1?","Protocol for adding associativity to collections."],"~$bit-flip",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2513,"^V",7,"^Z",2513,"^U",15,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Flip bit at index n"],"^3","~$cljs.core/bit-flip","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["~$x","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2513,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Flip bit at index n"],"~$long-array",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3227,"^V",7,"^Z",3227,"^U",17,"^[",["^10",["^11",["^10",[["^?>"],["^??","^?@"]]]]],"^1?","Creates an array of longs. Does not coerce array, provided for compatibility\\n  with Clojure.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^?>"],["^??","^?@"]]],"^[",["^10",[["^?>"],["^??","^?@"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/long-array","^17",false,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^?>"],["^??","^?@"]]],"^[",["^10",[["^?>"],["^??","^?@"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^?>"],["^??","^?@"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3227,"^1;",2,"^1<",true,"^[",["^10",[["^?>"],["^??","^?@"]]],"^1?","Creates an array of longs. Does not coerce array, provided for compatibility\\n  with Clojure."],"~$descendants",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9452,"^V",7,"^Z",9452,"^U",18,"^[",["^10",["^11",["^10",[["^DL"],["~$h","^DL"]]]]],"^1?","Returns the immediate and indirect children of tag, through a\\n  relationship established via derive. h must be a hierarchy obtained\\n  from make-hierarchy, if not supplied defaults to the global\\n  hierarchy. Note: does not work on JavaScript type inheritance\\n  relationships.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^DL"],["~$h","^DL"]]],"^[",["^10",[["^DL"],["~$h","^DL"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/descendants","^17",false,"^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^DL"],["~$h","^DL"]]],"^[",["^10",[["^DL"],["~$h","^DL"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^DL"],["~$h","^DL"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9452,"^1;",2,"^1<",true,"^[",["^10",[["^DL"],["~$h","^DL"]]],"^1?","Returns the immediate and indirect children of tag, through a\\n  relationship established via derive. h must be a hierarchy obtained\\n  from make-hierarchy, if not supplied defaults to the global\\n  hierarchy. Note: does not work on JavaScript type inheritance\\n  relationships."],"~$imul",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",761,"^V",17,"^Z",761,"^U",21,"^1X","^22","^[",["^10",["^11",["^10",[["~$a","~$b"]]]]]],"^3","~$cljs.core/imul","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$a","~$b"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^22","^Z",761,"^1;",2,"^1X","^22","^1<",true,"^[",["^10",["^11",["^10",[["~$a","~$b"]]]]]],"~$->Delay",["^ ","^B",null,"^C",["^ ","^D",["^2",["^A>","^2M"]],"^T","cljs/core.cljs","^U",15,"^V",10,"^W","^X","^Y",9165,"^Z",9165,"^[",["^10",["^11",["^10",[["~$f","^33"]]]]],"^15",["^2",["^A>","^2M"]]],"^D",["^2",["^A>","^2M"]],"^3","~$cljs.core/->Delay","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["~$f","^33"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",9165,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$f","^33"]]]]],"^15",["^2",["^A>","^2M"]]],"~$array-for",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4660,"^V",8,"^Z",4660,"^U",17,"^3G",true,"^[",["^10",["^11",["^10",[["^4J","~$i"]]]]]],"^3G",true,"^3","~$cljs.core/array-for","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^4J","~$i"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4660,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^4J","~$i"]]]]]],"~$merge",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7894,"^V",7,"^Z",7894,"^U",12,"^[",["^10",["^11",["^10",[["~$&","^=<"]]]]],"^1?","Returns a map that consists of the rest of the maps conj-ed onto\\n  the first.  If a key occurs in more than one map, the mapping from\\n  the latter (left-to-right) will be the mapping in the result.","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^=<"]]],"^[",["^10",[["~$&","^=<"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/merge","^17",true,"^T","cljs/core.cljs","^U",12,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^=<"]]],"^[",["^10",[["~$&","^=<"]]],"^1:",["^10",[null]]],"^18",[["^10",["^=<"]]],"^19",null,"^1:",["^10",[null]],"^V",null,"^Y",null,"^Z",7894,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^=<"]]],"^1?","Returns a map that consists of the rest of the maps conj-ed onto\\n  the first.  If a key occurs in more than one map, the mapping from\\n  the latter (left-to-right) will be the mapping in the result."],"~$ISeqable",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",576,"^V",14,"^Z",576,"^U",22,"^1?","Protocol for adding the ability to a type to be transformed into a sequence.","^1H",true,"^1I",["^ ","^1J",["^ ","~$-seq",[["~$o"]]]]],"^1H",true,"^3","^N","^T","cljs/core.cljs","^U",22,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^R5",[["~$o"]]]],"^1P",null,"^Z",576,"^1Q",["^2",["^5E","^5F","^<9","^<:","^5G","^80","^<;","^3U","^5H","^<=","^6J","^5I","^<>","^<@","^<A","^9Z","^9J","^5K","^<B","^<C","^5M","^5N","^<D","^<E","^5O","^<G","^<H","^<4","^7>","^5P"]],"^1?","Protocol for adding the ability to a type to be transformed into a sequence."],"~$js-mod",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2462,"^V",7,"^Z",2462,"^U",13,"^[",["^10",["^11",["^10",[["~$n","~$d"]]]]],"^1?","Modulus of num and div with original javascript behavior. i.e. bug for negative numbers"],"^3","~$cljs.core/js-mod","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["~$n","~$d"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2462,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$n","~$d"]]]]],"^1?","Modulus of num and div with original javascript behavior. i.e. bug for negative numbers"],"~$integer?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1996,"^V",16,"^Z",1996,"^U",24,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns true if n is an integer."],"^3","~$cljs.core/integer?","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",1996,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns true if n is an integer."],"~$MetaFn",["^ ","^2K",2,"^D",["^2",["^G","^O","^37","^R"]],"^3","^>S","^T","cljs/core.cljs","^U",16,"^2O",true,"^V",10,"^Y",1761,"^2P",false,"^Z",1761,"^15",["^2",["^G","^O","^R"]]],"~$NS_CACHE",["^ ","^3","~$cljs.core/NS_CACHE","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",10096,"^U",14,"^C",["^ ","^T","cljs/core.cljs","^Y",10096,"^V",6,"^Z",10096,"^U",14]],"~$mapv",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4470,"^V",7,"^Z",4470,"^U",11,"^[",["^10",["^11",["^10",[["~$f","^1D"],["~$f","^92","^93"],["~$f","^92","^93","^94"],["~$f","^92","^93","^94","~$&","^95"]]]]],"^1?","Returns a vector consisting of the result of applying f to the\\n  set of first items of each coll, followed by applying f to the set\\n  of second items in each coll, until any one of the colls is\\n  exhausted.  Any remaining items in other colls are ignored. Function\\n  f should accept number-of-colls arguments.","^1@",["^ ","^17",true,"^1;",4,"^18",["^10",[["~$f","^1D"],["~$f","^92","^93"],["~$f","^92","^93","^94"]]],"^[",["^10",[["~$f","^1D"],["~$f","^92","^93"],["~$f","^92","^93","^94"],["~$f","^92","^93","^94","~$&","^95"]]],"^1:",["^10",[null,null,null,null]]]],"^3","~$cljs.core/mapv","^17",true,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",true,"^1;",4,"^18",["^10",[["~$f","^1D"],["~$f","^92","^93"],["~$f","^92","^93","^94"]]],"^[",["^10",[["~$f","^1D"],["~$f","^92","^93"],["~$f","^92","^93","^94"],["~$f","^92","^93","^94","~$&","^95"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[["~$f","^1D"],["~$f","^92","^93"],["~$f","^92","^93","^94"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",null,"^Y",null,"^Z",4470,"^1;",4,"^1<",true,"^[",["^10",[["~$f","^1D"],["~$f","^92","^93"],["~$f","^92","^93","^94"],["~$f","^92","^93","^94","~$&","^95"]]],"^1?","Returns a vector consisting of the result of applying f to the\\n  set of first items of each coll, followed by applying f to the set\\n  of second items in each coll, until any one of the colls is\\n  exhausted.  Any remaining items in other colls are ignored. Function\\n  f should accept number-of-colls arguments."],"~$partition-all",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8312,"^V",7,"^Z",8312,"^U",20,"^[",["^10",["^11",["^10",[["~$n"],["~$n","^1D"],["~$n","^:V","^1D"]]]]],"^1?","Returns a lazy sequence of lists like partition, but may include\\n  partitions with fewer than n items at the end.  Returns a stateful\\n  transducer when no collection is provided.","^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$n"],["~$n","^1D"],["~$n","^:V","^1D"]]],"^[",["^10",[["~$n"],["~$n","^1D"],["~$n","^:V","^1D"]]],"^1:",["^10",[null,null,null]]]],"^3","~$cljs.core/partition-all","^17",false,"^T","cljs/core.cljs","^U",20,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$n"],["~$n","^1D"],["~$n","^:V","^1D"]]],"^[",["^10",[["~$n"],["~$n","^1D"],["~$n","^:V","^1D"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$n"],["~$n","^1D"],["~$n","^:V","^1D"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^Z",8312,"^1;",3,"^1<",true,"^[",["^10",[["~$n"],["~$n","^1D"],["~$n","^:V","^1D"]]],"^1?","Returns a lazy sequence of lists like partition, but may include\\n  partitions with fewer than n items at the end.  Returns a stateful\\n  transducer when no collection is provided."],"~$partition-by",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8534,"^V",7,"^Z",8534,"^U",19,"^[",["^10",["^11",["^10",[["~$f"],["~$f","^1D"]]]]],"^1?","Applies f to each value in coll, splitting it each time f returns a\\n   new value.  Returns a lazy seq of partitions.  Returns a stateful\\n   transducer when no collection is provided.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$f"],["~$f","^1D"]]],"^[",["^10",[["~$f"],["~$f","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/partition-by","^17",false,"^T","cljs/core.cljs","^U",19,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$f"],["~$f","^1D"]]],"^[",["^10",[["~$f"],["~$f","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$f"],["~$f","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8534,"^1;",2,"^1<",true,"^[",["^10",[["~$f"],["~$f","^1D"]]],"^1?","Applies f to each value in coll, splitting it each time f returns a\\n   new value.  Returns a lazy seq of partitions.  Returns a stateful\\n   transducer when no collection is provided."],"~$ISequential",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",581,"^V",14,"^Z",581,"^U",25,"^1?","Marker interface indicating a persistent collection of sequential items","^1H",true,"^1I",["^ ","^1J",["^ "]]],"^1H",true,"^3","^3<","^T","cljs/core.cljs","^U",25,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ "]],"^1P",null,"^Z",581,"^1Q",["^2",["^<9","^<:","^80","^<;","^3U","^5H","^<=","^6J","^5I","^<>","^<@","^<A","^9J","^5K","^<B","^<C","^<D","^<E","^<G","^<H","^<4","^7>","^5P"]],"^1?","Marker interface indicating a persistent collection of sequential items"],"~$->LazySeq",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^H","^J","^L","^32","^3S","^N","^O","^3<","^R","^3T"]],"^T","cljs/core.cljs","^U",17,"^V",10,"^W","^X","^Y",2979,"^Z",2979,"^[",["^10",["^11",["^10",[["^12","~$fn","~$s","^14"]]]]],"^15",["^2",["^E","^F","^H","^L","^32","^3S","^N","^O","^3<","^R","^3T"]]],"^D",["^2",["^E","^F","^H","^J","^L","^32","^3S","^N","^O","^3<","^R","^3T"]],"^3","~$cljs.core/->LazySeq","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^12","^RE","~$s","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",2979,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^12","^RE","~$s","^14"]]]]],"^15",["^2",["^E","^F","^H","^L","^32","^3S","^N","^O","^3<","^R","^3T"]]],"~$equiv-map",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5459,"^V",8,"^Z",5459,"^U",17,"^3G",true,"^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Assumes y is a map. Returns true if x equals y, otherwise returns\\n  false."],"^3G",true,"^3","~$cljs.core/equiv-map","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",5459,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Assumes y is a map. Returns true if x equals y, otherwise returns\\n  false."],"~$->Volatile",["^ ","^B",null,"^C",["^ ","^D",["^2",["^2L","^2M"]],"^T","cljs/core.cljs","^U",18,"^V",10,"^W","^X","^Y",4031,"^Z",4031,"^[",["^10",["^11",["^10",[["^G@"]]]]],"^15",["^2",["^2M"]]],"^D",["^2",["^2L","^2M"]],"^3","~$cljs.core/->Volatile","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^G@"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",4031,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^G@"]]]]],"^15",["^2",["^2M"]]],"~$object-array",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3271,"^V",7,"^Z",3271,"^U",19,"^[",["^10",["^11",["^10",[["^?>"],["^??","^?@"]]]]],"^1?","Creates an array of objects. Does not coerce array, provided for compatibility\\n  with Clojure.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^?>"],["^??","^?@"]]],"^[",["^10",[["^?>"],["^??","^?@"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/object-array","^17",false,"^T","cljs/core.cljs","^U",19,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^?>"],["^??","^?@"]]],"^[",["^10",[["^?>"],["^??","^?@"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^?>"],["^??","^?@"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3271,"^1;",2,"^1<",true,"^[",["^10",[["^?>"],["^??","^?@"]]],"^1?","Creates an array of objects. Does not coerce array, provided for compatibility\\n  with Clojure."],"~$Keyword",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",170,"^V",20,"^Z",170,"^U",27,"^3O",true],"^2K",4,"^D",["^2",["^E","^F","^G","^J","^:9","^3["]],"^3","^<<","^T","cljs/core.cljs","^U",17,"^2O",true,"^V",10,"^Y",2906,"^2P",false,"^3O",true,"^Z",2906,"^15",["^2",["^E","^F","^G","^:9","^3["]]],"~$derive",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9461,"^V",7,"^Z",9461,"^U",13,"^[",["^10",["^11",["^10",[["^DL","^87"],["~$h","^DL","^87"]]]]],"^1?","Establishes a parent/child relationship between parent and\\n  tag. Parent must be a namespace-qualified symbol or keyword and\\n  child can be either a namespace-qualified symbol or keyword or a\\n  class. h must be a hierarchy obtained from make-hierarchy, if not\\n  supplied defaults to, and modifies, the global hierarchy.","^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^DL","^87"],["~$h","^DL","^87"]]],"^[",["^10",[["^DL","^87"],["~$h","^DL","^87"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/derive","^17",false,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^DL","^87"],["~$h","^DL","^87"]]],"^[",["^10",[["^DL","^87"],["~$h","^DL","^87"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^DL","^87"],["~$h","^DL","^87"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9461,"^1;",3,"^1<",true,"^[",["^10",[["^DL","^87"],["~$h","^DL","^87"]]],"^1?","Establishes a parent/child relationship between parent and\\n  tag. Parent must be a namespace-qualified symbol or keyword and\\n  child can be either a namespace-qualified symbol or keyword or a\\n  class. h must be a hierarchy obtained from make-hierarchy, if not\\n  supplied defaults to, and modifies, the global hierarchy."],"~$seq-iter",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3545,"^V",7,"^Z",3545,"^U",15,"^[",["^10",["^11",["^10",[["^1D"]]]]]],"^3","~$cljs.core/seq-iter","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3545,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]]],"~$IChunkedSeq",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",689,"^V",14,"^Z",689,"^U",25,"^1?","Protocol for accessing a collection as sequential chunks.","^1H",true,"^1I",["^ ","^1J",["^ ","^DG",[["^1D"]],"^5Q",[["^1D"]]]]],"^1H",true,"^3","^5R","^T","cljs/core.cljs","^U",25,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^DG",[["^1D"]],"^5Q",[["^1D"]]]],"^1P",null,"^Z",689,"^1Q",["^2",["^<E","^<G"]],"^1?","Protocol for accessing a collection as sequential chunks."],"~$special-symbol?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9929,"^V",16,"^Z",9929,"^U",31,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/special-symbol?","^17",false,"^T","cljs/core.cljs","^U",31,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",9929,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$compare-keywords",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2894,"^V",8,"^Z",2894,"^U",24,"^3G",true,"^[",["^10",["^11",["^10",[["~$a","~$b"]]]]]],"^3G",true,"^3","~$cljs.core/compare-keywords","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["~$a","~$b"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2894,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$a","~$b"]]]]]],"~$ancestors",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9444,"^V",7,"^Z",9444,"^U",16,"^[",["^10",["^11",["^10",[["^DL"],["~$h","^DL"]]]]],"^1?","Returns the immediate and indirect parents of tag, either via a JavaScript type\\n  inheritance relationship or a relationship established via derive. h\\n  must be a hierarchy obtained from make-hierarchy, if not supplied\\n  defaults to the global hierarchy","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^DL"],["~$h","^DL"]]],"^[",["^10",[["^DL"],["~$h","^DL"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/ancestors","^17",false,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^DL"],["~$h","^DL"]]],"^[",["^10",[["^DL"],["~$h","^DL"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^DL"],["~$h","^DL"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9444,"^1;",2,"^1<",true,"^[",["^10",[["^DL"],["~$h","^DL"]]],"^1?","Returns the immediate and indirect parents of tag, either via a JavaScript type\\n  inheritance relationship or a relationship established via derive. h\\n  must be a hierarchy obtained from make-hierarchy, if not supplied\\n  defaults to the global hierarchy"],"~$subseq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8368,"^V",7,"^Z",8368,"^U",13,"^[",["^10",["^11",["^10",[["^7D","^7E","^1M"],["^7D","~$start-test","~$start-key","~$end-test","~$end-key"]]]]],"^1?","sc must be a sorted collection, test(s) one of <, <=, > or\\n  >=. Returns a seq of those entries with keys ek for\\n  which (test (.. sc comparator (compare ek key)) 0) is true","^1@",["^ ","^17",false,"^1;",5,"^18",["^10",[["^7D","^7E","^1M"],["^7D","^RZ","^R[","^S0","^S1"]]],"^[",["^10",[["^7D","^7E","^1M"],["^7D","^RZ","^R[","^S0","^S1"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/subseq","^17",false,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",false,"^1;",5,"^18",["^10",[["^7D","^7E","^1M"],["^7D","^RZ","^R[","^S0","^S1"]]],"^[",["^10",[["^7D","^7E","^1M"],["^7D","^RZ","^R[","^S0","^S1"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^7D","^7E","^1M"],["^7D","^RZ","^R[","^S0","^S1"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8368,"^1;",5,"^1<",true,"^[",["^10",[["^7D","^7E","^1M"],["^7D","^RZ","^R[","^S0","^S1"]]],"^1?","sc must be a sorted collection, test(s) one of <, <=, > or\\n  >=. Returns a seq of those entries with keys ek for\\n  which (test (.. sc comparator (compare ek key)) 0) is true"],"~$LazyTransformer",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",3557,"^V",10,"^Z",3557,"^U",25,"^3O",true],"^2K",4,"^D",["^2",["^E","^F","^H","^L","^32","^3S","^N","^3<","^R"]],"^3","^<H","^T","cljs/core.cljs","^U",25,"^2O",true,"^V",10,"^Y",3636,"^2P",false,"^3O",true,"^Z",3636,"^15",["^2",["^E","^F","^H","^L","^32","^3S","^N","^3<","^R"]]],"~$gensym",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9148,"^V",7,"^Z",9148,"^U",13,"^[",["^10",["^11",["^10",[[],["~$prefix-string"]]]]],"^1?","Returns a new symbol with a unique name. If a prefix string is\\n  supplied, the name is prefix# where # is some unique number. If\\n  prefix is not supplied, the prefix is \'G__\'.","^1@",["^ ","^17",false,"^1;",1,"^18",["^10",[[],["^S5"]]],"^[",["^10",[[],["^S5"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/gensym","^17",false,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",false,"^1;",1,"^18",["^10",[[],["^S5"]]],"^[",["^10",[[],["^S5"]]],"^1:",["^10",[null,null]]],"^18",["^10",[[],["^S5"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9148,"^1;",1,"^1<",true,"^[",["^10",[[],["^S5"]]],"^1?","Returns a new symbol with a unique name. If a prefix string is\\n  supplied, the name is prefix# where # is some unique number. If\\n  prefix is not supplied, the prefix is \'G__\'."],"^@1",["^ ","^B",null,"^C",["^ ","^48","^3S","^T","cljs/core.cljs","^U",21,"^V",16,"^Y",479,"^Z",479,"^1X","^O;","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a new collection of coll without the first item. In contrast to\\n     rest, it should return nil if there are no more items, e.g.\\n     (next []) => nil\\n     (next nil) => nil"],"^48","^3S","^3","~$cljs.core/-next","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^O;","^Z",479,"^1;",1,"^1X","^O;","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a new collection of coll without the first item. In contrast to\\n     rest, it should return nil if there are no more items, e.g.\\n     (next []) => nil\\n     (next nil) => nil"],"~$->HashCollisionNode",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J","^Q"]],"^T","cljs/core.cljs","^U",27,"^V",10,"^W","^X","^Y",6527,"^Z",6527,"^[",["^10",["^11",["^10",[["^;5","~$collision-hash","^4C","^4B"]]]]],"^15",null],"^D",["^2",["^J","^Q"]],"^3","~$cljs.core/->HashCollisionNode","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^;5","^S9","^4C","^4B"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",6527,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^;5","^S9","^4C","^4B"]]]]],"^15",null],"~$delay?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9177,"^V",16,"^Z",9177,"^U",22,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","returns true if x is a Delay created with delay"],"^3","~$cljs.core/delay?","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",9177,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","returns true if x is a Delay created with delay"],"~$create-inode-seq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6693,"^V",8,"^Z",6693,"^U",24,"^3G",true,"^[",["^10",["^11",["^10",[["^L>"],["^L>","~$i","~$s"]]]]],"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^L>"],["^L>","~$i","~$s"]]],"^[",["^10",[["^L>"],["^L>","~$i","~$s"]]],"^1:",["^10",[null,null]]]],"^3G",true,"^3","~$cljs.core/create-inode-seq","^17",false,"^T","cljs/core.cljs","^U",24,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^L>"],["^L>","~$i","~$s"]]],"^[",["^10",[["^L>"],["^L>","~$i","~$s"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^L>"],["^L>","~$i","~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",6693,"^1;",3,"^1<",true,"^[",["^10",[["^L>"],["^L>","~$i","~$s"]]]],"~$flatten",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4448,"^V",7,"^Z",4448,"^U",14,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Takes any nested combination of sequential things (lists, vectors,\\n  etc.) and returns their contents as a single, flat sequence.\\n  (flatten nil) returns nil."],"^3","~$cljs.core/flatten","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4448,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Takes any nested combination of sequential things (lists, vectors,\\n  etc.) and returns their contents as a single, flat sequence.\\n  (flatten nil) returns nil."],"^OR",["^ ","^B",null,"^C",["^ ","^48","^>5","^T","cljs/core.cljs","^U",16,"^V",9,"^Y",503,"^Z",503,"^1X","^49","^[",["^10",["^11",["^10",[["^1D","~$k"]]]]],"^1?","Returns a new collection of coll without the mapping for key k."],"^48","^>5","^3","~$cljs.core/-dissoc","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^1D","~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^49","^Z",503,"^1;",2,"^1X","^49","^1<",true,"^[",["^10",["^11",["^10",[["^1D","~$k"]]]]],"^1?","Returns a new collection of coll without the mapping for key k."],"~$doubles",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2459,"^V",7,"^Z",2459,"^U",14,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/doubles","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2459,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^QQ",["^ ","^B",null,"^C",["^ ","^48","^65","^T","cljs/core.cljs","^U",27,"^V",13,"^Y",493,"^Z",493,"^1X","^1Y","^[",["^10",["^11",["^10",[["^1D","~$k"]]]]],"^1?","Returns true if k is a key in coll."],"^48","^65","^3","~$cljs.core/-contains-key?","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^1D","~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",493,"^1;",2,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["^1D","~$k"]]]]],"^1?","Returns true if k is a key in coll."],"~$remove-watch",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9136,"^V",7,"^Z",9136,"^U",19,"^[",["^10",["^11",["^10",[["^CZ","^1M"]]]]],"^1?","Alpha - subject to change.\\n\\n  Removes a watch (set by add-watch) from a reference"],"^3","~$cljs.core/remove-watch","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^CZ","^1M"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9136,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^CZ","^1M"]]]]],"^1?","Alpha - subject to change.\\n\\n  Removes a watch (set by add-watch) from a reference"],"~$ex-info",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9890,"^V",7,"^Z",9890,"^U",14,"^[",["^10",["^11",["^10",[["~$msg","^I<"],["^SH","^I<","^I="]]]]],"^1?","Alpha - subject to change.\\n  Create an instance of ExceptionInfo, an Error type that carries a\\n  map of additional data.","^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^SH","^I<"],["^SH","^I<","^I="]]],"^[",["^10",[["^SH","^I<"],["^SH","^I<","^I="]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/ex-info","^17",false,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^SH","^I<"],["^SH","^I<","^I="]]],"^[",["^10",[["^SH","^I<"],["^SH","^I<","^I="]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^SH","^I<"],["^SH","^I<","^I="]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9890,"^1;",3,"^1<",true,"^[",["^10",[["^SH","^I<"],["^SH","^I<","^I="]]],"^1?","Alpha - subject to change.\\n  Create an instance of ExceptionInfo, an Error type that carries a\\n  map of additional data."],"~$ifn?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1991,"^V",16,"^Z",1991,"^U",20,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Returns true if f returns true for fn? or satisfies IFn."],"^3","~$cljs.core/ifn?","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$f"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",1991,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Returns true if f returns true for fn? or satisfies IFn."],"~$IAtom",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",708,"^V",14,"^Z",708,"^U",19,"^1?","Marker protocol indicating an atom.","^1H",true,"^1I",["^ ","^1J",["^ "]]],"^1H",true,"^3","^G?","^T","cljs/core.cljs","^U",19,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ "]],"^1P",null,"^Z",708,"^1Q",["^2",["^<F"]],"^1?","Marker protocol indicating an atom."],"~$->PersistentQueue",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^H","^J","^L","^M","^32","^N","^O","^P","^8S","^Q","^3<","^R"]],"^T","cljs/core.cljs","^U",25,"^V",10,"^W","^X","^Y",5388,"^Z",5388,"^[",["^10",["^11",["^10",[["^12","^>F","^3=","^3>","^14"]]]]],"^15",["^2",["^E","^F","^H","^L","^M","^32","^N","^O","^P","^8S","^3<","^R"]]],"^D",["^2",["^E","^F","^H","^J","^L","^M","^32","^N","^O","^P","^8S","^Q","^3<","^R"]],"^3","~$cljs.core/->PersistentQueue","^17",false,"^T","cljs/core.cljs","^U",25,"^18",["^10",[["^12","^>F","^3=","^3>","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",5388,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^12","^>F","^3=","^3>","^14"]]]]],"^15",["^2",["^E","^F","^H","^L","^M","^32","^N","^O","^P","^8S","^3<","^R"]]],"~$IWatchable",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",633,"^V",14,"^Z",633,"^U",24,"^1?","Protocol for types that can be watched. Currently only implemented by Atom.","^1H",true,"^1I",["^ ","^1J",["^ ","^F:",[["^@L","^B@","^8W"]],"^A@",[["^@L","^1M","~$f"]],"^@J",[["^@L","^1M"]]]]],"^1H",true,"^3","^@K","^T","cljs/core.cljs","^U",24,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^F:",[["^@L","^B@","^8W"]],"^A@",[["^@L","^1M","~$f"]],"^@J",[["^@L","^1M"]]]],"^1P",null,"^Z",633,"^1Q",["^2",["^<F"]],"^1?","Protocol for types that can be watched. Currently only implemented by Atom."],"~$->Stepper",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",17,"^V",10,"^W","^X","^Y",3562,"^Z",3562,"^[",["^10",["^11",["^10",[["^26","^27"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->Stepper","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^26","^27"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",3562,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^26","^27"]]]]],"^15",null],"~$pv-fresh-node",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4594,"^V",8,"^Z",4594,"^U",21,"^3G",true,"^[",["^10",["^11",["^10",[["^;5"]]]]]],"^3G",true,"^3","~$cljs.core/pv-fresh-node","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["^;5"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4594,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^;5"]]]]]],"~$subvec",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5134,"^V",7,"^Z",5134,"^U",13,"^[",["^10",["^11",["^10",[["~$v","^3A"],["~$v","^3A","^3B"]]]]],"^1?","Returns a persistent vector of the items in vector from\\n  start (inclusive) to end (exclusive).  If end is not supplied,\\n  defaults to (count vector). This operation is O(1) and very fast, as\\n  the resulting vector shares structure with the original and no\\n  trimming is done.","^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$v","^3A"],["~$v","^3A","^3B"]]],"^[",["^10",[["~$v","^3A"],["~$v","^3A","^3B"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/subvec","^17",false,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["~$v","^3A"],["~$v","^3A","^3B"]]],"^[",["^10",[["~$v","^3A"],["~$v","^3A","^3B"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$v","^3A"],["~$v","^3A","^3B"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",5134,"^1;",3,"^1<",true,"^[",["^10",[["~$v","^3A"],["~$v","^3A","^3B"]]],"^1?","Returns a persistent vector of the items in vector from\\n  start (inclusive) to end (exclusive).  If end is not supplied,\\n  defaults to (count vector). This operation is O(1) and very fast, as\\n  the resulting vector shares structure with the original and no\\n  trimming is done."],"^E5",["^ ","^B",null,"^C",["^ ","^48","^=6","^T","cljs/core.cljs","^U",14,"^V",9,"^Y",670,"^Z",670,"^1X","^49","^[",["^10",["^11",["^10",[["^1L"]]]]],"^1?","Returns tcoll with the last item removed from it."],"^48","^=6","^3","~$cljs.core/-pop!","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^1L"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^49","^Z",670,"^1;",1,"^1X","^49","^1<",true,"^[",["^10",["^11",["^10",[["^1L"]]]]],"^1?","Returns tcoll with the last item removed from it."],"~$partial",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3807,"^V",7,"^Z",3807,"^U",14,"^[",["^10",["^11",["^10",[["~$f"],["~$f","~$arg1"],["~$f","^SX","~$arg2"],["~$f","^SX","^SY","~$arg3"],["~$f","^SX","^SY","^SZ","~$&","^4M"]]]]],"^1?","Takes a function f and fewer than the normal arguments to f, and\\n  returns a fn that takes a variable number of additional args. When\\n  called, the returned function calls f with args + additional args.","^1@",["^ ","^17",true,"^1;",4,"^18",["^10",[["~$f"],["~$f","^SX"],["~$f","^SX","^SY"],["~$f","^SX","^SY","^SZ"]]],"^[",["^10",[["~$f"],["~$f","^SX"],["~$f","^SX","^SY"],["~$f","^SX","^SY","^SZ"],["~$f","^SX","^SY","^SZ","~$&","^4M"]]],"^1:",["^10",[null,null,null,null,null]]]],"^3","~$cljs.core/partial","^17",true,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",true,"^1;",4,"^18",["^10",[["~$f"],["~$f","^SX"],["~$f","^SX","^SY"],["~$f","^SX","^SY","^SZ"]]],"^[",["^10",[["~$f"],["~$f","^SX"],["~$f","^SX","^SY"],["~$f","^SX","^SY","^SZ"],["~$f","^SX","^SY","^SZ","~$&","^4M"]]],"^1:",["^10",[null,null,null,null,null]]],"^18",["^10",[["~$f"],["~$f","^SX"],["~$f","^SX","^SY"],["~$f","^SX","^SY","^SZ"]]],"^19",null,"^1:",["^10",[null,null,null,null,null]],"^V",null,"^Y",null,"^Z",3807,"^1;",4,"^1<",true,"^[",["^10",[["~$f"],["~$f","^SX"],["~$f","^SX","^SY"],["~$f","^SX","^SY","^SZ"],["~$f","^SX","^SY","^SZ","~$&","^4M"]]],"^1?","Takes a function f and fewer than the normal arguments to f, and\\n  returns a fn that takes a variable number of additional args. When\\n  called, the returned function calls f with args + additional args."],"~$chunked-seq?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1913,"^V",16,"^Z",1913,"^U",28,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x is satisfies IChunkedSeq."],"^3","~$cljs.core/chunked-seq?","^17",false,"^T","cljs/core.cljs","^U",28,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",1913,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x is satisfies IChunkedSeq."],"~$replicate",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4321,"^V",7,"^Z",4321,"^U",16,"^[",["^10",["^11",["^10",[["~$n","~$x"]]]]],"^1?","Returns a lazy seq of n xs."],"^3","~$cljs.core/replicate","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["~$n","~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4321,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$n","~$x"]]]]],"^1?","Returns a lazy seq of n xs."],"~$PersistentQueue",["^ ","^2K",5,"^D",["^2",["^E","^F","^H","^J","^L","^M","^32","^N","^O","^P","^8S","^Q","^3<","^R"]],"^3","^<;","^T","cljs/core.cljs","^U",25,"^2O",true,"^V",10,"^Y",5388,"^2P",false,"^Z",5388,"^15",["^2",["^E","^F","^H","^L","^M","^32","^N","^O","^P","^8S","^3<","^R"]]],"~$min-key",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8294,"^V",7,"^Z",8294,"^U",14,"^[",["^10",["^11",["^10",[["~$k","~$x"],["~$k","~$x","~$y"],["~$k","~$x","~$y","~$&","^4M"]]]]],"^1?","Returns the x for which (k x), a number, is least.","^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["~$k","~$x"],["~$k","~$x","~$y"]]],"^[",["^10",[["~$k","~$x"],["~$k","~$x","~$y"],["~$k","~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]]],"^3","~$cljs.core/min-key","^17",true,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["~$k","~$x"],["~$k","~$x","~$y"]]],"^[",["^10",[["~$k","~$x"],["~$k","~$x","~$y"],["~$k","~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$k","~$x"],["~$k","~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^Z",8294,"^1;",3,"^1<",true,"^[",["^10",[["~$k","~$x"],["~$k","~$x","~$y"],["~$k","~$x","~$y","~$&","^4M"]]],"^1?","Returns the x for which (k x), a number, is least."],"~$hash-iset",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2650,"^V",8,"^Z",2650,"^U",17,"^3G",true,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"^3G",true,"^3","~$cljs.core/hash-iset","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2650,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"~$reduced",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1248,"^V",7,"^Z",1248,"^U",14,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Wraps x in a way such that a reduce will terminate with the value x"],"^3","~$cljs.core/reduced","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1248,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Wraps x in a way such that a reduce will terminate with the value x"],"~$re-matches",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8668,"^V",7,"^Z",8668,"^U",17,"^[",["^10",["^11",["^10",[["^:2","~$s"]]]]],"^1?","Returns the result of (re-find re s) if re fully matches s."],"^3","~$cljs.core/re-matches","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^:2","~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8668,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^:2","~$s"]]]]],"^1?","Returns the result of (re-find re s) if re fully matches s."],"~$pr-writer-impl",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8772,"^V",8,"^Z",8772,"^U",22,"^3G",true,"^[",["^10",["^11",["^10",[["^1Z","^5U","^1>"]]]]]],"^3G",true,"^3","~$cljs.core/pr-writer-impl","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["^1Z","^5U","^1>"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8772,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^1Z","^5U","^1>"]]]]]],"~$array-map",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7717,"^V",7,"^Z",7717,"^U",16,"^[",["^10",["^11",["^10",[["~$&","^7U"]]]]],"^1?","keyval => key val\\n  Returns a new array map with supplied mappings.","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^7U"]]],"^[",["^10",[["~$&","^7U"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/array-map","^17",true,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^7U"]]],"^[",["^10",[["~$&","^7U"]]],"^1:",["^10",[null]]],"^18",[["^10",["^7U"]]],"^19",null,"^1:",["^10",[null]],"^V",null,"^Y",null,"^Z",7717,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^7U"]]],"^1?","keyval => key val\\n  Returns a new array map with supplied mappings."],"~$ITransientSet",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",673,"^V",14,"^Z",673,"^U",27,"^1?","Protocol for adding set functionality to a transient collection.","^1H",true,"^1I",["^ ","^1J",["^ ","~$-disjoin!",[["^1L","~$v"]]]]],"^1H",true,"^3","^LY","^T","cljs/core.cljs","^U",27,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^TB",[["^1L","~$v"]]]],"^1P",null,"^Z",673,"^1Q",["^2",["^5L"]],"^1?","Protocol for adding set functionality to a transient collection."],"~$ITER_SYMBOL",["^ ","^3","~$cljs.core/ITER_SYMBOL","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",272,"^U",19,"^C",["^ ","^T","cljs/core.cljs","^Y",272,"^V",8,"^Z",272,"^U",19]],"~$unchecked-byte",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2346,"^V",15,"^Z",2346,"^U",29,"^1X","^22","^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/unchecked-byte","^17",false,"^T","cljs/core.cljs","^U",29,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^22","^Z",2346,"^1;",1,"^1X","^22","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$ArrayNode",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",6142,"^V",10,"^Z",6142,"^U",19,"^3O",true],"^2K",3,"^D",["^2",["^J","^Q"]],"^3","^<N","^T","cljs/core.cljs","^U",19,"^2O",true,"^V",10,"^Y",6417,"^2P",false,"^3O",true,"^Z",6417,"^15",null],"~$->ChunkedSeq",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^3R","^H","^=U","^J","^L","^32","^3S","^N","^O","^5R","^3<","^R","^3T"]],"^T","cljs/core.cljs","^U",20,"^V",10,"^W","^X","^Y",4933,"^Z",4933,"^[",["^10",["^11",["^10",[["^F6","^6?","~$i","^;K","^12","^14"]]]]],"^15",["^2",["^E","^F","^3R","^H","^=U","^L","^32","^3S","^N","^O","^5R","^3<","^R","^3T"]]],"^D",["^2",["^E","^F","^3R","^H","^=U","^J","^L","^32","^3S","^N","^O","^5R","^3<","^R","^3T"]],"^3","~$cljs.core/->ChunkedSeq","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^F6","^6?","~$i","^;K","^12","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",4933,"^1;",6,"^1<",true,"^[",["^10",["^11",["^10",[["^F6","^6?","~$i","^;K","^12","^14"]]]]],"^15",["^2",["^E","^F","^3R","^H","^=U","^L","^32","^3S","^N","^O","^5R","^3<","^R","^3T"]]],"~$every-pred",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4089,"^V",7,"^Z",4089,"^U",17,"^[",["^10",["^11",["^10",[["~$p"],["~$p1","~$p2"],["^TK","^TL","~$p3"],["^TK","^TL","^TM","~$&","~$ps"]]]]],"^1?","Takes a set of predicates and returns a function f that returns true if all of its\\n  composing predicates return a logical true value against all of its arguments, else it returns\\n  false. Note that f is short-circuiting in that it will stop execution on the first\\n  argument that triggers a logical false result against the original predicates.","^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["~$p"],["^TK","^TL"],["^TK","^TL","^TM"]]],"^[",["^10",[["~$p"],["^TK","^TL"],["^TK","^TL","^TM"],["^TK","^TL","^TM","~$&","^TN"]]],"^1:",["^10",[null,null,null,null]]]],"^3","~$cljs.core/every-pred","^17",true,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["~$p"],["^TK","^TL"],["^TK","^TL","^TM"]]],"^[",["^10",[["~$p"],["^TK","^TL"],["^TK","^TL","^TM"],["^TK","^TL","^TM","~$&","^TN"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[["~$p"],["^TK","^TL"],["^TK","^TL","^TM"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",null,"^Y",null,"^Z",4089,"^1;",3,"^1<",true,"^[",["^10",[["~$p"],["^TK","^TL"],["^TK","^TL","^TM"],["^TK","^TL","^TM","~$&","^TN"]]],"^1?","Takes a set of predicates and returns a function f that returns true if all of its\\n  composing predicates return a logical true value against all of its arguments, else it returns\\n  false. Note that f is short-circuiting in that it will stop execution on the first\\n  argument that triggers a logical false result against the original predicates."],"^@F",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7815,"^V",7,"^Z",7815,"^U",11,"^[",["^10",["^11",["^10",[["^13"]]]]],"^1?","Returns a sequence of the map\'s keys."],"^3","~$cljs.core/keys","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["^13"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",7815,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^13"]]]]],"^1?","Returns a sequence of the map\'s keys."],"~$missing-protocol",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",250,"^V",7,"^Z",250,"^U",23,"^[",["^10",["^11",["^10",[["~$proto","^1Z"]]]]]],"^3","~$cljs.core/missing-protocol","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["^TR","^1Z"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",250,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^TR","^1Z"]]]]]],"~$load-file",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",265,"^V",7,"^Z",265,"^U",16,"^[",["^10",["^11",["^10",[["~$file"]]]]]],"^3","~$cljs.core/load-file","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^TU"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",265,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^TU"]]]]]],"~$PersistentArrayMap",["^ ","^2K",4,"^D",["^2",["^78","^E","^F","^G","^H","^I","^J","^L","^M","^N","^O","^P","^Q","^R","^65","^>5","^S","^3T"]],"^3","^5G","^T","cljs/core.cljs","^U",28,"^2O",true,"^V",10,"^Y",5817,"^2P",false,"^Z",5817,"^15",["^2",["^78","^E","^F","^G","^H","^I","^L","^M","^N","^O","^P","^R","^65","^>5","^S","^3T"]]],"~$distinct?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",25,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^V",16,"^Y",2023,"^Z",2023,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]]]],"^1?","Returns true if no two of the arguments are ="],"^3","~$cljs.core/distinct?","^17",true,"^T","cljs/core.cljs","^U",25,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",2023,"^1;",2,"^1X","^1Y","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1?","Returns true if no two of the arguments are ="],"~$never-equiv",["^ ","^3","~$cljs.core/never-equiv","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",5457,"^U",27,"^3G",true,"^C",["^ ","^T","cljs/core.cljs","^Y",5457,"^V",16,"^Z",5457,"^U",27,"^3G",true]],"~$Stepper",["^ ","^2K",2,"^D",["^2",["^J"]],"^3","~$cljs.core/Stepper","^T","cljs/core.cljs","^U",17,"^2O",true,"^V",10,"^Y",3562,"^2P",false,"^Z",3562,"^15",null],"~$unchecked-short",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2348,"^V",15,"^Z",2348,"^U",30,"^1X","^22","^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/unchecked-short","^17",false,"^T","cljs/core.cljs","^U",30,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^22","^Z",2348,"^1;",1,"^1X","^22","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$->Range",["^ ","^B",null,"^C",["^ ","^D",["^2",["^3P","^E","^F","^H","^J","^L","^M","^32","^3S","^N","^O","^P","^Q","^3<","^R","^3T"]],"^T","cljs/core.cljs","^U",15,"^V",10,"^W","^X","^Y",8409,"^Z",8409,"^[",["^10",["^11",["^10",[["^12","^3A","^3B","^:V","^14"]]]]],"^15",["^2",["^3P","^E","^F","^H","^L","^M","^32","^3S","^N","^O","^P","^3<","^R","^3T"]]],"^D",["^2",["^3P","^E","^F","^H","^J","^L","^M","^32","^3S","^N","^O","^P","^Q","^3<","^R","^3T"]],"^3","~$cljs.core/->Range","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^12","^3A","^3B","^:V","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",8409,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^12","^3A","^3B","^:V","^14"]]]]],"^15",["^2",["^3P","^E","^F","^H","^L","^M","^32","^3S","^N","^O","^P","^3<","^R","^3T"]]],"~$methods",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9785,"^V",7,"^Z",9785,"^U",14,"^[",["^10",["^11",["^10",[["^6C"]]]]],"^1?","Given a multimethod, returns a map of dispatch values -> dispatch fns"],"^3","~$cljs.core/methods","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^6C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9785,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^6C"]]]]],"^1?","Given a multimethod, returns a map of dispatch values -> dispatch fns"],"~$odd?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3760,"^V",16,"^Z",3760,"^U",20,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns true if n is odd, throws an exception if n is not an integer"],"^3","~$cljs.core/odd?","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",3760,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns true if n is odd, throws an exception if n is not an integer"],"~$->ArrayChunk",["^ ","^B",null,"^C",["^ ","^D",["^2",["^3P","^M","^8G","^3T"]],"^T","cljs/core.cljs","^U",20,"^V",10,"^W","^X","^Y",3064,"^Z",3064,"^[",["^10",["^11",["^10",[["^4B","^;K","^3B"]]]]],"^15",["^2",["^3P","^M","^3T"]]],"^D",["^2",["^3P","^M","^8G","^3T"]],"^3","~$cljs.core/->ArrayChunk","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^4B","^;K","^3B"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",3064,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^4B","^;K","^3B"]]]]],"^15",["^2",["^3P","^M","^3T"]]],"~$lazy-transformer",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3559,"^V",7,"^Z",3559,"^U",23,"^[",["^10",["^11",["^10",[["^25"]]]]]],"^3","~$cljs.core/lazy-transformer","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["^25"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3559,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^25"]]]]]],"~$ci-reduce",["^ ","^B",null,"^C",["^ ","^3G",true,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["~$cicoll","~$f"],["^U?","~$f","^1N"],["^U?","~$f","^1N","^6@"]]],"^[",["^10",[["^U?","~$f"],["^U?","~$f","^1N"],["^U?","~$f","^1N","^6@"]]],"^1:",["^10",[null,null,null]]],"^V",8,"^Y",1278,"^Z",1278,"^[",["^10",["^11",["^10",[["^U?","~$f"],["^U?","~$f","^1N"],["^U?","~$f","^1N","^6@"]]]]],"^1?","Accepts any collection which satisfies the ICount and IIndexed protocols and\\nreduces them without incurring seq initialization"],"^3G",true,"^3","~$cljs.core/ci-reduce","^17",false,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["^U?","~$f"],["^U?","~$f","^1N"],["^U?","~$f","^1N","^6@"]]],"^[",["^10",[["^U?","~$f"],["^U?","~$f","^1N"],["^U?","~$f","^1N","^6@"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["^U?","~$f"],["^U?","~$f","^1N"],["^U?","~$f","^1N","^6@"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^Z",1278,"^1;",4,"^1<",true,"^[",["^10",[["^U?","~$f"],["^U?","~$f","^1N"],["^U?","~$f","^1N","^6@"]]],"^1?","Accepts any collection which satisfies the ICount and IIndexed protocols and\\nreduces them without incurring seq initialization"],"~$*3",["^ ","^3","~$cljs.core/*3","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",157,"^U",5,"^1?","bound in a repl thread to the third most recent value printed","^C",["^ ","^T","cljs/core.cljs","^Y",157,"^V",3,"^Z",157,"^U",5,"^1?","bound in a repl thread to the third most recent value printed"]],"^QH",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9573,"^V",4,"^Z",9573,"^U",15,"^48","^5[","^1?",null,"^[",["^10",["^11",["^10",[["^60","^61"]]]]]],"^48","^5[","^3","~$cljs.core/-get-method","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^60","^61"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9573,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^60","^61"]]]]],"^1?",null],"~$->Var",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^G","^J","^O","^37","^2M","^R"]],"^T","cljs/core.cljs","^U",13,"^V",10,"^W","^X","^Y",959,"^Z",959,"^[",["^10",["^11",["^10",[["^1N","^DU","^D2"]]]]],"^15",["^2",["^E","^G","^O","^2M","^R"]]],"^D",["^2",["^E","^G","^J","^O","^37","^2M","^R"]],"^3","~$cljs.core/->Var","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["^1N","^DU","^D2"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",959,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^1N","^DU","^D2"]]]]],"^15",["^2",["^E","^G","^O","^2M","^R"]]],"~$frequencies",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8575,"^V",7,"^Z",8575,"^U",18,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a map from distinct items in coll to the number of times\\n  they appear."],"^3","~$cljs.core/frequencies","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8575,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a map from distinct items in coll to the number of times\\n  they appear."],"~$reduceable?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1891,"^V",16,"^Z",1891,"^U",27,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if coll satisfies IReduce"],"^3","~$cljs.core/reduceable?","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",1891,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if coll satisfies IReduce"],"~$string-hash-cache",["^ ","^3","~$cljs.core/string-hash-cache","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",817,"^U",23,"^C",["^ ","^T","cljs/core.cljs","^Y",817,"^V",6,"^Z",817,"^U",23]],"~$rsubseq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8383,"^V",7,"^Z",8383,"^U",14,"^[",["^10",["^11",["^10",[["^7D","^7E","^1M"],["^7D","^RZ","^R[","^S0","^S1"]]]]],"^1?","sc must be a sorted collection, test(s) one of <, <=, > or\\n  >=. Returns a reverse seq of those entries with keys ek for\\n  which (test (.. sc comparator (compare ek key)) 0) is true","^1@",["^ ","^17",false,"^1;",5,"^18",["^10",[["^7D","^7E","^1M"],["^7D","^RZ","^R[","^S0","^S1"]]],"^[",["^10",[["^7D","^7E","^1M"],["^7D","^RZ","^R[","^S0","^S1"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/rsubseq","^17",false,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",false,"^1;",5,"^18",["^10",[["^7D","^7E","^1M"],["^7D","^RZ","^R[","^S0","^S1"]]],"^[",["^10",[["^7D","^7E","^1M"],["^7D","^RZ","^R[","^S0","^S1"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^7D","^7E","^1M"],["^7D","^RZ","^R[","^S0","^S1"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8383,"^1;",5,"^1<",true,"^[",["^10",[["^7D","^7E","^1M"],["^7D","^RZ","^R[","^S0","^S1"]]],"^1?","sc must be a sorted collection, test(s) one of <, <=, > or\\n  >=. Returns a reverse seq of those entries with keys ek for\\n  which (test (.. sc comparator (compare ek key)) 0) is true"],"~$inc",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1238,"^V",7,"^Z",1238,"^U",10,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns a number one greater than num."],"^3","~$cljs.core/inc","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1238,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns a number one greater than num."],"~$type->str",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",259,"^V",7,"^Z",259,"^U",16,"^[",["^10",["^11",["^10",[["~$ty"]]]]]],"^3","~$cljs.core/type->str","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^UQ"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",259,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^UQ"]]]]]],"~$obj-clone",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5509,"^V",8,"^Z",5509,"^U",17,"^3G",true,"^[",["^10",["^11",["^10",[["^1Z","^6U"]]]]]],"^3G",true,"^3","~$cljs.core/obj-clone","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^1Z","^6U"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",5509,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^1Z","^6U"]]]]]],"~$get-method",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9789,"^V",7,"^Z",9789,"^U",17,"^[",["^10",["^11",["^10",[["^6C","^61"]]]]],"^1?","Given a multimethod and a dispatch value, returns the dispatch fn\\n  that would apply to that value, or nil if none apply and no default"],"^3","~$cljs.core/get-method","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^6C","^61"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9789,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^6C","^61"]]]]],"^1?","Given a multimethod and a dispatch value, returns the dispatch fn\\n  that would apply to that value, or nil if none apply and no default"],"~$vector-index-out-of-bounds",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4638,"^V",8,"^Z",4638,"^U",34,"^3G",true,"^[",["^10",["^11",["^10",[["~$i","^4C"]]]]]],"^3G",true,"^3","~$cljs.core/vector-index-out-of-bounds","^17",false,"^T","cljs/core.cljs","^U",34,"^18",["^10",[["~$i","^4C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4638,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$i","^4C"]]]]]],"~$es6-entries-iterator",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5652,"^V",7,"^Z",5652,"^U",27,"^[",["^10",["^11",["^10",[["^1D"]]]]]],"^3","~$cljs.core/es6-entries-iterator","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",5652,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]]],"~$bit-clear",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2508,"^V",7,"^Z",2508,"^U",16,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Clear bit at index n"],"^3","~$cljs.core/bit-clear","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["~$x","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2508,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]],"^1?","Clear bit at index n"],"~$Range",["^ ","^2K",5,"^D",["^2",["^3P","^E","^F","^H","^J","^L","^M","^32","^3S","^N","^O","^P","^Q","^3<","^R","^3T"]],"^3","^<4","^T","cljs/core.cljs","^U",15,"^2O",true,"^V",10,"^Y",8409,"^2P",false,"^Z",8409,"^15",["^2",["^3P","^E","^F","^H","^L","^M","^32","^3S","^N","^O","^P","^3<","^R","^3T"]]],"~$filter",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4396,"^V",7,"^Z",4396,"^U",13,"^[",["^10",["^11",["^10",[["^2["],["^2[","^1D"]]]]],"^1?","Returns a lazy sequence of the items in coll for which\\n  (pred item) returns true. pred must be free of side-effects.\\n  Returns a transducer when no collection is provided.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^2["],["^2[","^1D"]]],"^[",["^10",[["^2["],["^2[","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/filter","^17",false,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^2["],["^2[","^1D"]]],"^[",["^10",[["^2["],["^2[","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^2["],["^2[","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4396,"^1;",2,"^1<",true,"^[",["^10",[["^2["],["^2[","^1D"]]],"^1?","Returns a lazy sequence of the items in coll for which\\n  (pred item) returns true. pred must be free of side-effects.\\n  Returns a transducer when no collection is provided."],"~$->PersistentTreeMapSeq",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^H","^J","^L","^M","^32","^N","^O","^3<","^R","^3T"]],"^T","cljs/core.cljs","^U",30,"^V",10,"^W","^X","^Y",7045,"^Z",7045,"^[",["^10",["^11",["^10",[["^12","^7N","^54","^4C","^14"]]]]],"^15",["^2",["^E","^F","^H","^L","^M","^32","^N","^O","^3<","^R","^3T"]]],"^D",["^2",["^E","^F","^H","^J","^L","^M","^32","^N","^O","^3<","^R","^3T"]],"^3","~$cljs.core/->PersistentTreeMapSeq","^17",false,"^T","cljs/core.cljs","^U",30,"^18",["^10",[["^12","^7N","^54","^4C","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",7045,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^12","^7N","^54","^4C","^14"]]]]],"^15",["^2",["^E","^F","^H","^L","^M","^32","^N","^O","^3<","^R","^3T"]]],"~$create-array-node-seq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",6749,"^V",8,"^Z",6749,"^U",29,"^3G",true,"^[",["^10",["^11",["^10",[["^L>"],["^12","^L>","~$i","~$s"]]]]],"^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["^L>"],["^12","^L>","~$i","~$s"]]],"^[",["^10",[["^L>"],["^12","^L>","~$i","~$s"]]],"^1:",["^10",[null,null]]]],"^3G",true,"^3","~$cljs.core/create-array-node-seq","^17",false,"^T","cljs/core.cljs","^U",29,"^1@",["^ ","^17",false,"^1;",4,"^18",["^10",[["^L>"],["^12","^L>","~$i","~$s"]]],"^[",["^10",[["^L>"],["^12","^L>","~$i","~$s"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^L>"],["^12","^L>","~$i","~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",6749,"^1;",4,"^1<",true,"^[",["^10",[["^L>"],["^12","^L>","~$i","~$s"]]]],"^E4",["^ ","^B",null,"^C",["^ ","^48","^=6","^T","cljs/core.cljs","^U",18,"^V",9,"^Y",668,"^Z",668,"^1X","^49","^[",["^10",["^11",["^10",[["^1L","~$n","^1N"]]]]],"^1?","Returns tcoll with value val added at position n."],"^48","^=6","^3","~$cljs.core/-assoc-n!","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^1L","~$n","^1N"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^49","^Z",668,"^1;",3,"^1X","^49","^1<",true,"^[",["^10",["^11",["^10",[["^1L","~$n","^1N"]]]]],"^1?","Returns tcoll with value val added at position n."],"~$IWithMeta",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",546,"^V",14,"^Z",546,"^U",23,"^1?","Protocol for adding metadata to an object.","^1H",true,"^1I",["^ ","^1J",["^ ","^47",[["~$o","^12"]]]]],"^1H",true,"^3","^R","^T","cljs/core.cljs","^U",23,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^47",[["~$o","^12"]]]],"^1P",null,"^Z",546,"^1Q",["^2",["^5E","^5F","^<9","^5G","^80","^<;","^5H","^<=","^6J","^5I","^<>","^38","^<@","^<A","^>P","^>Q","^9J","^5K","^<B","^<C","^5M","^5N","^<D","^<E","^5O","^<G","^::","^>S","^<H","^<4","^7>","^5P"]],"^1?","Protocol for adding metadata to an object."],"~$list",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2817,"^V",7,"^Z",2817,"^U",11,"^[",["^10",["^11",["^10",[["~$&","^3H"]]]]],"^1?","Creates a new list containing the items.","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^3H"]]],"^[",["^10",[["~$&","^3H"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/list","^17",true,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^3H"]]],"^[",["^10",[["~$&","^3H"]]],"^1:",["^10",[null]]],"^18",[["^10",["^3H"]]],"^19",null,"^1:",["^10",[null]],"^V",null,"^Y",null,"^Z",2817,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^3H"]]],"^1?","Creates a new list containing the items."],"~$+",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null,null]]],"^V",15,"^Y",2235,"^Z",2235,"^1X","^22","^[",["^10",["^11",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]]]],"^1?","Returns the sum of nums. (+) returns 0."],"^3","~$cljs.core/+","^17",true,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[[],["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",null,"^Y",null,"^20","^22","^Z",2235,"^1;",2,"^1X","^22","^1<",true,"^[",["^10",[[],["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1?","Returns the sum of nums. (+) returns 0."],"~$IndexedSeqIterator",["^ ","^2K",2,"^D",["^2",["^J"]],"^3","~$cljs.core/IndexedSeqIterator","^T","cljs/core.cljs","^U",28,"^2O",true,"^V",10,"^Y",1352,"^2P",false,"^Z",1352,"^15",null],"~$split-with",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8529,"^V",7,"^Z",8529,"^U",17,"^[",["^10",["^11",["^10",[["^2[","^1D"]]]]],"^1?","Returns a vector of [(take-while pred coll) (drop-while pred coll)]"],"^3","~$cljs.core/split-with","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^2[","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8529,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^2[","^1D"]]]]],"^1?","Returns a vector of [(take-while pred coll) (drop-while pred coll)]"],"~$->VectorNode",["^ ","^B",null,"^C",["^ ","^D",["^2",[]],"^T","cljs/core.cljs","^U",20,"^V",10,"^W","^X","^Y",4592,"^Z",4592,"^[",["^10",["^11",["^10",[["^;5","^4B"]]]]],"^15",null],"^D",["^2",[]],"^3","~$cljs.core/->VectorNode","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^;5","^4B"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",4592,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^;5","^4B"]]]]],"^15",null],"~$aset",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",370,"^V",7,"^Z",370,"^U",11,"^[",["^10",["^11",["^10",[["^7:","~$i","^1N"],["^7:","^6@","~$idx2","~$&","~$idxv"]]]]],"^1?","Sets the value at the index.","^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["^7:","~$i","^1N"]]],"^[",["^10",[["^7:","~$i","^1N"],["^7:","^6@","^VD","~$&","^VE"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/aset","^17",true,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["^7:","~$i","^1N"]]],"^[",["^10",[["^7:","~$i","^1N"],["^7:","^6@","^VD","~$&","^VE"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^7:","~$i","^1N"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",370,"^1;",3,"^1<",true,"^[",["^10",[["^7:","~$i","^1N"],["^7:","^6@","^VD","~$&","^VE"]]],"^1?","Sets the value at the index."],"~$int-rotate-left",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",752,"^V",15,"^Z",752,"^U",30,"^1X","^22","^[",["^10",["^11",["^10",[["~$x","~$n"]]]]]],"^3","~$cljs.core/int-rotate-left","^17",false,"^T","cljs/core.cljs","^U",30,"^18",["^10",[["~$x","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^22","^Z",752,"^1;",2,"^1X","^22","^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$n"]]]]]],"~$keyword",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2964,"^V",7,"^Z",2964,"^U",14,"^[",["^10",["^11",["^10",[["^9R"],["^2V","^9R"]]]]],"^1?","Returns a Keyword with the given namespace and name.  Do not use :\\n  in the keyword strings, it will be added automatically.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^9R"],["^2V","^9R"]]],"^[",["^10",[["^9R"],["^2V","^9R"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/keyword","^17",false,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^9R"],["^2V","^9R"]]],"^[",["^10",[["^9R"],["^2V","^9R"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^9R"],["^2V","^9R"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2964,"^1;",2,"^1<",true,"^[",["^10",[["^9R"],["^2V","^9R"]]],"^1?","Returns a Keyword with the given namespace and name.  Do not use :\\n  in the keyword strings, it will be added automatically."],"~$->Cons",["^ ","^B",null,"^C",["^ ","^D",["^2",["^>=","^E","^F","^3R","^H","^J","^L","^32","^3S","^N","^O","^P","^3<","^R","^3T"]],"^T","cljs/core.cljs","^U",14,"^V",10,"^W","^X","^Y",2834,"^Z",2834,"^[",["^10",["^11",["^10",[["^12","^4S","^9D","^14"]]]]],"^15",["^2",["^>=","^E","^F","^3R","^H","^L","^32","^3S","^N","^O","^P","^3<","^R","^3T"]]],"^D",["^2",["^>=","^E","^F","^3R","^H","^J","^L","^32","^3S","^N","^O","^P","^3<","^R","^3T"]],"^3","~$cljs.core/->Cons","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^12","^4S","^9D","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",2834,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^12","^4S","^9D","^14"]]]]],"^15",["^2",["^>=","^E","^F","^3R","^H","^L","^32","^3S","^N","^O","^P","^3<","^R","^3T"]]],"~$*ns*",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",32,"^V",3,"^Z",32,"^U",7,"^6<",true,"^1?","Var bound to the current namespace. Only used for bootstrapping."],"^3","~$cljs.core/*ns*","^T","cljs/core.cljs","^U",7,"^V",null,"^6<",true,"^Y",null,"^Z",32,"^1?","Var bound to the current namespace. Only used for bootstrapping."],"~$*assert*",["^ ","^3","~$cljs.core/*assert*","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",40,"^U",11,"^6<",true,"^C",["^ ","^T","cljs/core.cljs","^Y",40,"^V",3,"^Z",40,"^U",11,"^6<",true]],"~$create-tree-map-seq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7098,"^V",8,"^Z",7098,"^U",27,"^3G",true,"^[",["^10",["^11",["^10",[["^42","^54","^4C"]]]]]],"^3G",true,"^3","~$cljs.core/create-tree-map-seq","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["^42","^54","^4C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",7098,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^42","^54","^4C"]]]]]],"~$ICollection",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",447,"^V",14,"^Z",447,"^U",25,"^1?","Protocol for adding to a collection.","^1H",true,"^1I",["^ ","^1J",["^ ","^7Y",[["^1D","~$o"]]]]],"^1H",true,"^3","^H","^T","cljs/core.cljs","^U",25,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^7Y",[["^1D","~$o"]]]],"^1P",null,"^Z",447,"^1Q",["^2",["^5E","^5F","^<9","^5G","^80","^<;","^3U","^5H","^<=","^6J","^5I","^<>","^<@","^<A","^9J","^5K","^<B","^<C","^5M","^5N","^<D","^<E","^5O","^<G","^<H","^<4","^7>","^5P"]],"^1?","Protocol for adding to a collection."],"~$multi-stepper",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3616,"^V",7,"^Z",3616,"^U",20,"^[",["^10",["^11",["^10",[["^26","^B6"],["^26","^B6","^B7"]]]]],"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^26","^B6"],["^26","^B6","^B7"]]],"^[",["^10",[["^26","^B6"],["^26","^B6","^B7"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/multi-stepper","^17",false,"^T","cljs/core.cljs","^U",20,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^26","^B6"],["^26","^B6","^B7"]]],"^[",["^10",[["^26","^B6"],["^26","^B6","^B7"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^26","^B6"],["^26","^B6","^B7"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3616,"^1;",3,"^1<",true,"^[",["^10",[["^26","^B6"],["^26","^B6","^B7"]]]],"~$chars",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2455,"^V",7,"^Z",2455,"^U",12,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/chars","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2455,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^EQ",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2593,"^V",7,"^Z",2593,"^U",10,"^[",["^10",["^11",["^10",[[],["~$x"],["~$x","~$&","^3I"]]]]],"^1?","With no args, returns the empty string. With one arg x, returns\\n  x.toString().  (str nil) returns the empty string. With more than\\n  one arg, returns the concatenation of the str values of the args.","^1@",["^ ","^17",true,"^1;",1,"^18",["^10",[[],["~$x"]]],"^[",["^10",[[],["~$x"],["~$x","~$&","^3I"]]],"^1:",["^10",[null,null,null]]]],"^3","~$cljs.core/str","^17",true,"^T","cljs/core.cljs","^U",10,"^1@",["^ ","^17",true,"^1;",1,"^18",["^10",[[],["~$x"]]],"^[",["^10",[[],["~$x"],["~$x","~$&","^3I"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[[],["~$x"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^Z",2593,"^1;",1,"^1<",true,"^[",["^10",[[],["~$x"],["~$x","~$&","^3I"]]],"^1?","With no args, returns the empty string. With one arg x, returns\\n  x.toString().  (str nil) returns the empty string. With more than\\n  one arg, returns the concatenation of the str values of the args."],"~$next",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1093,"^V",12,"^Z",1093,"^U",16,"^1X","^2H","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a seq of the items after the first. Calls seq on its\\n  argument.  If there are no more items, returns nil"],"^3","~$cljs.core/next","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^2H","^Z",1093,"^1;",1,"^1X","^2H","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a seq of the items after the first. Calls seq on its\\n  argument.  If there are no more items, returns nil"],"~$ASeq",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",464,"^V",14,"^Z",464,"^U",18,"^1?","Marker protocol indicating an array sequence.","^1H",true,"^1I",["^ ","^1J",["^ "]]],"^1H",true,"^3","^3R","^T","cljs/core.cljs","^U",18,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ "]],"^1P",null,"^Z",464,"^1Q",["^2",["^<9","^3U","^<B","^<E","^<G"]],"^1?","Marker protocol indicating an array sequence."],"~$pr-seq-writer",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8858,"^V",7,"^Z",8858,"^U",20,"^[",["^10",["^11",["^10",[["^57","^5U","^1>"]]]]]],"^3","~$cljs.core/pr-seq-writer","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^57","^5U","^1>"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8858,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^57","^5U","^1>"]]]]]],"~$SeqIter",["^ ","^2K",2,"^D",["^2",["^J"]],"^3","~$cljs.core/SeqIter","^T","cljs/core.cljs","^U",17,"^2O",true,"^V",10,"^Y",3527,"^2P",false,"^Z",3527,"^15",null],"~$IFn",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",403,"^V",14,"^Z",403,"^U",17,"^1?","Protocol for adding the ability to invoke an object as a function.\\n  For example, a vector can also be used to look up a value:\\n  ([1 2 3 4] 1) => 2","^1H",true,"^1I",["^ ","^1J",["^ ","~$-invoke",[["^@L"],["^@L","~$a"],["^@L","~$a","~$b"],["^@L","~$a","~$b","~$c"],["^@L","~$a","~$b","~$c","~$d"],["^@L","~$a","~$b","~$c","~$d","~$e"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t","^9D"]]]]],"^1H",true,"^3","^G","^T","cljs/core.cljs","^U",17,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^W5",[["^@L"],["^@L","~$a"],["^@L","~$a","~$b"],["^@L","~$a","~$b","~$c"],["^@L","~$a","~$b","~$c","~$d"],["^@L","~$a","~$b","~$c","~$d","~$e"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t","^9D"]]]],"^1P",null,"^Z",403,"^1Q",["^2",["^5E","^CH","^5F","^1R","^5G","^<<","^5H","^5I","^38","^5K","^5L","^5M","^5N","^5O","^::","^>S","^5P"]],"^1?","Protocol for adding the ability to invoke an object as a function.\\n  For example, a vector can also be used to look up a value:\\n  ([1 2 3 4] 1) => 2"],"~$regexp?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8663,"^V",16,"^Z",8663,"^U",23,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is a JavaScript RegExp instance."],"^3","~$cljs.core/regexp?","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",8663,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is a JavaScript RegExp instance."],"^13",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7708,"^V",7,"^Z",7708,"^U",15,"^[",["^10",["^11",["^10",[["~$&","^7U"]]]]],"^1?","keyval => key val\\n  Returns a new hash map with supplied mappings.","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^7U"]]],"^[",["^10",[["~$&","^7U"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/hash-map","^17",true,"^T","cljs/core.cljs","^U",15,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^7U"]]],"^[",["^10",[["~$&","^7U"]]],"^1:",["^10",[null]]],"^18",[["^10",["^7U"]]],"^19",null,"^1:",["^10",[null]],"^V",null,"^Y",null,"^Z",7708,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^7U"]]],"^1?","keyval => key val\\n  Returns a new hash map with supplied mappings."],"~$underive",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9495,"^V",7,"^Z",9495,"^U",15,"^[",["^10",["^11",["^10",[["^DL","^87"],["~$h","^DL","^87"]]]]],"^1?","Removes a parent/child relationship between parent and\\n  tag. h must be a hierarchy obtained from make-hierarchy, if not\\n  supplied defaults to, and modifies, the global hierarchy.","^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^DL","^87"],["~$h","^DL","^87"]]],"^[",["^10",[["^DL","^87"],["~$h","^DL","^87"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/underive","^17",false,"^T","cljs/core.cljs","^U",15,"^1@",["^ ","^17",false,"^1;",3,"^18",["^10",[["^DL","^87"],["~$h","^DL","^87"]]],"^[",["^10",[["^DL","^87"],["~$h","^DL","^87"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^DL","^87"],["~$h","^DL","^87"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9495,"^1;",3,"^1<",true,"^[",["^10",[["^DL","^87"],["~$h","^DL","^87"]]],"^1?","Removes a parent/child relationship between parent and\\n  tag. h must be a hierarchy obtained from make-hierarchy, if not\\n  supplied defaults to, and modifies, the global hierarchy."],"~$array-copy",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1938,"^V",8,"^Z",1938,"^U",18,"^3G",true,"^[",["^10",["^11",["^10",[["^BE","~$i","^BF","~$j","^3J"]]]]]],"^3G",true,"^3","~$cljs.core/array-copy","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^BE","~$i","^BF","~$j","^3J"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1938,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^BE","~$i","^BF","~$j","^3J"]]]]]],"~$obj-map-compare-keys",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5487,"^V",8,"^Z",5487,"^U",28,"^3G",true,"^[",["^10",["^11",["^10",[["~$a","~$b"]]]]]],"^3G",true,"^3","~$cljs.core/obj-map-compare-keys","^17",false,"^T","cljs/core.cljs","^U",28,"^18",["^10",[["~$a","~$b"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",5487,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$a","~$b"]]]]]],"^H@",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",713,"^V",4,"^Z",713,"^U",11,"^48","^HA","^1?","Sets the value of o to new-value.","^[",["^10",["^11",["^10",[["~$o","^@P"]]]]]],"^48","^HA","^3","~$cljs.core/-reset!","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$o","^@P"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",713,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$o","^@P"]]]]],"^1?","Sets the value of o to new-value."],"^PD",["^ ","^B",null,"^C",["^ ","^48","^32","^T","cljs/core.cljs","^U",14,"^V",9,"^Y",471,"^Z",471,"^1X","^49","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a new collection of coll without the first item. It should\\n     always return a seq, e.g.\\n     (rest []) => ()\\n     (rest nil) => ()"],"^48","^32","^3","~$cljs.core/-rest","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^49","^Z",471,"^1;",1,"^1X","^49","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a new collection of coll without the first item. It should\\n     always return a seq, e.g.\\n     (rest []) => ()\\n     (rest nil) => ()"],"^BP",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3493,"^V",7,"^Z",3493,"^U",15,"^[",["^10",["^11",["^10",[[]]]]]],"^3","~$cljs.core/nil-iter","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[[]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3493,"^1;",0,"^1<",true,"^[",["^10",["^11",["^10",[[]]]]]],"~$pr-writer",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8849,"^V",8,"^Z",8849,"^U",17,"^3G",true,"^[",["^10",["^11",["^10",[["^1Z","^5U","^1>"]]]]],"^1?","Prefer this to pr-seq, because it makes the printing function\\n   configurable, allowing efficient implementations such as appending\\n   to a StringBuffer."],"^3G",true,"^3","~$cljs.core/pr-writer","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^1Z","^5U","^1>"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8849,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^1Z","^5U","^1>"]]]]],"^1?","Prefer this to pr-seq, because it makes the printing function\\n   configurable, allowing efficient implementations such as appending\\n   to a StringBuffer."],"~$false?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1958,"^V",16,"^Z",1958,"^U",22,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is the value false, false otherwise."],"^3","~$cljs.core/false?","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",1958,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is the value false, false otherwise."],"~$RangedIterator",["^ ","^2K",6,"^D",["^2",["^J"]],"^3","~$cljs.core/RangedIterator","^T","cljs/core.cljs","^U",24,"^2O",true,"^V",10,"^Y",4689,"^2P",false,"^Z",4689,"^15",null],"~$*print-readably*",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",86,"^V",3,"^Z",86,"^U",19,"^6<",true,"^1?","When set to logical false, strings and characters will be printed with\\n  non-alphanumeric characters converted to the appropriate escape sequences.\\n\\n  Defaults to true"],"^3","~$cljs.core/*print-readably*","^T","cljs/core.cljs","^U",19,"^V",null,"^6<",true,"^Y",null,"^Z",86,"^1?","When set to logical false, strings and characters will be printed with\\n  non-alphanumeric characters converted to the appropriate escape sequences.\\n\\n  Defaults to true"],"~$ints",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2457,"^V",7,"^Z",2457,"^U",11,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/ints","^17",false,"^T","cljs/core.cljs","^U",11,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2457,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$some-fn",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4128,"^V",7,"^Z",4128,"^U",14,"^[",["^10",["^11",["^10",[["~$p"],["^TK","^TL"],["^TK","^TL","^TM"],["^TK","^TL","^TM","~$&","^TN"]]]]],"^1?","Takes a set of predicates and returns a function f that returns the first logical true value\\n  returned by one of its composing predicates against any of its arguments, else it returns\\n  logical false. Note that f is short-circuiting in that it will stop execution on the first\\n  argument that triggers a logical true result against the original predicates.","^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["~$p"],["^TK","^TL"],["^TK","^TL","^TM"]]],"^[",["^10",[["~$p"],["^TK","^TL"],["^TK","^TL","^TM"],["^TK","^TL","^TM","~$&","^TN"]]],"^1:",["^10",[null,null,null,null]]]],"^3","~$cljs.core/some-fn","^17",true,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["~$p"],["^TK","^TL"],["^TK","^TL","^TM"]]],"^[",["^10",[["~$p"],["^TK","^TL"],["^TK","^TL","^TM"],["^TK","^TL","^TM","~$&","^TN"]]],"^1:",["^10",[null,null,null,null]]],"^18",["^10",[["~$p"],["^TK","^TL"],["^TK","^TL","^TM"]]],"^19",null,"^1:",["^10",[null,null,null,null]],"^V",null,"^Y",null,"^Z",4128,"^1;",3,"^1<",true,"^[",["^10",[["~$p"],["^TK","^TL"],["^TK","^TL","^TM"],["^TK","^TL","^TM","~$&","^TN"]]],"^1?","Takes a set of predicates and returns a function f that returns the first logical true value\\n  returned by one of its composing predicates against any of its arguments, else it returns\\n  logical false. Note that f is short-circuiting in that it will stop execution on the first\\n  argument that triggers a logical true result against the original predicates."],"~$demunge-pattern",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10011,"^V",8,"^Z",10011,"^U",23,"^3G",true,"^[",["^10",["^11",["^10",[[]]]]]],"^3G",true,"^3","~$cljs.core/demunge-pattern","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[[]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",10011,"^1;",0,"^1<",true,"^[",["^10",["^11",["^10",[[]]]]]],"~$*flush-on-newline*",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",71,"^V",3,"^Z",71,"^U",21,"^6<",true,"^1?","When set to true, output will be flushed whenever a newline is printed.\\n\\n  Defaults to true."],"^3","~$cljs.core/*flush-on-newline*","^T","cljs/core.cljs","^U",21,"^V",null,"^6<",true,"^Y",null,"^Z",71,"^1?","When set to true, output will be flushed whenever a newline is printed.\\n\\n  Defaults to true."],"~$to-array",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3184,"^V",7,"^Z",3184,"^U",15,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^1?","Naive impl of to-array as a start."],"^3","~$cljs.core/to-array","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3184,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^1?","Naive impl of to-array as a start."],"~$build-subvec",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5123,"^V",8,"^Z",5123,"^U",20,"^3G",true,"^[",["^10",["^11",["^10",[["^12","~$v","^3A","^3B","^14"]]]]]],"^3G",true,"^3","~$cljs.core/build-subvec","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^12","~$v","^3A","^3B","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",5123,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^12","~$v","^3A","^3B","^14"]]]]]],"~$Namespace",["^ ","^2K",2,"^D",["^2",["^E","^F","^J"]],"^3","^CG","^T","cljs/core.cljs","^U",19,"^2O",true,"^V",10,"^Y",10076,"^2P",false,"^Z",10076,"^15",["^2",["^E","^F"]]],"~$list?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2732,"^V",16,"^Z",2732,"^U",21,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x implements IList"],"^3","~$cljs.core/list?","^17",false,"^T","cljs/core.cljs","^U",21,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",2732,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x implements IList"],"~$tree-map-remove",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7527,"^V",8,"^Z",7527,"^U",23,"^3G",true,"^[",["^10",["^11",["^10",[["^1E","^42","~$k","^43"]]]]]],"^3G",true,"^3","~$cljs.core/tree-map-remove","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["^1E","^42","~$k","^43"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",7527,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^1E","^42","~$k","^43"]]]]]],"~$PersistentQueueIter",["^ ","^2K",2,"^D",["^2",["^J"]],"^3","~$cljs.core/PersistentQueueIter","^T","cljs/core.cljs","^U",29,"^2O",true,"^V",10,"^Y",5333,"^2P",false,"^Z",5333,"^15",null],"~$HashCollisionNode",["^ ","^2K",4,"^D",["^2",["^J","^Q"]],"^3","^<O","^T","cljs/core.cljs","^U",27,"^2O",true,"^V",10,"^Y",6527,"^2P",false,"^Z",6527,"^15",null],"~$array?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",182,"^V",16,"^Z",182,"^U",22,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is a JavaScript array."],"^3","~$cljs.core/array?","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",182,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns true if x is a JavaScript array."],"~$prefers*",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9521,"^V",8,"^Z",9521,"^U",16,"^3G",true,"^[",["^10",["^11",["^10",[["~$x","~$y","^?C"]]]]]],"^3G",true,"^3","~$cljs.core/prefers*","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["~$x","~$y","^?C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9521,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$y","^?C"]]]]]],"~$clone",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1036,"^V",7,"^Z",1036,"^U",12,"^[",["^10",["^11",["^10",[["^33"]]]]],"^1?","Clone the supplied value which must implement ICloneable."],"^3","~$cljs.core/clone","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["^33"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1036,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^33"]]]]],"^1?","Clone the supplied value which must implement ICloneable."],"~$scan-array",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5473,"^V",8,"^Z",5473,"^U",18,"^3G",true,"^[",["^10",["^11",["^10",[["~$incr","~$k","^7:"]]]]]],"^3G",true,"^3","~$cljs.core/scan-array","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^X9","~$k","^7:"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",5473,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^X9","~$k","^7:"]]]]]],"~$demunge",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",10066,"^V",7,"^Z",10066,"^U",14,"^[",["^10",["^11",["^10",[["^9R"]]]]]],"^3","~$cljs.core/demunge","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^9R"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",10066,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^9R"]]]]]],"~$bit-not",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2518,"^V",7,"^Z",2518,"^U",14,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Bitwise complement"],"^3","~$cljs.core/bit-not","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2518,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Bitwise complement"],"~$quote-string",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8758,"^V",17,"^Z",8758,"^U",29,"^3G",true,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"^3G",true,"^3","~$cljs.core/quote-string","^17",false,"^T","cljs/core.cljs","^U",29,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",8758,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"~$byte",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2332,"^V",15,"^Z",2332,"^U",19,"^1X","^22","^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/byte","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^22","^Z",2332,"^1;",1,"^1X","^22","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$max",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^V",15,"^Y",2318,"^Z",2318,"^1X","^22","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]]]],"^1?","Returns the greatest of the nums."],"^3","~$cljs.core/max","^17",true,"^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^20","^22","^Z",2318,"^1;",2,"^1X","^22","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1?","Returns the greatest of the nums."],"~$IComparable",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",678,"^V",14,"^Z",678,"^U",25,"^1?","Protocol for values that can be compared.","^1H",true,"^1I",["^ ","^1J",["^ ","^;>",[["~$x","~$y"]]]]],"^1H",true,"^3","^50","^T","cljs/core.cljs","^U",25,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^;>",[["~$x","~$y"]]]],"^1P",null,"^Z",678,"^1Q",["^2",["^D7","^<<","^5I","^5K","^::","^51"]],"^1?","Protocol for values that can be compared."],"~$==",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^V",16,"^Y",2555,"^Z",2555,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]]]],"^1?","Returns non-nil if nums all have the equivalent\\n  value, otherwise false. Behavior on non nums is\\n  undefined."],"^3","~$cljs.core/==","^17",true,"^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["~$x"],["~$x","~$y"]]],"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["~$x"],["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",2555,"^1;",2,"^1X","^1Y","^1<",true,"^[",["^10",[["~$x"],["~$x","~$y"],["~$x","~$y","~$&","^4M"]]],"^1?","Returns non-nil if nums all have the equivalent\\n  value, otherwise false. Behavior on non nums is\\n  undefined."],"~$parents",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9436,"^V",7,"^Z",9436,"^U",14,"^[",["^10",["^11",["^10",[["^DL"],["~$h","^DL"]]]]],"^1?","Returns the immediate parents of tag, either via a JavaScript type\\n  inheritance relationship or a relationship established via derive. h\\n  must be a hierarchy obtained from make-hierarchy, if not supplied\\n  defaults to the global hierarchy","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^DL"],["~$h","^DL"]]],"^[",["^10",[["^DL"],["~$h","^DL"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/parents","^17",false,"^T","cljs/core.cljs","^U",14,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^DL"],["~$h","^DL"]]],"^[",["^10",[["^DL"],["~$h","^DL"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^DL"],["~$h","^DL"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9436,"^1;",2,"^1<",true,"^[",["^10",[["^DL"],["~$h","^DL"]]],"^1?","Returns the immediate parents of tag, either via a JavaScript type\\n  inheritance relationship or a relationship established via derive. h\\n  must be a hierarchy obtained from make-hierarchy, if not supplied\\n  defaults to the global hierarchy"],"^>F",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1570,"^V",7,"^Z",1570,"^U",12,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns the number of items in the collection. (count nil) returns\\n  0.  Also works on strings, arrays, and Maps"],"^3","~$cljs.core/count","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1570,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns the number of items in the collection. (count nil) returns\\n  0.  Also works on strings, arrays, and Maps"],"^TB",["^ ","^B",null,"^C",["^ ","^48","^LY","^T","cljs/core.cljs","^U",18,"^V",9,"^Y",675,"^Z",675,"^1X","^49","^[",["^10",["^11",["^10",[["^1L","~$v"]]]]],"^1?","Returns tcoll without v."],"^48","^LY","^3","~$cljs.core/-disjoin!","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["^1L","~$v"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^49","^Z",675,"^1;",2,"^1X","^49","^1<",true,"^[",["^10",["^11",["^10",[["^1L","~$v"]]]]],"^1?","Returns tcoll without v."],"~$*loaded-libs*",["^ ","^3","~$cljs.core/*loaded-libs*","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",124,"^U",33,"^6<",true,"^C",["^ ","^T","cljs/core.cljs","^Y",124,"^V",20,"^Z",124,"^U",33,"^6<",true]],"~$->TransientHashMap",["^ ","^B",null,"^C",["^ ","^D",["^2",["^84","^J","^M","^=5","^1O","^S"]],"^T","cljs/core.cljs","^U",26,"^V",10,"^W","^X","^Y",6933,"^Z",6933,"^[",["^10",["^11",["^10",[["^;5","^2B","^>F","^K2","^K3"]]]]],"^15",["^2",["^84","^M","^=5","^1O","^S"]]],"^D",["^2",["^84","^J","^M","^=5","^1O","^S"]],"^3","~$cljs.core/->TransientHashMap","^17",false,"^T","cljs/core.cljs","^U",26,"^18",["^10",[["^;5","^2B","^>F","^K2","^K3"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",6933,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^;5","^2B","^>F","^K2","^K3"]]]]],"^15",["^2",["^84","^M","^=5","^1O","^S"]]],"~$array-index-of-symbol?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5688,"^V",8,"^Z",5688,"^U",30,"^3G",true,"^[",["^10",["^11",["^10",[["^4B","~$k"]]]]]],"^3G",true,"^3","~$cljs.core/array-index-of-symbol?","^17",false,"^T","cljs/core.cljs","^U",30,"^18",["^10",[["^4B","~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",5688,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^4B","~$k"]]]]]],"~$ArrayChunk",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",3045,"^V",10,"^Z",3045,"^U",20,"^3O",true],"^2K",3,"^D",["^2",["^3P","^M","^8G","^3T"]],"^3","^8H","^T","cljs/core.cljs","^U",20,"^2O",true,"^V",10,"^Y",3064,"^2P",false,"^3O",true,"^Z",3064,"^15",["^2",["^3P","^M","^3T"]]],"~$sorted-map-by",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7748,"^V",7,"^Z",7748,"^U",20,"^[",["^10",["^11",["^10",[["^OX","~$&","^7U"]]]]],"^1?","keyval => key val\\n  Returns a new sorted map with supplied mappings, using the supplied comparator.","^1@",["^ ","^17",true,"^1;",1,"^18",[["^10",["^OX","^7U"]]],"^[",["^10",[["^OX","~$&","^7U"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/sorted-map-by","^17",true,"^T","cljs/core.cljs","^U",20,"^1@",["^ ","^17",true,"^1;",1,"^18",[["^10",["^OX","^7U"]]],"^[",["^10",[["^OX","~$&","^7U"]]],"^1:",["^10",[null]]],"^18",[["^10",["^OX","^7U"]]],"^19",null,"^1:",["^10",[null]],"^V",null,"^Y",null,"^Z",7748,"^1;",1,"^1<",true,"^[",["^10",[["^OX","~$&","^7U"]]],"^1?","keyval => key val\\n  Returns a new sorted map with supplied mappings, using the supplied comparator."],"~$apply",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3418,"^V",7,"^Z",3418,"^U",12,"^[",["^10",["^11",["^10",[["~$f","^>C"],["~$f","~$x","^>C"],["~$f","~$x","~$y","^>C"],["~$f","~$x","~$y","~$z","^>C"],["~$f","~$a","~$b","~$c","~$d","~$&","^>C"]]]]],"^1?","Applies fn f to the argument list formed by prepending intervening arguments to args.","^1@",["^ ","^17",true,"^1;",5,"^18",["^10",[["~$f","^>C"],["~$f","~$x","^>C"],["~$f","~$x","~$y","^>C"],["~$f","~$x","~$y","~$z","^>C"]]],"^[",["^10",[["~$f","^>C"],["~$f","~$x","^>C"],["~$f","~$x","~$y","^>C"],["~$f","~$x","~$y","~$z","^>C"],["~$f","~$a","~$b","~$c","~$d","~$&","^>C"]]],"^1:",["^10",[null,null,null,null,null]]]],"^3","~$cljs.core/apply","^17",true,"^T","cljs/core.cljs","^U",12,"^1@",["^ ","^17",true,"^1;",5,"^18",["^10",[["~$f","^>C"],["~$f","~$x","^>C"],["~$f","~$x","~$y","^>C"],["~$f","~$x","~$y","~$z","^>C"]]],"^[",["^10",[["~$f","^>C"],["~$f","~$x","^>C"],["~$f","~$x","~$y","^>C"],["~$f","~$x","~$y","~$z","^>C"],["~$f","~$a","~$b","~$c","~$d","~$&","^>C"]]],"^1:",["^10",[null,null,null,null,null]]],"^18",["^10",[["~$f","^>C"],["~$f","~$x","^>C"],["~$f","~$x","~$y","^>C"],["~$f","~$x","~$y","~$z","^>C"]]],"^19",null,"^1:",["^10",[null,null,null,null,null]],"^V",null,"^Y",null,"^Z",3418,"^1;",5,"^1<",true,"^[",["^10",[["~$f","^>C"],["~$f","~$x","^>C"],["~$f","~$x","~$y","^>C"],["~$f","~$x","~$y","~$z","^>C"],["~$f","~$a","~$b","~$c","~$d","~$&","^>C"]]],"^1?","Applies fn f to the argument list formed by prepending intervening arguments to args."],"~$get-global-hierarchy",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9408,"^V",8,"^Z",9408,"^U",28,"^3G",true,"^[",["^10",["^11",["^10",[[]]]]]],"^3G",true,"^3","~$cljs.core/get-global-hierarchy","^17",false,"^T","cljs/core.cljs","^U",28,"^18",["^10",[[]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9408,"^1;",0,"^1<",true,"^[",["^10",["^11",["^10",[[]]]]]],"~$add-to-string-hash-cache",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",832,"^V",7,"^Z",832,"^U",31,"^[",["^10",["^11",["^10",[["~$k"]]]]]],"^3","~$cljs.core/add-to-string-hash-cache","^17",false,"^T","cljs/core.cljs","^U",31,"^18",["^10",[["~$k"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",832,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$k"]]]]]],"~$clj->js",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9288,"^V",7,"^Z",9288,"^U",14,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Recursively transforms ClojureScript values to JavaScript.\\nsets/vectors/lists become Arrays, Keywords and Symbol become Strings,\\nMaps become Objects. Arbitrary keys are encoded to by key->js."],"^3","~$cljs.core/clj->js","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9288,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Recursively transforms ClojureScript values to JavaScript.\\nsets/vectors/lists become Arrays, Keywords and Symbol become Strings,\\nMaps become Objects. Arbitrary keys are encoded to by key->js."],"~$TransientArrayMap",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",5745,"^V",10,"^Z",5745,"^U",27,"^3O",true],"^2K",3,"^D",["^2",["^84","^M","^=5","^1O","^S"]],"^3","^1T","^T","cljs/core.cljs","^U",27,"^2O",true,"^V",10,"^Y",6002,"^2P",false,"^3O",true,"^Z",6002,"^15",["^2",["^84","^M","^=5","^1O","^S"]]],"~$->TransientVector",["^ ","^B",null,"^C",["^ ","^D",["^2",["^3P","^G","^M","^=5","^=6","^1O","^S"]],"^T","cljs/core.cljs","^U",25,"^V",10,"^W","^X","^Y",5200,"^Z",5200,"^[",["^10",["^11",["^10",[["^4C","^:[","^2B","~$tail"]]]]],"^15",["^2",["^3P","^G","^M","^=5","^=6","^1O","^S"]]],"^D",["^2",["^3P","^G","^M","^=5","^=6","^1O","^S"]],"^3","~$cljs.core/->TransientVector","^17",false,"^T","cljs/core.cljs","^U",25,"^18",["^10",[["^4C","^:[","^2B","^Y3"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",5200,"^1;",4,"^1<",true,"^[",["^10",["^11",["^10",[["^4C","^:[","^2B","^Y3"]]]]],"^15",["^2",["^3P","^G","^M","^=5","^=6","^1O","^S"]]],"~$IChunkedNext",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",696,"^V",14,"^Z",696,"^U",26,"^1?","Protocol for accessing the chunks of a collection.","^1H",true,"^1I",["^ ","^1J",["^ ","^OK",[["^1D"]]]]],"^1H",true,"^3","^=U","^T","cljs/core.cljs","^U",26,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^OK",[["^1D"]]]],"^1P",null,"^Z",696,"^1Q",["^2",["^<E","^<G"]],"^1?","Protocol for accessing the chunks of a collection."],"~$interpose",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4351,"^V",7,"^Z",4351,"^U",16,"^[",["^10",["^11",["^10",[["^;Z"],["^;Z","^1D"]]]]],"^1?","Returns a lazy seq of the elements of coll separated by sep","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^;Z"],["^;Z","^1D"]]],"^[",["^10",[["^;Z"],["^;Z","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/interpose","^17",false,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^;Z"],["^;Z","^1D"]]],"^[",["^10",[["^;Z"],["^;Z","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^;Z"],["^;Z","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4351,"^1;",2,"^1<",true,"^[",["^10",[["^;Z"],["^;Z","^1D"]]],"^1?","Returns a lazy seq of the elements of coll separated by sep"],"~$->BlackNode",["^ ","^B",null,"^C",["^ ","^D",["^2",["^3P","^8R","^E","^F","^G","^H","^J","^L","^M","^N","^O","^8S","^8T","^3<","^R","^65","^S","^3T"]],"^T","cljs/core.cljs","^U",19,"^V",10,"^W","^X","^Y",7204,"^Z",7204,"^[",["^10",["^11",["^10",[["^1M","^1N","^J<","^H9","^14"]]]]],"^15",["^2",["^3P","^8R","^E","^F","^G","^H","^L","^M","^N","^O","^8S","^8T","^3<","^R","^65","^S","^3T"]]],"^D",["^2",["^3P","^8R","^E","^F","^G","^H","^J","^L","^M","^N","^O","^8S","^8T","^3<","^R","^65","^S","^3T"]],"^3","~$cljs.core/->BlackNode","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^1M","^1N","^J<","^H9","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",7204,"^1;",5,"^1<",true,"^[",["^10",["^11",["^10",[["^1M","^1N","^J<","^H9","^14"]]]]],"^15",["^2",["^3P","^8R","^E","^F","^G","^H","^L","^M","^N","^O","^8S","^8T","^3<","^R","^65","^S","^3T"]]],"~$deref",["^ ","^3","~$cljs.core/deref","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",6083,"^U",78,"^3O",true,"^C",["^ ","^T","cljs/core.cljs","^Y",6083,"^V",73,"^Z",6083,"^U",78,"^3O",true]],"~$pv-aget",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4597,"^V",8,"^Z",4597,"^U",15,"^3G",true,"^[",["^10",["^11",["^10",[["^6?","^6@"]]]]]],"^3G",true,"^3","~$cljs.core/pv-aget","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^6?","^6@"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4597,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^6?","^6@"]]]]]],"~$assoc",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1727,"^V",7,"^Z",1727,"^U",12,"^[",["^10",["^11",["^10",[["^1D","~$k","~$v"],["^1D","~$k","~$v","~$&","^I["]]]]],"^1?","assoc[iate]. When applied to a map, returns a new map of the\\n   same (hashed/sorted) type, that contains the mapping of key(s) to\\n   val(s). When applied to a vector, returns a new vector that\\n   contains val at index.","^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["^1D","~$k","~$v"]]],"^[",["^10",[["^1D","~$k","~$v"],["^1D","~$k","~$v","~$&","^I["]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/assoc","^17",true,"^T","cljs/core.cljs","^U",12,"^1@",["^ ","^17",true,"^1;",3,"^18",["^10",[["^1D","~$k","~$v"]]],"^[",["^10",[["^1D","~$k","~$v"],["^1D","~$k","~$v","~$&","^I["]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^1D","~$k","~$v"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",1727,"^1;",3,"^1<",true,"^[",["^10",[["^1D","~$k","~$v"],["^1D","~$k","~$v","~$&","^I["]]],"^1?","assoc[iate]. When applied to a map, returns a new map of the\\n   same (hashed/sorted) type, that contains the mapping of key(s) to\\n   val(s). When applied to a vector, returns a new vector that\\n   contains val at index."],"~$transient",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3347,"^V",7,"^Z",3347,"^U",16,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a new, transient version of the collection, in constant time."],"^3","~$cljs.core/transient","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3347,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns a new, transient version of the collection, in constant time."],"^IA",["^ ","^B",null,"^C",["^ ","^48","^K","^T","cljs/core.cljs","^U",17,"^V",9,"^Y",515,"^Z",515,"^1X","^49","^[",["^10",["^11",["^10",[["^1D","~$v"]]]]],"^1?","Returns a new collection of coll that does not contain v."],"^48","^K","^3","~$cljs.core/-disjoin","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^1D","~$v"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^49","^Z",515,"^1;",2,"^1X","^49","^1<",true,"^[",["^10",["^11",["^10",[["^1D","~$v"]]]]],"^1?","Returns a new collection of coll that does not contain v."],"~$chunk-cons",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3160,"^V",7,"^Z",3160,"^U",17,"^[",["^10",["^11",["^10",[["^8Y","^9D"]]]]]],"^3","~$cljs.core/chunk-cons","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^8Y","^9D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3160,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^8Y","^9D"]]]]]],"~$ArrayIter",["^ ","^2K",2,"^D",["^2",["^J"]],"^3","~$cljs.core/ArrayIter","^T","cljs/core.cljs","^U",19,"^2O",true,"^V",10,"^Y",3512,"^2P",false,"^Z",3512,"^15",null],"^OX",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9923,"^V",7,"^Z",9923,"^U",17,"^[",["^10",["^11",["^10",[["^2["]]]]],"^1?","Returns an JavaScript compatible comparator based upon pred."],"^3","~$cljs.core/comparator","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^2["]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9923,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^2["]]]]],"^1?","Returns an JavaScript compatible comparator based upon pred."],"~$sorted-map",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",7739,"^V",7,"^Z",7739,"^U",17,"^[",["^10",["^11",["^10",[["~$&","^7U"]]]]],"^1?","keyval => key val\\n  Returns a new sorted map with supplied mappings.","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^7U"]]],"^[",["^10",[["~$&","^7U"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/sorted-map","^17",true,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^7U"]]],"^[",["^10",[["~$&","^7U"]]],"^1:",["^10",[null]]],"^18",[["^10",["^7U"]]],"^19",null,"^1:",["^10",[null]],"^V",null,"^Y",null,"^Z",7739,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^7U"]]],"^1?","keyval => key val\\n  Returns a new sorted map with supplied mappings."],"~$drop-while",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4280,"^V",7,"^Z",4280,"^U",17,"^[",["^10",["^11",["^10",[["^2["],["^2[","^1D"]]]]],"^1?","Returns a lazy sequence of the items in coll starting from the\\n  first item for which (pred item) returns logical false.  Returns a\\n  stateful transducer when no collection is provided.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^2["],["^2[","^1D"]]],"^[",["^10",[["^2["],["^2[","^1D"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/drop-while","^17",false,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^2["],["^2[","^1D"]]],"^[",["^10",[["^2["],["^2[","^1D"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^2["],["^2[","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4280,"^1;",2,"^1<",true,"^[",["^10",[["^2["],["^2[","^1D"]]],"^1?","Returns a lazy sequence of the items in coll starting from the\\n  first item for which (pred item) returns logical false.  Returns a\\n  stateful transducer when no collection is provided."],"~$IWriter",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",612,"^V",14,"^Z",612,"^U",21,"^1?","Protocol for writing. Currently only implemented by StringBufferWriter.","^1H",true,"^1I",["^ ","^1J",["^ ","^7?",[["^5U","~$s"]],"~$-flush",[["^5U"]]]]],"^1H",true,"^3","^7@","^T","cljs/core.cljs","^U",21,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^7?",[["^5U","~$s"]],"^YM",[["^5U"]]]],"^1P",null,"^Z",612,"^1Q",["^2",["^C?"]],"^1?","Protocol for writing. Currently only implemented by StringBufferWriter."],"~$KeySeq",["^ ","^2K",2,"^D",["^2",["^E","^F","^H","^J","^L","^32","^3S","^N","^O","^3<","^R","^3T"]],"^3","^<D","^T","cljs/core.cljs","^U",16,"^2O",true,"^V",10,"^Y",7758,"^2P",false,"^Z",7758,"^15",["^2",["^E","^F","^H","^L","^32","^3S","^N","^O","^3<","^R","^3T"]]],"~$realized?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9188,"^V",16,"^Z",9188,"^U",25,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$d"]]]]],"^1?","Returns true if a value has been produced for a delay or lazy sequence."],"^3","~$cljs.core/realized?","^17",false,"^T","cljs/core.cljs","^U",25,"^18",["^10",[["~$d"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",9188,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$d"]]]]],"^1?","Returns true if a value has been produced for a delay or lazy sequence."],"~$*print-fn*",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",46,"^V",3,"^Z",46,"^U",13,"^1?","Each runtime environment provides a different way to print output.\\n  Whatever function *print-fn* is bound to will be passed any\\n  Strings which should be printed.","^6<",true],"^3","~$cljs.core/*print-fn*","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["~$_"]]],"^19",null,"^1:",["^10",[]],"^V",null,"^6<",true,"^Y",null,"^Z",46,"^1;",1,"^1<",true,"^[",null,"^1?","Each runtime environment provides a different way to print output.\\n  Whatever function *print-fn* is bound to will be passed any\\n  Strings which should be printed."],"~$compare",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2041,"^V",15,"^Z",2041,"^U",22,"^1X","^22","^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Comparator. Returns a negative number, zero, or a positive number\\n  when x is logically \'less than\', \'equal to\', or \'greater than\'\\n  y. Uses IComparable if available and google.array.defaultCompare for objects\\n of the same type and special-cases nil to be less than any other object."],"^3","~$cljs.core/compare","^17",false,"^T","cljs/core.cljs","^U",22,"^18",["^10",[["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^22","^Z",2041,"^1;",2,"^1X","^22","^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Comparator. Returns a negative number, zero, or a positive number\\n  when x is logically \'less than\', \'equal to\', or \'greater than\'\\n  y. Uses IComparable if available and google.array.defaultCompare for objects\\n of the same type and special-cases nil to be less than any other object."],"~$complement",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3764,"^V",16,"^Z",3764,"^U",26,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Takes a fn f and returns a fn that takes the same arguments as f,\\n  has the same effects, if any, and returns the opposite truth value."],"^3","~$cljs.core/complement","^17",false,"^T","cljs/core.cljs","^U",26,"^18",["^10",[["~$f"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",3764,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$f"]]]]],"^1?","Takes a fn f and returns a fn that takes the same arguments as f,\\n  has the same effects, if any, and returns the opposite truth value."],"~$lookup-sentinel",["^ ","^3","~$cljs.core/lookup-sentinel","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",1956,"^U",31,"^3G",true,"^C",["^ ","^T","cljs/core.cljs","^Y",1956,"^V",16,"^Z",1956,"^U",31,"^3G",true]],"^1K",["^ ","^B",null,"^C",["^ ","^48","^1O","^T","cljs/core.cljs","^U",16,"^V",9,"^Y",657,"^Z",657,"^1X","^49","^[",["^10",["^11",["^10",[["^1L","^1M","^1N"]]]]],"^1?","Returns a new transient collection of tcoll with a mapping from key to\\n     val added to it."],"^48","^1O","^3","~$cljs.core/-assoc!","^17",false,"^T","cljs/core.cljs","^U",16,"^18",["^10",[["^1L","^1M","^1N"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^49","^Z",657,"^1;",3,"^1X","^49","^1<",true,"^[",["^10",["^11",["^10",[["^1L","^1M","^1N"]]]]],"^1?","Returns a new transient collection of tcoll with a mapping from key to\\n     val added to it."],"~$*print-dup*",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",102,"^V",3,"^Z",102,"^U",14,"^6<",true,"^1?","When set to logical true, objects will be printed in a way that preserves\\n  their type when read in later.\\n\\n  Defaults to false."],"^3","~$cljs.core/*print-dup*","^T","cljs/core.cljs","^U",14,"^V",null,"^6<",true,"^Y",null,"^Z",102,"^1?","When set to logical true, objects will be printed in a way that preserves\\n  their type when read in later.\\n\\n  Defaults to false."],"~$string-iter",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3509,"^V",7,"^Z",3509,"^U",18,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/string-iter","^17",false,"^T","cljs/core.cljs","^U",18,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3509,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^B;",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9273,"^V",4,"^Z",9273,"^U",12,"^48","^B<","^1?","Transforms map keys to valid JavaScript keys. Arbitrary keys are\\n  encoded to their string representation via (pr-str x)","^[",["^10",["^11",["^10",[["~$x"]]]]]],"^48","^B<","^3","~$cljs.core/-key->js","^17",false,"^T","cljs/core.cljs","^U",12,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9273,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Transforms map keys to valid JavaScript keys. Arbitrary keys are\\n  encoded to their string representation via (pr-str x)"],"~$IDeref",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",533,"^V",14,"^Z",533,"^U",20,"^1?","Protocol for adding dereference functionality to a reference.","^1H",true,"^1I",["^ ","^1J",["^ ","^D=",[["~$o"]]]]],"^1H",true,"^3","^2M","^T","cljs/core.cljs","^U",20,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^D=",[["~$o"]]]],"^1P",null,"^Z",533,"^1Q",["^2",["^7X","^2N","^EC","^38","^<F"]],"^1?","Protocol for adding dereference functionality to a reference."],"~$sequence",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3708,"^V",7,"^Z",3708,"^U",15,"^[",["^10",["^11",["^10",[["^1D"],["^26","^1D"],["^26","^1D","~$&","^95"]]]]],"^1?","Coerces coll to a (possibly empty) sequence, if it is not already\\n  one. Will not force a lazy seq. (sequence nil) yields (), When a\\n  transducer is supplied, returns a lazy sequence of applications of\\n  the transform to the items in coll(s), i.e. to the set of first\\n  items of each coll, followed by the set of second\\n  items in each coll, until any one of the colls is exhausted.  Any\\n  remaining items in other colls are ignored. The transform should accept\\n  number-of-colls arguments","^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^1D"],["^26","^1D"]]],"^[",["^10",[["^1D"],["^26","^1D"],["^26","^1D","~$&","^95"]]],"^1:",["^10",[null,null,null]]]],"^3","~$cljs.core/sequence","^17",true,"^T","cljs/core.cljs","^U",15,"^1@",["^ ","^17",true,"^1;",2,"^18",["^10",[["^1D"],["^26","^1D"]]],"^[",["^10",[["^1D"],["^26","^1D"],["^26","^1D","~$&","^95"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["^1D"],["^26","^1D"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^Z",3708,"^1;",2,"^1<",true,"^[",["^10",[["^1D"],["^26","^1D"],["^26","^1D","~$&","^95"]]],"^1?","Coerces coll to a (possibly empty) sequence, if it is not already\\n  one. Will not force a lazy seq. (sequence nil) yields (), When a\\n  transducer is supplied, returns a lazy sequence of applications of\\n  the transform to the items in coll(s), i.e. to the set of first\\n  items of each coll, followed by the set of second\\n  items in each coll, until any one of the colls is exhausted.  Any\\n  remaining items in other colls are ignored. The transform should accept\\n  number-of-colls arguments"],"~$constantly",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3774,"^V",7,"^Z",3774,"^U",17,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns a function that takes any number of arguments and returns x."],"^3","~$cljs.core/constantly","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3774,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Returns a function that takes any number of arguments and returns x."],"~$->RangedIterator",["^ ","^B",null,"^C",["^ ","^D",["^2",["^J"]],"^T","cljs/core.cljs","^U",24,"^V",10,"^W","^X","^Y",4689,"^Z",4689,"^[",["^10",["^11",["^10",[["~$i","~$base","^4B","~$v","^3A","^3B"]]]]],"^15",null],"^D",["^2",["^J"]],"^3","~$cljs.core/->RangedIterator","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["~$i","^Z9","^4B","~$v","^3A","^3B"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",4689,"^1;",6,"^1<",true,"^[",["^10",["^11",["^10",[["~$i","^Z9","^4B","~$v","^3A","^3B"]]]]],"^15",null],"~$chunked-seq",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",5009,"^V",7,"^Z",5009,"^U",18,"^[",["^10",["^11",["^10",[["^F6","~$i","^;K"],["^F6","^6?","~$i","^;K"],["^F6","^6?","~$i","^;K","^12"]]]]],"^1@",["^ ","^17",false,"^1;",5,"^18",["^10",[["^F6","~$i","^;K"],["^F6","^6?","~$i","^;K"],["^F6","^6?","~$i","^;K","^12"]]],"^[",["^10",[["^F6","~$i","^;K"],["^F6","^6?","~$i","^;K"],["^F6","^6?","~$i","^;K","^12"]]],"^1:",["^10",[null,null,null]]]],"^3","~$cljs.core/chunked-seq","^17",false,"^T","cljs/core.cljs","^U",18,"^1@",["^ ","^17",false,"^1;",5,"^18",["^10",[["^F6","~$i","^;K"],["^F6","^6?","~$i","^;K"],["^F6","^6?","~$i","^;K","^12"]]],"^[",["^10",[["^F6","~$i","^;K"],["^F6","^6?","~$i","^;K"],["^F6","^6?","~$i","^;K","^12"]]],"^1:",["^10",[null,null,null]]],"^18",["^10",[["^F6","~$i","^;K"],["^F6","^6?","~$i","^;K"],["^F6","^6?","~$i","^;K","^12"]]],"^19",null,"^1:",["^10",[null,null,null]],"^V",null,"^Y",null,"^Z",5009,"^1;",5,"^1<",true,"^[",["^10",[["^F6","~$i","^;K"],["^F6","^6?","~$i","^;K"],["^F6","^6?","~$i","^;K","^12"]]]],"~$ISorted",["^ ","^C",["^ ","^T","cljs/core.cljs","^Y",595,"^V",14,"^Z",595,"^U",21,"^1?","Protocol for a collection which can represent their items\\n  in a sorted manner. ","^1H",true,"^1I",["^ ","^1J",["^ ","^AI",[["^1D","^54"]],"^52",[["^1D","~$k","^54"]],"^IG",[["^1D","^IH"]],"^CN",[["^1D"]]]]],"^1H",true,"^3","^53","^T","cljs/core.cljs","^U",21,"^V",null,"^Y",null,"^1I",["^ ","^1J",["^ ","^AI",[["^1D","^54"]],"^52",[["^1D","~$k","^54"]],"^IG",[["^1D","^IH"]],"^CN",[["^1D"]]]],"^1P",null,"^Z",595,"^1Q",["^2",["^5N","^5O"]],"^1?","Protocol for a collection which can represent their items\\n  in a sorted manner. "],"~$make-array",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",24,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^??"],["^NK","^??"]]],"^[",["^10",[["^??"],["^NK","^??"]]],"^1:",["^10",[null,null]]],"^V",14,"^Y",332,"^Z",332,"^1X","^7:","^[",["^10",["^11",["^10",[["^??"],["^NK","^??"]]]]],"^1?","Construct a JavaScript array of specified size. Accepts ignored type\\n  argument for compatibility with Clojure."],"^3","~$cljs.core/make-array","^17",false,"^T","cljs/core.cljs","^U",24,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^??"],["^NK","^??"]]],"^[",["^10",[["^??"],["^NK","^??"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^??"],["^NK","^??"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^7:","^Z",332,"^1;",2,"^1X","^7:","^1<",true,"^[",["^10",[["^??"],["^NK","^??"]]],"^1?","Construct a JavaScript array of specified size. Accepts ignored type\\n  argument for compatibility with Clojure."],"~$shorts",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2456,"^V",7,"^Z",2456,"^U",13,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/shorts","^17",false,"^T","cljs/core.cljs","^U",13,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2456,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$*unchecked-if*",["^ ","^3","~$cljs.core/*unchecked-if*","^T","cljs/core.cljs","^Y",null,"^V",null,"^Z",18,"^U",20,"^C",["^ ","^T","cljs/core.cljs","^Y",18,"^V",6,"^Z",18,"^U",20]],"~$->RSeq",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^H","^J","^L","^M","^32","^3S","^N","^O","^P","^3<","^R","^3T"]],"^T","cljs/core.cljs","^U",14,"^V",10,"^W","^X","^Y",1451,"^Z",1451,"^[",["^10",["^11",["^10",[["~$ci","~$i","^12"]]]]],"^15",["^2",["^E","^F","^H","^L","^M","^32","^3S","^N","^O","^P","^3<","^R","^3T"]]],"^D",["^2",["^E","^F","^H","^J","^L","^M","^32","^3S","^N","^O","^P","^3<","^R","^3T"]],"^3","~$cljs.core/->RSeq","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^ZE","~$i","^12"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",1451,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^ZE","~$i","^12"]]]]],"^15",["^2",["^E","^F","^H","^L","^M","^32","^3S","^N","^O","^P","^3<","^R","^3T"]]],"~$enable-console-print!",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",135,"^V",7,"^Z",135,"^U",28,"^[",["^10",["^11",["^10",[[]]]]],"^1?","Set *print-fn* to console.log"],"^3","~$cljs.core/enable-console-print!","^17",false,"^T","cljs/core.cljs","^U",28,"^18",["^10",[[]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",135,"^1;",0,"^1<",true,"^[",["^10",["^11",["^10",[[]]]]],"^1?","Set *print-fn* to console.log"],"^YM",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",616,"^V",4,"^Z",616,"^U",10,"^48","^7@","^1?","Flush writer.","^[",["^10",["^11",["^10",[["^5U"]]]]]],"^48","^7@","^3","~$cljs.core/-flush","^17",false,"^T","cljs/core.cljs","^U",10,"^18",["^10",[["^5U"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",616,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^5U"]]]]],"^1?","Flush writer."],"~$completing",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2206,"^V",7,"^Z",2206,"^U",17,"^[",["^10",["^11",["^10",[["~$f"],["~$f","~$cf"]]]]],"^1?","Takes a reducing function f of 2 args and returns a fn suitable for\\n  transduce by adding an arity-1 signature that calls cf (default -\\n  identity) on the result argument.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$f"],["~$f","^ZK"]]],"^[",["^10",[["~$f"],["~$f","^ZK"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/completing","^17",false,"^T","cljs/core.cljs","^U",17,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$f"],["~$f","^ZK"]]],"^[",["^10",[["~$f"],["~$f","^ZK"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$f"],["~$f","^ZK"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2206,"^1;",2,"^1<",true,"^[",["^10",[["~$f"],["~$f","^ZK"]]],"^1?","Takes a reducing function f of 2 args and returns a fn suitable for\\n  transduce by adding an arity-1 signature that calls cf (default -\\n  identity) on the result argument."],"~$unchecked-negate-int",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2406,"^V",7,"^Z",2406,"^U",27,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/unchecked-negate-int","^17",false,"^T","cljs/core.cljs","^U",27,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2406,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$->PersistentVector",["^ ","^B",null,"^C",["^ ","^D",["^2",["^3P","^8R","^3Q","^78","^E","^F","^G","^H","^I","^J","^L","^M","^N","^O","^P","^8S","^8T","^Q","^3<","^R","^65","^S","^3T"]],"^T","cljs/core.cljs","^U",26,"^V",10,"^W","^X","^Y",4711,"^Z",4711,"^[",["^10",["^11",["^10",[["^12","^4C","^:[","^2B","^Y3","^14"]]]]],"^15",["^2",["^3P","^8R","^3Q","^78","^E","^F","^G","^H","^I","^L","^M","^N","^O","^P","^8S","^8T","^3<","^R","^65","^S","^3T"]]],"^D",["^2",["^3P","^8R","^3Q","^78","^E","^F","^G","^H","^I","^J","^L","^M","^N","^O","^P","^8S","^8T","^Q","^3<","^R","^65","^S","^3T"]],"^3","~$cljs.core/->PersistentVector","^17",false,"^T","cljs/core.cljs","^U",26,"^18",["^10",[["^12","^4C","^:[","^2B","^Y3","^14"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",4711,"^1;",6,"^1<",true,"^[",["^10",["^11",["^10",[["^12","^4C","^:[","^2B","^Y3","^14"]]]]],"^15",["^2",["^3P","^8R","^3Q","^78","^E","^F","^G","^H","^I","^L","^M","^N","^O","^P","^8S","^8T","^3<","^R","^65","^S","^3T"]]],"~$equiv-sequential",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2615,"^V",8,"^Z",2615,"^U",24,"^3G",true,"^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Assumes x is sequential. Returns true if x equals y, otherwise\\n  returns false."],"^3G",true,"^3","~$cljs.core/equiv-sequential","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["~$x","~$y"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2615,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["~$x","~$y"]]]]],"^1?","Assumes x is sequential. Returns true if x equals y, otherwise\\n  returns false."],"~$hash-unordered-coll",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1183,"^V",15,"^Z",1183,"^U",34,"^1X","^22","^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns the hash code, consistent with =, for an external unordered\\n   collection implementing Iterable. For maps, the iterator should\\n   return map entries whose hash is computed as\\n     (hash-ordered-coll [k v]).\\n   See http://clojure.org/data_structures#hash for full algorithms."],"^3","~$cljs.core/hash-unordered-coll","^17",false,"^T","cljs/core.cljs","^U",34,"^18",["^10",[["^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^22","^Z",1183,"^1;",1,"^1X","^22","^1<",true,"^[",["^10",["^11",["^10",[["^1D"]]]]],"^1?","Returns the hash code, consistent with =, for an external unordered\\n   collection implementing Iterable. For maps, the iterator should\\n   return map entries whose hash is computed as\\n     (hash-ordered-coll [k v]).\\n   See http://clojure.org/data_structures#hash for full algorithms."],"~$repeat",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4316,"^V",7,"^Z",4316,"^U",13,"^[",["^10",["^11",["^10",[["~$x"],["~$n","~$x"]]]]],"^1?","Returns a lazy (infinite!, or length n if supplied) sequence of xs.","^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$x"],["~$n","~$x"]]],"^[",["^10",[["~$x"],["~$n","~$x"]]],"^1:",["^10",[null,null]]]],"^3","~$cljs.core/repeat","^17",false,"^T","cljs/core.cljs","^U",13,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$x"],["~$n","~$x"]]],"^[",["^10",[["~$x"],["~$n","~$x"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["~$x"],["~$n","~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4316,"^1;",2,"^1<",true,"^[",["^10",[["~$x"],["~$n","~$x"]]],"^1?","Returns a lazy (infinite!, or length n if supplied) sequence of xs."],"~$unchecked-inc",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2383,"^V",7,"^Z",2383,"^U",20,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/unchecked-inc","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2383,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$nthnext",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2583,"^V",7,"^Z",2583,"^U",14,"^[",["^10",["^11",["^10",[["^1D","~$n"]]]]],"^1?","Returns the nth next of coll, (seq coll) when n is 0."],"^3","~$cljs.core/nthnext","^17",false,"^T","cljs/core.cljs","^U",14,"^18",["^10",[["^1D","~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",2583,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^1D","~$n"]]]]],"^1?","Returns the nth next of coll, (seq coll) when n is 0."],"~$preserving-reduced",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",9193,"^V",8,"^Z",9193,"^U",26,"^3G",true,"^[",["^10",["^11",["^10",[["^?J"]]]]]],"^3G",true,"^3","~$cljs.core/preserving-reduced","^17",false,"^T","cljs/core.cljs","^U",26,"^18",["^10",[["^?J"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",9193,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^?J"]]]]]],"~$get-validator",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",4026,"^V",7,"^Z",4026,"^U",20,"^[",["^10",["^11",["^10",[["^CZ"]]]]],"^1?","Gets the validator-fn for a var/ref/agent/atom."],"^3","~$cljs.core/get-validator","^17",false,"^T","cljs/core.cljs","^U",20,"^18",["^10",[["^CZ"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",4026,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^CZ"]]]]],"^1?","Gets the validator-fn for a var/ref/agent/atom."],"~$StringIter",["^ ","^2K",2,"^D",["^2",["^J"]],"^3","~$cljs.core/StringIter","^T","cljs/core.cljs","^U",20,"^2O",true,"^V",10,"^Y",3500,"^2P",false,"^Z",3500,"^15",null],"~$number?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",189,"^V",16,"^Z",189,"^U",23,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns true if x is a JavaScript number."],"^3","~$cljs.core/number?","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$n"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",189,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$n"]]]]],"^1?","Returns true if x is a JavaScript number."],"^LN",["^ ","^B",null,"^C",["^ ","^48","^=5","^T","cljs/core.cljs","^U",15,"^V",9,"^Y",650,"^Z",650,"^1X","^49","^[",["^10",["^11",["^10",[["^1L","^1N"]]]]],"^1?","Adds value val to tcoll and returns tcoll."],"^48","^=5","^3","~$cljs.core/-conj!","^17",false,"^T","cljs/core.cljs","^U",15,"^18",["^10",[["^1L","^1N"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^49","^Z",650,"^1;",2,"^1X","^49","^1<",true,"^[",["^10",["^11",["^10",[["^1L","^1N"]]]]],"^1?","Adds value val to tcoll and returns tcoll."],"~$->PersistentArrayMapSeq",["^ ","^B",null,"^C",["^ ","^D",["^2",["^E","^F","^H","^J","^L","^M","^32","^3S","^N","^O","^3<","^R","^3T"]],"^T","cljs/core.cljs","^U",31,"^V",10,"^W","^X","^Y",5747,"^Z",5747,"^[",["^10",["^11",["^10",[["^4B","~$i","^D2"]]]]],"^15",["^2",["^E","^F","^H","^L","^M","^32","^3S","^N","^O","^3<","^R","^3T"]]],"^D",["^2",["^E","^F","^H","^J","^L","^M","^32","^3S","^N","^O","^3<","^R","^3T"]],"^3","~$cljs.core/->PersistentArrayMapSeq","^17",false,"^T","cljs/core.cljs","^U",31,"^18",["^10",[["^4B","~$i","^D2"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",5747,"^1;",3,"^1<",true,"^[",["^10",["^11",["^10",[["^4B","~$i","^D2"]]]]],"^15",["^2",["^E","^F","^H","^L","^M","^32","^3S","^N","^O","^3<","^R","^3T"]]],"~$chunk-next",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3177,"^V",7,"^Z",3177,"^U",17,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"^3","~$cljs.core/chunk-next","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3177,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]]],"~$ArrayList",["^ ","^2K",1,"^D",["^2",["^J"]],"^3","~$cljs.core/ArrayList","^T","cljs/core.cljs","^U",19,"^2O",true,"^V",10,"^Y",8301,"^2P",false,"^Z",8301,"^15",null],"~$print-str",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",8926,"^V",7,"^Z",8926,"^U",16,"^[",["^10",["^11",["^10",[["~$&","^57"]]]]],"^1?","print to a string, returning it","^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^57"]]],"^[",["^10",[["~$&","^57"]]],"^1:",["^10",[null]]]],"^3","~$cljs.core/print-str","^17",true,"^T","cljs/core.cljs","^U",16,"^1@",["^ ","^17",true,"^1;",0,"^18",[["^10",["^57"]]],"^[",["^10",[["~$&","^57"]]],"^1:",["^10",[null]]],"^18",[["^10",["^57"]]],"^19",null,"^1:",["^10",[null]],"^V",null,"^Y",null,"^Z",8926,"^1;",0,"^1<",true,"^[",["^10",[["~$&","^57"]]],"^1?","print to a string, returning it"],"~$not-any?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3749,"^V",16,"^Z",3749,"^U",24,"^1X","^1Y","^[",["^10",["^11",["^10",[["^2[","^1D"]]]]],"^1?","Returns false if (pred x) is logical true for any x in coll,\\n  else true."],"^3","~$cljs.core/not-any?","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["^2[","^1D"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",3749,"^1;",2,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["^2[","^1D"]]]]],"^1?","Returns false if (pred x) is logical true for any x in coll,\\n  else true."],"~$into-array",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^U",24,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["~$aseq"],["^NK","^[C"]]],"^[",["^10",[["^[C"],["^NK","^[C"]]],"^1:",["^10",[null,null]]],"^V",14,"^Y",384,"^Z",384,"^1X","^7:","^[",["^10",["^11",["^10",[["^[C"],["^NK","^[C"]]]]],"^1?","Returns an array with components set to the values in aseq. Optional type\\n  argument accepted for compatibility with Clojure."],"^3","~$cljs.core/into-array","^17",false,"^T","cljs/core.cljs","^U",24,"^1@",["^ ","^17",false,"^1;",2,"^18",["^10",[["^[C"],["^NK","^[C"]]],"^[",["^10",[["^[C"],["^NK","^[C"]]],"^1:",["^10",[null,null]]],"^18",["^10",[["^[C"],["^NK","^[C"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^7:","^Z",384,"^1;",2,"^1X","^7:","^1<",true,"^[",["^10",[["^[C"],["^NK","^[C"]]],"^1?","Returns an array with components set to the values in aseq. Optional type\\n  argument accepted for compatibility with Clojure."],"^CF",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",573,"^V",4,"^Z",573,"^U",9,"^48","^F","^1?","Returns the hash code of o.","^[",["^10",["^11",["^10",[["~$o"]]]]]],"^48","^F","^3","~$cljs.core/-hash","^17",false,"^T","cljs/core.cljs","^U",9,"^18",["^10",[["~$o"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",573,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["~$o"]]]]],"^1?","Returns the hash code of o."],"~$->t7490",["^ ","^B",null,"^C",["^ ","^>W",true,"^D",["^2",["^J","^O","^R"]],"^15",["^2",["^O","^R"]],"^W","^X","^[",["^10",["^11",["^10",[["^BP","~$meta7491"]]]]],"^T","cljs/core.cljs"],"^D",["^2",["^J","^O","^R"]],"^3","~$cljs.core/->t7490","^17",false,"^T","cljs/core.cljs","^18",["^10",[["^BP","^[G"]]],"^19",null,"^1:",["^10",[null,null]],"^>W",true,"^V",null,"^W","^X","^Y",null,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^BP","^[G"]]]]],"^15",["^2",["^O","^R"]]],"^83",["^ ","^B",null,"^C",["^ ","^48","^84","^T","cljs/core.cljs","^U",17,"^V",9,"^Y",663,"^Z",663,"^1X","^49","^[",["^10",["^11",["^10",[["^1L","^1M"]]]]],"^1?","Returns a new transient collection of tcoll without the mapping for key."],"^48","^84","^3","~$cljs.core/-dissoc!","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^1L","^1M"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^49","^Z",663,"^1;",2,"^1X","^49","^1<",true,"^[",["^10",["^11",["^10",[["^1L","^1M"]]]]],"^1?","Returns a new transient collection of tcoll without the mapping for key."],"~$->Reduced",["^ ","^B",null,"^C",["^ ","^D",["^2",["^2M"]],"^T","cljs/core.cljs","^U",17,"^V",10,"^W","^X","^Y",1244,"^Z",1244,"^[",["^10",["^11",["^10",[["^1N"]]]]],"^15",["^2",["^2M"]]],"^D",["^2",["^2M"]],"^3","~$cljs.core/->Reduced","^17",false,"^T","cljs/core.cljs","^U",17,"^18",["^10",[["^1N"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^W","^X","^Y",null,"^Z",1244,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^1N"]]]]],"^15",["^2",["^2M"]]],"~$chunk-buffer",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",3061,"^V",7,"^Z",3061,"^U",19,"^[",["^10",["^11",["^10",[["~$capacity"]]]]]],"^3","~$cljs.core/chunk-buffer","^17",false,"^T","cljs/core.cljs","^U",19,"^18",["^10",[["^[M"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^Z",3061,"^1;",1,"^1<",true,"^[",["^10",["^11",["^10",[["^[M"]]]]]],"~$seqable?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",1978,"^V",16,"^Z",1978,"^U",24,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$s"]]]]],"^1?","Return true if s satisfies ISeqable"],"^3","~$cljs.core/seqable?","^17",false,"^T","cljs/core.cljs","^U",24,"^18",["^10",[["~$s"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",1978,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$s"]]]]],"^1?","Return true if s satisfies ISeqable"],"~$->t5788",["^ ","^B",null,"^C",["^ ","^>W",true,"^D",["^2",["^J","^O","^R"]],"^15",["^2",["^O","^R"]],"^W","^X","^[",["^10",["^11",["^10",[["^BP","~$meta5789"]]]]],"^T","cljs/core.cljs"],"^D",["^2",["^J","^O","^R"]],"^3","~$cljs.core/->t5788","^17",false,"^T","cljs/core.cljs","^18",["^10",[["^BP","^[R"]]],"^19",null,"^1:",["^10",[null,null]],"^>W",true,"^V",null,"^W","^X","^Y",null,"^1;",2,"^1<",true,"^[",["^10",["^11",["^10",[["^BP","^[R"]]]]],"^15",["^2",["^O","^R"]]],"~$symbol?",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",886,"^V",16,"^Z",886,"^U",23,"^1X","^1Y","^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x is a Symbol"],"^3","~$cljs.core/symbol?","^17",false,"^T","cljs/core.cljs","^U",23,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^1Y","^Z",886,"^1;",1,"^1X","^1Y","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]],"^1?","Return true if x is a Symbol"],"~$m3-hash-unencoded-chars",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",798,"^V",15,"^Z",798,"^U",38,"^1X","^22","^[",["^10",["^11",["^10",[["^23"]]]]]],"^3","~$cljs.core/m3-hash-unencoded-chars","^17",false,"^T","cljs/core.cljs","^U",38,"^18",["^10",[["^23"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^22","^Z",798,"^1;",1,"^1X","^22","^1<",true,"^[",["^10",["^11",["^10",[["^23"]]]]]],"~$unchecked-char",["^ ","^B",null,"^C",["^ ","^T","cljs/core.cljs","^Y",2347,"^V",15,"^Z",2347,"^U",29,"^1X","^22","^[",["^10",["^11",["^10",[["~$x"]]]]]],"^3","~$cljs.core/unchecked-char","^17",false,"^T","cljs/core.cljs","^U",29,"^18",["^10",[["~$x"]]],"^19",null,"^1:",["^10",[null,null]],"^V",null,"^Y",null,"^20","^22","^Z",2347,"^1;",1,"^1X","^22","^1<",true,"^[",["^10",["^11",["^10",[["~$x"]]]]]],"~$NeverEquiv",["^ ","^2K",0,"^D",["^2",["^E","^J"]],"^3","^D8","^T","cljs/core.cljs","^U",20,"^2O",true,"^V",10,"^Y",5450,"^2P",false,"^Z",5450,"^15",["^2",["^E"]]],"^W5",["^ ","^B",null,"^C",["^ ","^48","^G","^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",false,"^1;",22,"^18",["^10",[["^@L"],["^@L","~$a"],["^@L","~$a","~$b"],["^@L","~$a","~$b","~$c"],["^@L","~$a","~$b","~$c","~$d"],["^@L","~$a","~$b","~$c","~$d","~$e"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t","^9D"]]],"^[",["^10",[["^@L"],["^@L","~$a"],["^@L","~$a","~$b"],["^@L","~$a","~$b","~$c"],["^@L","~$a","~$b","~$c","~$d"],["^@L","~$a","~$b","~$c","~$d","~$e"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t","^9D"]]],"^1:",["^10",[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]]],"^V",4,"^Y",407,"^Z",407,"^[",["^10",["^11",["^10",[["^@L"],["^@L","~$a"],["^@L","~$a","~$b"],["^@L","~$a","~$b","~$c"],["^@L","~$a","~$b","~$c","~$d"],["^@L","~$a","~$b","~$c","~$d","~$e"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t","^9D"]]]]],"^1?",null],"^48","^G","^3","~$cljs.core/-invoke","^17",false,"^T","cljs/core.cljs","^U",11,"^1@",["^ ","^17",false,"^1;",22,"^18",["^10",[["^@L"],["^@L","~$a"],["^@L","~$a","~$b"],["^@L","~$a","~$b","~$c"],["^@L","~$a","~$b","~$c","~$d"],["^@L","~$a","~$b","~$c","~$d","~$e"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t","^9D"]]],"^[",["^10",[["^@L"],["^@L","~$a"],["^@L","~$a","~$b"],["^@L","~$a","~$b","~$c"],["^@L","~$a","~$b","~$c","~$d"],["^@L","~$a","~$b","~$c","~$d","~$e"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t","^9D"]]],"^1:",["^10",[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]]],"^18",["^10",[["^@L"],["^@L","~$a"],["^@L","~$a","~$b"],["^@L","~$a","~$b","~$c"],["^@L","~$a","~$b","~$c","~$d"],["^@L","~$a","~$b","~$c","~$d","~$e"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t","^9D"]]],"^19",null,"^1:",["^10",[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]],"^V",null,"^Y",null,"^Z",407,"^1;",22,"^1<",true,"^[",["^10",[["^@L"],["^@L","~$a"],["^@L","~$a","~$b"],["^@L","~$a","~$b","~$c"],["^@L","~$a","~$b","~$c","~$d"],["^@L","~$a","~$b","~$c","~$d","~$e"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t"],["^@L","~$a","~$b","~$c","~$d","~$e","~$f","~$g","~$h","~$i","~$j","~$k","~$l","~$m","~$n","~$o","~$p","~$q","~$r","~$s","~$t","^9D"]]],"^1?",null],"~$coll?",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","cljs/core.cljs","~:line",1865,"~:column",16,"~:end-line",1865,"~:end-column",21,"~:tag","~$boolean","~:arglists",["~#list",["~$quote",["^;",[["~$x"]]]]],"~:doc","Returns true if x satisfies ICollection"],"~:name","~$cljs.core/coll?","~:variadic",false,"^3","cljs/core.cljs","^7",21,"~:method-params",["^;",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^;",[null,null]],"^5",null,"^4",null,"~:ret-tag","^9","^6",1865,"~:max-fixed-arity",1,"^8","^9","~:fn-var",true,"^:",["^;",["^<",["^;",[["~$x"]]]]],"^=","Returns true if x satisfies ICollection"],"~$get-in",["^ ","^1",null,"^2",["^ ","~:added","1.2","^3","cljs/core.cljs","^7",13,"~:static",true,"~:top-fn",["^ ","^@",false,"^E",3,"^A",["^;",[["~$m","~$ks"],["~$m","^K","~$not-found"]]],"^:",["^;",[["~$m","^K"],["~$m","^K","^L"]]],"^C",["^;",[null,null]]],"^5",7,"^4",4517,"^6",4517,"^:",["^;",["^<",["^;",[["~$m","^K"],["~$m","^K","^L"]]]]],"^=","Returns the value in a nested associative structure,\\n  where ks is a sequence of keys. Returns nil if the key is not present,\\n  or the not-found value if supplied."],"^H","1.2","^>","~$cljs.core/get-in","^@",false,"^3","cljs/core.cljs","^7",13,"^I",true,"^J",["^ ","^@",false,"^E",3,"^A",["^;",[["~$m","^K"],["~$m","^K","^L"]]],"^:",["^;",[["~$m","^K"],["~$m","^K","^L"]]],"^C",["^;",[null,null]]],"^A",["^;",[["~$m","^K"],["~$m","^K","^L"]]],"^B",null,"^C",["^;",[null,null]],"^5",null,"^4",null,"^6",4517,"^E",3,"^F",true,"^:",["^;",[["~$m","^K"],["~$m","^K","^L"]]],"^=","Returns the value in a nested associative structure,\\n  where ks is a sequence of keys. Returns nil if the key is not present,\\n  or the not-found value if supplied."],"~$fnext",["^ ","^1",null,"^2",["^ ","^3","cljs/core.cljs","^4",1521,"^5",7,"^6",1521,"^7",12,"^:",["^;",["^<",["^;",[["~$coll"]]]]],"^=","Same as (first (next x))"],"^>","~$cljs.core/fnext","^@",false,"^3","cljs/core.cljs","^7",12,"^A",["^;",[["^O"]]],"^B",null,"^C",["^;",[null,null]],"^5",null,"^4",null,"^6",1521,"^E",1,"^F",true,"^:",["^;",["^<",["^;",[["^O"]]]]],"^=","Same as (first (next x))"],"~$t5785",["^ ","~:num-fields",2,"~:protocols",["~#set",["~$cljs.core/Object","~$cljs.core/IMeta","~$cljs.core/IWithMeta"]],"^>","~$cljs.core/t5785","^3","cljs/core.cljs","~:type",true,"~:anonymous",true,"^5",null,"^4",null,"~:record",false,"~:skip-protocol-flag",["^T",["^V","^W"]]],"~$IList",["^ ","^2",["^ ","^3","cljs/core.cljs","^4",584,"^5",14,"^6",584,"^7",19,"^=","Marker interface indicating a persistent list","~:protocol-symbol",true,"~:protocol-info",["^ ","~:methods",["^ "]]],"^12",true,"^>","~$cljs.core/IList","^3","cljs/core.cljs","^7",19,"^5",null,"^4",null,"^13",["^ ","^14",["^ "]],"~:info",null,"^6",584,"~:impls",["^T",["~$cljs.core/Cons","~$cljs.core/EmptyList","~$cljs.core/List"]],"^=","Marker interface indicating a persistent list"],"~$ArrayNodeIterator",["^ ","^R",3,"^S",["^T",["^U"]],"^>","~$cljs.core/ArrayNodeIterator","^3","cljs/core.cljs","^7",27,"^Y",true,"^5",10,"^4",6397,"^[",false,"^6",6397,"^10",null],"~$List",["^ ","^2",["^ ","^3","cljs/core.cljs","^4",1342,"^5",30,"^6",1342,"^7",34,"~:declared",true],"^R",5,"^S",["^T",["^15","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ASeq","~$cljs.core/ICollection","^U","~$cljs.core/IEmptyableCollection","~$cljs.core/ICounted","~$cljs.core/ISeq","~$cljs.core/INext","~$cljs.core/ISeqable","^V","~$cljs.core/ICloneable","~$cljs.core/IStack","~$cljs.core/ISequential","^W","~$cljs.core/IReduce"]],"^>","^1:","^3","cljs/core.cljs","^7",14,"^Y",true,"^5",10,"^4",2673,"^[",false,"^1>",true,"^6",2673,"^10",["^T",["^15","^1?","^1@","^1A","^1B","^1C","^1D","^1E","^1F","^1G","^V","^1H","^1I","^1J","^W","^1K"]]],"~$-val",["^ ","^1",null,"^2",["^ ","^3","cljs/core.cljs","^4",510,"^5",4,"^6",510,"^7",8,"~:protocol","~$cljs.core/IMapEntry","^=","Returns the value of the map entry.","^:",["^;",["^<",["^;",[["^O"]]]]]],"^1M","^1N","^>","~$cljs.core/-val","^@",false,"^3","cljs/core.cljs","^7",8,"^A",["^;",[["^O"]]],"^B",null,"^C",["^;",[null,null]],"^5",null,"^4",null,"^6",510,"^E",1,"^F",true,"^:",["^;",["^<",["^;",[["^O"]]]]],"^=","Returns the value of the map entry."],"~$bytes",["^ ","^1",null,"^2",["^ ","^3","cljs/core.cljs","^4",2454,"^5",7,"^6",2454,"^7",12,"^:",["^;",["^<",["^;",[["~$x"]]]]]],"^>","~$cljs.core/bytes","^@",false,"^3","cljs/core.cljs","^7",12,"^A",["^;",[["~$x"]]],"^B",null,"^C",["^;",[null,null]],"^5",null,"^4",null,"^6",2454,"^E",1,"^F",true,"^:",["^;",["^<",["^;",[["~$x"]]]]]],"~$->ObjMap",["^ ","^1",null,"^2",["^ ","^S",["^T",["~$cljs.core/IKVReduce","^1?","^1@","~$cljs.core/IFn","^1B","~$cljs.core/IEditableCollection","^U","^1C","^1D","^1G","^V","^W","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^3","cljs/core.cljs","^7",16,"^5",10,"~:factory","~:positional","^4",5519,"^6",5519,"^:",["^;",["^<",["^;",[["~$meta","~$keys","~$strobj","~$update-count","~$__hash"]]]]],"^10",["^T",["^1S","^1?","^1@","^1T","^1B","^1U","^1C","^1D","^1G","^V","^W","^1V","^1W","^1X"]]],"^S",["^T",["^1S","^1?","^1@","^1T","^1B","^1U","^U","^1C","^1D","^1G","^V","^W","^1V","^1W","^1X"]],"^>","~$cljs.core/->ObjMap","^@",false,"^3","cljs/core.cljs","^7",16,"^A",["^;",[["^1[","^20","^21","^22","^23"]]],"^B",null,"^C",["^;",[null,null]],"^5",null,"^1Y","^1Z","^4",null,"^6",5519,"^E",5,"^F",true,"^:",["^;",["^<",["^;",[["^1[","^20","^21","^22","^23"]]]]],"^10",["^T",["^1S","^1?","^1@","^1T","^1B","^1U","^1C","^1D","^1G","^V","^W","^1V","^1W","^1X"]]],"~$compare-symbols",["^ ","^1",null,"^2",["^ ","^3","cljs/core.cljs","^4",896,"^5",8,"^6",896,"^7",23,"~:private",true,"^:",["^;",["^<",["^;",[["~$a","~$b"]]]]]],"^26",true,"^>","~$cljs.core/compare-symbols","^@",false,"^3","cljs/core.cljs","^7",23,"^A",["^;",[["~$a","~$b"]]],"^B",null,"^C",["^;",[null,null]],"^5",null,"^4",null,"^6",896,"^E",2,"^F",true,"^:",["^;",["^<",["^;",[["~$a","~$b"]]]]]],"~$-seq",["^ ","^1",null,"^2",["^ ","^1M","^1G","^3","cljs/core.cljs","^7",20,"^5",16,"^4",578,"^6",578,"^8","~$clj-or-nil","^:",["^;",["^<",["^;",[["~$o"]]]]],"^=","Returns a seq of o, or nil if o is empty."],"^1M","^1G","^>","~$cljs.core/-seq","^@",false,"^3","cljs/core.cljs","^7",20,"^A",["^;",[["~$o"]]],"^B",null,"^C",["^;",[null,null]],"^5",null,"^4",null,"^D","^29","^6",578,"^E",1,"^8","^29","^F",true,"^:",["^;",["^<",["^;",[["~$o"]]]]],"^=","Returns a seq of o, or nil if o is empty."]],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^T",["~$form","~$tag","~$&","~$stepper","~$uuid","~$end","~$defrecord*","~$base","~$obj","~$fqn","~$first","~$try","~$has-nil?","~$rear","~$hierarchy","~$iter","~$meta5789","~$namespace","~$step","^9","^22","~$method-table","~$chunk","~$i","~$rest","^2","~:dup","~$comp","~$dispatch-fn","~$meta5786","~:else","~$left","~:cljs.core/none","~$shift","~$iters","~$new-value","~$xform","~:validator","~:default","~$prefer-table","~$loop*","~$watches","~:ns","~$bitmap","~$_seq","~$nil-val","~$v","~$riter","^23","^1[","~$_meta","~$afn","~$tree","~$fn","~$front","~$buf","~$next-entry","~:val","~$key","~$not=","~$_next","~$parent","~$root-iter","~$validate","~$do","~$vec","~$meta7488","~:fallback-impl","~:flush-on-newline","~$default-dispatch-val","~:no-test","~$validator","~$letfn*","~$if","~$arr","~$new","~:descendants","~$ns","~:ancestors","~$value","~$meta7491","~$name","~$n","~:readably","~:more-marker","~$fields","~$method-cache","~$nexts","~$edit","~$editable?","~$base-count","~$collision-hash","~$deftype*","~$let*","~$start","^O","~$not-native","~$js*","^21","~$_rest","~$fn*","~$val","~$ascending?","~$recur","~$ci","~:print-length","~$state","~:ok","~$cached-hierarchy","~$s","~:parents","~$cnt","~$node","~$sym","~$sb","~$_hash","^20","~$set!","^8","~$tree-map","~$.","~:mutable","^<","~$root","~$str","~$nodes","~$seen","~$hash-map","^:","~$nil-iter","~:alt-impl","~$ext-map-iter","~$tail","~$record","~$mseq","~$count","~:keywordize-keys","~$off","~$stack","~$transient-map","~$len","~$right","~$throw","~$fseq","~$number?","~$symbol?","~:cljs.core/not-found","~$more","~$def","~$f","~$next-iter"]],"~:order",["^3N","^40","^2","^2S","^4D","^2W","^4L","^33","^3W","^3[","^4R","^4M","^4P","^3<","^4@","^4K","~$s","^3Y","^2L","^4>","^3T","~$i","^4C","^1[","^3=","^2G","^2R","^50","^23","^2F","^3?","^3A","^2B","^52","^2Q","^5<","^4V","^:","^<","^2V","^2M","^39","^3F","^31","^2[","^44","^2@","^4E","^3Q","^36","^32","^3I","^30","^59","~$n","^45","^2D","~$v","^4;","^4I","^2Z","^4Q","^4Y","^3K","^4J","^58","^3;","^3@","^2J","^20","^21","^22","^4Z","^47","^42","^4X","^46","^55","^3B","^5>","^38","^48","^4S","^3:","^3H","^4T","^2I","^8","^9","^53","^4A","^3D","^2X","^56","^2T","^3>","^4[","^4<","^5;","^4U","^54","^4O","^2O","^2Y","^41","^4W","^3M","^3C","~$f","^O","^51","^4H","^3V","^3X","^2N","^3G","^3E","^2?","^2U","^3O","^2K","^2P","^34","^43","^4G","^2A","~$&","^2C","^2H","^35","^3J","^3R","^3S","^3U","^49","^4:","^4=","^4?","^4B","^4N","~$.","^57","^5=","^4F","^3P","^2>","^5:","^37","^2E","^3L","^3Z"]],"^=",null]';

cljs_bootstrap.core.load_core_analysis_cache(core_json);
if (goog.NODE_JS) {
    cljs_bootstrap.node._main.apply({}, process.argv);
} else {
    cljs_bootstrap.core.init_repl('default');
}
